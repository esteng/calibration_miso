{"db_schema_with_val": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel", "db_schema_without_val": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel", "dialogue_id": "642", "plan": "SELECT id FROM tv_channel GROUP BY country HAVING count ( * ) > 2", "schema_name": "tvshow", "turn_part_index": 0, "utterance": "What are the ids of all tv channels that have more than 2 TV channels?"}
{"db_schema_with_val": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by ( Ben Jones ) , written_by , original_air_date , production_code , channel", "db_schema_without_val": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel", "dialogue_id": "643", "plan": "SELECT id FROM tv_channel EXCEPT SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones'", "schema_name": "tvshow", "turn_part_index": 0, "utterance": "find the id of tv channels that do not play any cartoon directed by Ben Jones."}
{"db_schema_with_val": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by ( Ben Jones ) , written_by , original_air_date , production_code , channel", "db_schema_without_val": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel", "dialogue_id": "644", "plan": "SELECT id FROM tv_channel EXCEPT SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones'", "schema_name": "tvshow", "turn_part_index": 0, "utterance": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?"}
{"db_schema_with_val": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option ( Option ) | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by ( Ben Jones ) , written_by , original_air_date , production_code , channel", "db_schema_without_val": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel", "dialogue_id": "645", "plan": "SELECT package_option FROM tv_channel WHERE id NOT IN ( SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones' )", "schema_name": "tvshow", "turn_part_index": 0, "utterance": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones."}
{"db_schema_with_val": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option ( Option ) | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by ( Ben Jones ) , written_by , original_air_date , production_code , channel", "db_schema_without_val": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel", "dialogue_id": "646", "plan": "SELECT package_option FROM tv_channel WHERE id NOT IN ( SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones' )", "schema_name": "tvshow", "turn_part_index": 0, "utterance": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?"}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "647", "plan": "SELECT count ( * ) FROM poker_player", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "How many poker players are there?"}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "648", "plan": "SELECT count ( * ) FROM poker_player", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "Count the number of poker players."}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "649", "plan": "SELECT earnings FROM poker_player ORDER BY earnings DESC", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "List the earnings of poker players in descending order."}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "650", "plan": "SELECT earnings FROM poker_player ORDER BY earnings DESC", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "What are the earnings of poker players, ordered descending by value?"}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "651", "plan": "SELECT final_table_made , best_finish FROM poker_player", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "List the final tables made and the best finishes of poker players."}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "652", "plan": "SELECT final_table_made , best_finish FROM poker_player", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "What are the final tables made and best finishes for all poker players?"}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "653", "plan": "SELECT avg ( earnings ) FROM poker_player", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "What is the average earnings of poker players?"}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "654", "plan": "SELECT avg ( earnings ) FROM poker_player", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "Return the average earnings across all poker players."}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "655", "plan": "SELECT money_rank FROM poker_player ORDER BY earnings DESC LIMIT 1", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "What is the money rank of the poker player with the highest earnings?"}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "656", "plan": "SELECT money_rank FROM poker_player ORDER BY earnings DESC LIMIT 1", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "Return the money rank of the player with the greatest earnings."}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "657", "plan": "SELECT max ( final_table_made ) FROM poker_player WHERE earnings < 200000", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "What is the maximum number of final tables made among poker players with earnings less than 200000?"}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "658", "plan": "SELECT max ( final_table_made ) FROM poker_player WHERE earnings < 200000", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "Return the maximum final tables made across all poker players who have earnings below 200000."}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "659", "plan": "SELECT T1 . name FROM people AS T1 JOIN poker_player AS T2 ON T1 . people_id = T2 . people_id", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "What are the names of poker players?"}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "660", "plan": "SELECT T1 . name FROM people AS T1 JOIN poker_player AS T2 ON T1 . people_id = T2 . people_id", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "Return the names of all the poker players."}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "661", "plan": "SELECT T1 . name FROM people AS T1 JOIN poker_player AS T2 ON T1 . people_id = T2 . people_id WHERE T2 . earnings > 300000", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "What are the names of poker players whose earnings is higher than 300000?"}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "662", "plan": "SELECT T1 . name FROM people AS T1 JOIN poker_player AS T2 ON T1 . people_id = T2 . people_id WHERE T2 . earnings > 300000", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "Give the names of poker players who have earnings above 300000."}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "663", "plan": "SELECT T1 . name FROM people AS T1 JOIN poker_player AS T2 ON T1 . people_id = T2 . people_id ORDER BY T2 . final_table_made", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "List the names of poker players ordered by the final tables made in ascending order."}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "664", "plan": "SELECT T1 . name FROM people AS T1 JOIN poker_player AS T2 ON T1 . people_id = T2 . people_id ORDER BY T2 . final_table_made", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "What are the names of poker players, ordered ascending by the number of final tables they have made?"}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "665", "plan": "SELECT T1 . birth_date FROM people AS T1 JOIN poker_player AS T2 ON T1 . people_id = T2 . people_id ORDER BY T2 . earnings ASC LIMIT 1", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "What is the birth date of the poker player with the lowest earnings?"}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "666", "plan": "SELECT T1 . birth_date FROM people AS T1 JOIN poker_player AS T2 ON T1 . people_id = T2 . people_id ORDER BY T2 . earnings ASC LIMIT 1", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "Return the birth date of the poker player with the lowest earnings."}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "667", "plan": "SELECT T2 . money_rank FROM people AS T1 JOIN poker_player AS T2 ON T1 . people_id = T2 . people_id ORDER BY T1 . height DESC LIMIT 1", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "What is the money rank of the tallest poker player?"}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "668", "plan": "SELECT T2 . money_rank FROM people AS T1 JOIN poker_player AS T2 ON T1 . people_id = T2 . people_id ORDER BY T1 . height DESC LIMIT 1", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "Return the money rank of the poker player with the greatest height."}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "669", "plan": "SELECT avg ( T2 . earnings ) FROM people AS T1 JOIN poker_player AS T2 ON T1 . people_id = T2 . people_id WHERE T1 . height > 200", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "What is the average earnings of poker players with height higher than 200?"}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "670", "plan": "SELECT avg ( T2 . earnings ) FROM people AS T1 JOIN poker_player AS T2 ON T1 . people_id = T2 . people_id WHERE T1 . height > 200", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "Give average earnings of poker players who are taller than 200."}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "671", "plan": "SELECT T1 . name FROM people AS T1 JOIN poker_player AS T2 ON T1 . people_id = T2 . people_id ORDER BY T2 . earnings DESC", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "What are the names of poker players in descending order of earnings?"}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "672", "plan": "SELECT T1 . name FROM people AS T1 JOIN poker_player AS T2 ON T1 . people_id = T2 . people_id ORDER BY T2 . earnings DESC", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "Return the names of poker players sorted by their earnings descending."}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "673", "plan": "SELECT nationality , count ( * ) FROM people GROUP BY nationality", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "What are different nationalities of people and the corresponding number of people from each nation?"}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "674", "plan": "SELECT nationality , count ( * ) FROM people GROUP BY nationality", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "How many people are there of each nationality?"}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "675", "plan": "SELECT nationality FROM people GROUP BY nationality ORDER BY count ( * ) DESC LIMIT 1", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "What is the most common nationality of people?"}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "676", "plan": "SELECT nationality FROM people GROUP BY nationality ORDER BY count ( * ) DESC LIMIT 1", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "Give the nationality that is most common across all people."}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "677", "plan": "SELECT nationality FROM people GROUP BY nationality HAVING count ( * ) >= 2", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "What are the nationalities that are shared by at least two people?"}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "678", "plan": "SELECT nationality FROM people GROUP BY nationality HAVING count ( * ) >= 2", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "Return the nationalities for which there are two or more people."}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "679", "plan": "SELECT name , birth_date FROM people ORDER BY name ASC", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "List the names and birth dates of people in ascending alphabetical order of name."}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "680", "plan": "SELECT name , birth_date FROM people ORDER BY name ASC", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "What are the names and birth dates of people, ordered by their names in alphabetical order?"}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality ( Russia ) , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "681", "plan": "SELECT name FROM people WHERE nationality != \"Russia\"", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "Show names of people whose nationality is not \"Russia\"."}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality ( Russia ) , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "682", "plan": "SELECT name FROM people WHERE nationality != \"Russia\"", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "What are the names of people who are not from Russia?"}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "683", "plan": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM poker_player )", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "List the names of people that are not poker players."}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "684", "plan": "SELECT name FROM people WHERE people_id NOT IN ( SELECT people_id FROM poker_player )", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "What are the names of people who do not play poker?"}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "685", "plan": "SELECT count ( DISTINCT nationality ) FROM people", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "How many distinct nationalities are there?"}
{"db_schema_with_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "db_schema_without_val": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height", "dialogue_id": "686", "plan": "SELECT count ( DISTINCT nationality ) FROM people", "schema_name": "poker_player", "turn_part_index": 0, "utterance": "Count the number of different nationalities."}
{"db_schema_with_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created", "db_schema_without_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created", "dialogue_id": "687", "plan": "SELECT count ( * ) FROM area_code_state", "schema_name": "voter_1", "turn_part_index": 0, "utterance": "How many states are there?"}
{"db_schema_with_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created", "db_schema_without_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created", "dialogue_id": "688", "plan": "SELECT contestant_number , contestant_name FROM contestants ORDER BY contestant_name DESC", "schema_name": "voter_1", "turn_part_index": 0, "utterance": "List the contestant numbers and names, ordered by contestant name descending."}
{"db_schema_with_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created", "db_schema_without_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created", "dialogue_id": "689", "plan": "SELECT vote_id , phone_number , state FROM votes", "schema_name": "voter_1", "turn_part_index": 0, "utterance": "List the vote ids, phone numbers and states of all votes."}
{"db_schema_with_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created", "db_schema_without_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created", "dialogue_id": "690", "plan": "SELECT max ( area_code ) , min ( area_code ) FROM area_code_state", "schema_name": "voter_1", "turn_part_index": 0, "utterance": "What are the maximum and minimum values of area codes?"}
{"db_schema_with_val": " | voter_1 | area_code_state : area_code , state ( CA ) | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state ( CA ) , contestant_number , created", "db_schema_without_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created", "dialogue_id": "691", "plan": "SELECT max ( created ) FROM votes WHERE state = 'CA'", "schema_name": "voter_1", "turn_part_index": 0, "utterance": "What is last date created of votes from the state 'CA'?"}
{"db_schema_with_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name ( Jessie Alloway ) | votes : vote_id , phone_number , state , contestant_number , created", "db_schema_without_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created", "dialogue_id": "692", "plan": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'", "schema_name": "voter_1", "turn_part_index": 0, "utterance": "What are the names of the contestants whose names are not 'Jessie Alloway'"}
{"db_schema_with_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created", "db_schema_without_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created", "dialogue_id": "693", "plan": "SELECT DISTINCT state , created FROM votes", "schema_name": "voter_1", "turn_part_index": 0, "utterance": "What are the distinct states and create time of all votes?"}
{"db_schema_with_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created", "db_schema_without_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created", "dialogue_id": "694", "plan": "SELECT T1 . contestant_number , T1 . contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1 . contestant_number = T2 . contestant_number GROUP BY T1 . contestant_number HAVING count ( * ) >= 2", "schema_name": "voter_1", "turn_part_index": 0, "utterance": "What are the contestant numbers and names of the contestants who had at least two votes?"}
{"db_schema_with_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created", "db_schema_without_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created", "dialogue_id": "695", "plan": "SELECT T1 . contestant_number , T1 . contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1 . contestant_number = T2 . contestant_number GROUP BY T1 . contestant_number ORDER BY count ( * ) ASC LIMIT 1", "schema_name": "voter_1", "turn_part_index": 0, "utterance": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?"}
{"db_schema_with_val": " | voter_1 | area_code_state : area_code , state ( CA , NY ) | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state ( CA , NY ) , contestant_number , created", "db_schema_without_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created", "dialogue_id": "696", "plan": "SELECT count ( * ) FROM votes WHERE state = 'NY' OR state = 'CA'", "schema_name": "voter_1", "turn_part_index": 0, "utterance": "What are the number of votes from state 'NY' or 'CA'?"}
{"db_schema_with_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created", "db_schema_without_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created", "dialogue_id": "697", "plan": "SELECT count ( * ) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )", "schema_name": "voter_1", "turn_part_index": 0, "utterance": "How many contestants did not get voted?"}
{"db_schema_with_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created", "db_schema_without_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created", "dialogue_id": "698", "plan": "SELECT T1 . area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1 . state = T2 . state GROUP BY T1 . area_code ORDER BY count ( * ) DESC LIMIT 1", "schema_name": "voter_1", "turn_part_index": 0, "utterance": "What is the area code in which the most voters voted?"}
{"db_schema_with_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name ( Tabatha Gehling ) | votes : vote_id , phone_number , state , contestant_number , created", "db_schema_without_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created", "dialogue_id": "699", "plan": "SELECT T2 . created , T2 . state , T2 . phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1 . contestant_number = T2 . contestant_number WHERE T1 . contestant_name = 'Tabatha Gehling'", "schema_name": "voter_1", "turn_part_index": 0, "utterance": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?"}
{"db_schema_with_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name ( Tabatha Gehling , Kelly Clauss ) | votes : vote_id , phone_number , state , contestant_number , created", "db_schema_without_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created", "dialogue_id": "700", "plan": "SELECT T3 . area_code FROM contestants AS T1 JOIN votes AS T2 ON T1 . contestant_number = T2 . contestant_number JOIN area_code_state AS T3 ON T2 . state = T3 . state WHERE T1 . contestant_name = 'Tabatha Gehling' INTERSECT SELECT T3 . area_code FROM contestants AS T1 JOIN votes AS T2 ON T1 . contestant_number = T2 . contestant_number JOIN area_code_state AS T3 ON T2 . state = T3 . state WHERE T1 . contestant_name = 'Kelly Clauss'", "schema_name": "voter_1", "turn_part_index": 0, "utterance": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'."}
{"db_schema_with_val": " | voter_1 | area_code_state : area_code , state ( AL ) | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created", "db_schema_without_val": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created", "dialogue_id": "701", "plan": "SELECT contestant_name FROM contestants WHERE contestant_name LIKE \"%al%\"", "schema_name": "voter_1", "turn_part_index": 0, "utterance": "Return the names of the contestants whose names contain the substring 'Al' ."}
{"db_schema_with_val": " | world_1 | city : id , name ( Independence ) , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "702", "plan": "SELECT name FROM country WHERE indepyear > 1950", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What are the names of all the countries that became independent after 1950?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "703", "plan": "SELECT name FROM country WHERE indepyear > 1950", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Give the names of the nations that were founded after 1950."}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform ( Republic ) , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "704", "plan": "SELECT count ( * ) FROM country WHERE governmentform = \"Republic\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "How many countries have a republic as their form of government?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform ( Republic ) , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "705", "plan": "SELECT count ( * ) FROM country WHERE governmentform = \"Republic\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "How many countries have governments that are republics?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region ( Caribbean ) , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( Caribbean ) , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "706", "plan": "SELECT sum ( surfacearea ) FROM country WHERE region = \"Caribbean\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What is the total surface area of the countries in the Caribbean region?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "707", "plan": "SELECT sum ( surfacearea ) FROM country WHERE region = \"Caribbean\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "How much surface area do the countires in the Carribean cover together?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Anguilla ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname ( Anguilla ) , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "708", "plan": "SELECT continent FROM country WHERE name = \"Anguilla\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Which continent is Anguilla in?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Anguilla ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname ( Anguilla ) , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "709", "plan": "SELECT continent FROM country WHERE name = \"Anguilla\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What is the continent name which Anguilla belongs to?"}
{"db_schema_with_val": " | world_1 | city : id , name ( Kabul ) , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "710", "plan": "SELECT region FROM country AS T1 JOIN city AS T2 ON T1 . code = T2 . countrycode WHERE T2 . name = \"Kabul\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Which region is the city Kabul located in?"}
{"db_schema_with_val": " | world_1 | city : id , name ( Kabul ) , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "711", "plan": "SELECT region FROM country AS T1 JOIN city AS T2 ON T1 . code = T2 . countrycode WHERE T2 . name = \"Kabul\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What region is Kabul in?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Aruba ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname ( Aruba ) , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "712", "plan": "SELECT T2 . language FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T1 . name = \"Aruba\" ORDER BY percentage DESC LIMIT 1", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Which language is the most popular in Aruba?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Aruba ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname ( Aruba ) , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "713", "plan": "SELECT T2 . language FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T1 . name = \"Aruba\" ORDER BY percentage DESC LIMIT 1", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What language is predominantly spoken in Aruba?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Brazil ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "714", "plan": "SELECT population , lifeexpectancy FROM country WHERE name = \"Brazil\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What are the population and life expectancies in Brazil?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Brazil ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "715", "plan": "SELECT population , lifeexpectancy FROM country WHERE name = \"Brazil\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Give me Brazil\u2019s population and life expectancies."}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Angola ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname ( Angola ) , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "716", "plan": "SELECT population , region FROM country WHERE name = \"Angola\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What are the region and population of Angola?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Angola ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname ( Angola ) , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "717", "plan": "SELECT population , region FROM country WHERE name = \"Angola\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What region does Angola belong to and what is its population?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district ( Central ) , population | sqlite_sequence : name , seq | country : code , name , continent ( Africa ) , region ( Central Africa ) , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "718", "plan": "SELECT avg ( lifeexpectancy ) FROM country WHERE region = \"Central Africa\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What is the average expected life expectancy for countries in the region of Central Africa?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district ( Central ) , population | sqlite_sequence : name , seq | country : code , name , continent ( Africa ) , region ( Central Africa ) , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "719", "plan": "SELECT avg ( lifeexpectancy ) FROM country WHERE region = \"Central Africa\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "How long is the people\u2019s average life expectancy in Central Africa?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "720", "plan": "SELECT name FROM country WHERE continent = \"Asia\" ORDER BY lifeexpectancy LIMIT 1", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What is the name of country that has the shortest life expectancy in Asia?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "721", "plan": "SELECT name FROM country WHERE continent = \"Asia\" ORDER BY lifeexpectancy LIMIT 1", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Give the name of the country in Asia with the lowest life expectancy."}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "722", "plan": "SELECT sum ( population ) , max ( gnp ) FROM country WHERE continent = \"Asia\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What is the total population and maximum GNP in Asia?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "723", "plan": "SELECT sum ( population ) , max ( gnp ) FROM country WHERE continent = \"Asia\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "How many people live in Asia, and what is the largest GNP among them?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Africa ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform ( Republic ) , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "724", "plan": "SELECT avg ( lifeexpectancy ) FROM country WHERE continent = \"Africa\" AND governmentform = \"Republic\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What is the average life expectancy in African countries that are republics?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Africa ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform ( Republic ) , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "725", "plan": "SELECT avg ( lifeexpectancy ) FROM country WHERE continent = \"Africa\" AND governmentform = \"Republic\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Give the average life expectancy for countries in Africa which are republics?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Europe , Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "726", "plan": "SELECT sum ( surfacearea ) FROM country WHERE continent = \"Asia\" OR continent = \"Europe\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What is the total surface area of the continents Asia and Europe?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Europe , Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "727", "plan": "SELECT sum ( surfacearea ) FROM country WHERE continent = \"Asia\" OR continent = \"Europe\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Give the total surface area covered by countries in Asia or Europe."}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district ( Gelderland ) , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "728", "plan": "SELECT sum ( population ) FROM city WHERE district = \"Gelderland\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "How many people live in Gelderland district?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district ( Gelderland ) , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "729", "plan": "SELECT sum ( population ) FROM city WHERE district = \"Gelderland\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What is the total population of Gelderland district?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform ( US Territory ) , headofstate , capital , code2 ( US ) | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "730", "plan": "SELECT avg ( gnp ) , sum ( population ) FROM country WHERE governmentform = \"US Territory\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What is the average GNP and total population in all nations whose government is US territory?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform ( US Territory ) , headofstate , capital , code2 ( US ) | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "731", "plan": "SELECT avg ( gnp ) , sum ( population ) FROM country WHERE governmentform = \"US Territory\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Give the mean GNP and total population of nations which are considered US territory."}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "732", "plan": "SELECT count ( DISTINCT language ) FROM countrylanguage", "schema_name": "world_1", "turn_part_index": 0, "utterance": "How many unique languages are spoken in the world?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "733", "plan": "SELECT count ( DISTINCT language ) FROM countrylanguage", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What is the number of distinct languages used around the world?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Africa ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "734", "plan": "SELECT count ( DISTINCT governmentform ) FROM country WHERE continent = \"Africa\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "How many type of governments are in Africa?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Africa ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "735", "plan": "SELECT count ( DISTINCT governmentform ) FROM country WHERE continent = \"Africa\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "How many different forms of governments are there in Africa?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Aruba ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname ( Aruba ) , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "736", "plan": "SELECT count ( T2 . language ) FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T1 . name = \"Aruba\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What is the total number of languages used in Aruba?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Aruba ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname ( Aruba ) , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "737", "plan": "SELECT count ( T2 . language ) FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T1 . name = \"Aruba\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "How many languages are spoken in Aruba?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Afghanistan ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "738", "plan": "SELECT count ( * ) FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T1 . name = \"Afghanistan\" AND isofficial = \"T\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "How many official languages does Afghanistan have?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Afghanistan ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "739", "plan": "SELECT count ( * ) FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T1 . name = \"Afghanistan\" AND isofficial = \"T\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "How many official languages are spoken in Afghanistan?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "740", "plan": "SELECT T1 . name FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode GROUP BY T1 . name ORDER BY count ( * ) DESC LIMIT 1", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What is name of the country that speaks the largest number of languages?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "741", "plan": "SELECT T1 . name FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode GROUP BY T1 . name ORDER BY count ( * ) DESC LIMIT 1", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Give the name of the nation that uses the greatest amount of languages."}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "742", "plan": "SELECT T1 . continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode GROUP BY T1 . continent ORDER BY count ( * ) DESC LIMIT 1", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Which continent has the most diverse languages?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "743", "plan": "SELECT T1 . continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode GROUP BY T1 . continent ORDER BY count ( * ) DESC LIMIT 1", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Which continent speaks the most languages?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English , Dutch ) , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "744", "plan": "SELECT count ( * ) FROM ( SELECT T1 . name FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T2 . language = \"English\" INTERSECT SELECT T1 . name FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T2 . language = \"Dutch\" )", "schema_name": "world_1", "turn_part_index": 0, "utterance": "How many countries speak both English and Dutch?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English , Dutch ) , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "745", "plan": "SELECT count ( * ) FROM ( SELECT T1 . name FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T2 . language = \"English\" INTERSECT SELECT T1 . name FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T2 . language = \"Dutch\" )", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What is the number of nations that use English and Dutch?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English , French ) , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "746", "plan": "SELECT T1 . name FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T2 . language = \"English\" INTERSECT SELECT T1 . name FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T2 . language = \"French\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What are the names of nations speak both English and French?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English , French ) , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "747", "plan": "SELECT T1 . name FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T2 . language = \"English\" INTERSECT SELECT T1 . name FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T2 . language = \"French\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Give the names of nations that speak both English and French."}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English , French ) , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "748", "plan": "SELECT T1 . name FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T2 . language = \"English\" AND T2 . isofficial = \"T\" INTERSECT SELECT T1 . name FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T2 . language = \"French\" AND T2 . isofficial = \"T\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What are the names of nations where both English and French are official languages?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English , French ) , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "749", "plan": "SELECT T1 . name FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T2 . language = \"English\" AND T2 . isofficial = \"T\" INTERSECT SELECT T1 . name FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T2 . language = \"French\" AND T2 . isofficial = \"T\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Give the names of countries with English and French as official languages."}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( Chinese ) , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "750", "plan": "SELECT count ( DISTINCT continent ) FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T2 . language = \"Chinese\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What is the number of distinct continents where Chinese is spoken?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( Chinese ) , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "751", "plan": "SELECT count ( DISTINCT continent ) FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T2 . language = \"Chinese\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "How many continents speak Chinese?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English , Dutch ) , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "752", "plan": "SELECT DISTINCT T1 . region FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T2 . language = \"English\" OR T2 . language = \"Dutch\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What are the regions that use English or Dutch?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English , Dutch ) , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "753", "plan": "SELECT DISTINCT T1 . region FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T2 . language = \"English\" OR T2 . language = \"Dutch\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Which regions speak Dutch or English?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English , Dutch ) , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "754", "plan": "SELECT T1 . name FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T2 . language = \"english\" AND isofficial = \"t\" UNION SELECT T1 . name FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T2 . language = \"dutch\" AND isofficial = \"t\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What are the countries where either English or Dutch is the official language ?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English , Dutch ) , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "755", "plan": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T2 . language = \"English\" AND isofficial = \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T2 . language = \"Dutch\" AND isofficial = \"T\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Which countries have either English or Dutch as an official language?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "756", "plan": "SELECT T2 . language FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T1 . continent = \"Asia\" GROUP BY T2 . language ORDER BY count ( * ) DESC LIMIT 1", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Which language is the most popular on the Asian continent?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "757", "plan": "SELECT T2 . language FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T1 . continent = \"Asia\" GROUP BY T2 . language ORDER BY count ( * ) DESC LIMIT 1", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What is the language that is used by the largest number of Asian nations?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform ( Republic ) , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "758", "plan": "SELECT T2 . language FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode WHERE T1 . governmentform = \"Republic\" GROUP BY T2 . language HAVING count ( * ) = 1", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Which languages are spoken by only one country in republic governments?"}
