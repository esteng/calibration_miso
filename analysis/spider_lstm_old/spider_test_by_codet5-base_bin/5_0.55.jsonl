{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "882", "plan": "SELECT student_id , count ( * ) FROM friend GROUP BY student_id", "schema_name": "network_1", "turn_part_index": 0, "utterance": "Show the student IDs and numbers of friends corresponding to each."}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "883", "plan": "SELECT student_id , count ( * ) FROM friend GROUP BY student_id", "schema_name": "network_1", "turn_part_index": 0, "utterance": "How many friends does each student have?"}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "884", "plan": "SELECT T2 . name , count ( * ) FROM friend AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id GROUP BY T1 . student_id", "schema_name": "network_1", "turn_part_index": 0, "utterance": "Show the names of high school students and their corresponding number of friends."}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "885", "plan": "SELECT T2 . name , count ( * ) FROM friend AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id GROUP BY T1 . student_id", "schema_name": "network_1", "turn_part_index": 0, "utterance": "What are the names of the high schoolers and how many friends does each have?"}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "886", "plan": "SELECT T2 . name FROM friend AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id GROUP BY T1 . student_id ORDER BY count ( * ) DESC LIMIT 1", "schema_name": "network_1", "turn_part_index": 0, "utterance": "What is the name of the high schooler who has the greatest number of friends?"}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "887", "plan": "SELECT T2 . name FROM friend AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id GROUP BY T1 . student_id ORDER BY count ( * ) DESC LIMIT 1", "schema_name": "network_1", "turn_part_index": 0, "utterance": "Return the name of the high school student with the most friends."}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "888", "plan": "SELECT T2 . name FROM friend AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id GROUP BY T1 . student_id HAVING count ( * ) >= 3", "schema_name": "network_1", "turn_part_index": 0, "utterance": "Show the names of high schoolers who have at least 3 friends."}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "889", "plan": "SELECT T2 . name FROM friend AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id GROUP BY T1 . student_id HAVING count ( * ) >= 3", "schema_name": "network_1", "turn_part_index": 0, "utterance": "What are the names of high schoolers who have 3 or more friends?"}
{"db_schema_with_val": " | network_1 | highschooler : id , name ( Kyle ) , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "890", "plan": "SELECT T3 . name FROM friend AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id JOIN highschooler AS T3 ON T1 . friend_id = T3 . id WHERE T2 . name = \"Kyle\"", "schema_name": "network_1", "turn_part_index": 0, "utterance": "Show the names of all of the high schooler Kyle's friends."}
{"db_schema_with_val": " | network_1 | highschooler : id , name ( Kyle ) , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "891", "plan": "SELECT T3 . name FROM friend AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id JOIN highschooler AS T3 ON T1 . friend_id = T3 . id WHERE T2 . name = \"Kyle\"", "schema_name": "network_1", "turn_part_index": 0, "utterance": "Return the names of friends of the high school student Kyle."}
{"db_schema_with_val": " | network_1 | highschooler : id , name ( Kyle ) , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "892", "plan": "SELECT count ( * ) FROM friend AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id WHERE T2 . name = \"Kyle\"", "schema_name": "network_1", "turn_part_index": 0, "utterance": "How many friends does the high school student Kyle have?"}
{"db_schema_with_val": " | network_1 | highschooler : id , name ( Kyle ) , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "893", "plan": "SELECT count ( * ) FROM friend AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id WHERE T2 . name = \"Kyle\"", "schema_name": "network_1", "turn_part_index": 0, "utterance": "Count the number of friends Kyle has."}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "894", "plan": "SELECT id FROM highschooler EXCEPT SELECT student_id FROM friend", "schema_name": "network_1", "turn_part_index": 0, "utterance": "Show ids of all students who do not have any friends."}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "895", "plan": "SELECT id FROM highschooler EXCEPT SELECT student_id FROM friend", "schema_name": "network_1", "turn_part_index": 0, "utterance": "What are the ids of high school students who do not have friends?"}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "896", "plan": "SELECT name FROM highschooler EXCEPT SELECT T2 . name FROM friend AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id", "schema_name": "network_1", "turn_part_index": 0, "utterance": "Show names of all high school students who do not have any friends."}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "897", "plan": "SELECT name FROM highschooler EXCEPT SELECT T2 . name FROM friend AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id", "schema_name": "network_1", "turn_part_index": 0, "utterance": "What are the names of students who have no friends?"}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "898", "plan": "SELECT student_id FROM friend INTERSECT SELECT liked_id FROM likes", "schema_name": "network_1", "turn_part_index": 0, "utterance": "Show the ids of high schoolers who have friends and are also liked by someone else."}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "899", "plan": "SELECT student_id FROM friend INTERSECT SELECT liked_id FROM likes", "schema_name": "network_1", "turn_part_index": 0, "utterance": "What are the ids of students who both have friends and are liked?"}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "900", "plan": "SELECT T2 . name FROM friend AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id INTERSECT SELECT T2 . name FROM likes AS T1 JOIN highschooler AS T2 ON T1 . liked_id = T2 . id", "schema_name": "network_1", "turn_part_index": 0, "utterance": "Show name of all students who have some friends and also are liked by someone else."}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "901", "plan": "SELECT T2 . name FROM friend AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id INTERSECT SELECT T2 . name FROM likes AS T1 JOIN highschooler AS T2 ON T1 . liked_id = T2 . id", "schema_name": "network_1", "turn_part_index": 0, "utterance": "What are the names of high schoolers who both have friends and are liked?"}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "902", "plan": "SELECT student_id , count ( * ) FROM likes GROUP BY student_id", "schema_name": "network_1", "turn_part_index": 0, "utterance": "Count the number of likes for each student id."}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "903", "plan": "SELECT student_id , count ( * ) FROM likes GROUP BY student_id", "schema_name": "network_1", "turn_part_index": 0, "utterance": "How many likes correspond to each student id?"}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "904", "plan": "SELECT T2 . name , count ( * ) FROM likes AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id GROUP BY T1 . student_id", "schema_name": "network_1", "turn_part_index": 0, "utterance": "Show the names of high schoolers who have likes, and numbers of likes for each."}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "905", "plan": "SELECT T2 . name , count ( * ) FROM likes AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id GROUP BY T1 . student_id", "schema_name": "network_1", "turn_part_index": 0, "utterance": "What are the names of high schoolers who have likes, and how many likes does each have?"}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "906", "plan": "SELECT T2 . name FROM likes AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id GROUP BY T1 . student_id ORDER BY count ( * ) DESC LIMIT 1", "schema_name": "network_1", "turn_part_index": 0, "utterance": "What is the name of the high schooler who has the greatest number of likes?"}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "907", "plan": "SELECT T2 . name FROM likes AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id GROUP BY T1 . student_id ORDER BY count ( * ) DESC LIMIT 1", "schema_name": "network_1", "turn_part_index": 0, "utterance": "Give the name of the student with the most likes."}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "908", "plan": "SELECT T2 . name FROM likes AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id GROUP BY T1 . student_id HAVING count ( * ) >= 2", "schema_name": "network_1", "turn_part_index": 0, "utterance": "Show the names of students who have at least 2 likes."}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "909", "plan": "SELECT T2 . name FROM likes AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id GROUP BY T1 . student_id HAVING count ( * ) >= 2", "schema_name": "network_1", "turn_part_index": 0, "utterance": "What are the names of students who have 2 or more likes?"}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "910", "plan": "SELECT T2 . name FROM friend AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id WHERE T2 . grade > 5 GROUP BY T1 . student_id HAVING count ( * ) >= 2", "schema_name": "network_1", "turn_part_index": 0, "utterance": "Show the names of students who have a grade higher than 5 and have at least 2 friends."}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "911", "plan": "SELECT T2 . name FROM friend AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id WHERE T2 . grade > 5 GROUP BY T1 . student_id HAVING count ( * ) >= 2", "schema_name": "network_1", "turn_part_index": 0, "utterance": "What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?"}
{"db_schema_with_val": " | network_1 | highschooler : id , name ( Kyle ) , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "912", "plan": "SELECT count ( * ) FROM likes AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id WHERE T2 . name = \"Kyle\"", "schema_name": "network_1", "turn_part_index": 0, "utterance": "How many likes does Kyle have?"}
{"db_schema_with_val": " | network_1 | highschooler : id , name ( Kyle ) , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "913", "plan": "SELECT count ( * ) FROM likes AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id WHERE T2 . name = \"Kyle\"", "schema_name": "network_1", "turn_part_index": 0, "utterance": "Return the number of likes that the high schooler named Kyle has."}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "914", "plan": "SELECT avg ( grade ) FROM highschooler WHERE id IN ( SELECT T1 . student_id FROM friend AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id )", "schema_name": "network_1", "turn_part_index": 0, "utterance": "Find the average grade of all students who have some friends."}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "915", "plan": "SELECT avg ( grade ) FROM highschooler WHERE id IN ( SELECT T1 . student_id FROM friend AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id )", "schema_name": "network_1", "turn_part_index": 0, "utterance": "What is the average grade of students who have friends?"}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "916", "plan": "SELECT min ( grade ) FROM highschooler WHERE id NOT IN ( SELECT T1 . student_id FROM friend AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id )", "schema_name": "network_1", "turn_part_index": 0, "utterance": "Find the minimum grade of students who have no friends."}
{"db_schema_with_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "db_schema_without_val": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id", "dialogue_id": "917", "plan": "SELECT min ( grade ) FROM highschooler WHERE id NOT IN ( SELECT T1 . student_id FROM friend AS T1 JOIN highschooler AS T2 ON T1 . student_id = T2 . id )", "schema_name": "network_1", "turn_part_index": 0, "utterance": "What is the lowest grade of students who do not have any friends?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "918", "plan": "SELECT state FROM owners INTERSECT SELECT state FROM professionals", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Which states have both owners and professionals living there?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "919", "plan": "SELECT state FROM owners INTERSECT SELECT state FROM professionals", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Find the states where both owners and professionals live."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "920", "plan": "SELECT avg ( age ) FROM dogs WHERE dog_id IN ( SELECT dog_id FROM treatments )", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "What is the average age of the dogs who have gone through any treatments?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "921", "plan": "SELECT avg ( age ) FROM dogs WHERE dog_id IN ( SELECT dog_id FROM treatments )", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Find the average age of the dogs who went through treatments."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state ( Indiana ) , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state ( Indiana ) , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "922", "plan": "SELECT professional_id , last_name , cell_number FROM professionals WHERE state = 'Indiana' UNION SELECT T1 . professional_id , T1 . last_name , T1 . cell_number FROM professionals AS T1 JOIN treatments AS T2 ON T1 . professional_id = T2 . professional_id GROUP BY T1 . professional_id HAVING count ( * ) > 2", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state ( Indiana ) , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state ( Indiana ) , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "923", "plan": "SELECT professional_id , last_name , cell_number FROM professionals WHERE state = 'Indiana' UNION SELECT T1 . professional_id , T1 . last_name , T1 . cell_number FROM professionals AS T1 JOIN treatments AS T2 ON T1 . professional_id = T2 . professional_id GROUP BY T1 . professional_id HAVING count ( * ) > 2", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "924", "plan": "SELECT name FROM dogs WHERE dog_id NOT IN ( SELECT dog_id FROM treatments GROUP BY dog_id HAVING sum ( cost_of_treatment ) > 1000 )", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Which dogs have not cost their owner more than 1000 for treatment ? List the dog names ."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "925", "plan": "SELECT name FROM dogs WHERE dog_id NOT IN ( SELECT dog_id FROM treatments GROUP BY dog_id HAVING sum ( cost_of_treatment ) > 1000 )", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "926", "plan": "SELECT first_name FROM professionals UNION SELECT first_name FROM owners EXCEPT SELECT name FROM dogs", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Which first names are used for professionals or owners but are not used as dog names?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "927", "plan": "SELECT first_name FROM professionals UNION SELECT first_name FROM owners EXCEPT SELECT name FROM dogs", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Find the first names that are used for professionals or owners but are not used as dog names."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "928", "plan": "SELECT professional_id , role_code , email_address FROM professionals EXCEPT SELECT T1 . professional_id , T1 . role_code , T1 . email_address FROM professionals AS T1 JOIN treatments AS T2 ON T1 . professional_id = T2 . professional_id", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Which professional did not operate any treatment on dogs? List the professional's id, role and email."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "929", "plan": "SELECT professional_id , role_code , email_address FROM professionals EXCEPT SELECT T1 . professional_id , T1 . role_code , T1 . email_address FROM professionals AS T1 JOIN treatments AS T2 ON T1 . professional_id = T2 . professional_id", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Give me the id, role and email of the professionals who did not perform any treatment on dogs."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "930", "plan": "SELECT T1 . owner_id , T2 . first_name , T2 . last_name FROM dogs AS T1 JOIN owners AS T2 ON T1 . owner_id = T2 . owner_id GROUP BY T1 . owner_id ORDER BY count ( * ) DESC LIMIT 1", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Which owner owns the most dogs? List the owner id, first name and last name."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "931", "plan": "SELECT T1 . owner_id , T2 . first_name , T2 . last_name FROM dogs AS T1 JOIN owners AS T2 ON T1 . owner_id = T2 . owner_id GROUP BY T1 . owner_id ORDER BY count ( * ) DESC LIMIT 1", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Return the owner id, first name and last name of the owner who has the most dogs."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "932", "plan": "SELECT T1 . professional_id , T1 . role_code , T1 . first_name FROM professionals AS T1 JOIN treatments AS T2 ON T1 . professional_id = T2 . professional_id GROUP BY T1 . professional_id HAVING count ( * ) >= 2", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Which professionals have done at least two treatments? List the professional's id, role, and first name."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "933", "plan": "SELECT T1 . professional_id , T1 . role_code , T1 . first_name FROM professionals AS T1 JOIN treatments AS T2 ON T1 . professional_id = T2 . professional_id GROUP BY T1 . professional_id HAVING count ( * ) >= 2", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "What are the id, role, and first name of the professionals who have performed two or more treatments?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "934", "plan": "SELECT T1 . breed_name FROM breeds AS T1 JOIN dogs AS T2 ON T1 . breed_code = T2 . breed_code GROUP BY T1 . breed_name ORDER BY count ( * ) DESC LIMIT 1", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "What is the name of the breed with the most dogs?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "935", "plan": "SELECT T1 . breed_name FROM breeds AS T1 JOIN dogs AS T2 ON T1 . breed_code = T2 . breed_code GROUP BY T1 . breed_name ORDER BY count ( * ) DESC LIMIT 1", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Which breed do the most dogs have? Give me the breed name."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "936", "plan": "SELECT T1 . owner_id , T1 . last_name FROM owners AS T1 JOIN dogs AS T2 ON T1 . owner_id = T2 . owner_id JOIN treatments AS T3 ON T2 . dog_id = T3 . dog_id GROUP BY T1 . owner_id ORDER BY count ( * ) DESC LIMIT 1", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "937", "plan": "SELECT T1 . owner_id , T1 . last_name FROM owners AS T1 JOIN dogs AS T2 ON T1 . owner_id = T2 . owner_id JOIN treatments AS T3 ON T2 . dog_id = T3 . dog_id GROUP BY T1 . owner_id ORDER BY count ( * ) DESC LIMIT 1", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "938", "plan": "SELECT T1 . treatment_type_description FROM treatment_types AS T1 JOIN treatments AS T2 ON T1 . treatment_type_code = T2 . treatment_type_code GROUP BY T1 . treatment_type_code ORDER BY sum ( cost_of_treatment ) ASC LIMIT 1", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "What is the description of the treatment type that costs the least money in total?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "939", "plan": "SELECT T1 . treatment_type_description FROM treatment_types AS T1 JOIN treatments AS T2 ON T1 . treatment_type_code = T2 . treatment_type_code GROUP BY T1 . treatment_type_code ORDER BY sum ( cost_of_treatment ) ASC LIMIT 1", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Give me the description of the treatment type whose total cost is the lowest."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "940", "plan": "SELECT T1 . owner_id , T1 . zip_code FROM owners AS T1 JOIN dogs AS T2 ON T1 . owner_id = T2 . owner_id JOIN treatments AS T3 ON T2 . dog_id = T3 . dog_id GROUP BY T1 . owner_id ORDER BY sum ( T3 . cost_of_treatment ) DESC LIMIT 1", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "941", "plan": "SELECT T1 . owner_id , T1 . zip_code FROM owners AS T1 JOIN dogs AS T2 ON T1 . owner_id = T2 . owner_id JOIN treatments AS T3 ON T2 . dog_id = T3 . dog_id GROUP BY T1 . owner_id ORDER BY sum ( T3 . cost_of_treatment ) DESC LIMIT 1", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "942", "plan": "SELECT T1 . professional_id , T1 . cell_number FROM professionals AS T1 JOIN treatments AS T2 ON T1 . professional_id = T2 . professional_id GROUP BY T1 . professional_id HAVING count ( * ) >= 2", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Which professionals have done at least two types of treatments? List the professional id and cell phone."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "943", "plan": "SELECT T1 . professional_id , T1 . cell_number FROM professionals AS T1 JOIN treatments AS T2 ON T1 . professional_id = T2 . professional_id GROUP BY T1 . professional_id HAVING count ( * ) >= 2", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Find the id and cell phone of the professionals who operate two or more types of treatments."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "944", "plan": "SELECT DISTINCT T1 . first_name , T1 . last_name FROM professionals AS T1 JOIN treatments AS T2 WHERE cost_of_treatment < ( SELECT avg ( cost_of_treatment ) FROM treatments )", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "What are the first name and last name of the professionals who have done treatment with cost below average?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "945", "plan": "SELECT DISTINCT T1 . first_name , T1 . last_name FROM professionals AS T1 JOIN treatments AS T2 WHERE cost_of_treatment < ( SELECT avg ( cost_of_treatment ) FROM treatments )", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "946", "plan": "SELECT T1 . date_of_treatment , T2 . first_name FROM treatments AS T1 JOIN professionals AS T2 ON T1 . professional_id = T2 . professional_id", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "List the date of each treatment, together with the first name of the professional who operated it."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "947", "plan": "SELECT T1 . date_of_treatment , T2 . first_name FROM treatments AS T1 JOIN professionals AS T2 ON T1 . professional_id = T2 . professional_id", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "What are the date and the operating professional's first name of each treatment?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "948", "plan": "SELECT T1 . cost_of_treatment , T2 . treatment_type_description FROM treatments AS T1 JOIN treatment_types AS T2 ON T1 . treatment_type_code = T2 . treatment_type_code", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "List the cost of each treatment and the corresponding treatment type description."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "949", "plan": "SELECT T1 . cost_of_treatment , T2 . treatment_type_description FROM treatments AS T1 JOIN treatment_types AS T2 ON T1 . treatment_type_code = T2 . treatment_type_code", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "What are the cost and treatment type description of each treatment?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "950", "plan": "SELECT T1 . first_name , T1 . last_name , T2 . size_code FROM owners AS T1 JOIN dogs AS T2 ON T1 . owner_id = T2 . owner_id", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "List each owner's first name, last name, and the size of his for her dog."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "951", "plan": "SELECT T1 . first_name , T1 . last_name , T2 . size_code FROM owners AS T1 JOIN dogs AS T2 ON T1 . owner_id = T2 . owner_id", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "What are each owner's first name, last name, and the size of their dog?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "952", "plan": "SELECT T1 . first_name , T2 . name FROM owners AS T1 JOIN dogs AS T2 ON T1 . owner_id = T2 . owner_id", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "List pairs of the owner's first name and the dogs's name."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "953", "plan": "SELECT T1 . first_name , T2 . name FROM owners AS T1 JOIN dogs AS T2 ON T1 . owner_id = T2 . owner_id", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "What are each owner's first name and their dogs's name?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "954", "plan": "SELECT T1 . name , T2 . date_of_treatment FROM dogs AS T1 JOIN treatments AS T2 ON T1 . dog_id = T2 . dog_id WHERE T1 . breed_code = ( SELECT breed_code FROM dogs GROUP BY breed_code ORDER BY count ( * ) ASC LIMIT 1 )", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "List the names of the dogs of the rarest breed and the treatment dates of them."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "955", "plan": "SELECT T1 . name , T2 . date_of_treatment FROM dogs AS T1 JOIN treatments AS T2 ON T1 . dog_id = T2 . dog_id WHERE T1 . breed_code = ( SELECT breed_code FROM dogs GROUP BY breed_code ORDER BY count ( * ) ASC LIMIT 1 )", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Which dogs are of the rarest breed? Show their names and treatment dates."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state ( Virginia ) , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "956", "plan": "SELECT T1 . first_name , T2 . name FROM owners AS T1 JOIN dogs AS T2 ON T1 . owner_id = T2 . owner_id WHERE T1 . state = 'Virginia'", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state ( Virginia ) , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "957", "plan": "SELECT T1 . first_name , T2 . name FROM owners AS T1 JOIN dogs AS T2 ON T1 . owner_id = T2 . owner_id WHERE T1 . state = 'Virginia'", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Find the first names of owners living in Virginia and the names of dogs they own."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "958", "plan": "SELECT DISTINCT T1 . date_arrived , T1 . date_departed FROM dogs AS T1 JOIN treatments AS T2 ON T1 . dog_id = T2 . dog_id", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "What are the arriving date and the departing date of the dogs who have gone through a treatment?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "959", "plan": "SELECT DISTINCT T1 . date_arrived , T1 . date_departed FROM dogs AS T1 JOIN treatments AS T2 ON T1 . dog_id = T2 . dog_id", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Find the arriving date and the departing date of the dogs that received a treatment."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "960", "plan": "SELECT T1 . last_name FROM owners AS T1 JOIN dogs AS T2 ON T1 . owner_id = T2 . owner_id WHERE T2 . age = ( SELECT max ( age ) FROM dogs )", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "List the last name of the owner owning the youngest dog."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "961", "plan": "SELECT T1 . last_name FROM owners AS T1 JOIN dogs AS T2 ON T1 . owner_id = T2 . owner_id WHERE T2 . age = ( SELECT max ( age ) FROM dogs )", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Who owns the youngest dog? Give me his or her last name."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state ( Wisconsin ) , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state ( Wisconsin , Hawaii ) , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "962", "plan": "SELECT email_address FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state ( Wisconsin ) , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state ( Wisconsin , Hawaii ) , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "963", "plan": "SELECT email_address FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "964", "plan": "SELECT date_arrived , date_departed FROM dogs", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "What are the arriving date and the departing date of all the dogs?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "965", "plan": "SELECT date_arrived , date_departed FROM dogs", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "List the arrival date and the departure date for all the dogs."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "966", "plan": "SELECT count ( DISTINCT dog_id ) FROM treatments", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "How many dogs went through any treatments?"}
