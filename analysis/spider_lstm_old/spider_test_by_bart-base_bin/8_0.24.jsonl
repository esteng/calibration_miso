{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "959", "plan": "SELECT DISTINCT T1 . date_arrived , T1 . date_departed FROM dogs AS T1 JOIN treatments AS T2 ON T1 . dog_id = T2 . dog_id", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Find the arriving date and the departing date of the dogs that received a treatment."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "960", "plan": "SELECT T1 . last_name FROM owners AS T1 JOIN dogs AS T2 ON T1 . owner_id = T2 . owner_id WHERE T2 . age = ( SELECT max ( age ) FROM dogs )", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "List the last name of the owner owning the youngest dog."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "961", "plan": "SELECT T1 . last_name FROM owners AS T1 JOIN dogs AS T2 ON T1 . owner_id = T2 . owner_id WHERE T2 . age = ( SELECT max ( age ) FROM dogs )", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Who owns the youngest dog? Give me his or her last name."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state ( Wisconsin ) , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state ( Wisconsin , Hawaii ) , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "962", "plan": "SELECT email_address FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state ( Wisconsin ) , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state ( Wisconsin , Hawaii ) , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "963", "plan": "SELECT email_address FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "964", "plan": "SELECT date_arrived , date_departed FROM dogs", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "What are the arriving date and the departing date of all the dogs?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "965", "plan": "SELECT date_arrived , date_departed FROM dogs", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "List the arrival date and the departure date for all the dogs."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "966", "plan": "SELECT count ( DISTINCT dog_id ) FROM treatments", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "How many dogs went through any treatments?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "967", "plan": "SELECT count ( DISTINCT dog_id ) FROM treatments", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Count the number of dogs that went through a treatment."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "968", "plan": "SELECT count ( DISTINCT professional_id ) FROM treatments", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "How many professionals have performed any treatment to dogs?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "969", "plan": "SELECT count ( DISTINCT professional_id ) FROM treatments", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Find the number of professionals who have ever treated dogs."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "970", "plan": "SELECT role_code , street , city , state FROM professionals WHERE city LIKE '%West%'", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "971", "plan": "SELECT role_code , street , city , state FROM professionals WHERE city LIKE '%West%'", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Find the role, street, city and state of the professionals living in a city that contains the substring 'West'."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "972", "plan": "SELECT first_name , last_name , email_address FROM owners WHERE state LIKE '%North%'", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "973", "plan": "SELECT first_name , last_name , email_address FROM owners WHERE state LIKE '%North%'", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "974", "plan": "SELECT count ( * ) FROM dogs WHERE age < ( SELECT avg ( age ) FROM dogs )", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "How many dogs have an age below the average?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "975", "plan": "SELECT count ( * ) FROM dogs WHERE age < ( SELECT avg ( age ) FROM dogs )", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Count the number of dogs of an age below the average."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "976", "plan": "SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "How much does the most recent treatment cost?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "977", "plan": "SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Show me the cost of the most recently performed treatment."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "978", "plan": "SELECT count ( * ) FROM dogs WHERE dog_id NOT IN ( SELECT dog_id FROM treatments )", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "How many dogs have not gone through any treatment?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "979", "plan": "SELECT count ( * ) FROM dogs WHERE dog_id NOT IN ( SELECT dog_id FROM treatments )", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Tell me the number of dogs that have not received any treatment ."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "980", "plan": "SELECT count ( * ) FROM owners WHERE owner_id NOT IN ( SELECT owner_id FROM dogs )", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "How many owners temporarily do not have any dogs?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "981", "plan": "SELECT count ( * ) FROM owners WHERE owner_id NOT IN ( SELECT owner_id FROM dogs )", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Find the number of owners who do not own any dogs at this moment."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "982", "plan": "SELECT count ( * ) FROM professionals WHERE professional_id NOT IN ( SELECT professional_id FROM treatments )", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "How many professionals did not operate any treatment on dogs?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "983", "plan": "SELECT count ( * ) FROM professionals WHERE professional_id NOT IN ( SELECT professional_id FROM treatments )", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Find the number of professionals who have not treated any dogs."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "984", "plan": "SELECT name , age , weight FROM dogs WHERE abandoned_yn = 1", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "985", "plan": "SELECT name , age , weight FROM dogs WHERE abandoned_yn = 1", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "986", "plan": "SELECT avg ( age ) FROM dogs", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "What is the average age of all the dogs?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "987", "plan": "SELECT avg ( age ) FROM dogs", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Compute the average age of all the dogs."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "988", "plan": "SELECT max ( age ) FROM dogs", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "What is the age of the oldest dog?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "989", "plan": "SELECT max ( age ) FROM dogs", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Tell me the age of the oldest dog."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "990", "plan": "SELECT charge_type , charge_amount FROM charges", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "How much does each charge type costs? List both charge type and amount."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "991", "plan": "SELECT charge_type , charge_amount FROM charges", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "List each charge type and its amount."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "992", "plan": "SELECT max ( charge_amount ) FROM charges", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "How much does the most expensive charge type costs?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "993", "plan": "SELECT max ( charge_amount ) FROM charges", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "What is the charge amount of the most expensive charge type?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "994", "plan": "SELECT email_address , cell_number , home_phone FROM professionals", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "List the email, cell phone and home phone of all the professionals."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "995", "plan": "SELECT email_address , cell_number , home_phone FROM professionals", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "What are the email, cell phone and home phone of each professional?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "996", "plan": "SELECT DISTINCT breed_code , size_code FROM dogs", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "What are all the possible breed type and size type combinations?"}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "997", "plan": "SELECT DISTINCT breed_code , size_code FROM dogs", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "Find the distinct breed type and size type combinations for dogs."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "998", "plan": "SELECT DISTINCT T1 . first_name , T3 . treatment_type_description FROM professionals AS T1 JOIN treatments AS T2 ON T1 . professional_id = T2 . professional_id JOIN treatment_types AS T3 ON T2 . treatment_type_code = T3 . treatment_type_code", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "List the first name of all the professionals along with the description of the treatment they have done."}
{"db_schema_with_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "db_schema_without_val": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment", "dialogue_id": "999", "plan": "SELECT DISTINCT T1 . first_name , T3 . treatment_type_description FROM professionals AS T1 JOIN treatments AS T2 ON T1 . professional_id = T2 . professional_id JOIN treatment_types AS T3 ON T2 . treatment_type_code = T3 . treatment_type_code", "schema_name": "dog_kennels", "turn_part_index": 0, "utterance": "What are each professional's first name and description of the treatment they have performed?"}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1000", "plan": "SELECT count ( * ) FROM singer", "schema_name": "singer", "turn_part_index": 0, "utterance": "How many singers are there?"}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1001", "plan": "SELECT count ( * ) FROM singer", "schema_name": "singer", "turn_part_index": 0, "utterance": "What is the count of singers?"}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1002", "plan": "SELECT name FROM singer ORDER BY net_worth_millions ASC", "schema_name": "singer", "turn_part_index": 0, "utterance": "List the name of singers in ascending order of net worth."}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1003", "plan": "SELECT name FROM singer ORDER BY net_worth_millions ASC", "schema_name": "singer", "turn_part_index": 0, "utterance": "What are the names of singers ordered by ascending net worth?"}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1004", "plan": "SELECT birth_year , citizenship FROM singer", "schema_name": "singer", "turn_part_index": 0, "utterance": "What are the birth year and citizenship of singers?"}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1005", "plan": "SELECT birth_year , citizenship FROM singer", "schema_name": "singer", "turn_part_index": 0, "utterance": "What are the birth years and citizenships of the singers?"}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship ( France ) | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1006", "plan": "SELECT name FROM singer WHERE citizenship != \"France\"", "schema_name": "singer", "turn_part_index": 0, "utterance": "List the name of singers whose citizenship is not \"France\"."}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1007", "plan": "SELECT name FROM singer WHERE citizenship != \"France\"", "schema_name": "singer", "turn_part_index": 0, "utterance": "What are the names of the singers who are not French citizens?"}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1008", "plan": "SELECT name FROM singer WHERE birth_year = 1948 OR birth_year = 1949", "schema_name": "singer", "turn_part_index": 0, "utterance": "Show the name of singers whose birth year is either 1948 or 1949?"}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1009", "plan": "SELECT name FROM singer WHERE birth_year = 1948 OR birth_year = 1949", "schema_name": "singer", "turn_part_index": 0, "utterance": "What are the names of the singers whose birth years are either 1948 or 1949?"}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1010", "plan": "SELECT name FROM singer ORDER BY net_worth_millions DESC LIMIT 1", "schema_name": "singer", "turn_part_index": 0, "utterance": "What is the name of the singer with the largest net worth?"}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1011", "plan": "SELECT name FROM singer ORDER BY net_worth_millions DESC LIMIT 1", "schema_name": "singer", "turn_part_index": 0, "utterance": "What is the name of the singer who is worth the most?"}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1012", "plan": "SELECT citizenship , count ( * ) FROM singer GROUP BY citizenship", "schema_name": "singer", "turn_part_index": 0, "utterance": "Show different citizenship of singers and the number of singers of each citizenship."}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1013", "plan": "SELECT citizenship , count ( * ) FROM singer GROUP BY citizenship", "schema_name": "singer", "turn_part_index": 0, "utterance": "For each citizenship, how many singers are from that country?"}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1014", "plan": "SELECT citizenship FROM singer GROUP BY citizenship ORDER BY count ( * ) DESC LIMIT 1", "schema_name": "singer", "turn_part_index": 0, "utterance": "Please show the most common citizenship of singers."}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1015", "plan": "SELECT citizenship FROM singer GROUP BY citizenship ORDER BY count ( * ) DESC LIMIT 1", "schema_name": "singer", "turn_part_index": 0, "utterance": "What is the most common singer citizenship ?"}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1016", "plan": "SELECT citizenship , max ( net_worth_millions ) FROM singer GROUP BY citizenship", "schema_name": "singer", "turn_part_index": 0, "utterance": "Show different citizenships and the maximum net worth of singers of each citizenship."}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1017", "plan": "SELECT citizenship , max ( net_worth_millions ) FROM singer GROUP BY citizenship", "schema_name": "singer", "turn_part_index": 0, "utterance": "For each citizenship, what is the maximum net worth?"}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1018", "plan": "SELECT T2 . title , T1 . name FROM singer AS T1 JOIN song AS T2 ON T1 . singer_id = T2 . singer_id", "schema_name": "singer", "turn_part_index": 0, "utterance": "Show titles of songs and names of singers."}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1019", "plan": "SELECT T2 . title , T1 . name FROM singer AS T1 JOIN song AS T2 ON T1 . singer_id = T2 . singer_id", "schema_name": "singer", "turn_part_index": 0, "utterance": "What are the song titles and singer names?"}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1020", "plan": "SELECT DISTINCT T1 . name FROM singer AS T1 JOIN song AS T2 ON T1 . singer_id = T2 . singer_id WHERE T2 . sales > 300000", "schema_name": "singer", "turn_part_index": 0, "utterance": "Show distinct names of singers that have songs with sales more than 300000."}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1021", "plan": "SELECT DISTINCT T1 . name FROM singer AS T1 JOIN song AS T2 ON T1 . singer_id = T2 . singer_id WHERE T2 . sales > 300000", "schema_name": "singer", "turn_part_index": 0, "utterance": "what are the different names of the singers that have sales more than 300000?"}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1022", "plan": "SELECT T1 . name FROM singer AS T1 JOIN song AS T2 ON T1 . singer_id = T2 . singer_id GROUP BY T1 . name HAVING count ( * ) > 1", "schema_name": "singer", "turn_part_index": 0, "utterance": "Show the names of singers that have more than one song."}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1023", "plan": "SELECT T1 . name FROM singer AS T1 JOIN song AS T2 ON T1 . singer_id = T2 . singer_id GROUP BY T1 . name HAVING count ( * ) > 1", "schema_name": "singer", "turn_part_index": 0, "utterance": "What are the names of the singers that have more than one songs?"}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1024", "plan": "SELECT T1 . name , sum ( T2 . sales ) FROM singer AS T1 JOIN song AS T2 ON T1 . singer_id = T2 . singer_id GROUP BY T1 . name", "schema_name": "singer", "turn_part_index": 0, "utterance": "Show the names of singers and the total sales of their songs."}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1025", "plan": "SELECT T1 . name , sum ( T2 . sales ) FROM singer AS T1 JOIN song AS T2 ON T1 . singer_id = T2 . singer_id GROUP BY T1 . name", "schema_name": "singer", "turn_part_index": 0, "utterance": "For each singer name, what is the total sales for their songs?"}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1026", "plan": "SELECT name FROM singer WHERE singer_id NOT IN ( SELECT singer_id FROM song )", "schema_name": "singer", "turn_part_index": 0, "utterance": "List the name of singers that do not have any song."}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1027", "plan": "SELECT name FROM singer WHERE singer_id NOT IN ( SELECT singer_id FROM song )", "schema_name": "singer", "turn_part_index": 0, "utterance": "What is the sname of every sing that does not have any song?"}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1028", "plan": "SELECT citizenship FROM singer WHERE birth_year < 1945 INTERSECT SELECT citizenship FROM singer WHERE birth_year > 1955", "schema_name": "singer", "turn_part_index": 0, "utterance": "Show the citizenship shared by singers with birth year before 1945 and after 1955."}
{"db_schema_with_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "db_schema_without_val": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position", "dialogue_id": "1029", "plan": "SELECT citizenship FROM singer WHERE birth_year < 1945 INTERSECT SELECT citizenship FROM singer WHERE birth_year > 1955", "schema_name": "singer", "turn_part_index": 0, "utterance": "What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?"}
{"db_schema_with_val": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description", "db_schema_without_val": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description", "dialogue_id": "1030", "plan": "SELECT count ( * ) FROM other_available_features", "schema_name": "real_estate_properties", "turn_part_index": 0, "utterance": "How many available features are there in total?"}
{"db_schema_with_val": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name ( AirCon ) , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description", "db_schema_without_val": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description", "dialogue_id": "1031", "plan": "SELECT T2 . feature_type_name FROM other_available_features AS T1 JOIN ref_feature_types AS T2 ON T1 . feature_type_code = T2 . feature_type_code WHERE T1 . feature_name = \"AirCon\"", "schema_name": "real_estate_properties", "turn_part_index": 0, "utterance": "What is the feature type name of feature AirCon?"}
{"db_schema_with_val": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description", "db_schema_without_val": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description", "dialogue_id": "1032", "plan": "SELECT T2 . property_type_description FROM properties AS T1 JOIN ref_property_types AS T2 ON T1 . property_type_code = T2 . property_type_code GROUP BY T1 . property_type_code", "schema_name": "real_estate_properties", "turn_part_index": 0, "utterance": "Show the property type descriptions of properties belonging to that code."}
{"db_schema_with_val": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code ( Apartment , House ) , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code ( Apartment , House ) , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description", "db_schema_without_val": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description", "dialogue_id": "1033", "plan": "SELECT property_name FROM properties WHERE property_type_code = \"House\" UNION SELECT property_name FROM properties WHERE property_type_code = \"Apartment\" AND room_count > 1", "schema_name": "real_estate_properties", "turn_part_index": 0, "utterance": "What are the names of properties that are either houses or apartments with more than 1 room?"}
