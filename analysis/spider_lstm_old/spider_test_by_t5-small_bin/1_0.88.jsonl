{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "121", "plan": "SELECT maker , model FROM model_list ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What are all the makers and models?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "122", "plan": "SELECT maker , model FROM model_list ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What are the makers and models?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "123", "plan": "SELECT T1 . countryName , T1 . countryid FROM countries AS T1 JOIN car_makers AS T2 ON T1 . countryid = T2 . country GROUP BY T1 . countryid HAVING count ( * ) >= 1 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What are the countries having at least one car maker? List name and id."}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "124", "plan": "SELECT T1 . countryname , T1 . countryId FROM countries AS T1 JOIN car_makers AS T2 ON T1 . countryid = T2 . country GROUP BY T1 . countryid HAVING count ( * ) >= 1 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What are the names and ids of all countries with at least one car maker?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "125", "plan": "SELECT count ( * ) FROM cars_data WHERE horsepower > 150 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What is the number of the cars with horsepower more than 150?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "126", "plan": "SELECT count ( * ) FROM cars_data WHERE horsepower > 150 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What is the number of cars with a horsepower greater than 150?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "127", "plan": "SELECT avg ( weight ) , year FROM cars_data GROUP BY year ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What is the average weight of cars each year?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "128", "plan": "SELECT avg ( weight ) , year FROM cars_data GROUP BY year ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What is the average weight and year for each year?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent ( europe ) | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "129", "plan": "SELECT T1 . countryname FROM countries AS T1 JOIN continents AS T2 ON T1 . continent = T2 . contid JOIN car_makers AS T3 ON T1 . countryid = T3 . country WHERE T2 . continent = 'europe' GROUP BY T1 . countryname HAVING count ( * ) >= 3 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "Which countries in europe have at least 3 car manufacturers?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent ( europe ) | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "130", "plan": "SELECT T1 . countryname FROM countries AS T1 JOIN continents AS T2 ON T1 . continent = T2 . contid JOIN car_makers AS T3 ON T1 . countryid = T3 . country WHERE T2 . continent = 'europe' GROUP BY T1 . countryname HAVING count ( * ) >= 3 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What are the names of all European countries with at least 3 manufacturers?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "131", "plan": "SELECT T2 . horsepower , T1 . make FROM car_names AS T1 JOIN cars_data AS T2 ON T1 . makeid = T2 . id WHERE T2 . cylinders = 3 ORDER BY T2 . horsepower DESC LIMIT 1 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What is the maximum horsepower and the make of the car models with 3 cylinders?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "132", "plan": "SELECT T2 . horsepower , T1 . make FROM car_names AS T1 JOIN cars_data AS T2 ON T1 . makeid = T2 . id WHERE T2 . cylinders = 3 ORDER BY T2 . horsepower DESC LIMIT 1 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "133", "plan": "SELECT T1 . model FROM car_names AS T1 JOIN cars_data AS T2 ON T1 . makeid = T2 . id ORDER BY T2 . mpg DESC LIMIT 1 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon."}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "134", "plan": "SELECT T1 . model FROM car_names AS T1 JOIN cars_data AS T2 ON T1 . makeid = T2 . id ORDER BY T2 . mpg DESC LIMIT 1 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What is the car model with the highest mpg ?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "135", "plan": "SELECT avg ( horsepower ) FROM cars_data WHERE year < 1980 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What is the average horsepower of the cars before 1980?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "136", "plan": "SELECT avg ( horsepower ) FROM cars_data WHERE year < 1980 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What is the average horsepower for all cars produced before 1980 ?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker ( volvo ) , fullname ( Volvo ) , country | model_list : modelid , maker , model ( volvo ) | car_names : makeid , model ( volvo ) , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "137", "plan": "SELECT avg ( T2 . edispl ) FROM car_names AS T1 JOIN cars_data AS T2 ON T1 . makeid = T2 . id WHERE T1 . model = 'volvo' ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What is the average edispl of the cars of model volvo?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker ( volvo ) , fullname ( Volvo ) , country | model_list : modelid , maker , model ( volvo ) | car_names : makeid , model ( volvo ) , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "138", "plan": "SELECT avg ( T2 . edispl ) FROM car_names AS T1 JOIN cars_data AS T2 ON T1 . makeid = T2 . id WHERE T1 . model = 'volvo' ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What is the average edispl for all volvos?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "139", "plan": "SELECT max ( accelerate ) , cylinders FROM cars_data GROUP BY cylinders ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What is the maximum accelerate for different number of cylinders?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "140", "plan": "SELECT max ( accelerate ) , cylinders FROM cars_data GROUP BY cylinders ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What is the maximum accelerate for all the different cylinders?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "141", "plan": "SELECT model FROM car_names GROUP BY model ORDER BY count ( * ) DESC LIMIT 1 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "Which model has the most version(make) of cars?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "142", "plan": "SELECT model FROM car_names GROUP BY model ORDER BY count ( * ) DESC LIMIT 1 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What model has the most different versions?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "143", "plan": "SELECT count ( * ) FROM cars_data WHERE cylinders > 4 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "How many cars have more than 4 cylinders?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "144", "plan": "SELECT count ( * ) FROM cars_data WHERE cylinders > 4 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What is the number of cars with more than 4 cylinders?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "145", "plan": "SELECT count ( * ) FROM cars_data WHERE year = 1980 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "how many cars were produced in 1980?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "146", "plan": "SELECT count ( * ) FROM cars_data WHERE year = 1980 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "In 1980, how many cars were made?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent ( america ) | countries : countryid , countryname , continent | car_makers : id , maker , fullname ( American Motor Company ) , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "147", "plan": "SELECT count ( * ) FROM car_makers AS T1 JOIN model_list AS T2 ON T1 . id = T2 . maker WHERE T1 . fullname = 'American Motor Company' ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "How many car models were produced by the maker with full name American Motor Company?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent ( america ) | countries : countryid , countryname , continent | car_makers : id , maker , fullname ( American Motor Company ) , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "148", "plan": "SELECT count ( * ) FROM car_makers AS T1 JOIN model_list AS T2 ON T1 . id = T2 . maker WHERE T1 . fullname = 'American Motor Company' ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What is the number of car models created by the car maker American Motor Company?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "149", "plan": "SELECT T1 . fullname , T1 . id FROM car_makers AS T1 JOIN model_list AS T2 ON T1 . id = T2 . maker GROUP BY T1 . id HAVING count ( * ) > 3 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "Which makers designed more than 3 car models? List full name and the id."}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "150", "plan": "SELECT T1 . fullname , T1 . id FROM car_makers AS T1 JOIN model_list AS T2 ON T1 . id = T2 . maker GROUP BY T1 . id HAVING count ( * ) > 3 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What are the names and ids of all makers with more than 3 models?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname ( General Motors ) , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "151", "plan": "SELECT DISTINCT T2 . model FROM car_names AS T1 JOIN model_list AS T2 ON T1 . model = T2 . model JOIN car_makers AS T3 ON T2 . maker = T3 . id JOIN cars_data AS T4 ON T1 . makeid = T4 . id WHERE T3 . fullname = 'General Motors' OR T4 . weight > 3500 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname ( General Motors ) , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "152", "plan": "SELECT DISTINCT T2 . model FROM car_names AS T1 JOIN model_list AS T2 ON T1 . model = T2 . model JOIN car_makers AS T3 ON T2 . maker = T3 . id JOIN cars_data AS T4 ON T1 . makeid = T4 . id WHERE T3 . fullname = 'General Motors' OR T4 . weight > 3500 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What are the different models created by either the car maker General Motors or weighed more than 3500?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "153", "plan": "SELECT DISTINCT year FROM cars_data WHERE weight BETWEEN 3000 AND 4000 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "In which years cars were produced weighing no less than 3000 and no more than 4000 ?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "154", "plan": "SELECT DISTINCT year FROM cars_data WHERE weight BETWEEN 3000 AND 4000 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "155", "plan": "SELECT T1 . horsepower FROM cars_data AS T1 ORDER BY T1 . accelerate DESC LIMIT 1 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What is the horsepower of the car with the largest accelerate?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "156", "plan": "SELECT T1 . horsepower FROM cars_data AS T1 ORDER BY T1 . accelerate DESC LIMIT 1 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What is the horsepower of the car with the greatest accelerate?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker ( volvo ) , fullname ( Volvo ) , country | model_list : modelid , maker , model ( volvo ) | car_names : makeid , model ( volvo ) , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "157", "plan": "SELECT T1 . cylinders FROM cars_data AS T1 JOIN car_names AS T2 ON T1 . id = T2 . makeid WHERE T2 . model = 'volvo' ORDER BY T1 . accelerate ASC LIMIT 1 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "For model volvo, how many cylinders does the car with the least accelerate have?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker ( volvo ) , fullname ( Volvo ) , country | model_list : modelid , maker , model ( volvo ) | car_names : makeid , model ( volvo ) , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "158", "plan": "SELECT T1 . cylinders FROM cars_data AS T1 JOIN car_names AS T2 ON T1 . id = T2 . makeid WHERE T2 . model = 'volvo' ORDER BY T1 . accelerate ASC LIMIT 1 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "For a volvo model, how many cylinders does the version with least accelerate have?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "159", "plan": "SELECT count ( * ) FROM cars_data WHERE accelerate > ( SELECT accelerate FROM cars_data ORDER BY horsepower DESC LIMIT 1 ) ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "How many cars have a larger accelerate than the car with the largest horsepower?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "160", "plan": "SELECT count ( * ) FROM cars_data WHERE accelerate > ( SELECT accelerate FROM cars_data ORDER BY horsepower DESC LIMIT 1 ) ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What is the number of cars with a greater accelerate than the one with the most horsepower?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "161", "plan": "SELECT count ( * ) FROM countries AS T1 JOIN car_makers AS T2 ON T1 . countryid = T2 . country GROUP BY T1 . countryid HAVING count ( * ) > 2", "schema_name": "car_1", "turn_part_index": 0, "utterance": "How many countries has more than 2 car makers ?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "162", "plan": "SELECT count ( * ) FROM countries AS T1 JOIN car_makers AS T2 ON T1 . countryid = T2 . country GROUP BY T1 . countryid HAVING count ( * ) > 2", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What is the number of countries with more than 2 car makers ?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "163", "plan": "SELECT count ( * ) FROM cars_data WHERE cylinders > 6 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "How many cars has over 6 cylinders?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "164", "plan": "SELECT count ( * ) FROM cars_data WHERE cylinders > 6 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What is the number of carsw ith over 6 cylinders?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "165", "plan": "SELECT T1 . model FROM car_names AS T1 JOIN cars_data AS T2 ON T1 . makeid = T2 . id WHERE T2 . cylinders = 4 ORDER BY T2 . horsepower DESC LIMIT 1 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "For the cars with 4 cylinders, which model has the largest horsepower?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "166", "plan": "SELECT T1 . model FROM car_names AS T1 JOIN cars_data AS T2 ON T1 . makeid = T2 . id WHERE T2 . cylinders = 4 ORDER BY T2 . horsepower DESC LIMIT 1 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "For all of the 4 cylinder cars, which model has the most horsepower?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "167", "plan": "SELECT T2 . makeid , T2 . make FROM cars_data AS T1 JOIN car_names AS T2 ON T1 . id = T2 . makeid WHERE T1 . horsepower > ( SELECT min ( horsepower ) FROM cars_data ) AND T1 . cylinders <= 3 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name."}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "168", "plan": "SELECT T2 . makeid , T2 . make FROM cars_data AS T1 JOIN car_names AS T2 ON T1 . id = T2 . makeid WHERE T1 . horsepower > ( SELECT min ( horsepower ) FROM cars_data ) AND T1 . cylinders < 4 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "169", "plan": "SELECT max ( mpg ) FROM cars_data WHERE cylinders = 8 OR year < 1980", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "170", "plan": "SELECT max ( mpg ) FROM cars_data WHERE cylinders = 8 OR year < 1980", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker ( ford ) , fullname ( Ford Motor Company ) , country | model_list : modelid , maker , model ( ford ) | car_names : makeid , model ( ford ) , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "171", "plan": "SELECT DISTINCT T1 . model FROM model_list AS T1 JOIN car_names AS T2 ON T1 . model = T2 . model JOIN cars_data AS T3 ON T2 . makeid = T3 . id JOIN car_makers AS T4 ON T1 . maker = T4 . id WHERE T3 . weight < 3500 AND T4 . fullname != 'Ford Motor Company' ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker ( ford ) , fullname ( Ford Motor Company ) , country | model_list : modelid , maker , model ( ford ) | car_names : makeid , model ( ford ) , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "172", "plan": "SELECT DISTINCT T1 . model FROM model_list AS T1 JOIN car_names AS T2 ON T1 . model = T2 . model JOIN cars_data AS T3 ON T2 . makeid = T3 . id JOIN car_makers AS T4 ON T1 . maker = T4 . id WHERE T3 . weight < 3500 AND T4 . fullname != 'Ford Motor Company' ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "173", "plan": "SELECT countryName FROM countries EXCEPT SELECT T1 . countryname FROM countries AS T1 JOIN car_makers AS T2 ON T1 . countryid = T2 . country ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What are the name of the countries where there is not a single car maker?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "174", "plan": "SELECT countryname FROM countries EXCEPT SELECT T1 . countryName FROM countries AS T1 JOIN car_makers AS T2 ON T1 . countryid = T2 . country ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What are the names of the countries with no car makers?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "175", "plan": "SELECT T1 . id , T1 . maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1 . id = T2 . maker GROUP BY T1 . id HAVING count ( * ) >= 2 INTERSECT SELECT T1 . id , T1 . maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1 . id = T2 . maker JOIN car_names AS T3 ON T2 . model = T3 . model GROUP BY T1 . id HAVING count ( * ) > 3 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker ."}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "176", "plan": "SELECT T1 . id , T1 . maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1 . id = T2 . maker GROUP BY T1 . id HAVING count ( * ) >= 2 INTERSECT SELECT T1 . id , T1 . maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1 . id = T2 . maker JOIN car_names AS T3 ON T2 . model = T3 . model GROUP BY T1 . id HAVING count ( * ) > 3 ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker ( fiat ) , fullname ( Fiat ) , country | model_list : modelid , maker , model ( fiat ) | car_names : makeid , model ( fiat ) , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "177", "plan": "SELECT T1 . countryId , T1 . countryname FROM countries AS T1 JOIN car_makers AS T2 ON T1 . countryid = T2 . country GROUP BY T1 . countryid HAVING count ( * ) > 3 UNION SELECT T1 . countryid , T1 . countryName FROM countries AS T1 JOIN car_makers AS T2 ON T1 . countryid = T2 . country JOIN model_list AS T3 ON T2 . id = T3 . maker WHERE T3 . model = 'fiat' ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?"}
{"db_schema_with_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker ( fiat ) , fullname ( Fiat ) , country | model_list : modelid , maker , model ( fiat ) | car_names : makeid , model ( fiat ) , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "db_schema_without_val": " | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year", "dialogue_id": "178", "plan": "SELECT T1 . countryid , T1 . countryname FROM countries AS T1 JOIN car_makers AS T2 ON T1 . countryid = T2 . country GROUP BY T1 . countryid HAVING count ( * ) > 3 UNION SELECT T1 . countryid , T1 . countryname FROM countries AS T1 JOIN car_makers AS T2 ON T1 . countryid = T2 . country JOIN model_list AS T3 ON T2 . id = T3 . maker WHERE T3 . model = 'fiat' ; ", "schema_name": "car_1", "turn_part_index": 0, "utterance": "What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?"}
{"db_schema_with_val": " | flight_2 | airlines : uid , airline ( JetBlue Airways ) , abbreviation ( JetBlue ) , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "db_schema_without_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "dialogue_id": "179", "plan": "SELECT country FROM airlines WHERE airline = \"JetBlue Airways\"", "schema_name": "flight_2", "turn_part_index": 0, "utterance": "Which country does Airline \"JetBlue Airways\" belong to?"}
{"db_schema_with_val": " | flight_2 | airlines : uid , airline ( JetBlue Airways ) , abbreviation ( JetBlue ) , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "db_schema_without_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "dialogue_id": "180", "plan": "SELECT country FROM airlines WHERE airline = \"JetBlue Airways\"", "schema_name": "flight_2", "turn_part_index": 0, "utterance": "What country is Jetblue Airways affiliated with?"}
{"db_schema_with_val": " | flight_2 | airlines : uid , airline ( JetBlue Airways ) , abbreviation ( JetBlue ) , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "db_schema_without_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "dialogue_id": "181", "plan": "SELECT abbreviation FROM airlines WHERE airline = \"JetBlue Airways\"", "schema_name": "flight_2", "turn_part_index": 0, "utterance": "What is the abbreviation of Airline \"JetBlue Airways\"?"}
{"db_schema_with_val": " | flight_2 | airlines : uid , airline ( JetBlue Airways ) , abbreviation ( JetBlue ) , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "db_schema_without_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "dialogue_id": "182", "plan": "SELECT abbreviation FROM airlines WHERE airline = \"JetBlue Airways\"", "schema_name": "flight_2", "turn_part_index": 0, "utterance": "Which abbreviation corresponds to Jetblue Airways?"}
{"db_schema_with_val": " | flight_2 | airlines : uid , airline , abbreviation , country ( USA ) | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "db_schema_without_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "dialogue_id": "183", "plan": "SELECT airline , abbreviation FROM airlines WHERE country = \"USA\"", "schema_name": "flight_2", "turn_part_index": 0, "utterance": "List all airline names and their abbreviations in \"USA\"."}
{"db_schema_with_val": " | flight_2 | airlines : uid , airline , abbreviation , country ( USA ) | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "db_schema_without_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "dialogue_id": "184", "plan": "SELECT airline , abbreviation FROM airlines WHERE country = \"USA\"", "schema_name": "flight_2", "turn_part_index": 0, "utterance": "What are the airline names and abbreviations for airlines in the USA?"}
{"db_schema_with_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city ( Anthony  ) , airportcode , airportname ( Anthony  ) , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "db_schema_without_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "dialogue_id": "185", "plan": "SELECT airportcode , airportname FROM airports WHERE city = \"Anthony\"", "schema_name": "flight_2", "turn_part_index": 0, "utterance": "List the airport code and name in the city of Anthony."}
{"db_schema_with_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city ( Anthony  ) , airportcode , airportname ( Anthony  ) , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "db_schema_without_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "dialogue_id": "186", "plan": "SELECT airportcode , airportname FROM airports WHERE city = \"Anthony\"", "schema_name": "flight_2", "turn_part_index": 0, "utterance": "Give the airport code and airport name corresonding to the city Anthony."}
{"db_schema_with_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "db_schema_without_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "dialogue_id": "187", "plan": "SELECT count ( * ) FROM airlines", "schema_name": "flight_2", "turn_part_index": 0, "utterance": "How many airlines do we have?"}
{"db_schema_with_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "db_schema_without_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "dialogue_id": "188", "plan": "SELECT count ( * ) FROM airlines", "schema_name": "flight_2", "turn_part_index": 0, "utterance": "What is the total number of airlines?"}
{"db_schema_with_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "db_schema_without_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "dialogue_id": "189", "plan": "SELECT count ( * ) FROM airports", "schema_name": "flight_2", "turn_part_index": 0, "utterance": "How many airports do we have?"}
{"db_schema_with_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "db_schema_without_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "dialogue_id": "190", "plan": "SELECT count ( * ) FROM airports", "schema_name": "flight_2", "turn_part_index": 0, "utterance": "Return the number of  airports."}
{"db_schema_with_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "db_schema_without_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "dialogue_id": "191", "plan": "SELECT count ( * ) FROM flights", "schema_name": "flight_2", "turn_part_index": 0, "utterance": "How many flights do we have?"}
{"db_schema_with_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "db_schema_without_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "dialogue_id": "192", "plan": "SELECT count ( * ) FROM flights", "schema_name": "flight_2", "turn_part_index": 0, "utterance": "Return the number of flights."}
{"db_schema_with_val": " | flight_2 | airlines : uid , airline , abbreviation ( UAL ) , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "db_schema_without_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "dialogue_id": "193", "plan": "SELECT airline FROM airlines WHERE abbreviation = \"UAL\"", "schema_name": "flight_2", "turn_part_index": 0, "utterance": "Which airline has abbreviation 'UAL'?"}
{"db_schema_with_val": " | flight_2 | airlines : uid , airline , abbreviation ( UAL ) , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "db_schema_without_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "dialogue_id": "194", "plan": "SELECT airline FROM airlines WHERE abbreviation = \"UAL\"", "schema_name": "flight_2", "turn_part_index": 0, "utterance": "Give the airline with abbreviation 'UAL'."}
{"db_schema_with_val": " | flight_2 | airlines : uid , airline , abbreviation , country ( USA ) | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "db_schema_without_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "dialogue_id": "195", "plan": "SELECT count ( * ) FROM airlines WHERE country = \"USA\"", "schema_name": "flight_2", "turn_part_index": 0, "utterance": "How many airlines are from USA?"}
{"db_schema_with_val": " | flight_2 | airlines : uid , airline , abbreviation , country ( USA ) | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "db_schema_without_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "dialogue_id": "196", "plan": "SELECT count ( * ) FROM airlines WHERE country = \"USA\"", "schema_name": "flight_2", "turn_part_index": 0, "utterance": "Return the number of airlines in the USA."}
{"db_schema_with_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city ( Alton  ) , airportcode , airportname ( Alton  ) , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "db_schema_without_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "dialogue_id": "197", "plan": "SELECT city , country FROM airports WHERE airportname = \"Alton\"", "schema_name": "flight_2", "turn_part_index": 0, "utterance": "Which city and country is the Alton airport at?"}
{"db_schema_with_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city ( Alton  ) , airportcode , airportname ( Alton  ) , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "db_schema_without_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "dialogue_id": "198", "plan": "SELECT city , country FROM airports WHERE airportname = \"Alton\"", "schema_name": "flight_2", "turn_part_index": 0, "utterance": "Give the city and country for the Alton airport."}
{"db_schema_with_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode ( AKO ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport (  AKO ) , destairport (  AKO )", "db_schema_without_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "dialogue_id": "199", "plan": "SELECT airportname FROM airports WHERE airportcode = \"AKO\"", "schema_name": "flight_2", "turn_part_index": 0, "utterance": "What is the airport name for airport 'AKO'?"}
{"db_schema_with_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode ( AKO ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport (  AKO ) , destairport (  AKO )", "db_schema_without_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "dialogue_id": "200", "plan": "SELECT airportname FROM airports WHERE airportcode = \"AKO\"", "schema_name": "flight_2", "turn_part_index": 0, "utterance": "Return the name of the airport with code 'AKO'."}
{"db_schema_with_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city ( Aberdeen  ) , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "db_schema_without_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "dialogue_id": "201", "plan": "SELECT airportname FROM airports WHERE city = \"Aberdeen\"", "schema_name": "flight_2", "turn_part_index": 0, "utterance": "What are airport names at City 'Aberdeen'?"}
{"db_schema_with_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city ( Aberdeen  ) , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "db_schema_without_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "dialogue_id": "202", "plan": "SELECT airportname FROM airports WHERE city = \"Aberdeen\"", "schema_name": "flight_2", "turn_part_index": 0, "utterance": "What are the names of airports in Aberdeen?"}
{"db_schema_with_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode ( APG ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport (  APG ) , destairport (  APG )", "db_schema_without_val": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport", "dialogue_id": "203", "plan": "SELECT count ( * ) FROM flights WHERE sourceairport = \"APG\"", "schema_name": "flight_2", "turn_part_index": 0, "utterance": "How many flights depart from 'APG'?"}
