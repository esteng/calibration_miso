{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English ) , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "780", "plan": "SELECT DISTINCT countrycode FROM countrylanguage WHERE language != \"English\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What are the country codes of countries where people use languages other than English?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English ) , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "781", "plan": "SELECT DISTINCT countrycode FROM countrylanguage WHERE language != \"English\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Give the country codes for countries in which people speak langauges that are not English."}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform ( Republic ) , headofstate , capital , code2 | countrylanguage : countrycode , language ( English ) , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "782", "plan": "SELECT code FROM country WHERE governmentform != \"Republic\" EXCEPT SELECT countrycode FROM countrylanguage WHERE language = \"English\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What are the codes of the countries that do not speak English and whose government forms are not Republic?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform ( Republic ) , headofstate , capital , code2 | countrylanguage : countrycode , language ( English ) , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "783", "plan": "SELECT code FROM country WHERE governmentform != \"Republic\" EXCEPT SELECT countrycode FROM countrylanguage WHERE language = \"English\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Return the codes of countries that do not speak English and do not have Republics for governments."}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Europe ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English ) , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "784", "plan": "SELECT DISTINCT T2 . name FROM country AS T1 JOIN city AS T2 ON T2 . countrycode = T1 . code WHERE T1 . continent = 'Europe' AND T1 . name NOT IN ( SELECT T3 . name FROM country AS T3 JOIN countrylanguage AS T4 ON T3 . code = T4 . countrycode WHERE T4 . isofficial = 'T' AND T4 . language = 'English' )", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Which cities are in European countries where English is not the official language?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Europe ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English ) , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "785", "plan": "SELECT DISTINCT T2 . name FROM country AS T1 JOIN city AS T2 ON T2 . countrycode = T1 . code WHERE T1 . continent = 'Europe' AND T1 . name NOT IN ( SELECT T3 . name FROM country AS T3 JOIN countrylanguage AS T4 ON T3 . code = T4 . countrycode WHERE T4 . isofficial = 'T' AND T4 . language = 'English' )", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What are the names of cities in Europe for which English is not the official language?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( Chinese ) , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "786", "plan": "SELECT DISTINCT T3 . name FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode JOIN city AS T3 ON T1 . code = T3 . countrycode WHERE T2 . isofficial = 't' AND T2 . language = 'chinese' AND T1 . continent = \"asia\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Which unique cities are in Asian countries where Chinese is the official language ?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( Chinese ) , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "787", "plan": "SELECT DISTINCT T3 . name FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode JOIN city AS T3 ON T1 . code = T3 . countrycode WHERE T2 . isofficial = 'T' AND T2 . language = 'Chinese' AND T1 . continent = \"Asia\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Return the different names of cities that are in Asia and for which Chinese is the official language."}
{"db_schema_with_val": " | world_1 | city : id , name ( Independence ) , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "788", "plan": "SELECT name , surfacearea , indepyear FROM country ORDER BY population LIMIT 1", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What are the name, independence year, and surface area of the country with the smallest population?"}
{"db_schema_with_val": " | world_1 | city : id , name ( Independence ) , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "789", "plan": "SELECT name , surfacearea , indepyear FROM country ORDER BY population LIMIT 1", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Give the name, year of independence, and surface area of the country that has the lowest population."}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "790", "plan": "SELECT name , population , headofstate FROM country ORDER BY surfacearea DESC LIMIT 1", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What are the population, name and leader of the country with the largest area?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "791", "plan": "SELECT name , population , headofstate FROM country ORDER BY surfacearea DESC LIMIT 1", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Give the name, population, and head of state for the country that has the largest area."}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "792", "plan": "SELECT count ( T2 . language ) , T1 . name FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode GROUP BY T1 . name HAVING count ( * ) > 2", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages."}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "793", "plan": "SELECT count ( T2 . language ) , T1 . name FROM country AS T1 JOIN countrylanguage AS T2 ON T1 . code = T2 . countrycode GROUP BY T1 . name HAVING count ( * ) > 2", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What are the names of countries that speak more than 2 languages, as well as how many languages they speak?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "794", "plan": "SELECT count ( * ) , district FROM city WHERE population > ( SELECT avg ( population ) FROM city ) GROUP BY district", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Find the number of cities in each district whose population is greater than the average population of cities?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "795", "plan": "SELECT count ( * ) , district FROM city WHERE population > ( SELECT avg ( population ) FROM city ) GROUP BY district", "schema_name": "world_1", "turn_part_index": 0, "utterance": "How many cities in each district have a population that is above the average population across all cities?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "796", "plan": "SELECT sum ( population ) , governmentform FROM country GROUP BY governmentform HAVING avg ( lifeexpectancy ) > 72", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Find the government form name and total population for each government form whose average life expectancy is longer than 72."}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "797", "plan": "SELECT sum ( population ) , governmentform FROM country GROUP BY governmentform HAVING avg ( lifeexpectancy ) > 72", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "798", "plan": "SELECT sum ( population ) , avg ( lifeexpectancy ) , continent FROM country GROUP BY continent HAVING avg ( lifeexpectancy ) < 72", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "799", "plan": "SELECT sum ( population ) , avg ( lifeexpectancy ) , continent FROM country GROUP BY continent HAVING avg ( lifeexpectancy ) < 72", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "800", "plan": "SELECT name , surfacearea FROM country ORDER BY surfacearea DESC LIMIT 5", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What are the names and areas of countries with the top 5 largest area?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "801", "plan": "SELECT name , surfacearea FROM country ORDER BY surfacearea DESC LIMIT 5", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Return the names and surface areas of the 5 largest countries."}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "802", "plan": "SELECT name FROM country ORDER BY population DESC LIMIT 3", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What are names of countries with the top 3 largest population?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "803", "plan": "SELECT name FROM country ORDER BY population DESC LIMIT 3", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Return the names of the 3 most populated countries."}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "804", "plan": "SELECT name FROM country ORDER BY population ASC LIMIT 3", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What are the names of the nations with the 3 lowest populations?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "805", "plan": "SELECT name FROM country ORDER BY population ASC LIMIT 3", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Return the names of the 3 countries with the fewest people."}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "806", "plan": "SELECT count ( * ) FROM country WHERE continent = \"Asia\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "how many countries are in Asia?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "807", "plan": "SELECT count ( * ) FROM country WHERE continent = \"Asia\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Count the number of countries in Asia."}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Europe ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "808", "plan": "SELECT name FROM country WHERE continent = \"Europe\" AND population = \"80000\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What are the names of the countries that are in the continent of Europe and have a population of 80000?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Europe ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "809", "plan": "SELECT name FROM country WHERE continent = \"Europe\" AND population = \"80000\"", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Give the names of countries that are in Europe and have a population equal to 80000."}
{"db_schema_with_val": " | world_1 | city : id , name ( Americana ) , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( North America ) , region ( North America ) , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "810", "plan": "SELECT sum ( population ) , avg ( surfacearea ) FROM country WHERE continent = \"north america\" AND surfacearea > 3000", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?"}
{"db_schema_with_val": " | world_1 | city : id , name ( Americana ) , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( North America ) , region ( North America ) , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "811", "plan": "SELECT sum ( population ) , avg ( surfacearea ) FROM country WHERE continent = \"north america\" AND surfacearea > 3000", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 ."}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "812", "plan": "SELECT name FROM city WHERE population BETWEEN 160000 AND 900000", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What are the cities whose population is between 160000 and 900000?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "813", "plan": "SELECT name FROM city WHERE population BETWEEN 160000 AND 900000", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Return the names of cities that have a population between 160000 and 900000 ."}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "814", "plan": "SELECT language FROM countrylanguage GROUP BY language ORDER BY count ( * ) DESC LIMIT 1", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Which language is spoken by the largest number of countries?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "815", "plan": "SELECT language FROM countrylanguage GROUP BY language ORDER BY count ( * ) DESC LIMIT 1", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Give the language that is spoken in the most countries."}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "816", "plan": "SELECT language , countrycode , max ( percentage ) FROM countrylanguage GROUP BY countrycode", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What is the language spoken by the largest percentage of people in each country?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "817", "plan": "SELECT language , countrycode , max ( percentage ) FROM countrylanguage GROUP BY countrycode", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( Spanish ) , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "818", "plan": "SELECT count ( * ) , max ( percentage ) FROM countrylanguage WHERE language = \"Spanish\" GROUP BY countrycode", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What is the total number of countries where Spanish is spoken by the largest percentage of people?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( Spanish ) , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "819", "plan": "SELECT count ( * ) , max ( percentage ) FROM countrylanguage WHERE language = \"Spanish\" GROUP BY countrycode", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Count the number of countries for which Spanish is the predominantly spoken language."}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( Spanish ) , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "820", "plan": "SELECT countrycode , max ( percentage ) FROM countrylanguage WHERE language = \"Spanish\" GROUP BY countrycode", "schema_name": "world_1", "turn_part_index": 0, "utterance": "What are the codes of countries where Spanish is spoken by the largest percentage of people?"}
{"db_schema_with_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( Spanish ) , isofficial , percentage", "db_schema_without_val": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage", "dialogue_id": "821", "plan": "SELECT countrycode , max ( percentage ) FROM countrylanguage WHERE language = \"Spanish\" GROUP BY countrycode", "schema_name": "world_1", "turn_part_index": 0, "utterance": "Return the codes of countries for which Spanish is the predominantly spoken language."}
{"db_schema_with_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "db_schema_without_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "dialogue_id": "822", "plan": "SELECT count ( * ) FROM conductor", "schema_name": "orchestra", "turn_part_index": 0, "utterance": "How many conductors are there?"}
{"db_schema_with_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "db_schema_without_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "dialogue_id": "823", "plan": "SELECT count ( * ) FROM conductor", "schema_name": "orchestra", "turn_part_index": 0, "utterance": "Count the number of conductors."}
{"db_schema_with_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "db_schema_without_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "dialogue_id": "824", "plan": "SELECT name FROM conductor ORDER BY age ASC", "schema_name": "orchestra", "turn_part_index": 0, "utterance": "List the names of conductors in ascending order of age."}
{"db_schema_with_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "db_schema_without_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "dialogue_id": "825", "plan": "SELECT name FROM conductor ORDER BY age ASC", "schema_name": "orchestra", "turn_part_index": 0, "utterance": "What are the names of conductors, ordered by age?"}
{"db_schema_with_val": " | orchestra | conductor : conductor_id , name , age , nationality ( USA ) , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "db_schema_without_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "dialogue_id": "826", "plan": "SELECT name FROM conductor WHERE nationality != 'USA'", "schema_name": "orchestra", "turn_part_index": 0, "utterance": "What are the names of conductors whose nationalities are not \"USA\"?"}
{"db_schema_with_val": " | orchestra | conductor : conductor_id , name , age , nationality ( USA ) , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "db_schema_without_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "dialogue_id": "827", "plan": "SELECT name FROM conductor WHERE nationality != 'USA'", "schema_name": "orchestra", "turn_part_index": 0, "utterance": "Return the names of conductors that do not have the nationality \"USA\"."}
{"db_schema_with_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "db_schema_without_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "dialogue_id": "828", "plan": "SELECT record_company FROM orchestra ORDER BY year_of_founded DESC", "schema_name": "orchestra", "turn_part_index": 0, "utterance": "What are the record companies of orchestras in descending order of years in which they were founded?"}
{"db_schema_with_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "db_schema_without_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "dialogue_id": "829", "plan": "SELECT record_company FROM orchestra ORDER BY year_of_founded DESC", "schema_name": "orchestra", "turn_part_index": 0, "utterance": "Return the record companies of orchestras, sorted descending by the years in which they were founded."}
{"db_schema_with_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "db_schema_without_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "dialogue_id": "830", "plan": "SELECT avg ( attendance ) FROM show", "schema_name": "orchestra", "turn_part_index": 0, "utterance": "What is the average attendance of shows?"}
{"db_schema_with_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "db_schema_without_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "dialogue_id": "831", "plan": "SELECT avg ( attendance ) FROM show", "schema_name": "orchestra", "turn_part_index": 0, "utterance": "Return the average attendance across all shows."}
{"db_schema_with_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type ( Live final ) , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "db_schema_without_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "dialogue_id": "832", "plan": "SELECT max ( share ) , min ( share ) FROM performance WHERE type != \"Live final\"", "schema_name": "orchestra", "turn_part_index": 0, "utterance": "What are the maximum and minimum share of performances whose type is not \"Live final\"."}
{"db_schema_with_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type ( Live final ) , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "db_schema_without_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "dialogue_id": "833", "plan": "SELECT max ( share ) , min ( share ) FROM performance WHERE type != \"Live final\"", "schema_name": "orchestra", "turn_part_index": 0, "utterance": "Return the maximum and minimum shares for performances that do not have the type \"Live final\"."}
{"db_schema_with_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "db_schema_without_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "dialogue_id": "834", "plan": "SELECT count ( DISTINCT nationality ) FROM conductor", "schema_name": "orchestra", "turn_part_index": 0, "utterance": "How many different nationalities do conductors have?"}
{"db_schema_with_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "db_schema_without_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "dialogue_id": "835", "plan": "SELECT count ( DISTINCT nationality ) FROM conductor", "schema_name": "orchestra", "turn_part_index": 0, "utterance": "Count the number of different nationalities of conductors."}
{"db_schema_with_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "db_schema_without_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "dialogue_id": "836", "plan": "SELECT name FROM conductor ORDER BY year_of_work DESC", "schema_name": "orchestra", "turn_part_index": 0, "utterance": "List names of conductors in descending order of years of work."}
{"db_schema_with_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "db_schema_without_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "dialogue_id": "837", "plan": "SELECT name FROM conductor ORDER BY year_of_work DESC", "schema_name": "orchestra", "turn_part_index": 0, "utterance": "What are the names of conductors, sorted descending by the number of years they have worked?"}
{"db_schema_with_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "db_schema_without_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "dialogue_id": "838", "plan": "SELECT name FROM conductor ORDER BY year_of_work DESC LIMIT 1", "schema_name": "orchestra", "turn_part_index": 0, "utterance": "List the name of the conductor with the most years of work."}
{"db_schema_with_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "db_schema_without_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "dialogue_id": "839", "plan": "SELECT name FROM conductor ORDER BY year_of_work DESC LIMIT 1", "schema_name": "orchestra", "turn_part_index": 0, "utterance": "What is the name of the conductor who has worked the greatest number of years?"}
{"db_schema_with_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "db_schema_without_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "dialogue_id": "840", "plan": "SELECT T1 . name , T2 . orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1 . conductor_id = T2 . conductor_id", "schema_name": "orchestra", "turn_part_index": 0, "utterance": "Show the names of conductors and the orchestras they have conducted."}
{"db_schema_with_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "db_schema_without_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "dialogue_id": "841", "plan": "SELECT T1 . name , T2 . orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1 . conductor_id = T2 . conductor_id", "schema_name": "orchestra", "turn_part_index": 0, "utterance": "What are the names of conductors as well as the corresonding orchestras that they have conducted?"}
{"db_schema_with_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "db_schema_without_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "dialogue_id": "842", "plan": "SELECT T1 . name FROM conductor AS T1 JOIN orchestra AS T2 ON T1 . conductor_id = T2 . conductor_id GROUP BY T2 . conductor_id HAVING count ( * ) > 1", "schema_name": "orchestra", "turn_part_index": 0, "utterance": "Show the names of conductors that have conducted more than one orchestras."}
{"db_schema_with_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "db_schema_without_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "dialogue_id": "843", "plan": "SELECT T1 . name FROM conductor AS T1 JOIN orchestra AS T2 ON T1 . conductor_id = T2 . conductor_id GROUP BY T2 . conductor_id HAVING count ( * ) > 1", "schema_name": "orchestra", "turn_part_index": 0, "utterance": "What are the names of conductors who have conducted at more than one orchestra?"}
{"db_schema_with_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "db_schema_without_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "dialogue_id": "844", "plan": "SELECT T1 . name FROM conductor AS T1 JOIN orchestra AS T2 ON T1 . conductor_id = T2 . conductor_id GROUP BY T2 . conductor_id ORDER BY count ( * ) DESC LIMIT 1", "schema_name": "orchestra", "turn_part_index": 0, "utterance": "Show the name of the conductor that has conducted the most number of orchestras."}
{"db_schema_with_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "db_schema_without_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "dialogue_id": "845", "plan": "SELECT T1 . name FROM conductor AS T1 JOIN orchestra AS T2 ON T1 . conductor_id = T2 . conductor_id GROUP BY T2 . conductor_id ORDER BY count ( * ) DESC LIMIT 1", "schema_name": "orchestra", "turn_part_index": 0, "utterance": "What is the name of the conductor who has conducted the most orchestras?"}
{"db_schema_with_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "db_schema_without_val": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance", "dialogue_id": "846", "plan": "SELECT T1 . name FROM conductor AS T1 JOIN orchestra AS T2 ON T1 . conductor_id = T2 . conductor_id WHERE year_of_founded > 2008", "schema_name": "orchestra", "turn_part_index": 0, "utterance": "Please show the name of the conductor that has conducted orchestras founded after 2008."}
