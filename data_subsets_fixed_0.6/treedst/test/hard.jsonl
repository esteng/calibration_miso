{"user_turn_0": "Do they have free Wi - Fi there ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "19", "datum_id": {"dialogue_id": "443e569e-d579-4780-a7c4-50fa08fbafb3", "turn_index": 4}}
{"user_turn_0": "Can you check for me if there is any event on Tuesday", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "I would like to book the flight to Dublin on that day", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))))))))", "idx": "33", "datum_id": {"dialogue_id": "697592c8-fcaa-11ea-a16c-acde48001122", "turn_index": 3}}
{"user_turn_0": "Does it have a private bathroom ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "53", "datum_id": {"dialogue_id": "c04498c3-a543-4fc1-a2e0-78fdef7cf00c", "turn_index": 2}}
{"user_turn_0": "Three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Edit my check in to Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.startDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Tuesday)))))", "idx": "57", "datum_id": {"dialogue_id": "c04498c3-a543-4fc1-a2e0-78fdef7cf00c", "turn_index": 6}}
{"user_turn_0": "Hi assistant , when is my event called Preach Your Pitch with William on your calendar ?", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals startDateTime equals time equals hour equals 10 minute equals 30", "user_turn_1": "Next task , set a reminder for it", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (^(CalendarEvent) always))))))", "idx": "65", "datum_id": {"dialogue_id": "b27b63c2-ce31-4ef5-a1c0-86c274d08f1d", "turn_index": 1}}
{"user_turn_0": "I 'm departing London", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM", "user_turn_1": "I 'd rather do the one at 4 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "68", "datum_id": {"dialogue_id": "b27b63c2-ce31-4ef5-a1c0-86c274d08f1d", "turn_index": 4}}
{"user_turn_0": "Is there a private bath room at the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Great , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "73", "datum_id": {"dialogue_id": "04a9ba14-c758-49f9-957c-bfc0d052c453", "turn_index": 4}}
{"user_turn_0": "I need two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does this booking support free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "77", "datum_id": {"dialogue_id": "04a9ba14-c758-49f9-957c-bfc0d052c453", "turn_index": 8}}
{"user_turn_0": "I 'm returning on Friday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 meridiem equals PM", "user_turn_1": "Yep , sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "90", "datum_id": {"dialogue_id": "e55b88e9-52d9-41d5-8cb2-46eab1bd20f0", "turn_index": 5}}
{"user_turn_0": "Absolutely !", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM price equals 173", "user_turn_1": "Well , I want to go with the flight that leaves at 3 PM if that 's OK", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "99", "datum_id": {"dialogue_id": "d54ff56d-1b6a-41b2-a986-8a90e1e4627a", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , make an event called salon from 11:30 - 1:30", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L)))))) (DateTimeRange.duration_? (AppleDuration.hour_? (?= 2))))) (CalendarEvent.eventName_? (?= \" salon \")))))", "idx": "120", "datum_id": {"dialogue_id": "6d1aa013-ff27-428d-b202-7c1f7bafe3ce", "turn_index": 0}}
{"user_turn_0": "What is the forecast in Cardiff ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cloudy", "user_turn_1": "How expensive is Flog in London Bridge", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.priceRange_? (^(PriceRange) always)) :object (& (Restaurant.restaurantName_? (?= \" Floq \")) (Restaurant.location_? (?= \" London Bridge \")))))", "idx": "124", "datum_id": {"dialogue_id": "6d1aa013-ff27-428d-b202-7c1f7bafe3ce", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , the latest train departs at 4:45 PM .", "tgt": "(plan (^(Train) Book :object (& (& (Train.source_? (Place.location_? (?= \" East Croydon \"))) (Train.destination_? (Place.location_? (?= \" Wimbledon \")))) (Train.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "130", "datum_id": {"dialogue_id": "ef6f9dc6-d95e-44f9-a506-e1b4d3864ef4", "turn_index": 0}}
{"user_turn_0": "Hey , the latest train departs at 4:45 PM .", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (^((Constraint Train)) refer)))))", "idx": "131", "datum_id": {"dialogue_id": "ef6f9dc6-d95e-44f9-a506-e1b4d3864ef4", "turn_index": 1}}
{"user_turn_0": "Yeah that 's great", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 meridiem equals PM", "user_turn_1": "Great , looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "137", "datum_id": {"dialogue_id": "375695fe-76d6-452f-ad0f-c5bf47baa6fb", "turn_index": 2}}
{"user_turn_0": "Saturday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM", "user_turn_1": "That s good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (^((Constraint Hour)) refer)) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "140", "datum_id": {"dialogue_id": "375695fe-76d6-452f-ad0f-c5bf47baa6fb", "turn_index": 5}}
{"user_turn_0": "Just one", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is breakfast included in the price ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "152", "datum_id": {"dialogue_id": "0443bc9a-d14d-4400-9002-34a65babe693", "turn_index": 5}}
{"user_turn_0": "Is breakfast included in the price ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Cool . Let 's do it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "153", "datum_id": {"dialogue_id": "0443bc9a-d14d-4400-9002-34a65babe693", "turn_index": 6}}
{"user_turn_0": "I would prefer a different hotel with a 3-star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals River Park price equals 156", "user_turn_1": "Does that hotel have laundry services ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.laundry_? (^(Boolean) always)))))", "idx": "163", "datum_id": {"dialogue_id": "6a7dd0e8-907f-46ed-bbed-e3022501c85c", "turn_index": 4}}
{"user_turn_0": "Does that hotel have laundry services ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Triton \"))))))", "idx": "164", "datum_id": {"dialogue_id": "6a7dd0e8-907f-46ed-bbed-e3022501c85c", "turn_index": 5}}
{"user_turn_0": "Get me a flight from London Heathrow to Belfast", "agent_turn_0": "Root system prompt flight book object equals departureDateTime", "user_turn_1": "Do I have any other event at 3 PM on that day ?", "tgt": "(plan (^(CalendarEvent) Find :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday)))) (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "173", "datum_id": {"dialogue_id": "697d971e-fcaa-11ea-9e7d-acde48001122", "turn_index": 1}}
{"user_turn_0": "Do I have any other event at 3 PM on that day ?", "agent_turn_0": "Root system inform calendarEvent find object equals eventName equals computer science study", "user_turn_1": "Book my flight after 3 PM on Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (List.exists_? (DateTime.time_? (?>= (someSalient (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM))))))))))))))", "idx": "174", "datum_id": {"dialogue_id": "697d971e-fcaa-11ea-9e7d-acde48001122", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , i 'm trying to remember what I have from 10:30 to 11:30 on my calendar .", "tgt": "(plan (^(CalendarEvent) Find :object (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))))) (DateTimeRange.endDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L))))))))))", "idx": "177", "datum_id": {"dialogue_id": "f0b02a67-1a4f-44d3-a427-1272b7666031", "turn_index": 0}}
{"user_turn_0": "Hey , schedule formula one and send it to Justin .", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange", "user_turn_1": "Set it at 11:30", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object \") (lambda (^(Constraint CalendarEvent) x0) (& x0 (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L)))))))))))", "idx": "188", "datum_id": {"dialogue_id": "f565ccdf-b4e6-4ef5-99ae-172c4ce1c659", "turn_index": 1}}
{"user_turn_0": "Ok cool , book it for Tuesday at 4 o'clock", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Ok , make an adjustment to the appointment date to be on Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.atDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Saturday)))))", "idx": "201", "datum_id": {"dialogue_id": "891baace-a7a8-4887-b11a-564357f7b78a", "turn_index": 4}}
{"user_turn_0": "Let me know how can I get from 66 Park Avenue to 54 Islington Park Road by walking", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "I want to know what is the weather in Bradford tomorrow going to be like", "tgt": "(plan (^(WeatherReport) Find :object (& (WeatherReport.location_? (?= \" Bradford \")) (WeatherReport.atdateTime_? (DateTime.date_? (?= (Tomorrow)))))))", "idx": "212", "datum_id": {"dialogue_id": "bc14c27b-6619-41ac-b5af-c0c90264617c", "turn_index": 3}}
{"user_turn_0": "Hello assistant , i need to book a flight ticket from Liverpool to Edinburgh that leaves on today", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM price equals 125", "user_turn_1": "I want the 2:20 PM and I would like to have business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.source_? (Place.location_? (?= \" Liverpool \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "216", "datum_id": {"dialogue_id": "3cfcd7b4-8439-4e7f-99b2-29c1c0634a09", "turn_index": 1}}
{"user_turn_0": "Leaving from Leeds", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM", "user_turn_1": "I want the one that leaves at 2 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (Train.departureDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "243", "datum_id": {"dialogue_id": "151ec49b-7c4e-4db1-8e58-a51da9efbbee", "turn_index": 7}}
{"user_turn_0": "I prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals La Zilla", "user_turn_1": "Does the restaurant have outdoor seats ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "251", "datum_id": {"dialogue_id": "7130e7a8-06d7-4797-8c6d-6a9d33c65a1a", "turn_index": 6}}
{"user_turn_0": "I prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Shining Gate", "user_turn_1": "Does the restaurant have parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "253", "datum_id": {"dialogue_id": "7130e7a8-06d7-4797-8c6d-6a9d33c65a1a", "turn_index": 8}}
{"user_turn_0": "Does the restaurant have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "That 's fine . Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Jute Joint \"))))))", "idx": "254", "datum_id": {"dialogue_id": "7130e7a8-06d7-4797-8c6d-6a9d33c65a1a", "turn_index": 9}}
{"user_turn_0": "Hi assistant , how many stars does The Shining Gate restaurant have ?", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 5", "user_turn_1": "Go ahead and book me a table there", "tgt": "(plan (^(Restaurant) Book :object (Restaurant.restaurantName_? (^((Constraint String)) refer))))", "idx": "273", "datum_id": {"dialogue_id": "f9143714-1987-426c-b12d-734d2a9fe9fe", "turn_index": 1}}
{"user_turn_0": "Book for 5 o'clock please", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Ok then change my booking to tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (?= (Tomorrow))))))))", "idx": "275", "datum_id": {"dialogue_id": "f9143714-1987-426c-b12d-734d2a9fe9fe", "turn_index": 3}}
{"user_turn_0": "Is there parking at the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Ok , can you book it for me ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "281", "datum_id": {"dialogue_id": "67487cad-edb1-4630-bd9d-569f4f04054f", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "I would like to create a calendar event at Monday", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))))))", "idx": "286", "datum_id": {"dialogue_id": "698471a8-fcaa-11ea-94f1-acde48001122", "turn_index": 0}}
{"user_turn_0": "Are there any event which has been schedule at 4 PM that day ?", "agent_turn_0": "Root system inform calendarEvent find object equals eventName equals hunting", "user_turn_1": "OK , schedule my new event at 7 PM same day", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.startDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 7L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "288", "datum_id": {"dialogue_id": "698471a8-fcaa-11ea-94f1-acde48001122", "turn_index": 2}}
{"user_turn_0": "No , I 'm departing from Edinburgh", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 35 meridiem equals PM", "user_turn_1": "That looks fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (^((Constraint Train)) refer)))))", "idx": "302", "datum_id": {"dialogue_id": "4659e393-9a9b-4690-a764-751d9c78cd26", "turn_index": 2}}
{"user_turn_0": "I 'm coming back Sunday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 meridiem equals PM", "user_turn_1": "Sounds good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "304", "datum_id": {"dialogue_id": "4659e393-9a9b-4690-a764-751d9c78cd26", "turn_index": 4}}
{"user_turn_0": "Hi assistant , how long is it to get to the event tomorrow ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 15", "user_turn_1": "Where is my event from 2 to 3 o'clock", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.location_? (^(String) always)) :object (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 2L))))) (DateTimeRange.endDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 3L)))))))))", "idx": "307", "datum_id": {"dialogue_id": "9f120cd4-364a-4e42-ad1b-ad95a138e975", "turn_index": 1}}
{"user_turn_0": "London Heathrow airport", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 12 minute equals 30 meridiem equals PM", "user_turn_1": "I 'd actually prefer the one leaving at 2:50 PM if I 'm honest", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "322", "datum_id": {"dialogue_id": "c60c3e14-0dc4-4384-9cbb-05d34640df2f", "turn_index": 4}}
{"user_turn_0": "It 's the 22nd", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 5 object equals nextDepartureDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM price equals 135", "user_turn_1": "This one looks pretty good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "325", "datum_id": {"dialogue_id": "c60c3e14-0dc4-4384-9cbb-05d34640df2f", "turn_index": 7}}
{"user_turn_0": "Is it a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Then that 's fine , I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "328", "datum_id": {"dialogue_id": "c60c3e14-0dc4-4384-9cbb-05d34640df2f", "turn_index": 10}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , i need a round trip ticket to Swansea leaving on tomorrow and returning on the 22nd", "tgt": "(plan (^(Train) Book :object (& (& (Train.destination_? (Place.location_? (?= \" Swansea \"))) (Train.departureDateTime_? (DateTime.date_? (?= (Tomorrow))))) (Train.returnDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 22L))))))))", "idx": "341", "datum_id": {"dialogue_id": "46f94984-8d33-44b2-9d32-0ce67c296dae", "turn_index": 0}}
{"user_turn_0": "Liverpool Lime Street", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "343", "datum_id": {"dialogue_id": "46f94984-8d33-44b2-9d32-0ce67c296dae", "turn_index": 2}}
{"user_turn_0": "Which airline is it ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "That 's ok . I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "348", "datum_id": {"dialogue_id": "fd60c490-5278-4401-a93e-e8ce83fb3fd8", "turn_index": 2}}
{"user_turn_0": "I favor another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Spago", "user_turn_1": "I need to know if the restaurant has parking", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "355", "datum_id": {"dialogue_id": "4569496a-ec56-4c81-8797-d896522fd436", "turn_index": 4}}
{"user_turn_0": "I need to know if the restaurant has parking", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "That 's good . Reserve it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Jute Box \"))))))", "idx": "356", "datum_id": {"dialogue_id": "4569496a-ec56-4c81-8797-d896522fd436", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Please help me create some event on Friday", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday))))))))", "idx": "364", "datum_id": {"dialogue_id": "6989c338-fcaa-11ea-8d2b-acde48001122", "turn_index": 0}}
{"user_turn_0": "Do I have any event at 5 PM on that day ?", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Please schedule it at 5 PM on Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.startDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 5L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "366", "datum_id": {"dialogue_id": "6989c338-fcaa-11ea-8d2b-acde48001122", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant I need you to please book a cab ride leaving 12 Hydean Way and heading to the 5:00 PM event scheduled .", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" 12 Hydean Way \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 5L))) (meridiem_? (?= (Meridiem.PM)))))))))))))", "idx": "378", "datum_id": {"dialogue_id": "62e3dc27-20a2-45e2-acab-e8580f3520c3", "turn_index": 0}}
{"user_turn_0": "I need to create an event about auditing session on Wednesday", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals startDateTime equals time", "user_turn_1": "Can you check for me if I have any other event 6 PM on Wednesday", "tgt": "(plan (^(CalendarEvent) Find :object (& (CalendarEvent.eventName_? (^((Constraint String)) refer)) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday)))) (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "384", "datum_id": {"dialogue_id": "698bed0c-fcaa-11ea-81ec-acde48001122", "turn_index": 1}}
{"user_turn_0": "Can you check for me if I have any other event 6 PM on Wednesday", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Please schedule it at 6 PM for me on that day", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.startDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "385", "datum_id": {"dialogue_id": "698bed0c-fcaa-11ea-81ec-acde48001122", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , i would like to book a hotel with a 3 star or better rating and a car park .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.rating_? (?>= (someSalient (?= 3)))) (Hotel.hasParking_? (?= true)))))", "idx": "397", "datum_id": {"dialogue_id": "e1c1d12b-c6d8-4095-acf5-27c694aad15b", "turn_index": 0}}
{"user_turn_0": "I would like to book at the Shangri - La hotel then", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does this booking offer free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "404", "datum_id": {"dialogue_id": "e1c1d12b-c6d8-4095-acf5-27c694aad15b", "turn_index": 7}}
{"user_turn_0": "On what airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "I prefer the 2:50 PM departure", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "414", "datum_id": {"dialogue_id": "7be558c2-e91f-4331-a8bd-12e34ba53303", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "I would like to create a calendar event at Wednesday", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))))))", "idx": "424", "datum_id": {"dialogue_id": "6992b506-fcaa-11ea-916b-acde48001122", "turn_index": 0}}
{"user_turn_0": "Are there any event which has been schedule at 3 PM on that day ?", "agent_turn_0": "Root system inform calendarEvent find object equals eventName equals hunting", "user_turn_1": "move hunting to Friday", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday)))))) :object (CalendarEvent.eventName_? (?= \" hunting \"))))", "idx": "426", "datum_id": {"dialogue_id": "6992b506-fcaa-11ea-916b-acde48001122", "turn_index": 2}}
{"user_turn_0": "move hunting to Friday", "agent_turn_0": "Root system inform calendarEvent update Completed", "user_turn_1": "Then schedule the new event at 3 PM Wednesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.startDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "427", "datum_id": {"dialogue_id": "6992b506-fcaa-11ea-916b-acde48001122", "turn_index": 3}}
{"user_turn_0": "I prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flavoroso", "user_turn_1": "Does the restaurant have parking ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "459", "datum_id": {"dialogue_id": "1ebaf550-e2cf-483a-9d8c-971a65cd359d", "turn_index": 5}}
{"user_turn_0": "Does the restaurant have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Book it then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Empirica \"))))))", "idx": "460", "datum_id": {"dialogue_id": "1ebaf550-e2cf-483a-9d8c-971a65cd359d", "turn_index": 6}}
{"user_turn_0": "Book it then", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Ok , well change the appointment time to 4 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hour)) Path.apply \" object.atDateTime.time.hour \") (lambda (^(Constraint Hour) x0) (?= (Hour.apply 4L)))))", "idx": "461", "datum_id": {"dialogue_id": "1ebaf550-e2cf-483a-9d8c-971a65cd359d", "turn_index": 7}}
{"user_turn_0": "Do they have a workout room ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "472", "datum_id": {"dialogue_id": "6081d071-1de6-4e0e-a424-103c45a4e635", "turn_index": 3}}
{"user_turn_0": "I need three rooms , but I do n't care what kind", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "No , I actually want to check out on Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Sunday)))))", "idx": "474", "datum_id": {"dialogue_id": "6081d071-1de6-4e0e-a424-103c45a4e635", "turn_index": 5}}
{"user_turn_0": "No , I actually want to check out on Sunday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I need prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "475", "datum_id": {"dialogue_id": "6081d071-1de6-4e0e-a424-103c45a4e635", "turn_index": 6}}
{"user_turn_0": "How 's the weather today ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Sunny", "user_turn_1": "Display my train leaving before 6:30 PM", "tgt": "(plan (^(Train) Find :object (Train.departureDateTime_? (DateTime.time_? (?<= (someSalient (& (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "481", "datum_id": {"dialogue_id": "c2dafc44-a32f-451a-a31c-9f8d86f9f4ae", "turn_index": 4}}
{"user_turn_0": "Which airline is this ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals EasyJet", "user_turn_1": "I want to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "484", "datum_id": {"dialogue_id": "861a8083-a5ef-4ff5-8c3d-d78ec56c4c63", "turn_index": 2}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system inform flight book Completed", "user_turn_1": "I would like to book a flight to Edinburgh which will depart at Monday before 5:30 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (Flight.destination_? (Place.location_? (?= \" Edinburgh \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (List.exists_? (DateTime.time_? (?<= (someSalient (& (Time.hour_? (?= (Hour.apply 5L))) (Time.minute_? (?= (Minute.apply 30L))))))))))))))", "idx": "486", "datum_id": {"dialogue_id": "861a8083-a5ef-4ff5-8c3d-d78ec56c4c63", "turn_index": 4}}
{"user_turn_0": "Is this direct ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "490", "datum_id": {"dialogue_id": "8a77a193-31ba-4212-8f54-9d0323f7b710", "turn_index": 3}}
{"user_turn_0": "OK assistant , let me book a restaurant that has car parking please .", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName location", "user_turn_1": "It should be in Greenford and has at least one star rating or above", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.location_? (?= \" Greenford \"))) (Restaurant.rating_? (?!= (someSalient (?= 0))))))))", "idx": "493", "datum_id": {"dialogue_id": "7c4a52c7-c82f-4d39-81b7-d9c3f00f2d4c", "turn_index": 1}}
{"user_turn_0": "I assume that it has parking at least ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "That 's OK with me , please go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "495", "datum_id": {"dialogue_id": "7c4a52c7-c82f-4d39-81b7-d9c3f00f2d4c", "turn_index": 3}}
{"user_turn_0": "Is it a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "I actually prefer the flight at 4:45 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "504", "datum_id": {"dialogue_id": "be854216-34c2-4c2e-a904-db38b9398c7d", "turn_index": 4}}
{"user_turn_0": "Yes on Saturday please", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM price equals 127", "user_turn_1": "OK . This one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "506", "datum_id": {"dialogue_id": "be854216-34c2-4c2e-a904-db38b9398c7d", "turn_index": 6}}
{"user_turn_0": "I 'll be coming back on the 21st", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 meridiem equals PM", "user_turn_1": "Yeah , that looks good too . Let 's go with that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (^((Constraint Time)) refer))))))", "idx": "522", "datum_id": {"dialogue_id": "3ab247c0-3821-4ef2-aa00-2c72689dfef2", "turn_index": 3}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM price equals 142", "user_turn_1": "That 's fine with me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "539", "datum_id": {"dialogue_id": "622cd41b-6a03-4501-8a4c-dfc0bc05ac64", "turn_index": 5}}
{"user_turn_0": "How is the weather in Leeds ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Rainy", "user_turn_1": "How long to get to 29 Highgate Lane by walking ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (& (Navigation.destination_? (Place.location_? (?= \" 29 Highgate Lane \"))) (Navigation.transportationMode_? (?= (TransportationMode.Walking))))))", "idx": "550", "datum_id": {"dialogue_id": "ced1ebea-79d3-4a24-b8c9-b6d987ff4de1", "turn_index": 4}}
{"user_turn_0": "Do I have any missed calls from my parents", "agent_turn_0": "Root system inform phoneCall checkExistence Existed", "user_turn_1": "Text him / her", "tgt": "(plan (^(Message) Create :object (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Parents)))))))", "idx": "554", "datum_id": {"dialogue_id": "cf10b974-69a8-48f3-a3f6-dc9e762ab04f", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , book a room at my next event . Pick one with 3 stars .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))) (Hotel.rating_? (?= 3)))))", "idx": "557", "datum_id": {"dialogue_id": "4fd8b3dc-570a-4fc2-ae76-5c17281c6fbb", "turn_index": 0}}
{"user_turn_0": "Does that one have laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "560", "datum_id": {"dialogue_id": "4fd8b3dc-570a-4fc2-ae76-5c17281c6fbb", "turn_index": 3}}
{"user_turn_0": "Get me 3 single rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel for free ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "564", "datum_id": {"dialogue_id": "4fd8b3dc-570a-4fc2-ae76-5c17281c6fbb", "turn_index": 7}}
{"user_turn_0": "I do n't care as long as it has five star rating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Box", "user_turn_1": "On average , how much will it cost per person ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "569", "datum_id": {"dialogue_id": "e9b63dca-fcf9-48ae-80b1-c3d00708cc81", "turn_index": 3}}
{"user_turn_0": "None of those look good . Can you give me more options ? I do n't care about food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kiwi Sea", "user_turn_1": "Does the restaurant have outdoor seating ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "573", "datum_id": {"dialogue_id": "e9b63dca-fcf9-48ae-80b1-c3d00708cc81", "turn_index": 7}}
{"user_turn_0": "Does the restaurant have outdoor seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "That \u2019s good , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Jute Box \"))))))", "idx": "574", "datum_id": {"dialogue_id": "e9b63dca-fcf9-48ae-80b1-c3d00708cc81", "turn_index": 8}}
{"user_turn_0": "Room type does n't really matter , I just need two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Could you change the check out date to Friday instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Friday)))))", "idx": "585", "datum_id": {"dialogue_id": "0bc9df61-ada0-48d0-bfe3-a0bd5937d36c", "turn_index": 7}}
{"user_turn_0": "Hmm , can you tell me the address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 24 Empire Way", "user_turn_1": "Okay , I 'll take it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Shining Gate \"))))))", "idx": "590", "datum_id": {"dialogue_id": "d53832a8-a0f9-446c-b621-dae1c598b74d", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , let me book a room at a cheap hotel with a car park .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?= (PriceRange.Low))) (Hotel.hasParking_? (?= true)))))", "idx": "599", "datum_id": {"dialogue_id": "098a0438-7d51-4355-9a04-0dd6e1b4287d", "turn_index": 0}}
{"user_turn_0": "Coming back on Saturday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM", "user_turn_1": "That one works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "610", "datum_id": {"dialogue_id": "d537a15b-c290-4412-84b3-fcd2e537377f", "turn_index": 4}}
{"user_turn_0": "Do they have laundry facilities ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "615", "datum_id": {"dialogue_id": "6ac4eb39-04e3-4f5c-8dae-91a4b07a9427", "turn_index": 3}}
{"user_turn_0": "3 rooms please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they require a prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "618", "datum_id": {"dialogue_id": "6ac4eb39-04e3-4f5c-8dae-91a4b07a9427", "turn_index": 6}}
{"user_turn_0": "On the 26th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM price equals 124", "user_turn_1": "Sounds good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "630", "datum_id": {"dialogue_id": "7a3ecd0c-e446-4e82-a76b-bf019f7a56c3", "turn_index": 5}}
{"user_turn_0": "Please make it 4 AM", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Thanks for the help . Yes , could you also send it to my sister in a message ?", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Sister))))))))", "idx": "639", "datum_id": {"dialogue_id": "59a40bfa-9155-411f-9f01-4e5cbe79a48a", "turn_index": 2}}
{"user_turn_0": "I 'm leaving today for Belfast", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM price equals 173", "user_turn_1": "That 's good , get three tickets", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.source_? (Place.location_? (?= \" London Heathrow \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 4))))))", "idx": "644", "datum_id": {"dialogue_id": "7e95bbdc-ef94-444b-be53-e09f5acba94f", "turn_index": 2}}
{"user_turn_0": "No from Birmingham", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 2 meridiem equals PM price equals 134", "user_turn_1": "I want the 4:20 PM flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "673", "datum_id": {"dialogue_id": "2967e906-08fc-4470-bf1b-4022a5657fcb", "turn_index": 2}}
{"user_turn_0": "No , I want to go to Roma on Thursday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 5 object equals nextDepartureDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM price equals 138", "user_turn_1": "That will work", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "675", "datum_id": {"dialogue_id": "2967e906-08fc-4470-bf1b-4022a5657fcb", "turn_index": 4}}
{"user_turn_0": "Hey , i need a hotel with a moderate price for two nights", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "It needs to have a three star rating and be located in Somerstown", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.location_? (?= \" Somerstown \"))) (Hotel.rating_? (?= 3))))))", "idx": "680", "datum_id": {"dialogue_id": "2a6277c9-3e79-417d-b82a-b1fcd754d56d", "turn_index": 1}}
{"user_turn_0": "Does it have private bathrooms ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Go ahead and book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "682", "datum_id": {"dialogue_id": "2a6277c9-3e79-417d-b82a-b1fcd754d56d", "turn_index": 3}}
{"user_turn_0": "I would like two single rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to pay ahead of time ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "685", "datum_id": {"dialogue_id": "2a6277c9-3e79-417d-b82a-b1fcd754d56d", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , yo buddy , I need a hook up on a hotel with at least a three star rating and a single room", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.rating_? (?>= (someSalient (?= 3)))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Single)))))))", "idx": "687", "datum_id": {"dialogue_id": "a7b08014-6399-4fd1-a752-ff2f4181ad86", "turn_index": 0}}
{"user_turn_0": "Do you know if the hotel spot has free wifi", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Okay please book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "691", "datum_id": {"dialogue_id": "a7b08014-6399-4fd1-a752-ff2f4181ad86", "turn_index": 4}}
{"user_turn_0": "Can you make sure it has 2 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait , I need you to change the check out date to the 21st instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 21L))))))", "idx": "694", "datum_id": {"dialogue_id": "a7b08014-6399-4fd1-a752-ff2f4181ad86", "turn_index": 7}}
{"user_turn_0": "Wait , I need you to change the check out date to the 21st instead", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait , do you know if can cancel for free ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "695", "datum_id": {"dialogue_id": "a7b08014-6399-4fd1-a752-ff2f4181ad86", "turn_index": 8}}
{"user_turn_0": "Does the restaurant have outdoor seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Chipotle Grill \"))))))", "idx": "704", "datum_id": {"dialogue_id": "ba378ad5-449c-4d90-ac54-db7be41a4f00", "turn_index": 7}}
{"user_turn_0": "basketball fun at 9 AM", "agent_turn_0": "Root system prompt calendarEvent update focus equals dateTimeRange equals startDateTime equals time", "user_turn_1": "The new time is just one hour later , 10 AM", "tgt": "(plan (revise (^(Unit) Path.apply \" Update \") (^((Constraint Time)) Path.apply \" focus.dateTimeRange.startDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 10L))) (meridiem_? (?= (Meridiem.AM)))))))", "idx": "710", "datum_id": {"dialogue_id": "19fa9379-4252-4223-9621-dcbd2d14665c", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , i want to make reservation for round trip flight going from Leads to Glasgow . Finally some vacation time .", "tgt": "(plan (^(Flight) Book :object (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" Leeds \")))) (Flight.destination_? (Place.location_? (?= \" Glasgow \"))))))", "idx": "718", "datum_id": {"dialogue_id": "4a3359b2-b22b-4a2b-92bd-53245bb536e5", "turn_index": 0}}
{"user_turn_0": "Is it a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Great , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "721", "datum_id": {"dialogue_id": "4a3359b2-b22b-4a2b-92bd-53245bb536e5", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , pleas ebook me a flight from Leeds to Glasgo", "tgt": "(plan (^(Flight) Book :object (& (Flight.source_? (Place.location_? (?= \" Leeds \"))) (Flight.destination_? (Place.location_? (?= \" Glasgow \"))))))", "idx": "725", "datum_id": {"dialogue_id": "026e617c-62ba-4e5f-94ba-153524377088", "turn_index": 0}}
{"user_turn_0": "I am interested in a different hotel with a minimum of a one star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Moody Moon price equals 125", "user_turn_1": "Is breakfast included in that price ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "734", "datum_id": {"dialogue_id": "430b0015-8eca-488a-987c-309a8d777dff", "turn_index": 4}}
{"user_turn_0": "Is breakfast included in that price ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "That 's fine , please book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Club Quarters \"))))))", "idx": "735", "datum_id": {"dialogue_id": "430b0015-8eca-488a-987c-309a8d777dff", "turn_index": 5}}
{"user_turn_0": "The time to 1 PM", "agent_turn_0": "Root system inform reminder update Completed", "user_turn_1": "I need a reminder to do exercise at 7:30 o'clock", "tgt": "(plan (^(Reminder) Create :object (& (Reminder.reminderContent_? (?= \" do exercise \")) (Reminder.atDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 7L))) (Time.minute_? (?= (Minute.apply 30L)))))))))", "idx": "751", "datum_id": {"dialogue_id": "80b0262d-c2c2-4acd-9046-044224838ca9", "turn_index": 2}}
{"user_turn_0": "What about The Fresco hotel instead", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "757", "datum_id": {"dialogue_id": "b3412371-497a-40c8-987f-21f2f990e76e", "turn_index": 3}}
{"user_turn_0": "I would prefer an executive", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals 14 Dagmar Passage", "user_turn_1": "Change my destination to be The Body Shop in Upper Street", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Place)) Path.apply \" object.destination \") (lambda (^(Constraint Place) x0) (Place.location_? (?= \" The Body Shop in Upper Street \")))))", "idx": "761", "datum_id": {"dialogue_id": "23d224f0-725f-41a2-b7f6-96c449365a80", "turn_index": 2}}
{"user_turn_0": "Hi there , open my calendar events .", "agent_turn_0": "Root system inform calendarEvent find", "user_turn_1": "What time does my flight to Belfast arrive ?", "tgt": "(plan (^(Flight) Find :focus (Flight.arrivalDateTime_? (^(DateTime) always)) :object (& (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (?= (Today))))) (Flight.destination_? (Place.location_? (?= \" Belfast \"))))))", "idx": "765", "datum_id": {"dialogue_id": "96ebfe96-7490-47c8-ad74-3d7be9441400", "turn_index": 1}}
{"user_turn_0": "On Wednesday . I need enough tickets for two passengers please", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "What about Monday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.departureDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Monday)))))", "idx": "771", "datum_id": {"dialogue_id": "19a443bb-31b3-4a3c-ac3c-1e7405ad8730", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , please send the event on January the 7th to Sonia", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (& (Date.day_? (?= (Day.apply 7L))) (Date.month_? (?= (January)))))))))) (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Sonia \")))))))", "idx": "779", "datum_id": {"dialogue_id": "2dc80443-8ca5-40e6-bf72-2fe97ac015a1", "turn_index": 0}}
{"user_turn_0": "I need to know when does my next calendar event start", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals startDateTime equals time equals hour equals 11 minute equals 30", "user_turn_1": "Thanks , next create a reminder for me at that time", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (^((Constraint DateTime)) refer))))", "idx": "783", "datum_id": {"dialogue_id": "2dc80443-8ca5-40e6-bf72-2fe97ac015a1", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i 'd like to book a round trip flight from Brighton station to Chelmsford for sometime after 8:30 .", "tgt": "(plan (^(Train) Book :object (& (& (& (Train.source_? (Place.location_? (?= \" Brighton station \"))) (Train.destination_? (Place.location_? (?= \" Chelmsford \")))) (Train.departureDateTime_? (DateTime.time_? (?>= (someSalient (& (Time.hour_? (?= (Hour.apply 8L))) (Time.minute_? (?= (Minute.apply 30L))))))))) (Train.tripType_? (?= (TripType.roundTrip))))))", "idx": "790", "datum_id": {"dialogue_id": "5404dcca-95a0-4baa-98cc-871947bca6c7", "turn_index": 0}}
{"user_turn_0": "Friday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM", "user_turn_1": "That sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "793", "datum_id": {"dialogue_id": "5404dcca-95a0-4baa-98cc-871947bca6c7", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , send a message for me .", "tgt": "(plan (^(Message) Create))", "idx": "795", "datum_id": {"dialogue_id": "6933f05a-0f81-4a8d-9d88-08c7109af60d", "turn_index": 0}}
{"user_turn_0": "I favor a different restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capricorn", "user_turn_1": "I need to know what type of food it serves", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.foodType_? (^(FoodType) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "808", "datum_id": {"dialogue_id": "94b278a5-6977-4768-8d5f-1a7c64d7259b", "turn_index": 3}}
{"user_turn_0": "I need to know what type of food it serves", "agent_turn_0": "Root system inform restaurant find focus equals foodType equals Grill", "user_turn_1": "Can you reserve it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Goat and Guru \"))))))", "idx": "809", "datum_id": {"dialogue_id": "94b278a5-6977-4768-8d5f-1a7c64d7259b", "turn_index": 4}}
{"user_turn_0": "Is there parking", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Find me a three start hotel instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.rating_? (?= 3))))))", "idx": "816", "datum_id": {"dialogue_id": "464b223b-cbe5-4874-87df-868e5e9d98b6", "turn_index": 3}}
{"user_turn_0": "Find me a three start hotel instead", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Embassy Suites price equals 135", "user_turn_1": "Book that", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Harborview \"))))))", "idx": "817", "datum_id": {"dialogue_id": "464b223b-cbe5-4874-87df-868e5e9d98b6", "turn_index": 4}}
{"user_turn_0": "Room type does n't matter but I do need two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "821", "datum_id": {"dialogue_id": "464b223b-cbe5-4874-87df-868e5e9d98b6", "turn_index": 8}}
{"user_turn_0": "Is there prepayment ?", "agent_turn_0": "Root system inform hotel find focus equals prePayment equals True", "user_turn_1": "Change the check in day to the 13th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Day)) Path.apply \" object.dateTimeRange.startDateTime.date.day \") (lambda (^(Constraint Day) x0) (?= (Day.apply 13L)))))", "idx": "822", "datum_id": {"dialogue_id": "464b223b-cbe5-4874-87df-868e5e9d98b6", "turn_index": 9}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , 397 Tallwood Court .", "tgt": "(plan (^(Taxi) Book :object (Taxi.destination_? (?= (^(Place CalendarEvent) reference (& (CalendarEvent.eventName_? (?= \" Bora Bora Boar Hunt \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))))))))))", "idx": "825", "datum_id": {"dialogue_id": "23d81c5a-f028-44b7-ad8c-694494590c1a", "turn_index": 0}}
{"user_turn_0": "Hello assistant , 397 Tallwood Court .", "agent_turn_0": "Root system prompt taxi book object equals destination inform calendarEvent find notExisted", "user_turn_1": "Book a taxi that will take me to today 's Bora Bora Boar Hunt on the calendar", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Place)) Path.apply \" object.destination \") (lambda (^(Constraint Place) x0) (Place.location_? (?= \" 397 Tallwood Court \")))))", "idx": "826", "datum_id": {"dialogue_id": "23d81c5a-f028-44b7-ad8c-694494590c1a", "turn_index": 1}}
{"user_turn_0": "Tuesday . I need it for two passengers", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "How about Tuesday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "843", "datum_id": {"dialogue_id": "d32ca02c-036d-4549-b105-d132f799f9dd", "turn_index": 3}}
{"user_turn_0": "Show me the reminder for 4:30 PM today", "agent_turn_0": "Root system inform reminder find", "user_turn_1": "Set a reminder for 6 PM", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (meridiem_? (?= (Meridiem.PM))))))))", "idx": "875", "datum_id": {"dialogue_id": "b3d0c745-7bdb-41e0-bbcc-12e5281946dc", "turn_index": 4}}
{"user_turn_0": "I will check in on Wednesday", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange equals endDateTime", "user_turn_1": "Next day", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.endDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday)))))))))", "idx": "900", "datum_id": {"dialogue_id": "25dee5b1-ebc9-4fd1-b4be-7efa7766dae5", "turn_index": 4}}
{"user_turn_0": "Also can you make a reminder for my afternoon event", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Also book me a hotel that has at least", "tgt": "(plan (^(Hotel) Book :object (Hotel.rating_? (?>= (someSalient (?= 2))))))", "idx": "922", "datum_id": {"dialogue_id": "eda04492-7da5-40be-bdc0-fa312cc9c518", "turn_index": 2}}
{"user_turn_0": "Hello assistant , please find me a flight leaving today from London Heathrow and flying to Brussels", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "How about today , then ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "926", "datum_id": {"dialogue_id": "b630c9a3-c0b9-4494-ad21-072c7e78d444", "turn_index": 1}}
{"user_turn_0": "Is that a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Okay , I 'll take it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "928", "datum_id": {"dialogue_id": "b630c9a3-c0b9-4494-ad21-072c7e78d444", "turn_index": 3}}
{"user_turn_0": "I 'll come back Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM price equals 178", "user_turn_1": "That sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "931", "datum_id": {"dialogue_id": "b630c9a3-c0b9-4494-ad21-072c7e78d444", "turn_index": 6}}
{"user_turn_0": "How is the weather there ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cloudy", "user_turn_1": "Do me another favor . I want to book a hotel with a queen sized bed", "tgt": "(plan (^(Hotel) Book :object (Hotel.roomType_? (List.exists_? (?= (RoomType.Queen))))))", "idx": "937", "datum_id": {"dialogue_id": "b97bc45b-7f78-4ebd-8f82-f0a86bee178b", "turn_index": 4}}
{"user_turn_0": "The 19th", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 3 object equals nextDepartureDateTime equals time equals hour equals 3 meridiem equals PM price equals 155", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "954", "datum_id": {"dialogue_id": "f5921fb3-cc7a-4b12-894d-2919d7f8b46d", "turn_index": 6}}
{"user_turn_0": "The destination will be the London Euston station", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM", "user_turn_1": "I would like to depart on the 4:50 PM train", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "961", "datum_id": {"dialogue_id": "99933ec6-c804-47ef-92d4-80ac1158f892", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , I need to send my brother the event that 's at 11:00 in the morning .", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (meridiem_? (?= (Meridiem.AM)))))))))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Brother))))))))", "idx": "976", "datum_id": {"dialogue_id": "2a570d82-4255-4509-91da-be7fe5fc4075", "turn_index": 0}}
{"user_turn_0": "Call him for me , please", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Do me another favor . I 'd like to book a cheap hotel from today until tomorrow in Bloomsbury", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" Bloomsbury \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (?= (Tomorrow))))))) (Hotel.priceRange_? (?= (PriceRange.Low))))))", "idx": "988", "datum_id": {"dialogue_id": "271469da-8d3e-42f4-8e0f-dcdff3261d74", "turn_index": 2}}
{"user_turn_0": "I 'm leaving from Leeds", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM price equals 130", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "1007", "datum_id": {"dialogue_id": "71d0b890-2776-4551-a395-e2d89a462d88", "turn_index": 4}}
{"user_turn_0": "Do they have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Make the booking there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "1011", "datum_id": {"dialogue_id": "71836238-dec4-4561-ae6b-1b069cd49759", "turn_index": 3}}
{"user_turn_0": "Just two", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you cancel the reservation for free ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "1013", "datum_id": {"dialogue_id": "71836238-dec4-4561-ae6b-1b069cd49759", "turn_index": 5}}
{"user_turn_0": "Let 's do Thursday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM", "user_turn_1": "That 'll do", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "1030", "datum_id": {"dialogue_id": "f84e2387-093f-47ad-8bc9-4608243ffdc4", "turn_index": 10}}
{"user_turn_0": "Show me direction to the calendar event tomorrow", "agent_turn_0": "Root system inform navigation find object equals destination equals location equals 100 Upper Street", "user_turn_1": "Thanks , next get me taxi there", "tgt": "(plan (^(Taxi) Book :object (Taxi.destination_? (Place.location_? (?= \" Maze \")))))", "idx": "1043", "datum_id": {"dialogue_id": "7d2ba597-bd93-4e32-9d13-3be3cb5016be", "turn_index": 4}}
{"user_turn_0": "Let me know if the hotel has a private bathroom", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Make the booking for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "1058", "datum_id": {"dialogue_id": "b2d4363f-56f9-4699-8d88-41538f286353", "turn_index": 3}}
{"user_turn_0": "I would like two queen sized beds", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "OK . Is prepayment required ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "1061", "datum_id": {"dialogue_id": "b2d4363f-56f9-4699-8d88-41538f286353", "turn_index": 6}}
{"user_turn_0": "Hello , can you book a hotel with a fitness center ?", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "It should be cheap and in Notting Hill", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.location_? (?= \" Notting Hill \"))) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))))))", "idx": "1064", "datum_id": {"dialogue_id": "439711e6-ee5b-485e-9e4b-a288f194b3a8", "turn_index": 1}}
{"user_turn_0": "I want two rooms . It does n't matter the room type", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking allow free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "1068", "datum_id": {"dialogue_id": "439711e6-ee5b-485e-9e4b-a288f194b3a8", "turn_index": 5}}
{"user_turn_0": "About how long will the trip take ?", "agent_turn_0": "Root system inform flight find focus equals duration equals hour equals 1 minute equals 15", "user_turn_1": "That 's perfect . Please book it for four", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.source_? (Place.location_? (?= \" Manchester \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 4))))))", "idx": "1073", "datum_id": {"dialogue_id": "e329c948-04f2-403a-a242-ce70999e6556", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , hey can you put book The Bull Islington with an executive car .", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.serviceType_? (List.exists_? (?= (ServiceType.Executive)))) (Taxi.destination_? (Place.location_? (?= \" The Bull Islington \"))))))", "idx": "1075", "datum_id": {"dialogue_id": "17108b18-0159-4b9b-a4e5-f49eb32c8a08", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , book a cheap restaurant for me tomorrow .", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.priceRange_? (?= (PriceRange.Low))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow))))))))", "idx": "1093", "datum_id": {"dialogue_id": "f9533ce0-aa8b-4727-b232-8814c5ea4e09", "turn_index": 0}}
{"user_turn_0": "What kind of food do they have ?", "agent_turn_0": "Root system inform restaurant find focus equals foodType equals Korean food", "user_turn_1": "Cool , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "1096", "datum_id": {"dialogue_id": "f9533ce0-aa8b-4727-b232-8814c5ea4e09", "turn_index": 3}}
{"user_turn_0": "How about at 11:30 o'clock ?", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "That s fine , update the appointment to April 12th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (& (Date.month_? (?= (April))) (Date.day_? (?= (Day.apply 12L))))))))))", "idx": "1104", "datum_id": {"dialogue_id": "017448aa-e298-47ef-80ea-109dd7ccdfb0", "turn_index": 4}}
{"user_turn_0": "On Friday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 4 meridiem equals PM", "user_turn_1": "Sounds brilliant", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "1121", "datum_id": {"dialogue_id": "ff1b5773-e019-4591-98c9-7fb8a32a690d", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , book me a cheaper hotel with a queen sized bed from today to tomorrow .", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.priceRange_? (?= (PriceRange.Low))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (?= (Tomorrow))))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Queen)))))))", "idx": "1123", "datum_id": {"dialogue_id": "08e35313-0e6d-4980-98f3-dc63b89c92d6", "turn_index": 0}}
{"user_turn_0": "I 'd rather stay somewhere with 3 stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Club Quarters price equals 142", "user_turn_1": "Does it have free wifi ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasWifi_? (^(Boolean) always)))))", "idx": "1127", "datum_id": {"dialogue_id": "08e35313-0e6d-4980-98f3-dc63b89c92d6", "turn_index": 4}}
{"user_turn_0": "Does it have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Sheraton \"))))))", "idx": "1128", "datum_id": {"dialogue_id": "08e35313-0e6d-4980-98f3-dc63b89c92d6", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , is there a car type that you prefer ? Your choices include Saloon , MPV and Executive .", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" 97 Church Road \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.eventName_? (?= \" student quiz \"))))))))", "idx": "1137", "datum_id": {"dialogue_id": "646406b4-4d86-4404-af00-e4a6e77bdf19", "turn_index": 0}}
{"user_turn_0": "I want another hotel with not a high price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Dream Connect price equals 166", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Bourbon Bliss \"))))))", "idx": "1146", "datum_id": {"dialogue_id": "16e439f8-f10f-4abb-9c94-bd84280190b7", "turn_index": 4}}
{"user_turn_0": "Two", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does it support free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "1149", "datum_id": {"dialogue_id": "16e439f8-f10f-4abb-9c94-bd84280190b7", "turn_index": 7}}
{"user_turn_0": "Out of these restaurants I wonder which one serves Chinese hotpot", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Emptia", "user_turn_1": "Do you know if they have outdoor seating", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "1160", "datum_id": {"dialogue_id": "ec9823cc-8986-445c-82eb-02b6f1977f18", "turn_index": 4}}
{"user_turn_0": "None of these look good . Can you show me more options ? Food type does n't matter", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jurassic Pork", "user_turn_1": "Does this restaurant have outdoor seats", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "1174", "datum_id": {"dialogue_id": "e2ac42d1-50e3-4aa6-a560-2170b2dbf984", "turn_index": 3}}
{"user_turn_0": "Does this restaurant have outdoor seats", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "This is fine , book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Jute Joint \"))))))", "idx": "1175", "datum_id": {"dialogue_id": "e2ac42d1-50e3-4aa6-a560-2170b2dbf984", "turn_index": 4}}
{"user_turn_0": "Do I have missed called from my son", "agent_turn_0": "Root system inform phoneCall checkExistence Existed", "user_turn_1": "Call him", "tgt": "(plan (^(PhoneCall) Create :object (PhoneCall.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Son)))))))", "idx": "1183", "datum_id": {"dialogue_id": "5500f15b-fb6e-483d-9ba7-c008c3e6b7f5", "turn_index": 4}}
{"user_turn_0": "I 'm leaving Wednesday . I will also be needing the ticket in economy class", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "What about today ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Today)))))", "idx": "1199", "datum_id": {"dialogue_id": "399ef15f-7edc-462c-858f-96322f9f302f", "turn_index": 3}}
{"user_turn_0": "What about today ?", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals listElementOne time equals hour equals 1 minute equals 50 meridiem equals PM listElementTwo time equals hour equals 3 minute equals 40 meridiem equals PM", "user_turn_1": "I like the first one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "1200", "datum_id": {"dialogue_id": "399ef15f-7edc-462c-858f-96322f9f302f", "turn_index": 4}}
{"user_turn_0": "Sunday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM price equals 127", "user_turn_1": "That one seems fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "1202", "datum_id": {"dialogue_id": "399ef15f-7edc-462c-858f-96322f9f302f", "turn_index": 6}}
{"user_turn_0": "Yep", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM price equals 127", "user_turn_1": "Let 's do the one that leaves at 4:50 PM instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "1206", "datum_id": {"dialogue_id": "a097cc6b-9c00-4c22-88eb-1674f9c588ff", "turn_index": 2}}
{"user_turn_0": "Hello assistant , can you get me a hotel room in West Wickham for today through Thursday ?", "agent_turn_0": "Root system prompt hotel book object equals priceRange", "user_turn_1": "Something inexpensive with parking", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Hotel.hasParking_? (?= true))))))", "idx": "1210", "datum_id": {"dialogue_id": "64760cca-97fb-428a-bd70-c7b3e3d2bd19", "turn_index": 1}}
{"user_turn_0": "Something inexpensive with parking", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals River Park price equals 119", "user_turn_1": "Do they have free wifi ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasWifi_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "1211", "datum_id": {"dialogue_id": "64760cca-97fb-428a-bd70-c7b3e3d2bd19", "turn_index": 2}}
{"user_turn_0": "Show me directions", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Ok . Let 's do that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" River Park \"))))))", "idx": "1214", "datum_id": {"dialogue_id": "64760cca-97fb-428a-bd70-c7b3e3d2bd19", "turn_index": 5}}
{"user_turn_0": "I need 1 single please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait . Change my check in day to Wednesday please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Wednesday))))))", "idx": "1216", "datum_id": {"dialogue_id": "64760cca-97fb-428a-bd70-c7b3e3d2bd19", "turn_index": 7}}
{"user_turn_0": "Wait . Change my check in day to Wednesday please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait . Do I pay in advance ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "1217", "datum_id": {"dialogue_id": "64760cca-97fb-428a-bd70-c7b3e3d2bd19", "turn_index": 8}}
{"user_turn_0": "Yes , go ahead", "agent_turn_0": "Root system inform flight book Completed", "user_turn_1": "Also i 'd like to make a 4:30 PM reservation on Wednesday at a four star restaurant", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.rating_? (?= 4)) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "1228", "datum_id": {"dialogue_id": "dc096905-f5ed-47e1-8903-4446d41a91b3", "turn_index": 4}}
{"user_turn_0": "I 'm leaving tomorrow sometime before 6:30", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM price equals 170", "user_turn_1": "I prefer the one departing at 2:50 PM on business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast City \"))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "1237", "datum_id": {"dialogue_id": "a2cefb7d-9b4c-4866-8348-45a70a9a84b8", "turn_index": 3}}
{"user_turn_0": "That would be Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM price equals 170", "user_turn_1": "That one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "1240", "datum_id": {"dialogue_id": "a2cefb7d-9b4c-4866-8348-45a70a9a84b8", "turn_index": 6}}
{"user_turn_0": "How long will it take to get to Tie the Knot", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 10", "user_turn_1": "Update my event date", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (^(Date) always))))))", "idx": "1245", "datum_id": {"dialogue_id": "9069a18a-5d0a-4dc9-a920-16459f70ab77", "turn_index": 3}}
{"user_turn_0": "How do I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "1262", "datum_id": {"dialogue_id": "1ed2343c-71a4-4f29-b4c9-8d936b8c05fc", "turn_index": 3}}
{"user_turn_0": "Can I get three rooms ?", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "What if I check in on Monday instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Monday))))))", "idx": "1265", "datum_id": {"dialogue_id": "1ed2343c-71a4-4f29-b4c9-8d936b8c05fc", "turn_index": 6}}
{"user_turn_0": "What if I check in on Monday instead ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "1266", "datum_id": {"dialogue_id": "1ed2343c-71a4-4f29-b4c9-8d936b8c05fc", "turn_index": 7}}
{"user_turn_0": "Somewhere rated at least three stars that 's priced low", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Sheraton price equals 135", "user_turn_1": "Make a reservation for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "1276", "datum_id": {"dialogue_id": "9c284071-2d94-4f48-8c5e-3a344345e843", "turn_index": 3}}
{"user_turn_0": "That 's right", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM", "user_turn_1": "Yes , that 's good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "1283", "datum_id": {"dialogue_id": "ecfc261f-bb7c-4ab0-8ec8-c53b05cf6132", "turn_index": 2}}
{"user_turn_0": "Is that one nonstop ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Okay book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "1290", "datum_id": {"dialogue_id": "8c9e46fa-aca4-44cf-aee2-4e2c1f46178a", "turn_index": 4}}
{"user_turn_0": "I return on Saturday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM", "user_turn_1": "That one sounds fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "1296", "datum_id": {"dialogue_id": "b1704e29-1662-4062-b25f-fcce354b4c78", "turn_index": 3}}
{"user_turn_0": "What kind of food does it serve ?", "agent_turn_0": "Root system inform restaurant find focus equals foodType equals Spanish food", "user_turn_1": "Can you book it for me please ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "1302", "datum_id": {"dialogue_id": "dded769a-6f7d-40c8-887b-f22639e95792", "turn_index": 4}}
{"user_turn_0": "Yes , on Sunday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 11 minute equals 55 meridiem equals AM price equals 127", "user_turn_1": "Okay , that one is fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "1310", "datum_id": {"dialogue_id": "209c5fdd-0562-44e3-821a-665dd28235cb", "turn_index": 7}}
{"user_turn_0": "I want something that 's not expensive", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Fresh Wave Resort price equals 178", "user_turn_1": "Does that include breakfast ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "1321", "datum_id": {"dialogue_id": "2654ed9c-7f8a-4c24-bc45-26d627535140", "turn_index": 3}}
{"user_turn_0": "Does that include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Okay I guess that 's fine . Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "1322", "datum_id": {"dialogue_id": "2654ed9c-7f8a-4c24-bc45-26d627535140", "turn_index": 4}}
{"user_turn_0": "On what airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals British", "user_turn_1": "Book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "1330", "datum_id": {"dialogue_id": "f0288258-4a45-45f4-8a71-ba15166de60c", "turn_index": 4}}
{"user_turn_0": "Sunday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM price equals 124", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "1332", "datum_id": {"dialogue_id": "f0288258-4a45-45f4-8a71-ba15166de60c", "turn_index": 6}}
{"user_turn_0": "No , from Bristol", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 1 meridiem equals PM", "user_turn_1": "Not that one but at 2:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "1336", "datum_id": {"dialogue_id": "366ef1ba-aa5a-46db-82fb-af4408c17143", "turn_index": 2}}
{"user_turn_0": "What rating does it have ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "1346", "datum_id": {"dialogue_id": "a3f1ab7d-2f0c-4084-8948-5fc38abc4db9", "turn_index": 2}}
{"user_turn_0": "Is there a private bathroom ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "1366", "datum_id": {"dialogue_id": "9b3c2cea-0f13-4ac9-9d30-a7afcdce0a54", "turn_index": 4}}
{"user_turn_0": "I will depart from Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM price equals 199", "user_turn_1": "It 's OK , let me book this flight for two passengers please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.destination_? (Place.location_? (?= \" Belfast \")))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (^((Constraint (List DateTime))) refer)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 2))))))", "idx": "1379", "datum_id": {"dialogue_id": "a8a83ec0-a113-4c13-b1b9-a424abc69ed0", "turn_index": 2}}
{"user_turn_0": "It 's going to be on Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM price equals 166", "user_turn_1": "Yeah , please go with that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "1382", "datum_id": {"dialogue_id": "a8a83ec0-a113-4c13-b1b9-a424abc69ed0", "turn_index": 5}}
{"user_turn_0": "One please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to pay before I check in ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "1388", "datum_id": {"dialogue_id": "6368a9c4-b6fd-41bc-a4a4-6b7eb0480597", "turn_index": 4}}
{"user_turn_0": "Sunday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM price equals 156", "user_turn_1": "OK . I like that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "1394", "datum_id": {"dialogue_id": "39cd73f0-316e-463c-b9b9-2927962b9c43", "turn_index": 4}}
{"user_turn_0": "5 people", "agent_turn_0": "Root system offer restaurant book inform calendarEvent find Conflicted", "user_turn_1": "No , could you change the reservation time to 6:30 PM instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "1399", "datum_id": {"dialogue_id": "cf70b8e8-7472-47d2-8f24-99ad25037b48", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , get me down an event on the calendar for tomorrow .", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow))))))))))", "idx": "1442", "datum_id": {"dialogue_id": "832117d2-5cea-451c-9a0c-2d0dde66400b", "turn_index": 0}}
{"user_turn_0": "Hi my assistant , book an executive to take me to 4 Compton Avenue", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals 397 Tallwood Court", "user_turn_1": "Update the destination to 76 Windsor Road", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" 76 Windsor Road \"))))", "idx": "1449", "datum_id": {"dialogue_id": "fef01eba-c7ee-42dd-8c54-3c2a27056663", "turn_index": 1}}
{"user_turn_0": "Is laundry included", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "1455", "datum_id": {"dialogue_id": "501a27e2-98fa-4451-8f1f-2e934392f61f", "turn_index": 2}}
{"user_turn_0": "I want a queen sized bed", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Update check out date to Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "1457", "datum_id": {"dialogue_id": "501a27e2-98fa-4451-8f1f-2e934392f61f", "turn_index": 4}}
{"user_turn_0": "Hello assistant , how many stars does Flip Out restaurant have ?", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 3", "user_turn_1": "book it for me", "tgt": "(plan (^(Restaurant) Book :object (Restaurant.restaurantName_? (^((Constraint String)) refer))))", "idx": "1460", "datum_id": {"dialogue_id": "4894edf2-7446-4a26-8e2b-b94a59cc6d9e", "turn_index": 1}}
{"user_turn_0": "Manchester please", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM", "user_turn_1": "That 's perfect , please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "1467", "datum_id": {"dialogue_id": "569e9c66-69e7-4ad9-8756-70017643f9f4", "turn_index": 2}}
{"user_turn_0": "London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM price equals 199", "user_turn_1": "I prefer the one which departures 4:50 PM and I would like to have business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.destination_? (Place.location_? (?= \" Edinburgh \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "1474", "datum_id": {"dialogue_id": "8eebbaf5-8606-4b96-a0f4-a47f5e7c04ab", "turn_index": 3}}
{"user_turn_0": "Hi there , do I have a calendar entry for Open Houses ?", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Create it", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.eventName_? (?= \" Build Your Base \")) (CalendarEvent.attendees_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Brother))))))))", "idx": "1490", "datum_id": {"dialogue_id": "c58b5425-a3dd-449c-849a-4ebaba520698", "turn_index": 1}}
{"user_turn_0": "I will be departing from London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM price equals 125", "user_turn_1": "Please book one for that flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast City \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 1))))))", "idx": "1497", "datum_id": {"dialogue_id": "96f9ac03-02c0-4905-9175-e39e3828b766", "turn_index": 3}}
{"user_turn_0": "Let me know if I have any calls from Mr Allan", "agent_turn_0": "Root system inform phoneCall checkExistence NotExisted", "user_turn_1": "Thanks for the help . Text him and write I left my hat on the train", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (^((Constraint Contact)) refer)) (Message.textContent_? (?= \" I left my hat on the train \")))))", "idx": "1511", "datum_id": {"dialogue_id": "cbcf5592-ac89-46ef-92eb-353b00915f5d", "turn_index": 3}}
{"user_turn_0": "OK , I would rather book a hotel with 5 star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Freehand price equals 173", "user_turn_1": "Sure , what is the rating ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "1533", "datum_id": {"dialogue_id": "62c48d04-4c9c-49d5-9f2d-440f94ce83d2", "turn_index": 4}}
{"user_turn_0": "Can you find something cheaper ?", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Rose price equals 135", "user_turn_1": "Do the provide laundry service ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.laundry_? (^(Boolean) always)))))", "idx": "1535", "datum_id": {"dialogue_id": "62c48d04-4c9c-49d5-9f2d-440f94ce83d2", "turn_index": 6}}
{"user_turn_0": "Do the provide laundry service ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Make reservation for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" The Watson \"))))))", "idx": "1536", "datum_id": {"dialogue_id": "62c48d04-4c9c-49d5-9f2d-440f94ce83d2", "turn_index": 7}}
{"user_turn_0": "Hi assistant , i 'd like to book a table at a Grill restaurant in Northwood on July 17th", "agent_turn_0": "Root system prompt restaurant book object equals priceRange", "user_turn_1": "I want an inexpensive restaurant with at least three stars", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Restaurant.rating_? (?>= (someSalient (?= 3))))))))", "idx": "1547", "datum_id": {"dialogue_id": "35054a4f-ce90-49e7-8448-f62d54074397", "turn_index": 1}}
{"user_turn_0": "I want an inexpensive restaurant with at least three stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floss and Joes", "user_turn_1": "Do they take card ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "1548", "datum_id": {"dialogue_id": "35054a4f-ce90-49e7-8448-f62d54074397", "turn_index": 2}}
{"user_turn_0": "Do they take card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "Alright , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "1549", "datum_id": {"dialogue_id": "35054a4f-ce90-49e7-8448-f62d54074397", "turn_index": 3}}
{"user_turn_0": "Is it direct flight or connecting", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "I 'd prefer the flight which departures 3:20 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "1557", "datum_id": {"dialogue_id": "3fbe922b-cf63-4fb9-8d47-4b07c98e60b3", "turn_index": 4}}
{"user_turn_0": "Book for today at 4:30 PM", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Change the time to 6:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hour)) Path.apply \" object.atDateTime.time.hour \") (lambda (^(Constraint Hour) x0) (?= (Hour.apply 6L)))))", "idx": "1562", "datum_id": {"dialogue_id": "4ce8ff07-9106-42ab-9a47-4eb21d64b93f", "turn_index": 3}}
{"user_turn_0": "Find me one with a lower price please", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Marriott price equals 210", "user_turn_1": "Yes , I 'll take it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Westin \"))))))", "idx": "1569", "datum_id": {"dialogue_id": "2743b5e5-c57a-4ac1-865c-ca792f446b0e", "turn_index": 4}}
{"user_turn_0": "Give me two king sized beds please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "1572", "datum_id": {"dialogue_id": "2743b5e5-c57a-4ac1-865c-ca792f446b0e", "turn_index": 7}}
{"user_turn_0": "Does the hotel have private bath room ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "1578", "datum_id": {"dialogue_id": "59c6e7c7-7e64-417c-ad16-a7ccb6aa4ce0", "turn_index": 4}}
{"user_turn_0": "Can I have 2 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "1581", "datum_id": {"dialogue_id": "59c6e7c7-7e64-417c-ad16-a7ccb6aa4ce0", "turn_index": 7}}
{"user_turn_0": "I want to depart from Birmingham", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 12 minute equals 40 meridiem equals PM", "user_turn_1": "That works . Book it for two", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (^((Constraint (List DateTime))) refer)))) (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 2))))))", "idx": "1585", "datum_id": {"dialogue_id": "5f51471f-2135-4cdf-8108-57a7f870f36f", "turn_index": 2}}
{"user_turn_0": "Is this flight direct ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Great , I want this flight booked", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "1597", "datum_id": {"dialogue_id": "7df64f05-54e0-4a56-bdac-86a9c4106851", "turn_index": 4}}
{"user_turn_0": "Call her", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "What s the next event on the calendar ?", "tgt": "(plan (^(CalendarEvent) CheckExistence :object (CalendarEvent.listOffset_? (?= 1))))", "idx": "1601", "datum_id": {"dialogue_id": "cb74ddc5-eb3e-4a5e-a93b-a32a35fb8daa", "turn_index": 2}}
{"user_turn_0": "What s the next event on the calendar ?", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Schedule one", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.eventName_? (?= \" Air Fair \")) (CalendarEvent.recurrenceUnit_? (RecurrenceUnit.dayOfWeek_? (?= (Sunday)))))))", "idx": "1602", "datum_id": {"dialogue_id": "cb74ddc5-eb3e-4a5e-a93b-a32a35fb8daa", "turn_index": 3}}
{"user_turn_0": "Which of the restaurants has a three star rating ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Spago", "user_turn_1": "Does the restaurant have outdoor seats ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "1608", "datum_id": {"dialogue_id": "36197950-d5c0-45b9-b385-7ef728cd8154", "turn_index": 4}}
{"user_turn_0": "I prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals La Zilla", "user_turn_1": "Does the restaurant take credit card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "1610", "datum_id": {"dialogue_id": "36197950-d5c0-45b9-b385-7ef728cd8154", "turn_index": 6}}
{"user_turn_0": "Does the restaurant take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Beef Easy \"))))))", "idx": "1611", "datum_id": {"dialogue_id": "36197950-d5c0-45b9-b385-7ef728cd8154", "turn_index": 7}}
{"user_turn_0": "On which airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "Alright , I 'll book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "1618", "datum_id": {"dialogue_id": "9245a20f-7c62-4e97-a4b8-eaf1c6bc1e24", "turn_index": 4}}
{"user_turn_0": "what is the weather today", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cold", "user_turn_1": "how long does it take to get from 8665 Fairway Avenue to Starline Cabs", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (& (Navigation.source_? (Place.location_? (?= \" 8665 Fairway Avenue \"))) (Navigation.destination_? (Place.location_? (?= \" Starline Cabs \"))))))", "idx": "1623", "datum_id": {"dialogue_id": "490c3132-d7b9-4f8f-9b24-fb0e03622383", "turn_index": 2}}
{"user_turn_0": "What cabin class is that ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "How about I get the 4:45 PM flight , instead ? And make it business class ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast City \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.tripType_? (?= (TripType.oneWay)))) (Flight.passengers_? (?= 2))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "1629", "datum_id": {"dialogue_id": "c988d602-8d03-4778-be7c-b24434a3ad76", "turn_index": 3}}
{"user_turn_0": "I need a table for 6", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "I see . Please revise the appointment date to be for today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (?= (Today))))))))", "idx": "1644", "datum_id": {"dialogue_id": "319faf3f-f617-4d4c-97e5-7c957bc3a17c", "turn_index": 3}}
{"user_turn_0": "I do n't like any of them . Can you show me more options ? Food type does n't matter", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flavoroso", "user_turn_1": "What is the average cost per person there", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "1649", "datum_id": {"dialogue_id": "811d647f-9459-4bef-97e6-30e40df482a8", "turn_index": 3}}
{"user_turn_0": "I prefer another restaurant with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Cityroom", "user_turn_1": "Does they have outdoor seats", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "1654", "datum_id": {"dialogue_id": "811d647f-9459-4bef-97e6-30e40df482a8", "turn_index": 8}}
{"user_turn_0": "Does they have outdoor seats", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "Do n't care anymore . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flavoroso \"))))))", "idx": "1655", "datum_id": {"dialogue_id": "811d647f-9459-4bef-97e6-30e40df482a8", "turn_index": 9}}
{"user_turn_0": "How do I get there", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it as well for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Green Lushy Resorts \"))))))", "idx": "1670", "datum_id": {"dialogue_id": "1c64090a-0ed8-4df9-810d-cdd9aa0bd589", "turn_index": 6}}
{"user_turn_0": "Two", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait , does it have free cancellation", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "1673", "datum_id": {"dialogue_id": "1c64090a-0ed8-4df9-810d-cdd9aa0bd589", "turn_index": 9}}
{"user_turn_0": "Please send it", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "How do I get from Medivet Islington to 9 School Lane walking", "tgt": "(plan (^(Navigation) Find :object (& (& (Navigation.source_? (Place.location_? (?= \" Medivet Islington \"))) (Navigation.destination_? (Place.location_? (?= \" 9 School Lane \")))) (Navigation.transportationMode_? (?= (TransportationMode.Walking))))))", "idx": "1677", "datum_id": {"dialogue_id": "2f2ef08b-60b2-4a60-aec7-f02a6c4fed3e", "turn_index": 2}}
{"user_turn_0": "I leave after 8:30 o'clock on Wednesday", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 3 meridiem equals PM price equals 119", "user_turn_1": "I want to book it for one person", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast \"))) (Flight.tripType_? (?= (TripType.oneWay)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 1))))))", "idx": "1734", "datum_id": {"dialogue_id": "988ec5a9-389a-4b98-8ca1-8c960d5961bf", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , can you book me a hotel with a parking lot . Just a single room .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.roomType_? (List.exists_? (?= (RoomType.Single)))) (Hotel.hasParking_? (?= true)))))", "idx": "1739", "datum_id": {"dialogue_id": "eab329d2-b641-4922-9ea1-c5ef9acdfb4e", "turn_index": 0}}
{"user_turn_0": "I want it to be in Bedfordshire and not have zero stars", "agent_turn_0": "Root system prompt hotel book object equals priceRange", "user_turn_1": "I need it to be inexpensive", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "1741", "datum_id": {"dialogue_id": "eab329d2-b641-4922-9ea1-c5ef9acdfb4e", "turn_index": 2}}
{"user_turn_0": "Okay wait a second . Does that one have a parking lot ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Okay good . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "1743", "datum_id": {"dialogue_id": "eab329d2-b641-4922-9ea1-c5ef9acdfb4e", "turn_index": 4}}
{"user_turn_0": "No wait . I need 3 rooms please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "I have a question . Do I need to prepay for this ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "1746", "datum_id": {"dialogue_id": "eab329d2-b641-4922-9ea1-c5ef9acdfb4e", "turn_index": 7}}
{"user_turn_0": "Dang . Well actually I need to change the check in date to today", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "If I need to cancel , is there a fee ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "1748", "datum_id": {"dialogue_id": "eab329d2-b641-4922-9ea1-c5ef9acdfb4e", "turn_index": 9}}
{"user_turn_0": "How long will it take me to get there ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 25", "user_turn_1": "Also not bad . Book me a king sized room from July 15th to the 20th in a hotel located in Wembley Park", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" Wembley Park \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 15L)))) (month_? (Date.month_? (?= (July)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 20L)))))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.King)))))))", "idx": "1759", "datum_id": {"dialogue_id": "f27c2323-af65-41a8-9dc6-e240a7568f65", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , what is the rating of Bard \u2019s Bench restaurant .", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.rating_? (^(Number) always)) :object (Restaurant.restaurantName_? (?= \" Bard's Bench \"))))", "idx": "1761", "datum_id": {"dialogue_id": "635fd851-1eb0-4890-adbb-b297d8a5112d", "turn_index": 0}}
{"user_turn_0": "From Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 12 minute equals 30 meridiem equals PM", "user_turn_1": "I 'd rather have the one at 3:20 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "1769", "datum_id": {"dialogue_id": "4f558bf8-1f58-49f7-b2ad-6dd6420e5867", "turn_index": 3}}
{"user_turn_0": "Set a calendar event at 11:30am and share it with Dominic", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals endDateTime", "user_turn_1": "at 12:15pm", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.duration_? (AppleDuration.minute_? (?= 45)))))))", "idx": "1779", "datum_id": {"dialogue_id": "8195bc04-40ca-4183-a174-52c903e1aac7", "turn_index": 2}}
{"user_turn_0": "Sunday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "1787", "datum_id": {"dialogue_id": "ed851e58-dbb0-4b19-896c-19a862048ad2", "turn_index": 5}}
{"user_turn_0": "OK assistant , I need to set a reminder for the Mystery tour on my calendar .", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Let me compose and send a message", "tgt": "(plan (^(Message) Create))", "idx": "1795", "datum_id": {"dialogue_id": "c4d9b27d-7443-45f3-bbba-08ee65353ed2", "turn_index": 1}}
{"user_turn_0": "Friday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM", "user_turn_1": "Looks great", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "1807", "datum_id": {"dialogue_id": "38368f72-a7e7-4024-a671-ee2d90bcfe50", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , what 's the event 's end time ?", "tgt": "(plan (do (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 10L))))))) (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Mother))))) (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always))))))))", "idx": "1824", "datum_id": {"dialogue_id": "d1867529-d334-4ed0-a1a4-8cc574026635", "turn_index": 0}}
{"user_turn_0": "Hello , book me a flight for September 8th going from Manchester to Amsterdam", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "Check for Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "1830", "datum_id": {"dialogue_id": "663ea3c9-10c0-4a3f-b45c-9010058ec8de", "turn_index": 1}}
{"user_turn_0": "Please tell me how long does it take to get to the Animals party on the calendar today", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 25 object equals destination equals location equals 2a Prebend Street", "user_turn_1": "I want to know how long does it take to get to the calendar event on the 25th", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint CalendarEvent)) Path.apply \" object.destination \") (lambda (^(Constraint CalendarEvent) x0) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 25L)))))))))", "idx": "1846", "datum_id": {"dialogue_id": "d97f647a-3a48-4090-a3d1-f6c54cd7455c", "turn_index": 4}}
{"user_turn_0": "I would rather stay at a cheaper hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Parallel Tower price equals 134", "user_turn_1": "Is laundry included ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.laundry_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "1854", "datum_id": {"dialogue_id": "18481e60-5789-4bdf-9c0d-0b3986e443ec", "turn_index": 2}}
{"user_turn_0": "Is laundry included ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Sweet , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Crescent Resort \"))))))", "idx": "1855", "datum_id": {"dialogue_id": "18481e60-5789-4bdf-9c0d-0b3986e443ec", "turn_index": 3}}
{"user_turn_0": "Just three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to pay before I book ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "1857", "datum_id": {"dialogue_id": "18481e60-5789-4bdf-9c0d-0b3986e443ec", "turn_index": 5}}
{"user_turn_0": "I want something with a low price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Hilton Garden price equals 127", "user_turn_1": "Do they have laundry service ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.laundry_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "1884", "datum_id": {"dialogue_id": "9a8e0b64-566a-4e75-82c0-588ea3adbaee", "turn_index": 3}}
{"user_turn_0": "Do they have laundry service ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Ritz-Carlton \"))))))", "idx": "1885", "datum_id": {"dialogue_id": "9a8e0b64-566a-4e75-82c0-588ea3adbaee", "turn_index": 4}}
{"user_turn_0": "I want 3 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "1890", "datum_id": {"dialogue_id": "9a8e0b64-566a-4e75-82c0-588ea3adbaee", "turn_index": 9}}
{"user_turn_0": "From London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 2 meridiem equals PM price equals 150", "user_turn_1": "I actually prefer the flight which departures 1:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "1901", "datum_id": {"dialogue_id": "a4fffd10-e0ab-4254-9477-a957b8b2b445", "turn_index": 2}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 11 minute equals 55 meridiem equals AM", "user_turn_1": "Alright book it for four passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Amsterdam \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (^((Constraint (List DateTime))) refer)))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 4))))))", "idx": "1911", "datum_id": {"dialogue_id": "6fe594bc-2d06-4585-ae4c-760144c2c110", "turn_index": 2}}
{"user_turn_0": "What cabin is it ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "Ok cool , book this flight for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "1923", "datum_id": {"dialogue_id": "5d0434b1-72e9-46c2-8963-518eb95815d4", "turn_index": 3}}
{"user_turn_0": "Is this a direct flight", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Fine , go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "1927", "datum_id": {"dialogue_id": "d31df4bd-8fea-41ca-883d-5d125d3bbacb", "turn_index": 2}}
{"user_turn_0": "Sunday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM price equals 173", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "1929", "datum_id": {"dialogue_id": "d31df4bd-8fea-41ca-883d-5d125d3bbacb", "turn_index": 4}}
{"user_turn_0": "I would prefer another restaurant with parking available", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floss and Joes", "user_turn_1": "Does the restaurant have outdoor seating ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "1941", "datum_id": {"dialogue_id": "0cbe0fcf-9cd7-42d2-b184-39ba8e29f1fe", "turn_index": 5}}
{"user_turn_0": "Which of the restaurants have a rating that is not zero stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone Martian", "user_turn_1": "That 's good , book it for the 6th at 2 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Hambone \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 6L))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "1943", "datum_id": {"dialogue_id": "0cbe0fcf-9cd7-42d2-b184-39ba8e29f1fe", "turn_index": 7}}
{"user_turn_0": "Does the hotel have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "I prefer another cheap hotel", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "1948", "datum_id": {"dialogue_id": "c573bcca-d90d-4c2a-8a2e-abd49f0878ce", "turn_index": 2}}
{"user_turn_0": "I prefer another cheap hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Ace Hotel price equals 173", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Obsidian Sky \"))))))", "idx": "1949", "datum_id": {"dialogue_id": "c573bcca-d90d-4c2a-8a2e-abd49f0878ce", "turn_index": 3}}
{"user_turn_0": "Can I have 2 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Change the checkout date to Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Friday)))))", "idx": "1952", "datum_id": {"dialogue_id": "c573bcca-d90d-4c2a-8a2e-abd49f0878ce", "turn_index": 6}}
{"user_turn_0": "Change the checkout date to Friday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "1953", "datum_id": {"dialogue_id": "c573bcca-d90d-4c2a-8a2e-abd49f0878ce", "turn_index": 7}}
{"user_turn_0": "Hey , i need to make a reservation at a restaurant in Hillingdon at 11:30 AM . I want someplace that serves Japanese Cuisine", "agent_turn_0": "Root system prompt restaurant book object equals priceRange", "user_turn_1": "I need something inexpensive that has at least a one star rating", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.priceRange_? (?= (PriceRange.Low)))) (Restaurant.rating_? (?>= (someSalient (?= 1))))))))", "idx": "1956", "datum_id": {"dialogue_id": "f0b56962-6928-46ff-89cd-3c05d6ad7beb", "turn_index": 1}}
{"user_turn_0": "I need something inexpensive that has at least a one star rating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Boiling Fence", "user_turn_1": "Does that restaurant have outdoor seating ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "1957", "datum_id": {"dialogue_id": "f0b56962-6928-46ff-89cd-3c05d6ad7beb", "turn_index": 2}}
{"user_turn_0": "Does that restaurant have outdoor seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "Nice ! Book me that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "1958", "datum_id": {"dialogue_id": "f0b56962-6928-46ff-89cd-3c05d6ad7beb", "turn_index": 3}}
{"user_turn_0": "I actually want one that 's five stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals The Hot Springs price equals 119", "user_turn_1": "Do they have breakfast included ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "1965", "datum_id": {"dialogue_id": "e55a1c06-5d74-4c0e-89b6-931553932bd7", "turn_index": 4}}
{"user_turn_0": "Do they have breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Ballyfin \"))))))", "idx": "1966", "datum_id": {"dialogue_id": "e55a1c06-5d74-4c0e-89b6-931553932bd7", "turn_index": 5}}
{"user_turn_0": "I need three rooms", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Ok , check in on Wednesday the", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Wednesday))))))", "idx": "1969", "datum_id": {"dialogue_id": "e55a1c06-5d74-4c0e-89b6-931553932bd7", "turn_index": 8}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , when will the Birmingham train arrive ?", "tgt": "(plan (^(Train) Find :focus (Train.arrivalDateTime_? (^(DateTime) always)) :object (& (Train.destination_? (Place.location_? (?= \" Birmingham \"))) (Train.departureDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 11L))))))))", "idx": "1971", "datum_id": {"dialogue_id": "754aa628-e623-48be-807f-24c3f5324ab5", "turn_index": 0}}
{"user_turn_0": "Which airline will I be departing with ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals EasyJet", "user_turn_1": "I 'd prefer the 1:30 PM departure please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "1975", "datum_id": {"dialogue_id": "754aa628-e623-48be-807f-24c3f5324ab5", "turn_index": 4}}
{"user_turn_0": "Hi assistant , book a flight for two passengers to Glasgow .", "agent_turn_0": "Root system prompt flight book object equals source inform flight find object equals source equals location equals London Heathrow", "user_turn_1": "Yes , I will depart from there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (^((Constraint Flight)) refer)))))", "idx": "1988", "datum_id": {"dialogue_id": "868db196-e010-499c-ba59-327ddf4faa90", "turn_index": 1}}
{"user_turn_0": "Hi there , get me a taxi for Starline Cabs for six passengers .", "agent_turn_0": "Root system prompt taxi book object equals serviceType inform taxi find object equals serviceType equals listElementOne Saloon listElementTwo MPV listElementThree Executive", "user_turn_1": "I want a four door car", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Taxi)) Path.apply \" object \") (lambda (^(Constraint Taxi) x0) (& x0 (Taxi.serviceType_? (List.exists_? (?= (ServiceType.Saloon))))))))", "idx": "1994", "datum_id": {"dialogue_id": "355fc8d5-ea88-4fd4-8009-d7c19a250554", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , book restaurant in Queen 's Park . The book time is at tomorrow 2 o'clock . I prefer not expensive .", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.location_? (?= \" Queen's Park \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 2L)))))))) (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High))))))))", "idx": "2003", "datum_id": {"dialogue_id": "1693fcc8-40cf-4e38-9479-2e7043ce3651", "turn_index": 0}}
{"user_turn_0": "Which of the restaurants have rating at least three stars ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capricorn", "user_turn_1": "Does the restaurant have outdoor seats", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "2006", "datum_id": {"dialogue_id": "1693fcc8-40cf-4e38-9479-2e7043ce3651", "turn_index": 3}}
{"user_turn_0": "Does the restaurant have outdoor seats", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Floss and Joes \"))))))", "idx": "2007", "datum_id": {"dialogue_id": "1693fcc8-40cf-4e38-9479-2e7043ce3651", "turn_index": 4}}
{"user_turn_0": "I need a table for 3 people please", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Ok , can you change the appointment date to tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "2009", "datum_id": {"dialogue_id": "1693fcc8-40cf-4e38-9479-2e7043ce3651", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , schedule basketball fun with Mr Fraser on Sunday for my calendar", "tgt": "(plan (^(CalendarEvent) Create :object (& (& (CalendarEvent.eventName_? (?= \" basketball fun \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday))))))) (CalendarEvent.attendees_? (Contact.person_? (& (Person.name_? (?= \" Fraser \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "2016", "datum_id": {"dialogue_id": "957d4748-56be-4ce8-b39d-ffc277cda3bf", "turn_index": 0}}
{"user_turn_0": "Hi my assistant , tell me when flight BA350 is taking off .", "agent_turn_0": "Root system inform flight find focus equals departureDateTime equals time equals hour equals 5 meridiem equals PM", "user_turn_1": "Set up a reminder at 5:30 PM on November 11th", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (& (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 5L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))) (DateTime.date_? (& (Date.month_? (?= (November))) (Date.day_? (?= (Day.apply 11L)))))))))", "idx": "2022", "datum_id": {"dialogue_id": "d327aedc-44a9-4c9b-b18b-8b751ef8ae25", "turn_index": 1}}
{"user_turn_0": "York", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM", "user_turn_1": "I prefer the one at 1:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "2028", "datum_id": {"dialogue_id": "18ba790a-1549-47c2-9792-edefad1d5328", "turn_index": 2}}
{"user_turn_0": "I want to see Dental routine visit in Daphne 's on the calendar", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Have my mother added to student quiz in Belo Mansion on my calendar", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.attendees_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Mother))))) :object (& (CalendarEvent.eventName_? (?= \" student quiz \")) (CalendarEvent.location_? (?= \" Belo Mansion \")))))", "idx": "2033", "datum_id": {"dialogue_id": "68814c85-4709-4dc8-9017-326a45a4b539", "turn_index": 2}}
{"user_turn_0": "Have my mother added to student quiz in Belo Mansion on my calendar", "agent_turn_0": "Root system inform calendarEvent update Completed", "user_turn_1": "I need another favor . Send a message to him / her that says what time was that appointment ?", "tgt": "(plan (^(Message) Create :object (Message.recipients_? (& (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Mother)))) (Contact.textContent_? (?= \" what time was that appointment \"))))))", "idx": "2034", "datum_id": {"dialogue_id": "68814c85-4709-4dc8-9017-326a45a4b539", "turn_index": 3}}
{"user_turn_0": "I d also like to make an event and send it to Phil", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange", "user_turn_1": "The event is tomorrow at 2 PM and shall be called The Expert Conference", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Option (Constraint CalendarEvent))) Path.apply \" object \") (lambda (^(Option (Constraint CalendarEvent)) x0) (Some (& (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (?= (Tomorrow))) (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))) (CalendarEvent.eventName_? (?= \" The Expert Conference \")))))))", "idx": "2055", "datum_id": {"dialogue_id": "4879c439-064a-4afc-832c-2a24aae1933a", "turn_index": 3}}
{"user_turn_0": "Yes , send", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "How long will it take to get to the event ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (?= (^(Place CalendarEvent) reference (^(CalendarEvent) always))))))", "idx": "2060", "datum_id": {"dialogue_id": "4c2a2f9d-bd0b-4855-8c90-55a116d2679f", "turn_index": 3}}
{"user_turn_0": "How long will it take to get to the event ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 25", "user_turn_1": "How long will it take to get to the event at 4 PM ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint CalendarEvent)) Path.apply \" object.destination \") (lambda (^(Constraint CalendarEvent) x0) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "2061", "datum_id": {"dialogue_id": "4c2a2f9d-bd0b-4855-8c90-55a116d2679f", "turn_index": 4}}
{"user_turn_0": "Yeah go ahead", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Thanks for the help . Book me a moderate priced restaurant rating at least three stars for Tuesday", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.priceRange_? (?= (PriceRange.Moderate))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))))) (Restaurant.rating_? (?>= (someSalient (?= 3)))))))", "idx": "2066", "datum_id": {"dialogue_id": "715f5cdd-a7d1-4c8e-8c7e-49e803ea7547", "turn_index": 4}}
{"user_turn_0": "Hey , could you check when my flight will be taking off on the 28th ?", "agent_turn_0": "Root system inform flight find focus equals departureDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM", "user_turn_1": "And when will my flight on August 7th is leaving ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (& (Date.month_? (?= (August))) (Date.day_? (?= (Day.apply 7L)))))))", "idx": "2068", "datum_id": {"dialogue_id": "96281a89-0286-45b5-abee-47785178287d", "turn_index": 1}}
{"user_turn_0": "Yes , tell me how far it is from Westgate House to 7615 Eagle Lane", "agent_turn_0": "Root system inform navigation find focus equals distance equals number equals 6", "user_turn_1": "Thanks , next thank you . Could you sen event to my love ?", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Love))))))))", "idx": "2070", "datum_id": {"dialogue_id": "96281a89-0286-45b5-abee-47785178287d", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , send a message including my event to my father .", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Father))))))))", "idx": "2077", "datum_id": {"dialogue_id": "e5f7d4e1-1c73-42bb-8d51-1426de98220e", "turn_index": 0}}
{"user_turn_0": "Does that include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Make the booking please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "2091", "datum_id": {"dialogue_id": "1a6d4ab0-5ea5-4cdb-8f4d-45f9be9af73e", "turn_index": 3}}
{"user_turn_0": "I actually need two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually , I would like to revise the check in date to be on the 12th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 12L))))))", "idx": "2094", "datum_id": {"dialogue_id": "1a6d4ab0-5ea5-4cdb-8f4d-45f9be9af73e", "turn_index": 6}}
{"user_turn_0": "Hi assistant , please display the hotels in Wembley Park .", "agent_turn_0": "Root system inform hotel find", "user_turn_1": "Thanks for the help . Please send my next event to my sister", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Sister))))))))", "idx": "2097", "datum_id": {"dialogue_id": "dbe8aeae-50a8-4460-a14e-0727503fd489", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , order a taxi from 415 Park Lane to the Far Away Feast", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" 415 Park Lane \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (& (CalendarEvent.eventName_? (?= \" Far Away Feast \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today))))))))))))", "idx": "2101", "datum_id": {"dialogue_id": "dc154217-0a23-4a5d-9fb7-63bb402ab03b", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , can you put the flight itinerary for Bristol on the 19th in a message and send it ?", "tgt": "(plan (^(Message) Create :object (Message.textContent_? (?= (^(String Flight) reference (& (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 19L)))))) (Flight.destination_? (Place.location_? (?= \" Bristol \")))))))))", "idx": "2111", "datum_id": {"dialogue_id": "33bb6850-0118-412d-9dc7-b62c10459d66", "turn_index": 0}}
{"user_turn_0": "Brussel", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I prefer the 1:50 PM departure", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "2129", "datum_id": {"dialogue_id": "226dcd33-ea00-4627-a602-65156d202de5", "turn_index": 3}}
{"user_turn_0": "Does the hotel have free wifi", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "2137", "datum_id": {"dialogue_id": "89965096-29fb-49cf-ad18-32edbead7b25", "turn_index": 6}}
{"user_turn_0": "Two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is breakfast included ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "2141", "datum_id": {"dialogue_id": "89965096-29fb-49cf-ad18-32edbead7b25", "turn_index": 10}}
{"user_turn_0": "What are they rated ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Make the reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "2163", "datum_id": {"dialogue_id": "7c20a5ac-a769-4057-90a2-911e96b84ae1", "turn_index": 3}}
{"user_turn_0": "I do n't care what kind of room , just need one", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is pre - payment required ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "2167", "datum_id": {"dialogue_id": "7c20a5ac-a769-4057-90a2-911e96b84ae1", "turn_index": 7}}
{"user_turn_0": "Which of them serves Italian ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flavoroso", "user_turn_1": "About what will it cost per person ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "2177", "datum_id": {"dialogue_id": "02aa8fcf-7caf-496d-a876-a1c442226cf6", "turn_index": 3}}
{"user_turn_0": "Do any of the results have three stars ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Maple", "user_turn_1": "Do they accept credit card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "2180", "datum_id": {"dialogue_id": "02aa8fcf-7caf-496d-a876-a1c442226cf6", "turn_index": 6}}
{"user_turn_0": "Do they accept credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "That 's perfect , please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" La Zilla \"))))))", "idx": "2181", "datum_id": {"dialogue_id": "02aa8fcf-7caf-496d-a876-a1c442226cf6", "turn_index": 7}}
{"user_turn_0": "That 's perfect , please book that for me", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Sure , can you modify the date to today ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Today)))))", "idx": "2182", "datum_id": {"dialogue_id": "02aa8fcf-7caf-496d-a876-a1c442226cf6", "turn_index": 8}}
{"user_turn_0": "I want another restaurant with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Chipotle Grill", "user_turn_1": "Does this place accept credit cards ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "2188", "datum_id": {"dialogue_id": "f4c5253f-6a86-4717-bf53-4c6ed3f33665", "turn_index": 3}}
{"user_turn_0": "Does this place accept credit cards ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Okay , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Boiling Fence \"))))))", "idx": "2189", "datum_id": {"dialogue_id": "f4c5253f-6a86-4717-bf53-4c6ed3f33665", "turn_index": 4}}
{"user_turn_0": "Does it come with free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "2232", "datum_id": {"dialogue_id": "0aaba44a-1767-4b28-8872-544f2ce6dc58", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i need something new added to my calendar . It 's going to take place at Waldrop 's Well .", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.location_? (?= \" Waldrop's Well \"))))", "idx": "2251", "datum_id": {"dialogue_id": "4ff6afc2-9b5a-42aa-b0ea-84d4e3f5d812", "turn_index": 0}}
{"user_turn_0": "Let me go with another restaurant that has outdoor seats please", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kiwi Sea", "user_turn_1": "Can you check if it takes credit card payment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "2277", "datum_id": {"dialogue_id": "22ce99f1-07db-422a-910c-9a683a05db80", "turn_index": 5}}
{"user_turn_0": "Can you check if it takes credit card payment ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Alright , then go with that one for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Bandits \"))))))", "idx": "2278", "datum_id": {"dialogue_id": "22ce99f1-07db-422a-910c-9a683a05db80", "turn_index": 6}}
{"user_turn_0": "it is 07773736049", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Make a calendar event for 11:30 am and set it to calendar", "tgt": "(plan (do (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM)))))))) (^(Reminder) Create :object (Reminder.reminderContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))))))", "idx": "2284", "datum_id": {"dialogue_id": "fc85e746-5844-495a-bde2-de9580b52929", "turn_index": 2}}
{"user_turn_0": "What cabin class is it ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "That 's fine . I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "2312", "datum_id": {"dialogue_id": "9349b7da-974e-4dc4-8e41-5f99e248d775", "turn_index": 3}}
{"user_turn_0": "No , I 'll go to Zurich on Saturday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 4 object equals nextDepartureDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM price equals 155", "user_turn_1": "That looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "2332", "datum_id": {"dialogue_id": "8796131c-5a4a-4257-9753-19c8b2818867", "turn_index": 5}}
{"user_turn_0": "Sunday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 1 meridiem equals PM price equals 150", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "2341", "datum_id": {"dialogue_id": "955a1aab-23bd-4a4d-bd1c-de6eef114c0b", "turn_index": 5}}
{"user_turn_0": "Can you check if it has free Wi - Fi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Then I want to book that hotel", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "2356", "datum_id": {"dialogue_id": "220f36be-8049-4091-89a4-42030c09a4b7", "turn_index": 3}}
{"user_turn_0": "How long is the trip ?", "agent_turn_0": "Root system inform flight find focus equals duration equals hour equals 1", "user_turn_1": "Book it for two please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast \"))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 2))))))", "idx": "2362", "datum_id": {"dialogue_id": "fb680831-0584-499b-b0f2-a5f36d829685", "turn_index": 3}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 11 minute equals 50 meridiem equals AM", "user_turn_1": "That 's fine . Book this flight for three passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Brussel \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (^((Constraint (List DateTime))) refer)))) (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 3))))))", "idx": "2395", "datum_id": {"dialogue_id": "0c6986a7-98d2-463b-ba09-86727209fc6a", "turn_index": 2}}
{"user_turn_0": "That 's fine . Book this flight for three passengers", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM price equals 170", "user_turn_1": "This one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "2396", "datum_id": {"dialogue_id": "0c6986a7-98d2-463b-ba09-86727209fc6a", "turn_index": 3}}
{"user_turn_0": "I need one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Before booking it , can you change the check - out date to Sunday please ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Sunday)))))", "idx": "2407", "datum_id": {"dialogue_id": "747e047e-a7e3-41d8-9526-616ad97d6c42", "turn_index": 4}}
{"user_turn_0": "I prefer another hotel with at least one star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Crescent Resort price equals 201", "user_turn_1": "Does the hotel have free wifi ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasWifi_? (^(Boolean) always)))))", "idx": "2419", "datum_id": {"dialogue_id": "e584aca6-d953-47b6-8c00-b02b6200eb7a", "turn_index": 5}}
{"user_turn_0": "Does the hotel have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it for me then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Obsidian Sky \"))))))", "idx": "2420", "datum_id": {"dialogue_id": "e584aca6-d953-47b6-8c00-b02b6200eb7a", "turn_index": 6}}
{"user_turn_0": "I want a different one with four stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Blue Moon price equals 178", "user_turn_1": "Does it have a private bathroom ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "2427", "datum_id": {"dialogue_id": "a1093bf5-5146-4c2b-98e5-4596da4f7db3", "turn_index": 4}}
{"user_turn_0": "Does it have a private bathroom ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Obsidian Sky \"))))))", "idx": "2428", "datum_id": {"dialogue_id": "a1093bf5-5146-4c2b-98e5-4596da4f7db3", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , i need to make an amendment to the attendees of Gaming Summit scheduled for every Tuesday .", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.attendees_? (^(Contact) always)) :object (& (CalendarEvent.eventName_? (?= \" Gaming Summit \")) (CalendarEvent.recurrenceUnit_? (RecurrenceUnit.dayOfWeek_? (?= (Tuesday)))))))", "idx": "2438", "datum_id": {"dialogue_id": "cd1b27c7-491a-4dfa-ad1e-55b91af245d2", "turn_index": 0}}
{"user_turn_0": "Does the hotel have car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it for me then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "2452", "datum_id": {"dialogue_id": "7a8e9a54-e575-4b2e-9fbc-67897b676cbb", "turn_index": 4}}
{"user_turn_0": "Hold on . Can I have 3 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait . Does the booking support free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "2456", "datum_id": {"dialogue_id": "7a8e9a54-e575-4b2e-9fbc-67897b676cbb", "turn_index": 8}}
{"user_turn_0": "Sounds fine . Book it please", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "I see . What if you revise the appointment date to be on the 15th of June", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (& (Date.month_? (?= (June))) (Date.day_? (?= (Day.apply 15L)))))))", "idx": "2465", "datum_id": {"dialogue_id": "e03f90b0-8197-40ea-a723-bbc83f2ba5d1", "turn_index": 2}}
{"user_turn_0": "I prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flew Z", "user_turn_1": "That 's fine . Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Jute Joint \"))))))", "idx": "2483", "datum_id": {"dialogue_id": "0285a5c2-18a7-4d63-b694-7a61b2b8743e", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , book a taxi to the event .", "tgt": "(plan (^(Taxi) Book :object (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1)))))))", "idx": "2487", "datum_id": {"dialogue_id": "7ba2f3f4-3a30-456c-af8f-a830f9301335", "turn_index": 0}}
{"user_turn_0": "Hi assistant , display the message from Mr Arnold", "agent_turn_0": "Root system inform message find", "user_turn_1": "Display the Sam 's Big Birthday Bash event with Faith", "tgt": "(plan (^(CalendarEvent) Find :object (& (CalendarEvent.eventName_? (?= \" Sam's Big Birthday Bash \")) (CalendarEvent.attendees_? (Contact.person_? (Person.name_? (?= \" Faith \")))))))", "idx": "2499", "datum_id": {"dialogue_id": "287f1291-6406-4d70-8ae7-8df833617605", "turn_index": 1}}
{"user_turn_0": "Thanks , also dial Mr Ross", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Let me call my love", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Person)) Path.apply \" object.recipients.person \") (lambda (^(Constraint Person) x0) (Person.relationshipType_? (?= (RelationshipType.Love))))))", "idx": "2501", "datum_id": {"dialogue_id": "287f1291-6406-4d70-8ae7-8df833617605", "turn_index": 3}}
{"user_turn_0": "Thanks for the help . Create a reminder for my next event", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Thanks , also add my Manchester flight scheduled to the calendar", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (?= (^(DateTimeRange Flight) reference (Flight.destination_? (Place.location_? (?= \" Manchester \"))))))))", "idx": "2505", "datum_id": {"dialogue_id": "980b4e85-46f6-4c94-a352-37561c307e2a", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , deliver today 's event to my son .", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Son))))) (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))))))))))", "idx": "2508", "datum_id": {"dialogue_id": "fbb1ca43-ede5-4590-b94f-b0e9c1aa10f8", "turn_index": 0}}
{"user_turn_0": "Please do", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Deliver it to 07716524125", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (Message.recipients_? (Contact.phoneNumber_? (?= \" 07716524125 \"))))))", "idx": "2510", "datum_id": {"dialogue_id": "fbb1ca43-ede5-4590-b94f-b0e9c1aa10f8", "turn_index": 2}}
{"user_turn_0": "Deliver it to 07716524125", "agent_turn_0": "Root system prompt message create object equals textContent", "user_turn_1": "It 's going to be next Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (& x0 (Message.textContent_? (?= \" It will be next Saturday \"))))))", "idx": "2511", "datum_id": {"dialogue_id": "fbb1ca43-ede5-4590-b94f-b0e9c1aa10f8", "turn_index": 3}}
{"user_turn_0": "Thanks for the help . Can you remind me to buy gifts at 7:30 ?", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Schedule to remind me on the 10th please", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.atDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.date_? (Date.day_? (?= (Day.apply 10L))))))))", "idx": "2522", "datum_id": {"dialogue_id": "86c9c45d-3de9-41fc-97f1-9f6629c7fa94", "turn_index": 4}}
{"user_turn_0": "I 'd rather a different hotel that has a low price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals The Hot Springs price equals 155", "user_turn_1": "Book that please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "2525", "datum_id": {"dialogue_id": "8fef3b9c-80e1-4cad-81ae-ddfb122e0537", "turn_index": 2}}
{"user_turn_0": "1 PM", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals endDateTime", "user_turn_1": "It 'll be a two hour event", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.duration_? (AppleDuration.hour_? (?= 2)))))))", "idx": "2537", "datum_id": {"dialogue_id": "7b0784fd-9d73-4fce-adea-f669faab89ff", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , schedule the event at 9:30 AM on the 24th", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 24L)))) (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 9L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM))))))))))", "idx": "2540", "datum_id": {"dialogue_id": "7b626b72-18f8-40fc-98b2-90cc3587ee80", "turn_index": 0}}
{"user_turn_0": "Location of Gaming Summit with Donna", "agent_turn_0": "Root system inform calendarEvent find focus equals location equals Rainbow Room", "user_turn_1": "About how long will it take to get there", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (Place.location_? (^((Constraint String)) refer)))))", "idx": "2544", "datum_id": {"dialogue_id": "7b626b72-18f8-40fc-98b2-90cc3587ee80", "turn_index": 4}}
{"user_turn_0": "The event will end at 8:30 PM", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "I would like to book a round trip to Belfast City for on passage and I will be leaving on the 14th", "tgt": "(plan (^(Flight) Book :object (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast City \"))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 14L))))))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.passengers_? (?= 1)))))", "idx": "2578", "datum_id": {"dialogue_id": "b9839d0a-86fd-48e6-8048-847c143b917c", "turn_index": 3}}
{"user_turn_0": "I return on the 25th", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 meridiem equals PM", "user_turn_1": "That one is fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (^((Constraint Time)) refer))))))", "idx": "2588", "datum_id": {"dialogue_id": "cdb6cc28-b0ab-45be-b822-ba788715a2b6", "turn_index": 3}}
{"user_turn_0": "Yes , I 'm returning on the 18th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM price equals 134", "user_turn_1": "Okay , it looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "2594", "datum_id": {"dialogue_id": "4468711b-a3c3-4d23-b0e2-e61d25133254", "turn_index": 4}}
{"user_turn_0": "How do I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Astro Resort \"))))))", "idx": "2602", "datum_id": {"dialogue_id": "776b0a0b-df40-4761-8933-9927bdb13101", "turn_index": 6}}
{"user_turn_0": "Saturday", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Can you check at the four seasons Hotel ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.hotelName \") (lambda (^(Constraint String) x0) (?= \" Four Seasons \"))))", "idx": "2605", "datum_id": {"dialogue_id": "776b0a0b-df40-4761-8933-9927bdb13101", "turn_index": 9}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i 'd really like to send an event to my father if you could help me out", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Father))))))))", "idx": "2608", "datum_id": {"dialogue_id": "9d28af76-7aeb-4417-855d-4d51cfbb15e1", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , please go ahead and book one way flight to Edinburgh for 3 . people . I am leaving on Tuesday .", "tgt": "(plan (^(Flight) Book :object (& (& (& (Flight.destination_? (Place.location_? (?= \" Edinburgh \"))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))))) (Flight.tripType_? (?= (TripType.oneWay)))) (Flight.passengers_? (?= 3)))))", "idx": "2640", "datum_id": {"dialogue_id": "de92d1dd-ad23-4115-a2ea-90b8d89e13a2", "turn_index": 0}}
{"user_turn_0": "From Birmingham", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 1 meridiem equals PM price equals 150", "user_turn_1": "Fine . Go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "2642", "datum_id": {"dialogue_id": "de92d1dd-ad23-4115-a2ea-90b8d89e13a2", "turn_index": 2}}
{"user_turn_0": "Thanks . Go ahead", "agent_turn_0": "Root system inform flight book Completed", "user_turn_1": "Now I need to book restaurant in Queensbury . Make it a not expensive one", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.location_? (?= \" Queensbury \")) (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High))))))))", "idx": "2644", "datum_id": {"dialogue_id": "de92d1dd-ad23-4115-a2ea-90b8d89e13a2", "turn_index": 4}}
{"user_turn_0": "Does it have a private bathroom", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "2671", "datum_id": {"dialogue_id": "3f038fb3-d90c-4118-bbf0-4dbd79ae26bf", "turn_index": 4}}
{"user_turn_0": "Manchester please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM price equals 142", "user_turn_1": "I 'd prefer the 2:50 PM flight please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "2683", "datum_id": {"dialogue_id": "92ef2d61-3258-493f-ba18-ed1d532aa1d9", "turn_index": 4}}
{"user_turn_0": "No , I 'm leaving from Sheffield", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM", "user_turn_1": "That one works for me !", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "2692", "datum_id": {"dialogue_id": "745c2eb9-8152-425d-8d31-dfa19ceb356c", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , what 's La Zilla restaurant rated at ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.rating_? (^(Number) always)) :object (Restaurant.restaurantName_? (?= \" La Zilla \"))))", "idx": "2700", "datum_id": {"dialogue_id": "33737f9a-8e67-4768-a6e1-6e2c422f173e", "turn_index": 0}}
{"user_turn_0": "Hello , what 's La Zilla restaurant rated at ?", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 3", "user_turn_1": "Please book a table for 4 people there", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.restaurantName_? (^((Constraint String)) refer)) (Restaurant.tableSize_? (?= 4)))))", "idx": "2701", "datum_id": {"dialogue_id": "33737f9a-8e67-4768-a6e1-6e2c422f173e", "turn_index": 1}}
{"user_turn_0": "Yes for Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 11 minute equals 45 meridiem equals AM price equals 199", "user_turn_1": "I like that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "2709", "datum_id": {"dialogue_id": "110a7fe3-c818-47ce-9d66-c0638adff078", "turn_index": 4}}
{"user_turn_0": "Three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is breakfast included ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "2731", "datum_id": {"dialogue_id": "fa246318-08f3-4641-829e-0fd533ccb849", "turn_index": 5}}
{"user_turn_0": "Is breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Book it anyway", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "2732", "datum_id": {"dialogue_id": "fa246318-08f3-4641-829e-0fd533ccb849", "turn_index": 6}}
{"user_turn_0": "I 'd like it to be at an expensive restaurant", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Acacia Saint", "user_turn_1": "Do they take credit cards ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "2743", "datum_id": {"dialogue_id": "5df8aade-c6e7-4cc3-906c-6339d641e65a", "turn_index": 5}}
{"user_turn_0": "Which restaurants have five stars ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Encino", "user_turn_1": "That works . Book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" La Zilla \"))))))", "idx": "2745", "datum_id": {"dialogue_id": "5df8aade-c6e7-4cc3-906c-6339d641e65a", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , i need a hotel with at least three stars from November 12th to the 16th .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.rating_? (?>= (someSalient (?= 3)))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 12L)))) (month_? (Date.month_? (?= (November)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 16L))))))))))", "idx": "2748", "datum_id": {"dialogue_id": "785e0404-f6ce-4550-a1d0-b067e46504d9", "turn_index": 0}}
{"user_turn_0": "Does it have a private bath room ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Cool , let 's do it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "2751", "datum_id": {"dialogue_id": "785e0404-f6ce-4550-a1d0-b067e46504d9", "turn_index": 3}}
{"user_turn_0": "On second thought , give me 3 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Move the check out date to Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Sunday))))))", "idx": "2754", "datum_id": {"dialogue_id": "785e0404-f6ce-4550-a1d0-b067e46504d9", "turn_index": 6}}
{"user_turn_0": "Move the check out date to Sunday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "2755", "datum_id": {"dialogue_id": "785e0404-f6ce-4550-a1d0-b067e46504d9", "turn_index": 7}}
{"user_turn_0": "Ok , reserve me to check in at 10", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Can you change my appointment to be tomorrow instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (?= (Tomorrow))))))))", "idx": "2759", "datum_id": {"dialogue_id": "00ca9da7-3e28-4f20-a6e4-d0d332230339", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , let me know what is going on from 1:00 to 3:00 on my schedule .", "tgt": "(plan (^(CalendarEvent) Find :object (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 1L))))) (DateTimeRange.endDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 3L)))))))))", "idx": "2772", "datum_id": {"dialogue_id": "1b4285e9-8413-415c-a9dd-bbee43657d1c", "turn_index": 0}}
{"user_turn_0": "What 's the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Please book", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "2791", "datum_id": {"dialogue_id": "5d19371d-4290-467c-a8d8-5c7f210ebba6", "turn_index": 4}}
{"user_turn_0": "Three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "2794", "datum_id": {"dialogue_id": "5d19371d-4290-467c-a8d8-5c7f210ebba6", "turn_index": 7}}
{"user_turn_0": "Call him now", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Thanks , next find me accommodations in Queen 's Park that are moderately priced , please", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= \" Queen's Park \")) (Hotel.priceRange_? (?= (PriceRange.Moderate))))))", "idx": "2798", "datum_id": {"dialogue_id": "ec913e74-0fc3-40b1-9a30-27cb8806f47a", "turn_index": 2}}
{"user_turn_0": "Actually , I want a different hotel , one that has a three star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Bourbon Bliss price equals 135", "user_turn_1": "Is there a car park there ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasParking_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "2801", "datum_id": {"dialogue_id": "ec913e74-0fc3-40b1-9a30-27cb8806f47a", "turn_index": 5}}
{"user_turn_0": "Yes price range should be moderate", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Juniper Cloud", "user_turn_1": "What is the average cost per person", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "2805", "datum_id": {"dialogue_id": "31c77cad-e38e-4f01-baff-28880061eeb4", "turn_index": 3}}
{"user_turn_0": "What is the average cost per person", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 36", "user_turn_1": "Book it for me on January 24th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (^((Constraint String)) refer))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (& (Date.month_? (?= (January))) (Date.day_? (?= (Day.apply 24L)))))))))))", "idx": "2806", "datum_id": {"dialogue_id": "31c77cad-e38e-4f01-baff-28880061eeb4", "turn_index": 4}}
{"user_turn_0": "Yes . please", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Now send my train schedule to Glasgow to Lauren", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Lauren \")))) (Message.textContent_? (?= (^(String Train) reference (Train.destination_? (Place.location_? (?= \" Glasgow \")))))))))", "idx": "2825", "datum_id": {"dialogue_id": "b7b69c25-806c-4414-bc60-16a5e5be47e1", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , where will you be departing from ?", "tgt": "(plan (^(Flight) Book :object (& (Flight.destination_? (Place.location_? (?= \" Edinburgh \"))) (Flight.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (Time.hour_? (?= (Hour.apply 11L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "2831", "datum_id": {"dialogue_id": "1df34975-f608-4039-bd7e-93ee6ca9d887", "turn_index": 0}}
{"user_turn_0": "Hi assistant , where will you be departing from ?", "agent_turn_0": "Root system prompt flight book object equals source", "user_turn_1": "What date will you be leaving ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.source_? (Place.location_? (?= \" Liverpool \")))))))", "idx": "2832", "datum_id": {"dialogue_id": "1df34975-f608-4039-bd7e-93ee6ca9d887", "turn_index": 1}}
{"user_turn_0": "On what airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "I prefer the 3:45 PM departure", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "2835", "datum_id": {"dialogue_id": "1df34975-f608-4039-bd7e-93ee6ca9d887", "turn_index": 4}}
{"user_turn_0": "Hello assistant , book a restaurant that has a car park", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName location", "user_turn_1": "Find me a three stare restaurant in Oxford", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.location_? (?= \" Oxford Circus \"))) (Restaurant.rating_? (?= 3))))))", "idx": "2845", "datum_id": {"dialogue_id": "c2b16be0-7b61-4f0a-a2c6-a69e342612d6", "turn_index": 1}}
{"user_turn_0": "I do n't like any of those , show all food options", "agent_turn_0": "Root system prompt restaurant book object equals priceRange", "user_turn_1": "Give me something classy and expensive", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.priceRange_? (?= (PriceRange.High)))))))", "idx": "2848", "datum_id": {"dialogue_id": "c2b16be0-7b61-4f0a-a2c6-a69e342612d6", "turn_index": 4}}
{"user_turn_0": "Give me something classy and expensive", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone", "user_turn_1": "Yes please", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "2849", "datum_id": {"dialogue_id": "c2b16be0-7b61-4f0a-a2c6-a69e342612d6", "turn_index": 5}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "For how many people", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Goat and Guru \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "2850", "datum_id": {"dialogue_id": "c2b16be0-7b61-4f0a-a2c6-a69e342612d6", "turn_index": 6}}
{"user_turn_0": "For how many people", "agent_turn_0": "Root system prompt restaurant book object equals tableSize", "user_turn_1": "Ok here is your info , should I send it now ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.tableSize_? (?= 4))))))", "idx": "2851", "datum_id": {"dialogue_id": "c2b16be0-7b61-4f0a-a2c6-a69e342612d6", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i would like to book a ride that will take me from Ash Grove Industrial Park to the calendar event venue please .", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" Ash Grove Industrial Park \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))))))))", "idx": "2870", "datum_id": {"dialogue_id": "4f783462-6569-417f-822c-5c020cc72e30", "turn_index": 0}}
{"user_turn_0": "I need two , please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "2886", "datum_id": {"dialogue_id": "c4b906cb-29ef-4175-b93b-22009d8bfc72", "turn_index": 6}}
{"user_turn_0": "It 's economy class", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "Give me the business class flight at 1:40", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.source_? (Place.location_? (?= \" Liverpool \"))) (Flight.departureDateTime_? (& (^((Constraint (List DateTime))) refer) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 4))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "2917", "datum_id": {"dialogue_id": "fcf151a9-c83a-49bc-a5df-d2ef4b002ea6", "turn_index": 4}}
{"user_turn_0": "Hey assistant , tell me the price point of Jurassic Pokiest that 's in Waterloo .", "agent_turn_0": "Root system inform restaurant find focus equals priceRange equals Low", "user_turn_1": "Okay , and what 's the rating there ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.rating_? (^(Number) always)) :object (Restaurant.restaurantName_? (?= \" Jurassic Pork \"))))", "idx": "2926", "datum_id": {"dialogue_id": "72cd0276-311c-4828-8ed9-31186624910c", "turn_index": 1}}
{"user_turn_0": "I want another hotel that has at least a 2 star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals The Fresco price equals 119", "user_turn_1": "Does that one have laundry ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.laundry_? (^(Boolean) always)))))", "idx": "2943", "datum_id": {"dialogue_id": "d918aa46-d434-4774-bec9-63079f4d0598", "turn_index": 5}}
{"user_turn_0": "Does that one have laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Ok . Book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" The Watson \"))))))", "idx": "2944", "datum_id": {"dialogue_id": "d918aa46-d434-4774-bec9-63079f4d0598", "turn_index": 6}}
{"user_turn_0": "Bristol", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM", "user_turn_1": "I would like the 4:30 PM train", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "2952", "datum_id": {"dialogue_id": "aca585d6-250e-4cc0-b0ee-0c3ee60f341c", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i want to book hotel with low price . I will check in today and check out on April 12th and I want king sized bed .", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.priceRange_? (?= (PriceRange.Low))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (& (Date.day_? (?= (Day.apply 12L))) (Date.month_? (?= (April))))))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.King)))))))", "idx": "2988", "datum_id": {"dialogue_id": "8c9b0209-c17c-49ac-aa98-12c1b39b2350", "turn_index": 0}}
{"user_turn_0": "Hello assistant , i want to book hotel with low price . I will check in today and check out on April 12th and I want king sized bed .", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "It should be in Hammersmith with three star rating", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.location_? (?= \" Hammersmith \"))) (Hotel.rating_? (?= 3))))))", "idx": "2989", "datum_id": {"dialogue_id": "8c9b0209-c17c-49ac-aa98-12c1b39b2350", "turn_index": 1}}
{"user_turn_0": "And what 's the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "2991", "datum_id": {"dialogue_id": "8c9b0209-c17c-49ac-aa98-12c1b39b2350", "turn_index": 3}}
{"user_turn_0": "Do you know how much it is ?", "agent_turn_0": "Root system inform flight find focus equals price equals 127", "user_turn_1": "Ok fine , book this flight for one passenger", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.class_? (?= (FlightClass.Economy))) (Flight.destination_? (Place.location_? (?= \" Glasgow \")))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 1))))))", "idx": "3013", "datum_id": {"dialogue_id": "f7a480db-942a-4626-821d-46e3bf22b19e", "turn_index": 4}}
{"user_turn_0": "I prefer another hotel with at least one star rating", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.rating_? (?>= (someSalient (?= 1))))))))", "idx": "3038", "datum_id": {"dialogue_id": "e5b27e3f-6fd4-44f3-b3ad-124408a5be43", "turn_index": 2}}
{"user_turn_0": "Book it for me", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Hilton price equals 145", "user_turn_1": "I need two room and the room type does n't matter", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "3039", "datum_id": {"dialogue_id": "e5b27e3f-6fd4-44f3-b3ad-124408a5be43", "turn_index": 3}}
{"user_turn_0": "I need two room and the room type does n't matter", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "That 's fine please book the hotel for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Chestnut Tree \"))))))", "idx": "3040", "datum_id": {"dialogue_id": "e5b27e3f-6fd4-44f3-b3ad-124408a5be43", "turn_index": 4}}
{"user_turn_0": "That 's fine please book the hotel for me", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "Here 's the directions", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 14L)))))))))))", "idx": "3041", "datum_id": {"dialogue_id": "e5b27e3f-6fd4-44f3-b3ad-124408a5be43", "turn_index": 5}}
{"user_turn_0": "Here 's the directions", "agent_turn_0": "Root system prompt hotel book object equals roomType rooms", "user_turn_1": "Here 's the directions to your destination", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.roomType_? (List.exists_? (?= (RoomType.Any))))) (Hotel.rooms_? (?= 2))))))", "idx": "3042", "datum_id": {"dialogue_id": "e5b27e3f-6fd4-44f3-b3ad-124408a5be43", "turn_index": 6}}
{"user_turn_0": "Here 's the directions to your destination", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do you have any preferred room type ? How many rooms will you be needing ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "3043", "datum_id": {"dialogue_id": "e5b27e3f-6fd4-44f3-b3ad-124408a5be43", "turn_index": 7}}
{"user_turn_0": "Saturday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 2 object equals nextDepartureDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM price equals 142", "user_turn_1": "Looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "3061", "datum_id": {"dialogue_id": "0619b3a7-5f77-40db-9fe2-136aa210e5d8", "turn_index": 5}}
{"user_turn_0": "Actually , I need the departure date of the first trip to be changed to tomorrow", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM price equals 170", "user_turn_1": "Sounds good . Please book that flight for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "3063", "datum_id": {"dialogue_id": "0619b3a7-5f77-40db-9fe2-136aa210e5d8", "turn_index": 7}}
{"user_turn_0": "No , please cancel it", "agent_turn_0": "Root systen inform calendarEvent create Canceled", "user_turn_1": "Can you add an event to take place at 6:30 o'clock to my calendar ?", "tgt": "(plan (do (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (?= (Minute.apply 30L)))))))) (^(Reminder) Create :object (Reminder.reminderContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))))))", "idx": "3079", "datum_id": {"dialogue_id": "26e40020-d877-42d1-9448-7edea05cc8c3", "turn_index": 4}}
{"user_turn_0": "I 'm going to 21 Parkfield Street", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals Tie the Knot", "user_turn_1": "Change the destination to 66 Park Avenue", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" 66 Park Avenue \"))))", "idx": "3082", "datum_id": {"dialogue_id": "d3db44a8-8959-4bff-a459-b54064f9f915", "turn_index": 2}}
{"user_turn_0": "Hey assistant , i want to reserve a train ticket from Newcastle to Glasgow .", "agent_turn_0": "Root system prompt train book object equals departureDateTime", "user_turn_1": "I am departing on tomorrow and make sure I can arrive by 8PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& (& x0 (Train.departureDateTime_? (DateTime.date_? (?= (Tomorrow))))) (Train.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (Time.hour_? (?= (Hour.apply 8L))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "3086", "datum_id": {"dialogue_id": "5ae6c44c-e7c1-4c0a-a5b7-b45fe06bcfe0", "turn_index": 1}}
{"user_turn_0": "I do n't care . It just needs to have more than zero stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Lakeside Demon", "user_turn_1": "Do they have parking there ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "3094", "datum_id": {"dialogue_id": "0213b98c-eff2-4a37-899b-1cbb5fa3c3f4", "turn_index": 3}}
{"user_turn_0": "None of these suit me . Can I see more choices ? The type of food does n't matter", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jurassic Pork", "user_turn_1": "Do they have parking there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "3097", "datum_id": {"dialogue_id": "0213b98c-eff2-4a37-899b-1cbb5fa3c3f4", "turn_index": 6}}
{"user_turn_0": "Do they have parking there ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Good , book it for 3:00 in the afternoon please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" The Lakeside Demon \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "3098", "datum_id": {"dialogue_id": "0213b98c-eff2-4a37-899b-1cbb5fa3c3f4", "turn_index": 7}}
{"user_turn_0": "Is it a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "That 's fine . I 'd like to book this flight for two passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Glasgow \"))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (^((Constraint (List DateTime))) refer)))) (Flight.class_? (?= (FlightClass.Economy)))) (Flight.passengers_? (?= 2))))))", "idx": "3105", "datum_id": {"dialogue_id": "1b0014aa-48d0-4d59-9339-426cc32e6d59", "turn_index": 4}}
{"user_turn_0": "Does it come with a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Can you book it for me ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "3111", "datum_id": {"dialogue_id": "f6d8540f-2737-45f3-b7e8-4b4b8be52a20", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , deliver my 1:30 AM event to Joan .", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM)))))))))) (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Joan \")))))))", "idx": "3144", "datum_id": {"dialogue_id": "1e389830-6258-4539-9128-630e282b26e7", "turn_index": 0}}
{"user_turn_0": "Send it please", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Send off my next calendar event to 07924846814", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))) (Message.recipients_? (Contact.phoneNumber_? (?= \" 07924846814 \")))))))", "idx": "3147", "datum_id": {"dialogue_id": "1e389830-6258-4539-9128-630e282b26e7", "turn_index": 3}}
{"user_turn_0": "Can you book it for two passengers ?", "agent_turn_0": "Root system prompt flight book object equals tripType", "user_turn_1": "No I do not actually", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& x0 (Flight.nextDestination_? (Place.location_? (?= \" Zurich \")))) (Flight.nextDepartureDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 21L)))))))))", "idx": "3163", "datum_id": {"dialogue_id": "dc7a19eb-b310-4097-bf41-8af003a94091", "turn_index": 4}}
{"user_turn_0": "No I do not actually", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 5 object equals nextDepartureDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM price equals 145", "user_turn_1": "That one works for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "3164", "datum_id": {"dialogue_id": "dc7a19eb-b310-4097-bf41-8af003a94091", "turn_index": 5}}
{"user_turn_0": "Any room type , and I need one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel without penalty ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "3170", "datum_id": {"dialogue_id": "e96777f7-3a68-460c-b4c1-2cbc957cb3e3", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , i need a hotel room with a king sized bed in Canary Wharf , checking in today and checking out on the 18th , and not too expensive .", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" Canary Wharf \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 18L)))))))) (Hotel.priceRange_? (?= (PriceRange.Low)))) (Hotel.roomType_? (List.exists_? (?= (RoomType.King)))))))", "idx": "3187", "datum_id": {"dialogue_id": "53dcc34b-bd4f-4a5e-b33b-d96ae8864870", "turn_index": 0}}
{"user_turn_0": "I want a different one , with at least three stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Embassy Suites price equals 155", "user_turn_1": "Can I do laundry there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "3190", "datum_id": {"dialogue_id": "53dcc34b-bd4f-4a5e-b33b-d96ae8864870", "turn_index": 3}}
{"user_turn_0": "Can I do laundry there ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Palm Bliss \"))))))", "idx": "3191", "datum_id": {"dialogue_id": "53dcc34b-bd4f-4a5e-b33b-d96ae8864870", "turn_index": 4}}
{"user_turn_0": "I need 2 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Edit my check in to today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "3193", "datum_id": {"dialogue_id": "53dcc34b-bd4f-4a5e-b33b-d96ae8864870", "turn_index": 6}}
{"user_turn_0": "Edit my check in to today", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel for free ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "3194", "datum_id": {"dialogue_id": "53dcc34b-bd4f-4a5e-b33b-d96ae8864870", "turn_index": 7}}
{"user_turn_0": "Is there a boat race on my calendar ?", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Make that event on the calendar", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.eventName_? (?= \" mountain tour \")) (CalendarEvent.recurrenceUnit_? (RecurrenceUnit.Week_? (^(Number) always))))))", "idx": "3200", "datum_id": {"dialogue_id": "34afe5d4-5843-4079-9942-4188823930f6", "turn_index": 4}}
{"user_turn_0": "Which of the options serves Seafood ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Interknack", "user_turn_1": "About how much will it cost per person ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "3204", "datum_id": {"dialogue_id": "94ecf851-fa74-4631-8b4a-ddfe05dd47c8", "turn_index": 3}}
{"user_turn_0": "About how much will it cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 42", "user_turn_1": "Please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Floq \"))))))", "idx": "3205", "datum_id": {"dialogue_id": "94ecf851-fa74-4631-8b4a-ddfe05dd47c8", "turn_index": 4}}
{"user_turn_0": "which of the restaurants serve American Food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Joint", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Kiwi Sea \"))))))", "idx": "3224", "datum_id": {"dialogue_id": "71b3072e-8300-4041-b672-6b65a49302a8", "turn_index": 4}}
{"user_turn_0": "Give me a different hotel that does n't have a rating of zero stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Palm Bliss price equals 150", "user_turn_1": "Are laundry services provided at the hotel ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.laundry_? (^(Boolean) always)))))", "idx": "3236", "datum_id": {"dialogue_id": "31c053a7-2cf0-4a08-9372-b2f0c7f8e4ac", "turn_index": 3}}
{"user_turn_0": "Are laundry services provided at the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "All right . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Farmhouse Inn \"))))))", "idx": "3237", "datum_id": {"dialogue_id": "31c053a7-2cf0-4a08-9372-b2f0c7f8e4ac", "turn_index": 4}}
{"user_turn_0": "I need three rooms", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Change my check in date to today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "3241", "datum_id": {"dialogue_id": "31c053a7-2cf0-4a08-9372-b2f0c7f8e4ac", "turn_index": 8}}
{"user_turn_0": "Change my check in date to today", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is free cancellation supported ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "3242", "datum_id": {"dialogue_id": "31c053a7-2cf0-4a08-9372-b2f0c7f8e4ac", "turn_index": 9}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , i need to book a table at the Interknack restaurant for 5 people on Thursday at 5 PM", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.restaurantName_? (?= \" Interknack \")) (Restaurant.tableSize_? (?= 5))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 5L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "3244", "datum_id": {"dialogue_id": "3e71a7cc-743d-4f05-87fe-dc1b631da0c3", "turn_index": 0}}
{"user_turn_0": "I think I want one that 's not so expensive", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Club Quarters price equals 135", "user_turn_1": "Do you know if that hotel spot has a private bath room ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.privateBath_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "3251", "datum_id": {"dialogue_id": "afaf06d9-de55-4ff5-af0d-c9e986ef7010", "turn_index": 2}}
{"user_turn_0": "I still would prefer another hotel with at least a three star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Blue Moon price equals 145", "user_turn_1": "Does the hotel have a car park in it ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasParking_? (^(Boolean) always)))))", "idx": "3253", "datum_id": {"dialogue_id": "afaf06d9-de55-4ff5-af0d-c9e986ef7010", "turn_index": 4}}
{"user_turn_0": "Does the hotel have a car park in it ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Okay then , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Harborview \"))))))", "idx": "3254", "datum_id": {"dialogue_id": "afaf06d9-de55-4ff5-af0d-c9e986ef7010", "turn_index": 5}}
{"user_turn_0": "Wait , can I have 3 rooms please ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Hang on , can you actually change the check out to the 23rd", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Day)) Path.apply \" object.dateTimeRange.endDateTime.date.day \") (lambda (^(Constraint Day) x0) (?= (Day.apply 23L)))))", "idx": "3256", "datum_id": {"dialogue_id": "afaf06d9-de55-4ff5-af0d-c9e986ef7010", "turn_index": 7}}
{"user_turn_0": "Hang on , can you actually change the check out to the 23rd", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do you know if I can cancel it if I want ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "3257", "datum_id": {"dialogue_id": "afaf06d9-de55-4ff5-af0d-c9e986ef7010", "turn_index": 8}}
{"user_turn_0": "What is the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Book this for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "3278", "datum_id": {"dialogue_id": "dba0b7af-dc8c-41f8-b18a-3b8970020cdf", "turn_index": 3}}
{"user_turn_0": "Three rooms are needed", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Am I able to change the check in date to today ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Today)))))", "idx": "3282", "datum_id": {"dialogue_id": "dba0b7af-dc8c-41f8-b18a-3b8970020cdf", "turn_index": 7}}
{"user_turn_0": "Am I able to change the check in date to today ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is prepayment required ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "3283", "datum_id": {"dialogue_id": "dba0b7af-dc8c-41f8-b18a-3b8970020cdf", "turn_index": 8}}
{"user_turn_0": "Does it have onsite parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "That 's fine . Can I get a reservation there at 11 on April 11th ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (April))) (Date.day_? (?= (Day.apply 11L)))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 11L)))))))))))", "idx": "3287", "datum_id": {"dialogue_id": "02775e01-15e2-4d27-8f60-f49f8055b6ac", "turn_index": 2}}
{"user_turn_0": "That 's fine . Can I get a reservation there at 11 on April 11th ?", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "OK , can you switch it to today ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Today)))))", "idx": "3288", "datum_id": {"dialogue_id": "02775e01-15e2-4d27-8f60-f49f8055b6ac", "turn_index": 3}}
{"user_turn_0": "None of them looks good . How about restaurants that serve Chinese food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Lakeside Demon", "user_turn_1": "That 's fine . Book it for me at today 2:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Empirica \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "3294", "datum_id": {"dialogue_id": "068b6dbc-e89a-4e47-bdd2-43fc4e8ce738", "turn_index": 3}}
{"user_turn_0": "the 19th", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "3313", "datum_id": {"dialogue_id": "efbbd185-a09a-4617-a38f-8f83dd29a852", "turn_index": 6}}
{"user_turn_0": "It 's for three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I need to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "3323", "datum_id": {"dialogue_id": "b2ea51d8-b33f-4522-81b1-2cd207405891", "turn_index": 3}}
{"user_turn_0": "Will I need to prepay ?", "agent_turn_0": "Root system inform hotel find focus equals prePayment equals True", "user_turn_1": "Change the check out to Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Thursday))))))", "idx": "3324", "datum_id": {"dialogue_id": "b2ea51d8-b33f-4522-81b1-2cd207405891", "turn_index": 4}}
{"user_turn_0": "Change the check out to Thursday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I need to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "3325", "datum_id": {"dialogue_id": "b2ea51d8-b33f-4522-81b1-2cd207405891", "turn_index": 5}}
{"user_turn_0": "I 'd prefer a place with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capricorn", "user_turn_1": "Can I sit outside ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "3347", "datum_id": {"dialogue_id": "a3aae7e0-d219-41ec-9e4c-d7369e71d28e", "turn_index": 7}}
{"user_turn_0": "Can I sit outside ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "That 's fine . Book it for 3 o'clock on the 13th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Canton Silk \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 13L))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 3L)))))))))))", "idx": "3348", "datum_id": {"dialogue_id": "a3aae7e0-d219-41ec-9e4c-d7369e71d28e", "turn_index": 8}}
{"user_turn_0": "Hello , get me a business class flight .", "agent_turn_0": "Root system prompt flight book object equals source departureDateTime", "user_turn_1": "When are you leaving ? and Where are you leaving from ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& x0 (Flight.source_? (Place.location_? (?= \" London \")))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (?= (Today)))))))))", "idx": "3352", "datum_id": {"dialogue_id": "115d6e93-69e4-4d5f-b58c-db4f238c2249", "turn_index": 1}}
{"user_turn_0": "Is that a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Great , book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "3355", "datum_id": {"dialogue_id": "115d6e93-69e4-4d5f-b58c-db4f238c2249", "turn_index": 4}}
{"user_turn_0": "One which has parking and is n't expensive", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Green Acres price equals 150", "user_turn_1": "Does that come with breakfast ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "3380", "datum_id": {"dialogue_id": "d6b9313c-7c4b-4995-9619-64e21939674d", "turn_index": 2}}
{"user_turn_0": "Does that come with breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Alright , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "3381", "datum_id": {"dialogue_id": "d6b9313c-7c4b-4995-9619-64e21939674d", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , where will you be departing from ?", "tgt": "(plan (^(Flight) Book :object (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast City \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow)))))) (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday))))))))", "idx": "3400", "datum_id": {"dialogue_id": "a7a02229-a2a2-4624-be96-96427441a8dc", "turn_index": 0}}
{"user_turn_0": "Hello , where will you be departing from ?", "agent_turn_0": "Root system prompt flight book object equals source", "user_turn_1": "Book me a round trip air ticket to Belfast City . I 'm departing tomorrow and returning on Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.source_? (Place.location_? (?= \" Manchester \")))))))", "idx": "3401", "datum_id": {"dialogue_id": "a7a02229-a2a2-4624-be96-96427441a8dc", "turn_index": 1}}
{"user_turn_0": "Does it have private bath rooms ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Go ahead and book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "3408", "datum_id": {"dialogue_id": "bb368726-dc9d-468d-aad2-3f6776ff5b12", "turn_index": 3}}
{"user_turn_0": "I would prefer a different hotel with a moderate price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Bourbon Bliss price equals 150", "user_turn_1": "I want to book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Hilton \"))))))", "idx": "3414", "datum_id": {"dialogue_id": "c247d4c6-3718-4eb7-a3d2-0a4bd9c59fc8", "turn_index": 3}}
{"user_turn_0": "No , I will leave from Liverpool", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM price equals 201", "user_turn_1": "It 's OK , let me book it then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "3426", "datum_id": {"dialogue_id": "2c4187e6-c4e0-4f9c-b3b0-a5e23da5143e", "turn_index": 2}}
{"user_turn_0": "What cabin class is it ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "Actually , get me the one that departs at 2:30 PM , and make sure it 's business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.source_? (Place.location_? (?= \" London \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.tripType_? (?= (TripType.oneWay)))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "3437", "datum_id": {"dialogue_id": "d6e93659-5ea8-43da-a53e-8b9d3f496964", "turn_index": 2}}
{"user_turn_0": "I 'd rather have a place with at least two stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Grand Hyatt price equals 156", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" River Park \"))))))", "idx": "3469", "datum_id": {"dialogue_id": "7dfb33db-f7ff-44e3-aa0a-58fafba6fbde", "turn_index": 2}}
{"user_turn_0": "Book it", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "January 20th to the 21st", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 20L)))) (month_? (Date.month_? (?= (January)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 21L)))))))))))", "idx": "3470", "datum_id": {"dialogue_id": "7dfb33db-f7ff-44e3-aa0a-58fafba6fbde", "turn_index": 3}}
{"user_turn_0": "Find another hotel with five stars please", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Bourbon Bliss price equals 127", "user_turn_1": "Do they serve breakfast ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "3484", "datum_id": {"dialogue_id": "0185e005-2d5b-4c1f-ae1f-dc786a472869", "turn_index": 5}}
{"user_turn_0": "Do they serve breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "3485", "datum_id": {"dialogue_id": "0185e005-2d5b-4c1f-ae1f-dc786a472869", "turn_index": 6}}
{"user_turn_0": "Book it for 3 rooms please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Change the check - out date to Sunday instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Sunday))))))", "idx": "3488", "datum_id": {"dialogue_id": "0185e005-2d5b-4c1f-ae1f-dc786a472869", "turn_index": 9}}
{"user_turn_0": "Show me some with grill", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kiwi Sea", "user_turn_1": "Is there outdoor seating there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "3493", "datum_id": {"dialogue_id": "5914e136-5f8e-4346-a1a1-391fb63ba18d", "turn_index": 3}}
{"user_turn_0": "I want one with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dingo", "user_turn_1": "Is there parking", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "3495", "datum_id": {"dialogue_id": "5914e136-5f8e-4346-a1a1-391fb63ba18d", "turn_index": 5}}
{"user_turn_0": "Hm Show me some of those that are three stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Godka", "user_turn_1": "Credit car accepted ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "3497", "datum_id": {"dialogue_id": "5914e136-5f8e-4346-a1a1-391fb63ba18d", "turn_index": 7}}
{"user_turn_0": "Credit car accepted ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "Book it anyway", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Lakeside Demon \"))))))", "idx": "3498", "datum_id": {"dialogue_id": "5914e136-5f8e-4346-a1a1-391fb63ba18d", "turn_index": 8}}
{"user_turn_0": "Hey , give me Fairmont hotels rating", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Book it for me", "tgt": "(plan (^(Hotel) Book :object (Hotel.hotelName_? (^((Constraint String)) refer))))", "idx": "3503", "datum_id": {"dialogue_id": "9ca7fc10-03e4-4dab-98d5-80604e5349eb", "turn_index": 1}}
{"user_turn_0": "How long is the trip ?", "agent_turn_0": "Root system inform flight find focus equals duration equals hour equals 1 minute equals 20", "user_turn_1": "Book this flight for two passengers please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.source_? (Place.location_? (?= \" London Heathrow \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.tripType_? (?= (TripType.oneWay)))) (Flight.passengers_? (?= 2))))))", "idx": "3509", "datum_id": {"dialogue_id": "080999fe-0a0a-41d6-ae77-09b98fbea2ba", "turn_index": 2}}
{"user_turn_0": "Sunday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM price equals 142", "user_turn_1": "That one will do", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "3512", "datum_id": {"dialogue_id": "080999fe-0a0a-41d6-ae77-09b98fbea2ba", "turn_index": 5}}
{"user_turn_0": "Yes , please book the taxi for me", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "Next , please add the Dental routine visit with Nicola from 10:30 to noon on the calendar", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object \") (lambda (^(Constraint CalendarEvent) x0) (& (& (CalendarEvent.eventName_? (?= \" Dental routine visit \")) (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))))) (DateTimeRange.endDateTime_? (DateTime.time_? (?= (Noon))))))) (CalendarEvent.attendees_? (Contact.person_? (Person.name_? (?= \" Nicola \"))))))))", "idx": "3523", "datum_id": {"dialogue_id": "e7fca87d-bf63-4813-b714-849b341c0588", "turn_index": 4}}
{"user_turn_0": "I need two rooms", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "OK can you change my check - in to Tuesday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "3529", "datum_id": {"dialogue_id": "ab84d1c7-22ea-4fe8-93e0-4eafd7290796", "turn_index": 5}}
{"user_turn_0": "I want to eat American Food . The restaurant should have at least a three star rating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Juniper Cloud", "user_turn_1": "That one is fine with me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "3539", "datum_id": {"dialogue_id": "028622e5-5697-4adc-b84d-27a24448564d", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "OK assistant , let me change my reminder to 1:30 PM instead .", "tgt": "(plan (^(Reminder) Update :focus (Reminder.atDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))", "idx": "3549", "datum_id": {"dialogue_id": "2a4db0f7-4d1a-4aeb-a1a5-694e385d2c66", "turn_index": 0}}
{"user_turn_0": "Okay , book this for me", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "Thanks so much . Book a hotel in Ealing from February the 7th to the 13th", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= \" Ealing \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 7L)))) (month_? (Date.month_? (?= (February)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 13L))))))))))", "idx": "3559", "datum_id": {"dialogue_id": "dacf1b62-0884-4cdd-a9bc-48ef82b5e4f5", "turn_index": 4}}
{"user_turn_0": "What rating do they have there ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Sure , okay , you can book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "3569", "datum_id": {"dialogue_id": "9623493e-ee8c-4e6e-a523-51cfcc6d92cb", "turn_index": 3}}
{"user_turn_0": "Sure , okay , you can book it", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "I want to get there on the 13th of April", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (& (Date.month_? (?= (April))) (Date.day_? (?= (Day.apply 13L)))))))))))", "idx": "3570", "datum_id": {"dialogue_id": "9623493e-ee8c-4e6e-a523-51cfcc6d92cb", "turn_index": 4}}
{"user_turn_0": "Just the one , please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Umm , do they include breakfast there , by any chance ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "3574", "datum_id": {"dialogue_id": "9623493e-ee8c-4e6e-a523-51cfcc6d92cb", "turn_index": 8}}
{"user_turn_0": "Umm , do they include breakfast there , by any chance ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Okay , that 's fine . Let 's book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "3575", "datum_id": {"dialogue_id": "9623493e-ee8c-4e6e-a523-51cfcc6d92cb", "turn_index": 9}}
{"user_turn_0": "Hi there , where is tomorrow 's 10 AM event going to be at ?", "agent_turn_0": "Root system inform calendarEvent find focus equals location equals Skutt", "user_turn_1": "How much time does it take to get there ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (Place.location_? (^((Constraint String)) refer)))))", "idx": "3577", "datum_id": {"dialogue_id": "f5ec2594-a9f6-48b9-abfa-baef72efdadd", "turn_index": 1}}
{"user_turn_0": "Manchester", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "3589", "datum_id": {"dialogue_id": "0f7e029a-7108-4056-ba8f-69f0b8647600", "turn_index": 2}}
{"user_turn_0": "I 'll be leaving from Birmingham", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "What about October 16th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (& (Date.month_? (?= (October))) (Date.day_? (?= (Day.apply 16L)))))))", "idx": "3596", "datum_id": {"dialogue_id": "650d03d9-adfb-4e88-9383-9e3986bd7e95", "turn_index": 4}}
{"user_turn_0": "Hi there , book round trip flight in economy class . Going to Brussel .", "agent_turn_0": "Root system prompt flight book object equals source departureDateTime", "user_turn_1": "Leaving on February 4th , it is my vacation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (& (Date.month_? (?= (February))) (Date.day_? (?= (Day.apply 4L)))))))))))", "idx": "3599", "datum_id": {"dialogue_id": "451de883-2c19-41f8-ba27-57d2f8d21c1a", "turn_index": 1}}
{"user_turn_0": "Can you check if it is direct ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Fine . Go ahead and book it for one person", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Brussel \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.class_? (?= (FlightClass.Economy)))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 1))))))", "idx": "3602", "datum_id": {"dialogue_id": "451de883-2c19-41f8-ba27-57d2f8d21c1a", "turn_index": 4}}
{"user_turn_0": "Going back on 18th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 12 minute equals 50 meridiem equals PM price equals 166", "user_turn_1": "Sure , it looks good . Go ahead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 25L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "3604", "datum_id": {"dialogue_id": "451de883-2c19-41f8-ba27-57d2f8d21c1a", "turn_index": 6}}
{"user_turn_0": "Is there parking", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "3608", "datum_id": {"dialogue_id": "06b8a40a-fb5f-40ec-8527-47d78375d9cf", "turn_index": 2}}
{"user_turn_0": "Does it have breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Okay book this one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "3631", "datum_id": {"dialogue_id": "dccc72ca-e158-4c7b-a5bd-cdb2462f1452", "turn_index": 3}}
{"user_turn_0": "I will leave today after 10:30 AM", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM price equals 145", "user_turn_1": "I would actually prefer the departure at 2:20 PM in economy class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Paris \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "3645", "datum_id": {"dialogue_id": "206c71fd-3a47-4d47-9e07-fe8f706c1404", "turn_index": 5}}
{"user_turn_0": "The 18th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM price equals 142", "user_turn_1": "Looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "3647", "datum_id": {"dialogue_id": "206c71fd-3a47-4d47-9e07-fe8f706c1404", "turn_index": 7}}
{"user_turn_0": "Sheffield", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM", "user_turn_1": "That one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "3652", "datum_id": {"dialogue_id": "97ea2644-2304-4e6c-bfe0-00b63cb0fdde", "turn_index": 3}}
{"user_turn_0": "Can you check which airline it will be", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "OK , I would rather fly out at 3:45 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "3660", "datum_id": {"dialogue_id": "f89e71be-bbf8-4527-b48f-96b9a14f6413", "turn_index": 4}}
{"user_turn_0": "What about the rating", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Sweet", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "3667", "datum_id": {"dialogue_id": "b2292666-2a78-4840-9f17-ee266362a417", "turn_index": 3}}
{"user_turn_0": "Two", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "What if I need to cancel ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "3671", "datum_id": {"dialogue_id": "b2292666-2a78-4840-9f17-ee266362a417", "turn_index": 7}}
{"user_turn_0": "Can you book 2 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Before submitting it , I want to change the check - in date to the 9th . Is that possible ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 9L))))))", "idx": "3677", "datum_id": {"dialogue_id": "6c081b10-73e9-4003-9e35-4becc1670756", "turn_index": 4}}
{"user_turn_0": "I 'm leaving from London and going to Dublin . I just need a one way ticket", "agent_turn_0": "Root system prompt flight book object equals departureDateTime", "user_turn_1": "I want to leave on Tuesday after 9 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (List.exists_? (DateTime.time_? (?>= (someSalient (Time.hour_? (?= (Hour.apply 9L)))))))))))))", "idx": "3687", "datum_id": {"dialogue_id": "a25874a0-f126-451c-afb8-a2bc8112e304", "turn_index": 2}}
{"user_turn_0": "On the 23rd", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM price equals 125", "user_turn_1": "That looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "3691", "datum_id": {"dialogue_id": "a25874a0-f126-451c-afb8-a2bc8112e304", "turn_index": 6}}
{"user_turn_0": "Hmm . I 'm thinking an MPV would suit well", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals Haywood Way", "user_turn_1": "Actually , sorry . I need to make the drop off at the Westgate House", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Place)) Path.apply \" object.destination \") (lambda (^(Constraint Place) x0) (Place.location_? (?= \" Westgate House \")))))", "idx": "3696", "datum_id": {"dialogue_id": "8044752e-dd91-4210-85b3-062fde4d7f29", "turn_index": 3}}
{"user_turn_0": "Is there private bathrooms in the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Can you book me a room ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "3701", "datum_id": {"dialogue_id": "615c1c44-ba87-4a71-8a0f-a79efda14cf1", "turn_index": 2}}
{"user_turn_0": "I want to book two double rooms please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you change my check in to be the 15th instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 15L))))))", "idx": "3704", "datum_id": {"dialogue_id": "615c1c44-ba87-4a71-8a0f-a79efda14cf1", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , book a train from Newcastle to Glasgow on Queen Street that leaves on Friday and returns on August 11th .", "tgt": "(plan (^(Train) Book :object (& (& (& (Train.source_? (Place.location_? (?= \" Newcastle \"))) (Train.destination_? (Place.location_? (?= \" Glasgow Queen Street \")))) (Train.departureDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday)))))) (Train.returnDateTime_? (DateTime.date_? (& (Date.day_? (?= (Day.apply 11L))) (Date.month_? (?= (August)))))))))", "idx": "3706", "datum_id": {"dialogue_id": "3a520863-096a-455d-bc2a-74e7884bf948", "turn_index": 0}}
{"user_turn_0": "Yep sure", "agent_turn_0": "Root system inform train book Completed", "user_turn_1": "Thanks so much . Book a cheap restaurant with five stars in Hammersmith today at 3:30 PM", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Hammersmith \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Restaurant.priceRange_? (?= (PriceRange.Low)))) (Restaurant.rating_? (?= 5)))))", "idx": "3710", "datum_id": {"dialogue_id": "3a520863-096a-455d-bc2a-74e7884bf948", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i want to book an inexpensive restaurant is Hadley Wood .", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.location_? (?= \" Hadley Wood \")) (Restaurant.priceRange_? (?= (PriceRange.Low))))))", "idx": "3711", "datum_id": {"dialogue_id": "d6d92379-caed-48b4-8828-0a4d9922977d", "turn_index": 0}}
{"user_turn_0": "I want another restaurant with on - site parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flew Z", "user_turn_1": "Where is it located ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "3713", "datum_id": {"dialogue_id": "d6d92379-caed-48b4-8828-0a4d9922977d", "turn_index": 2}}
{"user_turn_0": "Where is it located ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals The Bull Islington", "user_turn_1": "Okay , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Floq \"))))))", "idx": "3714", "datum_id": {"dialogue_id": "d6d92379-caed-48b4-8828-0a4d9922977d", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , send Saturday 's event to Liam .", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday))))))))) (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Liam \")))))))", "idx": "3723", "datum_id": {"dialogue_id": "8b8368a5-094a-4362-998d-42b862fdd79d", "turn_index": 0}}
{"user_turn_0": "Hey , how long does it take to travel from The African Waistcoat to Haywood Way ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 45", "user_turn_1": "Thanks for the help . I prefer to book a round trip train ticket from Manchester Piccadilly to Victorial after 10AM", "tgt": "(plan (^(Train) Book :object (& (& (& (Train.source_? (Place.location_? (?= \" Manchester Piccadilly \"))) (Train.destination_? (Place.location_? (?= \" Victorial \")))) (Train.departureDateTime_? (DateTime.time_? (?>= (someSalient (& (Time.hour_? (?= (Hour.apply 10L))) (meridiem_? (?= (Meridiem.AM))))))))) (Train.tripType_? (?= (TripType.roundTrip))))))", "idx": "3734", "datum_id": {"dialogue_id": "6261be9c-50e8-4daa-8d76-14649298f3aa", "turn_index": 1}}
{"user_turn_0": "On the 19th", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM", "user_turn_1": "Sound good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (^((Constraint Hour)) refer)) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "3737", "datum_id": {"dialogue_id": "6261be9c-50e8-4daa-8d76-14649298f3aa", "turn_index": 4}}
{"user_turn_0": "Thanks so much . Set a reminder about the event", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Thanks , next i 'd like to make a 10 AM reservation at a cheap , Italian restaurant", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.priceRange_? (?= (PriceRange.Low))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (meridiem_? (?= (Meridiem.AM)))))))) (Restaurant.foodType_? (?= (FoodType.Italian))))))", "idx": "3743", "datum_id": {"dialogue_id": "0db21e3a-1825-4b18-a98b-3bcadc91e4cf", "turn_index": 4}}
{"user_turn_0": "Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM price equals 142", "user_turn_1": "Okay , that works for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "3759", "datum_id": {"dialogue_id": "b2b18e99-e15d-4648-bede-a7fbd2ab8ace", "turn_index": 5}}
{"user_turn_0": "Book it for me please I need a table for 2", "agent_turn_0": "Root system prompt restaurant book object equals atDateTime", "user_turn_1": "Tomorrow at 4:30", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "3768", "datum_id": {"dialogue_id": "d66e4169-a22d-46e0-b446-bc00babcd7a7", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i need a Grill restaurant in Morden Park .", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.location_? (?= \" Morden Park \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Today)))))) (Restaurant.foodType_? (?= (FoodType.Grill))))))", "idx": "3776", "datum_id": {"dialogue_id": "37aff115-3bf1-4dca-aae7-ee05a57e799f", "turn_index": 0}}
{"user_turn_0": "I 'd prefer a different one", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Maple", "user_turn_1": "Okay , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Lakeside Demon \"))))))", "idx": "3778", "datum_id": {"dialogue_id": "37aff115-3bf1-4dca-aae7-ee05a57e799f", "turn_index": 2}}
{"user_turn_0": "Is there a message from Lillian this morning ?", "agent_turn_0": "Root system inform message checkExistence Existed", "user_turn_1": "Text her and say I miss you", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (^((Constraint Contact)) refer)) (Message.textContent_? (?= \" I miss you \")))))", "idx": "3784", "datum_id": {"dialogue_id": "cba7fd19-a665-4f87-b58c-681403e6198f", "turn_index": 2}}
{"user_turn_0": "Is breakfast also included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Great . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "3796", "datum_id": {"dialogue_id": "0c9e8dd6-7fbb-4483-9fab-99d81c6e1c5c", "turn_index": 3}}
{"user_turn_0": "Yeah , something moderately priced please", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Boiling Fence", "user_turn_1": "Do they have parking ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "3803", "datum_id": {"dialogue_id": "91169160-a48e-4198-8c14-276e9c09f008", "turn_index": 3}}
{"user_turn_0": "No thanks . Let 's try German restaurants instead please", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floq", "user_turn_1": "And where 's that one ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "3809", "datum_id": {"dialogue_id": "91169160-a48e-4198-8c14-276e9c09f008", "turn_index": 9}}
{"user_turn_0": "And where 's that one ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 2a Prebend Street", "user_turn_1": "I 'll take it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Boiling Fence \"))))))", "idx": "3810", "datum_id": {"dialogue_id": "91169160-a48e-4198-8c14-276e9c09f008", "turn_index": 10}}
{"user_turn_0": "I want to stay in a different hotel with a rating of at least three stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Freehand price equals 145", "user_turn_1": "Is there a laundry service at that hotel ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.laundry_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "3823", "datum_id": {"dialogue_id": "21fa7734-b514-439e-a9b2-1eb536f932ff", "turn_index": 3}}
{"user_turn_0": "Is there a laundry service at that hotel ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Ok ! Book me a room please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" River Park \"))))))", "idx": "3824", "datum_id": {"dialogue_id": "21fa7734-b514-439e-a9b2-1eb536f932ff", "turn_index": 4}}
{"user_turn_0": "Ok ! Book me a room please", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "From December 14th to 19th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 14L)))) (month_? (Date.month_? (?= (December)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 19L)))))))))))", "idx": "3825", "datum_id": {"dialogue_id": "21fa7734-b514-439e-a9b2-1eb536f932ff", "turn_index": 5}}
{"user_turn_0": "Two please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "No . I actually want to change my check in date to be on Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.startDateTime \") (lambda (^(Constraint DateTime) x0) (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday)))))))", "idx": "3827", "datum_id": {"dialogue_id": "21fa7734-b514-439e-a9b2-1eb536f932ff", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i would like to book a hotel with a low price and a four star rating", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?= (PriceRange.Low))) (Hotel.rating_? (?= 4)))))", "idx": "3839", "datum_id": {"dialogue_id": "05831a00-e959-4f31-bb7e-936ecf684ee9", "turn_index": 0}}
{"user_turn_0": "What is it rated ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "3842", "datum_id": {"dialogue_id": "05831a00-e959-4f31-bb7e-936ecf684ee9", "turn_index": 3}}
{"user_turn_0": "I need two rooms but the room type does n't matter", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "I want to modify the check out date to Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.endDateTime \") (lambda (^(Constraint DateTime) x0) (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday)))))))", "idx": "3845", "datum_id": {"dialogue_id": "05831a00-e959-4f31-bb7e-936ecf684ee9", "turn_index": 6}}
{"user_turn_0": "I want to modify the check out date to Thursday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "3846", "datum_id": {"dialogue_id": "05831a00-e959-4f31-bb7e-936ecf684ee9", "turn_index": 7}}
{"user_turn_0": "Make sure its a moderately priced Sushi restaurant", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Encino", "user_turn_1": "Cool , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "3871", "datum_id": {"dialogue_id": "3c721fff-c7ff-4901-b8e1-dd9a7c8d86bb", "turn_index": 3}}
{"user_turn_0": "Hello , can you get me a cab from Little Bat to this afternoon 's calendar event please .", "agent_turn_0": "Root system prompt taxi book object equals serviceType inform taxi find object equals serviceType equals listElementOne Saloon listElementTwo MPV listElementThree Executive", "user_turn_1": "I do n't have a preference", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Taxi)) Path.apply \" object \") (lambda (^(Constraint Taxi) x0) (& (& x0 (Taxi.serviceType_? (List.exists_? (?= (ServiceType.Any))))) (Taxi.luggages_? (?= 1))))))", "idx": "3875", "datum_id": {"dialogue_id": "edbfcd09-6cd1-4c00-8089-1546f03f5ff7", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , can you book a cheap hotel with a queen sized bed in Wembley Park ? Check in is today and check out is on January 10th .", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" Wembley Park \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (& (Date.day_? (?= (Day.apply 10L))) (Date.month_? (?= (January))))))))) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Queen)))))))", "idx": "3889", "datum_id": {"dialogue_id": "8cd46d82-b54e-4fd9-a449-b3b248b3db77", "turn_index": 0}}
{"user_turn_0": "I want another hotel with more than zero stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Candlewood Suites price equals 135", "user_turn_1": "Is breakfast included ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "3892", "datum_id": {"dialogue_id": "8cd46d82-b54e-4fd9-a449-b3b248b3db77", "turn_index": 3}}
{"user_turn_0": "Is breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Ballyfin \"))))))", "idx": "3893", "datum_id": {"dialogue_id": "8cd46d82-b54e-4fd9-a449-b3b248b3db77", "turn_index": 4}}
{"user_turn_0": "Can I get 2 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Change the check in date to Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "3895", "datum_id": {"dialogue_id": "8cd46d82-b54e-4fd9-a449-b3b248b3db77", "turn_index": 6}}
{"user_turn_0": "Change the check in date to Tuesday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking allow free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "3896", "datum_id": {"dialogue_id": "8cd46d82-b54e-4fd9-a449-b3b248b3db77", "turn_index": 7}}
{"user_turn_0": "Is there parking ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Great , book it !", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "3900", "datum_id": {"dialogue_id": "afa6641b-9d70-4f51-972d-b3aa9d3e4152", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , book restaurant in Hillingdon at November 25th 5 o'clock . The restaurant should have not high price and rating five stars .", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Hillingdon \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (November))) (Date.day_? (?= (Day.apply 25L)))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 5L)))))))) (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Restaurant.rating_? (?= 5)))))", "idx": "3909", "datum_id": {"dialogue_id": "a2242012-7c92-4c75-9662-0a15f7665381", "turn_index": 0}}
{"user_turn_0": "I wonder which of the restaurants serve pizza", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Interknack", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Kitty City \"))))))", "idx": "3911", "datum_id": {"dialogue_id": "a2242012-7c92-4c75-9662-0a15f7665381", "turn_index": 2}}
{"user_turn_0": "I 'd rather go with a 5 star rated hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Ace Hotel price equals 166", "user_turn_1": "What 's it rated ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.rating_? (^(Number) always)))))", "idx": "3944", "datum_id": {"dialogue_id": "06d60253-fb00-412b-86ba-9b9d7ad0edd5", "turn_index": 4}}
{"user_turn_0": "What 's it rated ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Book it for me then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Lucia \"))))))", "idx": "3945", "datum_id": {"dialogue_id": "06d60253-fb00-412b-86ba-9b9d7ad0edd5", "turn_index": 5}}
{"user_turn_0": "Next task , add the booking to my calendar", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Add my train schedule too", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (?= (^(DateTimeRange Train) reference (^(Train) always))))))", "idx": "3957", "datum_id": {"dialogue_id": "ab01e45d-06b6-48d3-af7f-731fc321c07c", "turn_index": 3}}
{"user_turn_0": "Hi assistant , book me at Encino in Waterloo with table for 2 people . Book on August 14th at 6 o'clock", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Ok , change the booking to Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Thursday))))))", "idx": "3968", "datum_id": {"dialogue_id": "41b85f04-bc04-411f-911d-073f344d302e", "turn_index": 1}}
{"user_turn_0": "Next task , book a train leaving from Manchester Piccadilly", "agent_turn_0": "Root system prompt train book object equals destination departureDateTime", "user_turn_1": "I 'll be going to Aberdeen after 8:30", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& (& x0 (Train.destination_? (Place.location_? (?= \" Aberdeen \")))) (Train.departureDateTime_? (DateTime.time_? (?>= (someSalient (& (Time.hour_? (?= (Hour.apply 8L))) (Time.minute_? (?= (Minute.apply 30L))))))))))))", "idx": "3971", "datum_id": {"dialogue_id": "41b85f04-bc04-411f-911d-073f344d302e", "turn_index": 4}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 3 meridiem equals PM price equals 160", "user_turn_1": "That 's fine . I 'd like to book this flight for 3 passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.destination_? (Place.location_? (?= \" Amsterdam \")))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 3))))))", "idx": "3979", "datum_id": {"dialogue_id": "df48091e-d02b-4caa-aebb-3e7288ff286e", "turn_index": 2}}
{"user_turn_0": "Can you show me how to get there using public transportation", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "When will my train to Oxford depart ?", "tgt": "(plan (^(Train) Find :focus (Train.departureDateTime_? (^(DateTime) always)) :object (Train.destination_? (Place.location_? (?= \" Oxford station \")))))", "idx": "3986", "datum_id": {"dialogue_id": "04130899-def4-47ba-b6db-5da91ef532d3", "turn_index": 2}}
{"user_turn_0": "Windermere", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM", "user_turn_1": "That 'll work", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "4004", "datum_id": {"dialogue_id": "dceb20de-75c3-47f9-bec5-e728d6142d84", "turn_index": 2}}
{"user_turn_0": "Please book me a hotel close to my next even", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Green Acres price equals 124", "user_turn_1": "Please book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "4011", "datum_id": {"dialogue_id": "80ab969f-6706-43a4-9e26-ae2fa9403a58", "turn_index": 4}}
{"user_turn_0": "Hold on . Can I have 2 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "4034", "datum_id": {"dialogue_id": "62dc6c6d-37f8-4f98-827d-643d7f1df67a", "turn_index": 7}}
{"user_turn_0": "I would rather go someplace with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kiwi Sea", "user_turn_1": "Do they have outdoor seats ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "4048", "datum_id": {"dialogue_id": "087c6845-c825-4b58-bcbd-bb1478d49a02", "turn_index": 7}}
{"user_turn_0": "Do they have outdoor seats ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Gogol \"))))))", "idx": "4049", "datum_id": {"dialogue_id": "087c6845-c825-4b58-bcbd-bb1478d49a02", "turn_index": 8}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , set up a Problem Solving Meetings with Mr Berry from 11 AM to 4 PM on the calendar", "tgt": "(plan (^(CalendarEvent) Create :object (& (& (CalendarEvent.eventName_? (?= \" Problem Solving Meetings \")) (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (meridiem_? (?= (Meridiem.AM)))))) (DateTimeRange.endDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))) (CalendarEvent.attendees_? (Contact.person_? (& (Person.name_? (?= \" Berry \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "4053", "datum_id": {"dialogue_id": "9abfe183-b0cf-4ffa-9099-f77091e9ebbc", "turn_index": 0}}
{"user_turn_0": "Paddington", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM", "user_turn_1": "I want the 1:30 PM train", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "4060", "datum_id": {"dialogue_id": "949fee73-3314-499c-9e0d-40ab00a49101", "turn_index": 2}}
{"user_turn_0": "I will be returning on Thursday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "4062", "datum_id": {"dialogue_id": "949fee73-3314-499c-9e0d-40ab00a49101", "turn_index": 4}}
{"user_turn_0": "From Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "Give me the 2:50pm flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "4067", "datum_id": {"dialogue_id": "41b15d7b-7e45-425a-858f-586c27dcf18d", "turn_index": 3}}
{"user_turn_0": "I prefer another hotel with moderate price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Triton price equals 124", "user_turn_1": "Does the hotel have private bath room ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.privateBath_? (^(Boolean) always)))))", "idx": "4074", "datum_id": {"dialogue_id": "afe3a2ff-bb94-4f6a-beee-85f2bd81f859", "turn_index": 5}}
{"user_turn_0": "Does the hotel have private bath room ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Sheraton \"))))))", "idx": "4075", "datum_id": {"dialogue_id": "afe3a2ff-bb94-4f6a-beee-85f2bd81f859", "turn_index": 6}}
{"user_turn_0": "Two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "4078", "datum_id": {"dialogue_id": "afe3a2ff-bb94-4f6a-beee-85f2bd81f859", "turn_index": 9}}
{"user_turn_0": "Are there any missed calls from Colin ?", "agent_turn_0": "Root system inform phoneCall checkExistence Existed", "user_turn_1": "Next task , ok , text him please", "tgt": "(plan (^(Message) Create :object (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Sister)))))))", "idx": "4089", "datum_id": {"dialogue_id": "a8eaf9b2-a434-4774-80d7-ed52e3d6ada1", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , i 'd like to make a 10 AM reservation at a moderately priced restaurant in Middle Park", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.location_? (?= \" Middle Park \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (meridiem_? (?= (Meridiem.AM))))))))) (Restaurant.priceRange_? (?= (PriceRange.Moderate))))))", "idx": "4092", "datum_id": {"dialogue_id": "93ced280-20fb-43da-a280-9b642b58f037", "turn_index": 0}}
{"user_turn_0": "Hi assistant , i 'd like to make a 10 AM reservation at a moderately priced restaurant in Middle Park", "agent_turn_0": "Root system prompt restaurant book object equals foodType", "user_turn_1": "I do n't care , just make sure the restaurant has at least one star", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.rating_? (?>= (someSalient (?= 1))))) (Restaurant.foodType_? (?= (FoodType.Any)))))))", "idx": "4093", "datum_id": {"dialogue_id": "93ced280-20fb-43da-a280-9b642b58f037", "turn_index": 1}}
{"user_turn_0": "I 'd like a different restaurant that has a parking lot", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Shining Gate", "user_turn_1": "Is there a parking lot there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "4096", "datum_id": {"dialogue_id": "93ced280-20fb-43da-a280-9b642b58f037", "turn_index": 4}}
{"user_turn_0": "Is there a parking lot there ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Alright", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Lakeside Demon \"))))))", "idx": "4097", "datum_id": {"dialogue_id": "93ced280-20fb-43da-a280-9b642b58f037", "turn_index": 5}}
{"user_turn_0": "I'l be departing from St Pancras", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM", "user_turn_1": "I 'd prefer the 1:30 PM train please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "4103", "datum_id": {"dialogue_id": "b6cc0ed2-2e41-4b34-93d8-728f295ef83f", "turn_index": 2}}
{"user_turn_0": "Hey , cancel my event .", "agent_turn_0": "Root system prompt calendarEvent delete object", "user_turn_1": "Weekly basketball match", "tgt": "(plan (revise (^(Unit) Path.apply \" Delete \") (^((Option (Constraint CalendarEvent))) Path.apply \" object \") (lambda (^(Option (Constraint CalendarEvent)) x0) (Some (& (CalendarEvent.eventName_? (?= \" basketball match \")) (CalendarEvent.recurrenceUnit_? (RecurrenceUnit.Week_? (^(Number) always))))))))", "idx": "4107", "datum_id": {"dialogue_id": "fc04c685-05f7-47b3-97fa-f71ad97c4e49", "turn_index": 1}}
{"user_turn_0": "Do they have wifi there ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it , please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "4114", "datum_id": {"dialogue_id": "9986acf0-2fcd-4e19-a4b4-a57671025387", "turn_index": 3}}
{"user_turn_0": "I only need one ticket and I 'm going to leave on Tuesday", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "Try Wednesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.departureDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Wednesday)))))", "idx": "4125", "datum_id": {"dialogue_id": "07d33893-cd83-4fdb-ba43-ab6a4217a38b", "turn_index": 3}}
{"user_turn_0": "Give me the one at 4:45 PM", "agent_turn_0": "Root system prompt flight book object equals tripType", "user_turn_1": "No I do n't need it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.tripType_? (?= (TripType.oneWay)))))))", "idx": "4127", "datum_id": {"dialogue_id": "07d33893-cd83-4fdb-ba43-ab6a4217a38b", "turn_index": 5}}
{"user_turn_0": "At 11:30 on the 18th please", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Ok , change it to Tuesday instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "4144", "datum_id": {"dialogue_id": "10d721d3-0f9f-4892-b3f9-73795c021efd", "turn_index": 5}}
{"user_turn_0": "Are there any missed calls from Mr Simpson ?", "agent_turn_0": "Root system inform phoneCall checkExistence Existed", "user_turn_1": "Call him", "tgt": "(plan (^(PhoneCall) Create :object (PhoneCall.recipients_? (Contact.person_? (& (Person.name_? (?= \" Forsyth \")) (Person.namePrefix_? (^((Constraint String)) refer)))))))", "idx": "4156", "datum_id": {"dialogue_id": "27c11a0c-1803-4595-98ff-a521aae0ff6e", "turn_index": 5}}
{"user_turn_0": "I 'll be back on the 23rd", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM", "user_turn_1": "Sounds good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "4181", "datum_id": {"dialogue_id": "d7b2f94d-319e-459c-b83b-39b5db3e0498", "turn_index": 3}}
{"user_turn_0": "Can you tell me which airline it is", "agent_turn_0": "Root system inform flight find focus equals airLine equals British", "user_turn_1": "I 'd prefer the one that departs at 2 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "4187", "datum_id": {"dialogue_id": "dbe10574-e181-42e5-b0bb-994787c4440a", "turn_index": 4}}
{"user_turn_0": "What airline is it ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "Alright , I 'll take that flights", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "4195", "datum_id": {"dialogue_id": "73ade78c-4243-4ed5-a2d8-8e5f6a01d5c0", "turn_index": 4}}
{"user_turn_0": "I am going to Glasgow", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "Try Monday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.departureDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Monday)))))", "idx": "4219", "datum_id": {"dialogue_id": "ba8bbcb0-d4b9-4c47-9f6b-724a264bdc5d", "turn_index": 5}}
{"user_turn_0": "What airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "I want the 3:50 PM flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "4221", "datum_id": {"dialogue_id": "ba8bbcb0-d4b9-4c47-9f6b-724a264bdc5d", "turn_index": 7}}
{"user_turn_0": "No , I will be going to Lisbon on Thursday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 5 object equals nextDepartureDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM price equals 135", "user_turn_1": "That one is fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "4223", "datum_id": {"dialogue_id": "ba8bbcb0-d4b9-4c47-9f6b-724a264bdc5d", "turn_index": 9}}
{"user_turn_0": "That 's fine . Book it for me at 10:30 o'clock", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Change it to October 17th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (& (Date.month_? (?= (October))) (Date.day_? (?= (Day.apply 17L))))))))))", "idx": "4228", "datum_id": {"dialogue_id": "b56ebf30-d483-455d-8e83-9e82cb51ed21", "turn_index": 3}}
{"user_turn_0": "Does it have outdoor seats ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "Book it for Tuesday at 6 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Flavoroso \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 6L)))))))))))", "idx": "4253", "datum_id": {"dialogue_id": "be992e06-e698-4f6f-88c5-7a2e22477228", "turn_index": 6}}
{"user_turn_0": "I prefer another hotel with low price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals River Park price equals 135", "user_turn_1": "What 's the rating on it ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.rating_? (^(Number) always)))))", "idx": "4260", "datum_id": {"dialogue_id": "21fe9ab9-49b1-42da-909a-fd45e6bb4dd0", "turn_index": 4}}
{"user_turn_0": "What 's the rating on it ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Dream Connect \"))))))", "idx": "4261", "datum_id": {"dialogue_id": "21fe9ab9-49b1-42da-909a-fd45e6bb4dd0", "turn_index": 5}}
{"user_turn_0": "It does n't matter as long as there is wifi", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Can I check in on today instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "4264", "datum_id": {"dialogue_id": "21fe9ab9-49b1-42da-909a-fd45e6bb4dd0", "turn_index": 8}}
{"user_turn_0": "I need two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking support free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "4266", "datum_id": {"dialogue_id": "21fe9ab9-49b1-42da-909a-fd45e6bb4dd0", "turn_index": 10}}
{"user_turn_0": "I want another hotel that has at least one star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Palm Bliss price equals 199", "user_turn_1": "Does it have laundry service", "tgt": "(plan (^(Hotel) Find :focus (Hotel.laundry_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "4282", "datum_id": {"dialogue_id": "afda47d8-970b-4e30-a4f5-87513d3c75d4", "turn_index": 4}}
{"user_turn_0": "Yes please send it", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Do me another favor . I 'd like to book restaurant in Hillingdon . The book time is on Friday at 7:30 o'clock . I prefer moderate or cheap price", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.location_? (?= \" Hillingdon \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 7L))) (Time.minute_? (?= (Minute.apply 30L))))))))) (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High))))))))", "idx": "4285", "datum_id": {"dialogue_id": "9dd0cb23-fbe1-493e-8fa6-d1192a9d825b", "turn_index": 2}}
{"user_turn_0": "I prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone Martian", "user_turn_1": "Does the restaurant have outdoor seating ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "4292", "datum_id": {"dialogue_id": "3506cb4a-4e9b-455b-80da-a45a066f741b", "turn_index": 4}}
{"user_turn_0": "I prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Bandits", "user_turn_1": "What is the address of the restaurant ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "4294", "datum_id": {"dialogue_id": "3506cb4a-4e9b-455b-80da-a45a066f741b", "turn_index": 6}}
{"user_turn_0": "What is the address of the restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 207 Upper Street", "user_turn_1": "OK . Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Acacia Saint \"))))))", "idx": "4295", "datum_id": {"dialogue_id": "3506cb4a-4e9b-455b-80da-a45a066f741b", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , what is the price range for Peninsula ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.priceRange_? (^(PriceRange) always)) :object (Hotel.hotelName_? (?= \" Peninsula \"))))", "idx": "4298", "datum_id": {"dialogue_id": "61cc91bc-032f-4261-a183-7823a9132799", "turn_index": 0}}
{"user_turn_0": "In the morning", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals endDateTime", "user_turn_1": "The event will end at 5 PM on the 5th", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.endDateTime_? (& (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 5L))) (meridiem_? (?= (Meridiem.PM))))) (DateTime.date_? (Date.day_? (?= (Day.apply 5L))))))))))", "idx": "4318", "datum_id": {"dialogue_id": "a095f7f2-246a-4b03-9218-67e0af5912ff", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , book a cheap hotel room with parking from the 14th through the 17th .", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.priceRange_? (?= (PriceRange.Low))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 14L))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 17L)))))))) (Hotel.hasParking_? (?= true)))))", "idx": "4320", "datum_id": {"dialogue_id": "cb3f5c4e-fafb-4649-8951-c92935c65ee7", "turn_index": 0}}
{"user_turn_0": "Do they have private bathrooms ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "4323", "datum_id": {"dialogue_id": "cb3f5c4e-fafb-4649-8951-c92935c65ee7", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , please book an afternoon taxi to my venue", "tgt": "(plan (^(Taxi) Book :object (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Afternoon))))))))))", "idx": "4338", "datum_id": {"dialogue_id": "2da3c3d0-7bab-412c-a11b-32cacb3c4a90", "turn_index": 0}}
{"user_turn_0": "I want to eat somewhere expensive that has a rating of at least five stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Maple", "user_turn_1": "Do they take credit cards there ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "4346", "datum_id": {"dialogue_id": "2657d7d3-ba87-4714-b971-af49a0ae2eeb", "turn_index": 3}}
{"user_turn_0": "Do they take credit cards there ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "Ok . Can you book me a table for tomorrow at 5 PM ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 5L))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "4347", "datum_id": {"dialogue_id": "2657d7d3-ba87-4714-b971-af49a0ae2eeb", "turn_index": 4}}
{"user_turn_0": "Any price range , but avoid zero star rating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Juniper Cloud", "user_turn_1": "Can I pay with a credit card ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "4353", "datum_id": {"dialogue_id": "30143955-4341-4c4f-b779-f43589d365e6", "turn_index": 3}}
{"user_turn_0": "Can I pay with a credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "4354", "datum_id": {"dialogue_id": "30143955-4341-4c4f-b779-f43589d365e6", "turn_index": 4}}
{"user_turn_0": "Monday at 2:30 PM", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Can you change it to the 24th ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 24L))))))", "idx": "4356", "datum_id": {"dialogue_id": "30143955-4341-4c4f-b779-f43589d365e6", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , is there a price range that you prefer ?", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.location_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Restaurant.tableSize_? (?= 4)))))", "idx": "4364", "datum_id": {"dialogue_id": "bcc3f37b-7fb5-4613-807d-1fe075ece460", "turn_index": 0}}
{"user_turn_0": "Give me a different restaurant that offers parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Chipotle Grill", "user_turn_1": "Tell me the average cost per person at the restaurant", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "4367", "datum_id": {"dialogue_id": "bcc3f37b-7fb5-4613-807d-1fe075ece460", "turn_index": 3}}
{"user_turn_0": "Tell me the average cost per person at the restaurant", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 65", "user_turn_1": "Book it for tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Flew Z \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow)))))))))", "idx": "4368", "datum_id": {"dialogue_id": "bcc3f37b-7fb5-4613-807d-1fe075ece460", "turn_index": 4}}
{"user_turn_0": "Please check when my Geek 's party with Joe is according to my calendar", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals startDateTime equals time equals hour equals 3 meridiem equals PM", "user_turn_1": "Thanks , next go ahead and send it to my mom", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Mother))))))))", "idx": "4385", "datum_id": {"dialogue_id": "18773a28-058b-4f9f-8fa4-9824f1ee2a5d", "turn_index": 3}}
{"user_turn_0": "Hi assistant , i want to book business class flight tickets from London for three passengers", "agent_turn_0": "Root system prompt flight book object equals destination departureDateTime", "user_turn_1": "Do the 4:45 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& x0 (Flight.destination_? (Place.location_? (?= \" Glasgow \")))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (& (Date.month_? (?= (April))) (Date.day_? (?= (Day.apply 16L)))))))))))", "idx": "4393", "datum_id": {"dialogue_id": "1c71b477-b4dd-4edc-b557-f46d19d26abf", "turn_index": 1}}
{"user_turn_0": "I found these four flights . The cheapest one is at 3:20 PM and priced 173 pounds", "agent_turn_0": "Root system inform flight book Completed", "user_turn_1": "The order is complete", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (& (Navigation.source_? (Place.location_? (?= \" 22 North Ridge Park \"))) (Navigation.destination_? (Place.location_? (?= \" Laurel Street \"))))))", "idx": "4396", "datum_id": {"dialogue_id": "1c71b477-b4dd-4edc-b557-f46d19d26abf", "turn_index": 4}}
{"user_turn_0": "What 's the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Book it", "tgt": "(plan (^(Hotel) Book :object (Hotel.hotelName_? (^((Constraint String)) refer))))", "idx": "4399", "datum_id": {"dialogue_id": "b5404206-7bb5-463d-9f0a-ac3a36fffcbf", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , i need a reservation at a hotel with a car park that is n't priced highly for 10:30 .", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High))))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))))))) (Restaurant.hasParking_? (?= true)))))", "idx": "4415", "datum_id": {"dialogue_id": "8030cea8-e732-4907-9d54-0bf2a31a085d", "turn_index": 0}}
{"user_turn_0": "I do n't care as long as it 's four - star rated", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone Martian", "user_turn_1": "What 's the usual cost per person ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "4418", "datum_id": {"dialogue_id": "8030cea8-e732-4907-9d54-0bf2a31a085d", "turn_index": 3}}
{"user_turn_0": "I want a different restaurant where you can sit outside", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Cityroom", "user_turn_1": "What 's the usual cost per person ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "4420", "datum_id": {"dialogue_id": "8030cea8-e732-4907-9d54-0bf2a31a085d", "turn_index": 5}}
{"user_turn_0": "What 's the usual cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 32", "user_turn_1": "That works , make a reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Hambone Martian \"))))))", "idx": "4421", "datum_id": {"dialogue_id": "8030cea8-e732-4907-9d54-0bf2a31a085d", "turn_index": 6}}
{"user_turn_0": "That works , make a reservation", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Change the reservation to 5 o'clock then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (Time.hour_? (?= (Hour.apply 5L))))))", "idx": "4422", "datum_id": {"dialogue_id": "8030cea8-e732-4907-9d54-0bf2a31a085d", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , what is the price range of the Bard \u2019s Bench restaurant in Leicester Square", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.priceRange_? (^(PriceRange) always)) :object (& (Restaurant.restaurantName_? (?= \" Bard's Bench \")) (Restaurant.location_? (?= \" Leicester Square \")))))", "idx": "4435", "datum_id": {"dialogue_id": "024c39a0-b02c-49b1-bae0-23765c7593ce", "turn_index": 0}}
{"user_turn_0": "17th 10 AM", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Can you change the appointment time to 11 then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (Time.hour_? (?= (Hour.apply 11L))))))", "idx": "4438", "datum_id": {"dialogue_id": "024c39a0-b02c-49b1-bae0-23765c7593ce", "turn_index": 3}}
{"user_turn_0": "And what rating do they have there ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Cool , let 's book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Marriott \"))))))", "idx": "4476", "datum_id": {"dialogue_id": "e4598d6a-5070-4650-9751-07503d6e4c02", "turn_index": 4}}
{"user_turn_0": "I would like it to be moderately priced", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Lakeside Demon", "user_turn_1": "Is there outside seating ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "4486", "datum_id": {"dialogue_id": "2ae9fcc1-639d-4ebf-b4f9-a6e167cb8513", "turn_index": 2}}
{"user_turn_0": "Is there outside seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "That s good . Get it booked", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "4487", "datum_id": {"dialogue_id": "2ae9fcc1-639d-4ebf-b4f9-a6e167cb8513", "turn_index": 3}}
{"user_turn_0": "How long does it take to get to Laurel Street by bike ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 25", "user_turn_1": "Change the date of free discussion to 9 o'clock", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (^(Date) always)))) :object (& (CalendarEvent.eventName_? (?= \" free discussion \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 9L)))))))))", "idx": "4493", "datum_id": {"dialogue_id": "76869526-4492-428e-af24-bc1fa641215f", "turn_index": 2}}
{"user_turn_0": "Change the date of free discussion to 9 o'clock", "agent_turn_0": "Root system prompt calendarEvent update focus equals dateTimeRange equals startDateTime equals date", "user_turn_1": "The 22nd", "tgt": "(plan (revise (^(Unit) Path.apply \" Update \") (^((Constraint Date)) Path.apply \" focus.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 22L))))))", "idx": "4494", "datum_id": {"dialogue_id": "76869526-4492-428e-af24-bc1fa641215f", "turn_index": 3}}
{"user_turn_0": "Tell me the price range of Chipotle Grill on Bond Street", "agent_turn_0": "Root system inform restaurant find focus equals priceRange equals Moderate", "user_turn_1": "Can we book it for 6 please", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.restaurantName_? (?= \" Chipotle Grill \")) (Restaurant.tableSize_? (?= 6)))))", "idx": "4500", "datum_id": {"dialogue_id": "2dc2f2eb-e0e0-4704-9fc7-10a7a1231a1a", "turn_index": 4}}
{"user_turn_0": "Does that one have laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book that one for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "4504", "datum_id": {"dialogue_id": "9bc253b3-f123-4a97-828d-29587cb5dfc6", "turn_index": 3}}
{"user_turn_0": "What about at Hilton hotel ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel for free ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "4509", "datum_id": {"dialogue_id": "9bc253b3-f123-4a97-828d-29587cb5dfc6", "turn_index": 8}}
{"user_turn_0": "What s the weather like there ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cloudy", "user_turn_1": "Give me the weather in Coventry today", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint WeatherReport)) Path.apply \" object \") (lambda (^(Constraint WeatherReport) x0) (& (WeatherReport.location_? (?= \" Coventry \")) (WeatherReport.atDateTime_? (DateTime.date_? (?= (Today))))))))", "idx": "4528", "datum_id": {"dialogue_id": "5e119664-26aa-4ca3-99f8-ef814a87be10", "turn_index": 2}}
{"user_turn_0": "Dudley", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM", "user_turn_1": "I want the 2:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "4538", "datum_id": {"dialogue_id": "d36a0361-476e-46d3-ab68-508c310d5f30", "turn_index": 2}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 meridiem equals PM", "user_turn_1": "Brilliant , just great", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "4542", "datum_id": {"dialogue_id": "d36a0361-476e-46d3-ab68-508c310d5f30", "turn_index": 6}}
{"user_turn_0": "Hello , get me a hotel for today until Saturday", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "In Tower Hill . Look for a cheap place", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.location_? (?= \" Tower Hill \"))) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))))))", "idx": "4562", "datum_id": {"dialogue_id": "5204cbc9-6b2a-4424-aa11-4add395b1b7e", "turn_index": 1}}
{"user_turn_0": "No . Look for one that has more than zero stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Club Quarters price equals 142", "user_turn_1": "What about free wifi", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasWifi_? (^(Boolean) always)))))", "idx": "4565", "datum_id": {"dialogue_id": "5204cbc9-6b2a-4424-aa11-4add395b1b7e", "turn_index": 4}}
{"user_turn_0": "What about free wifi", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Sweet ! That s the place I want to stay", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Hilton \"))))))", "idx": "4566", "datum_id": {"dialogue_id": "5204cbc9-6b2a-4424-aa11-4add395b1b7e", "turn_index": 5}}
{"user_turn_0": "Which airline is it", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "That 's ok . I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "4573", "datum_id": {"dialogue_id": "e0a41d5d-f287-45e9-bcf5-1f8b02a0cafa", "turn_index": 4}}
{"user_turn_0": "I 'll be returning on the 21st", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 2 meridiem equals PM price equals 166", "user_turn_1": "This one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (^((Constraint Time)) refer))))))", "idx": "4576", "datum_id": {"dialogue_id": "e0a41d5d-f287-45e9-bcf5-1f8b02a0cafa", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , i 've got to book a restaurant near my upcoming event , and fast .", "tgt": "(plan (^(Restaurant) Book :object (Restaurant.location_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1)))))))", "idx": "4593", "datum_id": {"dialogue_id": "ff0a32d7-583b-42e8-8ab7-16a5e6aa30d9", "turn_index": 0}}
{"user_turn_0": "What kind of food can I get there ?", "agent_turn_0": "Root system inform restaurant find focus equals foodType equals American Food", "user_turn_1": "Okay , let 's book that one , then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Boiling Fence \"))))))", "idx": "4598", "datum_id": {"dialogue_id": "ff0a32d7-583b-42e8-8ab7-16a5e6aa30d9", "turn_index": 5}}
{"user_turn_0": "Tell me the rating", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Book the hotel", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "4604", "datum_id": {"dialogue_id": "6c1413e5-d258-4e5e-88a9-27a7a487994c", "turn_index": 2}}
{"user_turn_0": "I will be needing one room and the room type is n't a biggie", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is the prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "4607", "datum_id": {"dialogue_id": "6c1413e5-d258-4e5e-88a9-27a7a487994c", "turn_index": 5}}
{"user_turn_0": "Is the prepayment ?", "agent_turn_0": "Root system inform hotel find focus equals prePayment equals True", "user_turn_1": "Actually can you alter the check out date to Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Sunday))))))", "idx": "4608", "datum_id": {"dialogue_id": "6c1413e5-d258-4e5e-88a9-27a7a487994c", "turn_index": 6}}
{"user_turn_0": "No , I will departure from Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM price equals 130", "user_turn_1": "Book the one at 1:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "4617", "datum_id": {"dialogue_id": "d9165e7e-7c5e-4362-9cd8-c230c93cbf6a", "turn_index": 2}}
{"user_turn_0": "No , next I will go to Madrid on Thursday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 2 object equals nextDepartureDateTime equals time equals hour equals 2 meridiem equals PM price equals 119", "user_turn_1": "This one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "4619", "datum_id": {"dialogue_id": "d9165e7e-7c5e-4362-9cd8-c230c93cbf6a", "turn_index": 4}}
{"user_turn_0": "Can you check if it has economy class or business class ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "Let me go with another economy class flight that leaves at 1:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Brussel \"))) (Flight.airLine_? (?= \" EasyJet \"))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "4625", "datum_id": {"dialogue_id": "2b0fad95-d2bc-4508-ac95-b7124cd89c23", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , please get me a table at a restaurant in Northwood . I want it to be affordable too .", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.location_? (?= \" Northwood \")) (Restaurant.priceRange_? (?= (PriceRange.High))))))", "idx": "4630", "datum_id": {"dialogue_id": "57c3db35-dae0-4e69-9cad-510714e56398", "turn_index": 0}}
{"user_turn_0": "I want another restaurant that has outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dingo", "user_turn_1": "Can you give me the restaurant 's address ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "4633", "datum_id": {"dialogue_id": "57c3db35-dae0-4e69-9cad-510714e56398", "turn_index": 3}}
{"user_turn_0": "Can you give me the restaurant 's address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 83 Upper Street", "user_turn_1": "Ok , book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Kitty City \"))))))", "idx": "4634", "datum_id": {"dialogue_id": "57c3db35-dae0-4e69-9cad-510714e56398", "turn_index": 4}}
{"user_turn_0": "I do n't care , but I do n't want a place with zero stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals InterContinental price equals 130", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "4645", "datum_id": {"dialogue_id": "30ba8447-5dcf-4d35-9015-1995f2af3c54", "turn_index": 2}}
{"user_turn_0": "I want three single rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Move the check out to Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Friday)))))", "idx": "4649", "datum_id": {"dialogue_id": "30ba8447-5dcf-4d35-9015-1995f2af3c54", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , schedule train ride from London Euston to Stansted Airport , leaving before 8:30 PM .", "tgt": "(plan (^(Train) Book :object (& (& (Train.source_? (Place.location_? (?= \" London Euston \"))) (Train.destination_? (Place.location_? (?= \" Stansted Airport \")))) (Train.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (& (Time.hour_? (?= (Hour.apply 8L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "4651", "datum_id": {"dialogue_id": "e27792cf-e72d-43e6-8952-eb2cfa719906", "turn_index": 0}}
{"user_turn_0": "Hi there , schedule train ride from London Euston to Stansted Airport , leaving before 8:30 PM .", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 35 meridiem equals PM", "user_turn_1": "I would rather leave at 1:40 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (Train.departureDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "4652", "datum_id": {"dialogue_id": "e27792cf-e72d-43e6-8952-eb2cfa719906", "turn_index": 1}}
{"user_turn_0": "I am coming back on Friday , so round - trip ticket is best", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM", "user_turn_1": "Looks fine to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "4654", "datum_id": {"dialogue_id": "e27792cf-e72d-43e6-8952-eb2cfa719906", "turn_index": 3}}
{"user_turn_0": "Can you check if breakfast is included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Go ahead and make reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "4659", "datum_id": {"dialogue_id": "99fd535e-679a-4699-898b-f753a3731b31", "turn_index": 3}}
{"user_turn_0": "Make it 3 rooms and I do n't care what type", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "No , I want to check - out on Friday instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "4662", "datum_id": {"dialogue_id": "99fd535e-679a-4699-898b-f753a3731b31", "turn_index": 6}}
{"user_turn_0": "No , I want to check - out on Friday instead", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Well , will I be able to cancel for free ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "4663", "datum_id": {"dialogue_id": "99fd535e-679a-4699-898b-f753a3731b31", "turn_index": 7}}
{"user_turn_0": "Do they have a parking lot ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Cool . Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "4673", "datum_id": {"dialogue_id": "c8983ada-bf27-45c6-af0a-a5b940955fe2", "turn_index": 3}}
{"user_turn_0": "Does this places have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "4687", "datum_id": {"dialogue_id": "6056ea33-9052-46f6-b875-00f9bbb4ef4d", "turn_index": 5}}
{"user_turn_0": "I want three queen sized beds", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Update the check out date to Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Thursday)))))", "idx": "4691", "datum_id": {"dialogue_id": "6056ea33-9052-46f6-b875-00f9bbb4ef4d", "turn_index": 9}}
{"user_turn_0": "Update the check out date to Thursday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they let you cancel for free ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "4692", "datum_id": {"dialogue_id": "6056ea33-9052-46f6-b875-00f9bbb4ef4d", "turn_index": 10}}
{"user_turn_0": "Let me call her then", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Let me call the number 07931813650", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Contact)) Path.apply \" object.recipients \") (lambda (^(Constraint Contact) x0) (Contact.phoneNumber_? (?= \" 07931813650 \")))))", "idx": "4698", "datum_id": {"dialogue_id": "72d0ba9c-af77-4c2a-998b-501002d57cb1", "turn_index": 4}}
{"user_turn_0": "What is the airline", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "I wan the one that leaves at 3:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "4703", "datum_id": {"dialogue_id": "b869d37e-51f9-44b8-932a-9550bc9b3fe8", "turn_index": 4}}
{"user_turn_0": "About how long will that trip take ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 10", "user_turn_1": "Send my event to my daughter for me", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Daughter))))))))", "idx": "4709", "datum_id": {"dialogue_id": "69bdf96a-788a-4918-aae4-a78e571def17", "turn_index": 2}}
{"user_turn_0": "Can you make that order have three rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there free cancellation with this order ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "4721", "datum_id": {"dialogue_id": "40915caf-9825-4849-b3a8-023aa8ffadd4", "turn_index": 4}}
{"user_turn_0": "I 'll need a table for two for Tuesday at 3 PM", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Okay , can you change the date to Monday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.atDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Monday)))))", "idx": "4726", "datum_id": {"dialogue_id": "dfb13391-4d70-4583-ab45-510636fc4089", "turn_index": 3}}
{"user_turn_0": "Hey , i want to book hotel near my event for three nights", "agent_turn_0": "Root system prompt hotel book object equals priceRange", "user_turn_1": "No it does n't matter as long as it has three stars rating", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.priceRange_? (?= (PriceRange.Any)))) (Hotel.rating_? (?= 3))))))", "idx": "4729", "datum_id": {"dialogue_id": "1655be5b-a602-4070-b0b9-87cc4c85970e", "turn_index": 1}}
{"user_turn_0": "Just one", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Can I change the check in date to Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "4734", "datum_id": {"dialogue_id": "1655be5b-a602-4070-b0b9-87cc4c85970e", "turn_index": 6}}
{"user_turn_0": "Hi assistant , can you give me directions from The Body Shop in Upper Street to go to Medivet Islington by car ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "What 's the weather like there ?", "tgt": "(plan (^(WeatherReport) Find))", "idx": "4737", "datum_id": {"dialogue_id": "1849fe55-236e-40f6-8559-94588011efac", "turn_index": 1}}
{"user_turn_0": "Let me book that restaurant at 3 o'clock please", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "OK , then change the booking time to Monday instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday)))))))))", "idx": "4758", "datum_id": {"dialogue_id": "40c825d5-9b53-4b3a-901f-5a52e699e6a7", "turn_index": 2}}
{"user_turn_0": "What are the directions to get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Thanks so much . Request a taxi to take me there", "tgt": "(plan (^(Taxi) Book :object (Taxi.destination_? (^((Constraint Place)) refer))))", "idx": "4764", "datum_id": {"dialogue_id": "eda7a8e8-1035-41e9-bf85-20da964a2036", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , show me some low priced hotels .", "tgt": "(plan (^(Hotel) Find :object (Hotel.priceRange_? (?= (PriceRange.Low)))))", "idx": "4769", "datum_id": {"dialogue_id": "ee907e5b-50f7-48f1-9473-a233d3963826", "turn_index": 0}}
{"user_turn_0": "Do they have laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Cool . Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "4782", "datum_id": {"dialogue_id": "605741c3-0f70-4cf4-939e-2875e294e559", "turn_index": 3}}
{"user_turn_0": "I need two rooms . I do n't care what kind", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Hold on . Do I need to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "4786", "datum_id": {"dialogue_id": "605741c3-0f70-4cf4-939e-2875e294e559", "turn_index": 7}}
{"user_turn_0": "At what time will my flight leave today ?", "agent_turn_0": "Root system inform flight find focus equals departureDateTime equals time equals hour equals 5 minute equals 30 meridiem equals PM", "user_turn_1": "Send this event to 07953050408", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Message.recipients_? (Contact.phoneNumber_? (?= \" 07953050408 \"))))))", "idx": "4806", "datum_id": {"dialogue_id": "620092a4-3244-45ce-b571-b52980f431a5", "turn_index": 3}}
{"user_turn_0": "Hello assistant , can you put my event at 6 today on my calendar and remind me about it ?", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals endDateTime", "user_turn_1": "My event should end at 4:30 today", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.endDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "4819", "datum_id": {"dialogue_id": "04329674-c00a-4aef-bc57-21ad9f921e15", "turn_index": 1}}
{"user_turn_0": "Hi assistant , display low price hotels", "agent_turn_0": "Root system inform hotel find", "user_turn_1": "About how far away is Starline Cabs from Tenbury Wells by car", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (& (& (Navigation.source_? (Place.location_? (?= \" Starline Cabs \"))) (Navigation.destination_? (Place.location_? (?= \" Tenbury Wells \")))) (Navigation.transportationMode_? (?= (TransportationMode.Driving))))))", "idx": "4829", "datum_id": {"dialogue_id": "c23dc17c-058a-410e-9d31-122011ecfc35", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , schedule an event for March 18th at 10:30 .", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (& (Date.month_? (?= (March))) (Date.day_? (?= (Day.apply 18L))))) (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L))))))))))", "idx": "4845", "datum_id": {"dialogue_id": "2221ce6d-8032-430d-9514-5f53acb52b28", "turn_index": 0}}
{"user_turn_0": "It ends at 7 PM on Wednesday", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "I need an event for my restaurant booking on the 23rd", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (?= (^(DateTimeRange Restaurant) reference (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 23L)))))))))))", "idx": "4848", "datum_id": {"dialogue_id": "2221ce6d-8032-430d-9514-5f53acb52b28", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , can you book me a hotel in Green Park from tomorrow until the 28th ? Make sure it 's cheap and I get a room with a queen sized bed .", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" Green Park \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 28L)))))))) (Hotel.priceRange_? (?= (PriceRange.Low)))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Queen)))))))", "idx": "4855", "datum_id": {"dialogue_id": "92398436-7076-4db4-b622-db6f88ee60e6", "turn_index": 0}}
{"user_turn_0": "Can you find me another hotel that has a rating of at least four stars ?", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Sheraton price equals 166", "user_turn_1": "Is breakfast included there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "4858", "datum_id": {"dialogue_id": "92398436-7076-4db4-b622-db6f88ee60e6", "turn_index": 3}}
{"user_turn_0": "Is breakfast included there ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Go ahead and book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Grand Hyatt \"))))))", "idx": "4859", "datum_id": {"dialogue_id": "92398436-7076-4db4-b622-db6f88ee60e6", "turn_index": 4}}
{"user_turn_0": "Hey assistant , what rating does the Cityroom Restaurant have ?", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 5", "user_turn_1": "Book it for 5:30 PM", "tgt": "(plan (^(Restaurant) Book :object (& (^((Constraint Restaurant)) refer) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 5L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "4891", "datum_id": {"dialogue_id": "36a91163-4d72-4c89-aa51-b055ba433a1c", "turn_index": 1}}
{"user_turn_0": "None of these look good . Can you show me more options ? Food type does n't matter", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flavoroso", "user_turn_1": "Tell me the address for the restaurant", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "4904", "datum_id": {"dialogue_id": "0cde4f11-dd33-49cf-aa7e-ff42a2c8980c", "turn_index": 4}}
{"user_turn_0": "Tell me the address for the restaurant", "agent_turn_0": "Root system inform restaurant find focus equals address equals 415 Park Lane", "user_turn_1": "Book it for me on March 9th at 5:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Dimple's \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (March))) (Date.day_? (?= (Day.apply 9L)))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 5L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "4905", "datum_id": {"dialogue_id": "0cde4f11-dd33-49cf-aa7e-ff42a2c8980c", "turn_index": 5}}
{"user_turn_0": "Yes , I want it to have a low price", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flip Out", "user_turn_1": "Okay , book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Capricorn \"))))))", "idx": "4944", "datum_id": {"dialogue_id": "d3c84438-2ed9-440a-bd4a-df4b43c32992", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , book a train to Brighton Station for me .", "tgt": "(plan (^(Train) Book :object (Train.destination_? (Place.location_? (?= \" Brighton station \")))))", "idx": "4949", "datum_id": {"dialogue_id": "6b40d813-9a7a-4708-9531-08ba18402f8a", "turn_index": 0}}
{"user_turn_0": "London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "Give me the 2:40 flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "4972", "datum_id": {"dialogue_id": "5f64094d-635a-4a1d-854c-91fa1dcdf96f", "turn_index": 2}}
{"user_turn_0": "How long will it take to get to the event this morning ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 30", "user_turn_1": "I would like to book the Capriconr for a table for 2 people on the 8th", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.restaurantName_? (?= \" Capricorn \")) (Restaurant.tableSize_? (?= 2))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 8L)))))))))", "idx": "4978", "datum_id": {"dialogue_id": "bed0c472-e4d0-4440-b9ef-e3137dfe402c", "turn_index": 3}}
{"user_turn_0": "On the 20th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM price equals 65", "user_turn_1": "That one is good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "4985", "datum_id": {"dialogue_id": "a00c8127-5b34-4b8b-a51a-ab6b504a07d1", "turn_index": 5}}
{"user_turn_0": "April 9th", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange equals endDateTime", "user_turn_1": "The day after", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.duration_? (AppleDuration.day_? (?= 1)))))))", "idx": "4991", "datum_id": {"dialogue_id": "6ca86206-9640-46df-9fd7-610a59330fbc", "turn_index": 4}}
{"user_turn_0": "Three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "I d breakfast included ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "4994", "datum_id": {"dialogue_id": "6ca86206-9640-46df-9fd7-610a59330fbc", "turn_index": 7}}
{"user_turn_0": "I d breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Proceed with the booking", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "4995", "datum_id": {"dialogue_id": "6ca86206-9640-46df-9fd7-610a59330fbc", "turn_index": 8}}
{"user_turn_0": "Hi assistant , i would like to see hotels with a five star rating please .", "agent_turn_0": "Root system inform hotel find", "user_turn_1": "Yes help me book a hotel with parking", "tgt": "(plan (^(Hotel) Book :object (Hotel.hasParking_? (?= true))))", "idx": "5008", "datum_id": {"dialogue_id": "bc5a6c70-f736-4528-ab19-696dde6366b8", "turn_index": 1}}
{"user_turn_0": "Two rooms if possible", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there free cancellation with this order ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "5016", "datum_id": {"dialogue_id": "bc5a6c70-f736-4528-ab19-696dde6366b8", "turn_index": 9}}
{"user_turn_0": "Yes I will return on Friday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "5027", "datum_id": {"dialogue_id": "eb658d83-a55e-4103-82e4-259b76eb9ab3", "turn_index": 4}}
{"user_turn_0": "What rating does it have ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "I would like a different hotel that has star ratings", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.rating_? (?!= (someSalient (?= 0))))))))", "idx": "5038", "datum_id": {"dialogue_id": "a7a933d7-a409-4a60-875e-9a1523804e6e", "turn_index": 3}}
{"user_turn_0": "I would like a different hotel that has star ratings", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Hyatt price equals 155", "user_turn_1": "Does this hotel has private bathroom ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.privateBath_? (^(Boolean) always)))))", "idx": "5039", "datum_id": {"dialogue_id": "a7a933d7-a409-4a60-875e-9a1523804e6e", "turn_index": 4}}
{"user_turn_0": "Does this hotel has private bathroom ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book this hotel for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Ace Hotel \"))))))", "idx": "5040", "datum_id": {"dialogue_id": "a7a933d7-a409-4a60-875e-9a1523804e6e", "turn_index": 5}}
{"user_turn_0": "Book this hotel for me", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "Book from now to Wednesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday)))))))))))", "idx": "5041", "datum_id": {"dialogue_id": "a7a933d7-a409-4a60-875e-9a1523804e6e", "turn_index": 6}}
{"user_turn_0": "I would like to book three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "5044", "datum_id": {"dialogue_id": "a7a933d7-a409-4a60-875e-9a1523804e6e", "turn_index": 9}}
{"user_turn_0": "Yes , I would prefer a moderately - priced restaurant", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Lakeside Demon", "user_turn_1": "That look fine . Can you book it for me ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "5064", "datum_id": {"dialogue_id": "5196c498-7346-4853-b727-43ec2c2f0c63", "turn_index": 2}}
{"user_turn_0": "That look fine . Can you book it for me ?", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "OK , can you change it to tomorrow ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (?= (Tomorrow))))))))", "idx": "5065", "datum_id": {"dialogue_id": "5196c498-7346-4853-b727-43ec2c2f0c63", "turn_index": 3}}
{"user_turn_0": "Does the restaurant have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "That 's fine . Book it for me on Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday))))))))))", "idx": "5086", "datum_id": {"dialogue_id": "45635f27-b1d0-4ea6-95fb-39293f0d64ab", "turn_index": 3}}
{"user_turn_0": "Hmm , do they have a fitness center there ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Cool , good . Book it , please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "5097", "datum_id": {"dialogue_id": "9516ecfe-746b-47d4-943b-3685c5e1cd7e", "turn_index": 2}}
{"user_turn_0": "Cool , good . Book it , please", "agent_turn_0": "Root system prompt hotel book object equals roomType", "user_turn_1": "I need one with a king bed , please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.roomType_? (List.exists_? (?= (RoomType.King))))))))", "idx": "5098", "datum_id": {"dialogue_id": "9516ecfe-746b-47d4-943b-3685c5e1cd7e", "turn_index": 3}}
{"user_turn_0": "Actually , sorry . I need two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Hmm , do they let you cancel a booking for free ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "5100", "datum_id": {"dialogue_id": "9516ecfe-746b-47d4-943b-3685c5e1cd7e", "turn_index": 5}}
{"user_turn_0": "Correct", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM", "user_turn_1": "I choose one at 3:40 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "5110", "datum_id": {"dialogue_id": "562d8f11-942f-4301-a632-5689eb883ca8", "turn_index": 3}}
{"user_turn_0": "I choose one at 3:40 PM", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 meridiem equals PM", "user_turn_1": "Sounds good , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "5111", "datum_id": {"dialogue_id": "562d8f11-942f-4301-a632-5689eb883ca8", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , can you send out a message to 07086798286 ?", "tgt": "(plan (^(Message) Create :object (Message.recipients_? (Contact.phoneNumber_? (?= \" 07086798286 \")))))", "idx": "5132", "datum_id": {"dialogue_id": "68288480-8af4-4464-953c-ca716ec88608", "turn_index": 0}}
{"user_turn_0": "I 'd like to book a hotel near my next event ?", "agent_turn_0": "Root system prompt hotel book object equals priceRange", "user_turn_1": "I 'd like it to be inexpensive and have at least four stars", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.priceRange_? (?= (PriceRange.Low)))) (Hotel.rating_? (?= 4))))))", "idx": "5136", "datum_id": {"dialogue_id": "68288480-8af4-4464-953c-ca716ec88608", "turn_index": 4}}
{"user_turn_0": "Are there any missed calls from my father ?", "agent_turn_0": "Root system inform phoneCall checkExistence Existed", "user_turn_1": "I need another favor . Text him / her that says when are you back", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Father))))) (Message.textContent_? (?= \" when are you back \")))))", "idx": "5139", "datum_id": {"dialogue_id": "44f338a3-2e9e-46d7-bed1-d7f57361a1eb", "turn_index": 2}}
{"user_turn_0": "None of them looks good . Can you show me more options ? Food type does n't matter", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Joint", "user_turn_1": "What is the address of the restaurant ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "5146", "datum_id": {"dialogue_id": "07069fe4-378c-4c5b-919e-569b0a7a38b9", "turn_index": 4}}
{"user_turn_0": "I prefer a different restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone Martian", "user_turn_1": "Does it have parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "5148", "datum_id": {"dialogue_id": "07069fe4-378c-4c5b-919e-569b0a7a38b9", "turn_index": 6}}
{"user_turn_0": "Does it have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Ok book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "5149", "datum_id": {"dialogue_id": "07069fe4-378c-4c5b-919e-569b0a7a38b9", "turn_index": 7}}
{"user_turn_0": "Hey , i want to book a restaurant with an average price on the 14th at 4:30 PM", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName location", "user_turn_1": "It needs to be in Abbey Wood and at least a 1 star rating", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.location_? (?= \" Abbey Wood \"))) (Restaurant.rating_? (?>= (someSalient (?= 1))))))))", "idx": "5169", "datum_id": {"dialogue_id": "17b987e6-286d-452d-b506-e259045dd9ca", "turn_index": 1}}
{"user_turn_0": "Actually I want another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Spago", "user_turn_1": "ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Interknack \"))))))", "idx": "5174", "datum_id": {"dialogue_id": "17b987e6-286d-452d-b506-e259045dd9ca", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i would very much like to book a business class flight to Paris , if it 's not too much trouble .", "tgt": "(plan (^(Flight) Book :object (& (Flight.class_? (?= (FlightClass.Business))) (Flight.destination_? (Place.location_? (?= \" Paris \"))))))", "idx": "5192", "datum_id": {"dialogue_id": "9baa2f75-089f-4a8c-a793-21dcc9b15f75", "turn_index": 0}}
{"user_turn_0": "I 'm heading out on Monday out of London Heathrow", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals listElementOne time equals hour equals 1 minute equals 30 meridiem equals PM listElementTwo time equals hour equals 3 minute equals 45 meridiem equals PM", "user_turn_1": "I 'd like the second one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (^((Constraint DateTime)) refer))))))", "idx": "5194", "datum_id": {"dialogue_id": "9baa2f75-089f-4a8c-a793-21dcc9b15f75", "turn_index": 2}}
{"user_turn_0": "I 'm coming back on Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 11 minute equals 45 meridiem equals AM price equals 199", "user_turn_1": "That 's fine . Let 's get it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "5198", "datum_id": {"dialogue_id": "9baa2f75-089f-4a8c-a793-21dcc9b15f75", "turn_index": 6}}
{"user_turn_0": "Yes book it", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "Do you want a Saloon , MPV or Executive car ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Taxi)) Path.apply \" object \") (lambda (^(Constraint Taxi) x0) (& (Taxi.source_? (Place.location_? (?= \" The Body Shop in Upper Street \"))) (Taxi.destination_? (Place.location_? (?= \" The Daily Grind \")))))))", "idx": "5204", "datum_id": {"dialogue_id": "61bfc912-3aea-49cb-ae30-673b476e4a33", "turn_index": 4}}
{"user_turn_0": "It 's in the AM", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Create a calendar entry for a debate session with my son at the Plush Lounge for tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object \") (lambda (^(Constraint CalendarEvent) x0) (& (& (& (CalendarEvent.eventName_? (?= \" debate session \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))))) (CalendarEvent.attendees_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Son)))))) (CalendarEvent.location_? (?= \" Plush Lounge \"))))))", "idx": "5207", "datum_id": {"dialogue_id": "e6e1879a-fa8b-4e9e-ae30-5fbd04874671", "turn_index": 2}}
{"user_turn_0": "Sunday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM price equals 130", "user_turn_1": "That will be good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "5215", "datum_id": {"dialogue_id": "f92b09d4-d463-43d9-8d52-2e4c21e2529b", "turn_index": 5}}
{"user_turn_0": "I do n't like any of what you found me . I want to see more options . I do n't care about the food type", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Gogol", "user_turn_1": "Is credit card accepted at the restaurant ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "5225", "datum_id": {"dialogue_id": "e858908c-fcfc-48d0-9b1f-2e22a2addd5c", "turn_index": 3}}
{"user_turn_0": "Is credit card accepted at the restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Capers \"))))))", "idx": "5226", "datum_id": {"dialogue_id": "e858908c-fcfc-48d0-9b1f-2e22a2addd5c", "turn_index": 4}}
{"user_turn_0": "Select another hotel with a low price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Club Quarters price equals 127", "user_turn_1": "Is there a fitness center ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasFitness_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "5232", "datum_id": {"dialogue_id": "190c2d2c-5db3-41b7-afd7-43a3514e6960", "turn_index": 2}}
{"user_turn_0": "Is there a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book that hotel for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Moody Moon \"))))))", "idx": "5233", "datum_id": {"dialogue_id": "190c2d2c-5db3-41b7-afd7-43a3514e6960", "turn_index": 3}}
{"user_turn_0": "Is there three rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "IS there free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "5239", "datum_id": {"dialogue_id": "190c2d2c-5db3-41b7-afd7-43a3514e6960", "turn_index": 9}}
{"user_turn_0": "Just 1 room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel anytime for free ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "5278", "datum_id": {"dialogue_id": "7bcfde8c-fa30-407e-a96d-a143e2078351", "turn_index": 6}}
{"user_turn_0": "do they have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "ok book I please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "5282", "datum_id": {"dialogue_id": "1a29525d-7b0a-4ba7-b092-460795990aea", "turn_index": 2}}
{"user_turn_0": "three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "do they have free cancelation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "5286", "datum_id": {"dialogue_id": "1a29525d-7b0a-4ba7-b092-460795990aea", "turn_index": 6}}
{"user_turn_0": "I do n't really care , but it needs to fit a luggage", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals The Orion Suite", "user_turn_1": "Revise the destination to be Dexion House", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" Dexion House \"))))", "idx": "5290", "datum_id": {"dialogue_id": "73706c57-c6cd-49c6-a2e1-dd95a2042e73", "turn_index": 2}}
{"user_turn_0": "Yes . please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM price equals 119", "user_turn_1": "I actually prefer the flight which departures at 2 PM and I would like to have economy class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.destination_? (Place.location_? (?= \" Amsterdam \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "5296", "datum_id": {"dialogue_id": "78c2aabf-acb4-4ed7-891a-30f70d27315c", "turn_index": 3}}
{"user_turn_0": "I prefer another hotel with at least one star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Triton price equals 173", "user_turn_1": "Does the hotel have free wifi ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasWifi_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "5307", "datum_id": {"dialogue_id": "9fcaabc3-1145-4c99-a9ed-d612f2e6ee2e", "turn_index": 3}}
{"user_turn_0": "Does the hotel have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Etiquette Suites \"))))))", "idx": "5308", "datum_id": {"dialogue_id": "9fcaabc3-1145-4c99-a9ed-d612f2e6ee2e", "turn_index": 4}}
{"user_turn_0": "I need three room and the room type does n't matter", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait . Can you change the check in date to today ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "5317", "datum_id": {"dialogue_id": "f111f936-731e-4865-b6bd-a52d9b5e8197", "turn_index": 4}}
{"user_turn_0": "I want another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "Does it take credit card ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "5323", "datum_id": {"dialogue_id": "59c63ec2-7f0c-4fa9-88c6-6e14ab609bad", "turn_index": 4}}
{"user_turn_0": "Does it take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "Book it at 6:30 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Chipotle Grill \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (?= (Minute.apply 30L)))))))))))", "idx": "5324", "datum_id": {"dialogue_id": "59c63ec2-7f0c-4fa9-88c6-6e14ab609bad", "turn_index": 5}}
{"user_turn_0": "Table for 3 people", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Change the appointment date to Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday)))))))))", "idx": "5326", "datum_id": {"dialogue_id": "59c63ec2-7f0c-4fa9-88c6-6e14ab609bad", "turn_index": 7}}
{"user_turn_0": "Does it come with a private bathroom ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "5331", "datum_id": {"dialogue_id": "b1c97f35-db3b-418d-9726-3681aaa39019", "turn_index": 3}}
{"user_turn_0": "Book it", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "Staying from April 18th to the 21st", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 18L)))) (month_? (Date.month_? (?= (April)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 21L)))))))))))", "idx": "5332", "datum_id": {"dialogue_id": "b1c97f35-db3b-418d-9726-3681aaa39019", "turn_index": 4}}
{"user_turn_0": "I 'd rather have another place with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Stazione restaurant", "user_turn_1": "Cool , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Juniper Cloud \"))))))", "idx": "5350", "datum_id": {"dialogue_id": "d29709e5-6904-4e00-82d8-f13521495b3d", "turn_index": 4}}
{"user_turn_0": "I want a table for 5 people on Thursday at 6", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Alright , update the appointment date to the 19th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 19L))))))", "idx": "5352", "datum_id": {"dialogue_id": "d29709e5-6904-4e00-82d8-f13521495b3d", "turn_index": 6}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM price equals 119", "user_turn_1": "This one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "5362", "datum_id": {"dialogue_id": "a9c44525-cf80-4277-8213-bfb0a7107e65", "turn_index": 8}}
{"user_turn_0": "Is it direct ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Okay I 'll take it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "5368", "datum_id": {"dialogue_id": "ed8b7181-cbe0-43cd-bb29-9558cd65df76", "turn_index": 4}}
{"user_turn_0": "Yea please send", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Actually , I need to find a hotel in Hillingdon with a car park from April 12th to 13th", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" Hillingdon \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 12L))))) (DateTimeRange.endDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 13L)))) (month_? (Date.month_? (?= (April))))))))) (Hotel.hasParking_? (?= true)))))", "idx": "5373", "datum_id": {"dialogue_id": "127eb31c-67a5-4e98-96ba-4f9e8511995c", "turn_index": 3}}
{"user_turn_0": "June 14th after 9:30 o'clock", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM price equals 199", "user_turn_1": "I rather have the 2:50 PM economy class flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast \"))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "5395", "datum_id": {"dialogue_id": "abd02040-1f06-4e6e-a9a9-a6df260d58e3", "turn_index": 3}}
{"user_turn_0": "What is the address of the restaurant", "agent_turn_0": "Root system inform restaurant find focus equals address equals 7193 South Evergreen Road", "user_turn_1": "Sounds lovely", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Jute Joint \"))))))", "idx": "5409", "datum_id": {"dialogue_id": "5eae881a-8862-4467-ba1a-fa3e44bc6b35", "turn_index": 4}}
{"user_turn_0": "I prefer another hotel with at least two stars rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Triton price equals 142", "user_turn_1": "Does the hotel have fitness center ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasFitness_? (^(Boolean) always)))))", "idx": "5418", "datum_id": {"dialogue_id": "e324330d-e1d4-43d3-936f-0913c7794e10", "turn_index": 4}}
{"user_turn_0": "Does the hotel have fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Grand Hyatt \"))))))", "idx": "5419", "datum_id": {"dialogue_id": "e324330d-e1d4-43d3-936f-0913c7794e10", "turn_index": 5}}
{"user_turn_0": "One room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is breakfast included ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "5424", "datum_id": {"dialogue_id": "e324330d-e1d4-43d3-936f-0913c7794e10", "turn_index": 10}}
{"user_turn_0": "I 'd rather one with five stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Grand Hyatt price equals 170", "user_turn_1": "What is it rated ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.rating_? (^(Number) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "5429", "datum_id": {"dialogue_id": "e8d22c5b-dd7f-42ec-8869-dc444e5fc242", "turn_index": 3}}
{"user_turn_0": "What is it rated ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "That works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Obsidian Sky \"))))))", "idx": "5430", "datum_id": {"dialogue_id": "e8d22c5b-dd7f-42ec-8869-dc444e5fc242", "turn_index": 4}}
{"user_turn_0": "Is breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Book it on my behalf", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "5456", "datum_id": {"dialogue_id": "57eb82e2-627d-4ff2-b606-7adcd9ada928", "turn_index": 3}}
{"user_turn_0": "I would like to purchase a round trip ticket to Edinburgh", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 11 minute equals 40 meridiem equals AM", "user_turn_1": "Sounds good . Purchase 1 ticket", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.source_? (Place.location_? (?= \" London Heathrow \")))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (^((Constraint (List DateTime))) refer)))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.passengers_? (?= 1))))))", "idx": "5465", "datum_id": {"dialogue_id": "14b0fdad-8dc9-4b65-b88f-77d5890bdaa7", "turn_index": 4}}
{"user_turn_0": "What 's the address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 234 University Street", "user_turn_1": "That 's perfect , please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Bandits \"))))))", "idx": "5482", "datum_id": {"dialogue_id": "56036e7a-995c-40e9-9d86-6a89c6254077", "turn_index": 3}}
{"user_turn_0": "Does it have laundry available ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "5489", "datum_id": {"dialogue_id": "b229bba1-0f5f-4d84-b96b-0d2ebfe62ba4", "turn_index": 2}}
{"user_turn_0": "Hello assistant , i want to book a round trip flight from London Heathrow to Glasgow with a departure date set for the 6th", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM price equals 125", "user_turn_1": "I would prefer the 3 Pm flight and I want business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" London Heathrow \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "5506", "datum_id": {"dialogue_id": "829865f5-31a6-4177-bd01-74011934afb9", "turn_index": 1}}
{"user_turn_0": "Change it tomorrow", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Create a reminder for tomorrow 's event", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Reminder)) Path.apply \" object \") (lambda (^(Constraint Reminder) x0) (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))))))))))", "idx": "5554", "datum_id": {"dialogue_id": "9fedfefb-7b2e-49c5-a7e7-132c57ad15a7", "turn_index": 2}}
{"user_turn_0": "Does it have outdoor seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "Sounds good , make the reservation for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "5564", "datum_id": {"dialogue_id": "2e21d9e6-662e-4e5f-9bf2-8fc3a06249b7", "turn_index": 2}}
{"user_turn_0": "it is 6", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "OK , can you move it to March 21st", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (& (Date.month_? (?= (March))) (Date.day_? (?= (Day.apply 21L)))))))", "idx": "5566", "datum_id": {"dialogue_id": "2e21d9e6-662e-4e5f-9bf2-8fc3a06249b7", "turn_index": 4}}
{"user_turn_0": "Great , what is the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Ok , book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "5590", "datum_id": {"dialogue_id": "a8ee183f-b43d-48fa-b711-62a0128881cd", "turn_index": 4}}
{"user_turn_0": "Leaving London today", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM price equals 124", "user_turn_1": "I 'd rather a business class ticket leaving at 4:20 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Dublin \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "5606", "datum_id": {"dialogue_id": "86916ede-25e0-4945-8fd2-11b333bd8b01", "turn_index": 2}}
{"user_turn_0": "I prefer another hotel with a four stars rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Four Seasons price equals 160", "user_turn_1": "Do they offer laundry service ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.laundry_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "5619", "datum_id": {"dialogue_id": "836e1825-11f5-4ac7-877c-db1fdd2c3f46", "turn_index": 4}}
{"user_turn_0": "Do they offer laundry service ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" River Park \"))))))", "idx": "5620", "datum_id": {"dialogue_id": "836e1825-11f5-4ac7-877c-db1fdd2c3f46", "turn_index": 5}}
{"user_turn_0": "I will need one room and the room type does n't matter", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Can I check in on Tuesday instead then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "5624", "datum_id": {"dialogue_id": "836e1825-11f5-4ac7-877c-db1fdd2c3f46", "turn_index": 9}}
{"user_turn_0": "Can I check in on Tuesday instead then", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does this booking support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "5625", "datum_id": {"dialogue_id": "836e1825-11f5-4ac7-877c-db1fdd2c3f46", "turn_index": 10}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , what s is the start time of my calendars meeting", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (^(DateTime) always))) :object (CalendarEvent.eventName_? (?= \" meeting \"))))", "idx": "5627", "datum_id": {"dialogue_id": "7df40dfd-0e56-4183-895d-81a08574ab54", "turn_index": 0}}
{"user_turn_0": "I should be back on Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM price equals 135", "user_turn_1": "This is fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "5636", "datum_id": {"dialogue_id": "8db28d2a-49d2-4ff5-b39f-febd5c34094a", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , two stars .", "tgt": "(plan (^(Hotel) Find :focus (Hotel.rating_? (^(Number) always)) :object (& (Hotel.hotelName_? (?= \" Embassy Suites \")) (Hotel.location_? (?= \" Baker Street \")))))", "idx": "5638", "datum_id": {"dialogue_id": "4db6ff91-a568-4882-ba1c-0d9734d49919", "turn_index": 0}}
{"user_turn_0": "Hi there , two stars .", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Tell me the rating of Embassy Suites hotel in Baker Street", "tgt": "(plan (^(Hotel) Book :object (Hotel.hotelName_? (?= \" Embassy Suites \"))))", "idx": "5639", "datum_id": {"dialogue_id": "4db6ff91-a568-4882-ba1c-0d9734d49919", "turn_index": 1}}
{"user_turn_0": "Tell me the rating of Embassy Suites hotel in Baker Street", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "For March 14th until the 20th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 14L)))) (month_? (Date.month_? (?= (March)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 20L)))))))))))", "idx": "5640", "datum_id": {"dialogue_id": "4db6ff91-a568-4882-ba1c-0d9734d49919", "turn_index": 2}}
{"user_turn_0": "I need three single rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I need to make a prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "5642", "datum_id": {"dialogue_id": "4db6ff91-a568-4882-ba1c-0d9734d49919", "turn_index": 4}}
{"user_turn_0": "Will I need to make a prepayment ?", "agent_turn_0": "Root system inform hotel find focus equals prePayment equals True", "user_turn_1": "Switch the check in date to the 9th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.startDateTime \") (lambda (^(Constraint DateTime) x0) (DateTime.date_? (Date.day_? (?= (Day.apply 9L)))))))", "idx": "5643", "datum_id": {"dialogue_id": "4db6ff91-a568-4882-ba1c-0d9734d49919", "turn_index": 5}}
{"user_turn_0": "Switch the check in date to the 9th", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Switch the check out date to Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Saturday))))))", "idx": "5644", "datum_id": {"dialogue_id": "4db6ff91-a568-4882-ba1c-0d9734d49919", "turn_index": 6}}
{"user_turn_0": "Switch the check out date to Saturday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I need to make a prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "5645", "datum_id": {"dialogue_id": "4db6ff91-a568-4882-ba1c-0d9734d49919", "turn_index": 7}}
{"user_turn_0": "On Friday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "5653", "datum_id": {"dialogue_id": "f48367d6-2b93-4965-b669-e7f9d5e797fe", "turn_index": 6}}
{"user_turn_0": "Aberdeen", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 meridiem equals PM", "user_turn_1": "No , I want to take the one at 3:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "5667", "datum_id": {"dialogue_id": "10c1133b-7226-415e-bc1e-056001655e92", "turn_index": 2}}
{"user_turn_0": "Okay , book now", "agent_turn_0": "Root system inform calendarEvent create Completed restaurant book Completed", "user_turn_1": "Thanks , next book a hotel that is inexpensive in Bedfordshire", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= \" Bedfordshire \")) (Hotel.priceRange_? (?= (PriceRange.Low))))))", "idx": "5674", "datum_id": {"dialogue_id": "e5db4c54-4520-4289-a221-bff0bc6149b5", "turn_index": 4}}
{"user_turn_0": "Hey assistant , what is the price range of The Fresco hotel in Northwick Park", "agent_turn_0": "Root system inform hotel find focus equals priceRange equals High", "user_turn_1": "Saturday", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.hotelName_? (?= \" The Fresco \")) (Hotel.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.King)))))))", "idx": "5681", "datum_id": {"dialogue_id": "c531e228-8108-4eaf-925b-d357b5477b24", "turn_index": 1}}
{"user_turn_0": "Change the check out date to Sunday", "agent_turn_0": "Root system prompt hotel book object equals rooms", "user_turn_1": "It 's high priced", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.rooms_? (?= 3))))))", "idx": "5683", "datum_id": {"dialogue_id": "c531e228-8108-4eaf-925b-d357b5477b24", "turn_index": 3}}
{"user_turn_0": "It 's high priced", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "How many rooms will you be needing ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Sunday)))))", "idx": "5684", "datum_id": {"dialogue_id": "c531e228-8108-4eaf-925b-d357b5477b24", "turn_index": 4}}
{"user_turn_0": "I 'd prefer a hotel which is n't rated zero stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Hyatt price equals 155", "user_turn_1": "What is it rated ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.rating_? (^(Number) always)))))", "idx": "5692", "datum_id": {"dialogue_id": "8136b2ca-db43-4957-ad19-3dc2ed2a715a", "turn_index": 6}}
{"user_turn_0": "What is it rated ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Alright , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Hilton \"))))))", "idx": "5693", "datum_id": {"dialogue_id": "8136b2ca-db43-4957-ad19-3dc2ed2a715a", "turn_index": 7}}
{"user_turn_0": "Check at the Palm Bliss hotel", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Have I got to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "5698", "datum_id": {"dialogue_id": "8136b2ca-db43-4957-ad19-3dc2ed2a715a", "turn_index": 12}}
{"user_turn_0": "I 'm going to The Bull Islington", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals 54 Islington Park Road", "user_turn_1": "Wait . Change the destination to 7 Upper Street", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" 7 Upper Street \"))))", "idx": "5703", "datum_id": {"dialogue_id": "e819e8e9-93ab-45a2-96b0-8abc0777830a", "turn_index": 3}}
{"user_turn_0": "What 's the cabin class ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "5708", "datum_id": {"dialogue_id": "834e243c-757f-4e71-ad9f-a1f6d3294336", "turn_index": 3}}
{"user_turn_0": "No , I 'm going to Lisbon on Thursday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 2 object equals nextDepartureDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM price equals 210", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "5710", "datum_id": {"dialogue_id": "834e243c-757f-4e71-ad9f-a1f6d3294336", "turn_index": 5}}
{"user_turn_0": "Looks good", "agent_turn_0": "Root system offer flight book", "user_turn_1": "Change the departure day for my second trip please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday)))))))", "idx": "5711", "datum_id": {"dialogue_id": "834e243c-757f-4e71-ad9f-a1f6d3294336", "turn_index": 6}}
{"user_turn_0": "Change the departure day for my second trip please", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 3 object equals nextDepartureDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM price equals 156", "user_turn_1": "That 's fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "5712", "datum_id": {"dialogue_id": "834e243c-757f-4e71-ad9f-a1f6d3294336", "turn_index": 7}}
{"user_turn_0": "That 's ok . I 'd like to book this flight", "agent_turn_0": "Root system prompt flight book object equals tripType", "user_turn_1": "No I do not", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& x0 (Flight.nextDestination_? (Place.location_? (?= \" Madrid \")))) (Flight.nextDepartureDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday)))))))))", "idx": "5723", "datum_id": {"dialogue_id": "1bd6b24f-995f-4562-b0b5-bc65b2351d3d", "turn_index": 4}}
{"user_turn_0": "it is 26th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 4 meridiem equals PM price equals 160", "user_turn_1": "I like this one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "5735", "datum_id": {"dialogue_id": "8f1cd278-0de7-49eb-86b9-bfc5c086377e", "turn_index": 4}}
{"user_turn_0": "Thanks for the help . I 'd like to book a train to Reading from Manchester Piccadilly departing on Friday and coming back on the 28th", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM", "user_turn_1": "That looks fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "5755", "datum_id": {"dialogue_id": "68d361d0-34ed-4afc-92ef-b653ef6d7fb3", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , text my brother the next event .", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Brother))))))))", "idx": "5757", "datum_id": {"dialogue_id": "66edd3c2-b17a-47d0-a236-cf927d1bd2ef", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant I need your help in booking me a cab ride going from 7 Barrow Point and heading to Dexion House .", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" 7 Barrow Point Avenue \"))) (Taxi.destination_? (Place.location_? (?= \" Dexion House \"))))))", "idx": "5762", "datum_id": {"dialogue_id": "859ed47b-a078-49b6-8d2e-5c3494c83d80", "turn_index": 0}}
{"user_turn_0": "1 PM", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Alright . Hmm ... change the appointment date to Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.atDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Sunday)))))", "idx": "5770", "datum_id": {"dialogue_id": "07b4c07d-183b-4e50-b5a3-6c8a65f1d8e3", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , schedule an event and send it to Jan.", "tgt": "(plan (do (^(CalendarEvent) Create) (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Jan \")))) (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always))))))))", "idx": "5778", "datum_id": {"dialogue_id": "46cd7b37-7a9f-4ff4-81a3-1388e2af675a", "turn_index": 0}}
{"user_turn_0": "Leeds", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM price equals 199", "user_turn_1": "Okay I 'll take it ! I need tickets for four passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.destination_? (Place.location_? (?= \" Edinburgh \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (^((Constraint (List DateTime))) refer)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 4))))))", "idx": "5790", "datum_id": {"dialogue_id": "72d4351e-0cf6-41ef-b645-a68926075df0", "turn_index": 2}}
{"user_turn_0": "No , I 'd rather take the on at 3:50 PM", "agent_turn_0": "Root system offer flight book", "user_turn_1": "Hold on a minute , I need to change the departure day of my Madrid trip to the 27th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (DateTime.date_? (Date.day_? (?= (Day.apply 27L)))))))", "idx": "5793", "datum_id": {"dialogue_id": "72d4351e-0cf6-41ef-b645-a68926075df0", "turn_index": 5}}
{"user_turn_0": "It 'll be Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM price equals 124", "user_turn_1": "I like that option", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "5807", "datum_id": {"dialogue_id": "fe12f252-7129-40ba-bdc9-8077c250ebdc", "turn_index": 5}}
{"user_turn_0": "No , York", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM", "user_turn_1": "I 'll take the one at 2:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "5813", "datum_id": {"dialogue_id": "f043fb87-1335-4931-bc96-385f7e1c1f85", "turn_index": 4}}
{"user_turn_0": "Is breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "5823", "datum_id": {"dialogue_id": "1fa26dff-29db-4f6f-a0ae-37b54f905a6d", "turn_index": 4}}
{"user_turn_0": "Two", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Modify the check out date to Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Saturday))))))", "idx": "5826", "datum_id": {"dialogue_id": "1fa26dff-29db-4f6f-a0ae-37b54f905a6d", "turn_index": 7}}
{"user_turn_0": "Do me another favor . Include my restaurant appointment today to the calendar", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "How long will it take to get to today 's morning event", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Morning))))))))))", "idx": "5830", "datum_id": {"dialogue_id": "6939134f-b505-4a2c-b5a0-fb27ddc2541f", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i am calling Mr Brown", "tgt": "(plan (^(PhoneCall) Create :object (PhoneCall.recipients_? (Contact.person_? (& (Person.name_? (?= \" Brown \")) (Person.namePrefix_? (?= \" Mr \")))))))", "idx": "5833", "datum_id": {"dialogue_id": "b1aa5ae8-b767-48eb-b796-d7b8b9813008", "turn_index": 0}}
{"user_turn_0": "Does it have fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Dreamy Desert Suites \"))))))", "idx": "5839", "datum_id": {"dialogue_id": "b1aa5ae8-b767-48eb-b796-d7b8b9813008", "turn_index": 6}}
{"user_turn_0": "What is that place rated ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "Make the booking from the 12th to the 13th", "tgt": "(plan (^(Hotel) Book :object (& (^((Constraint Hotel)) refer) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 12L))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 13L))))))))))", "idx": "5851", "datum_id": {"dialogue_id": "e1817b48-4aa0-4693-b16f-6764fef5f585", "turn_index": 2}}
{"user_turn_0": "I just need one single room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "I need to know if that booking supports free cancellation", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "5853", "datum_id": {"dialogue_id": "e1817b48-4aa0-4693-b16f-6764fef5f585", "turn_index": 4}}
{"user_turn_0": "Is this a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "5857", "datum_id": {"dialogue_id": "51274685-456f-4b7d-800d-139790c8da7c", "turn_index": 2}}
{"user_turn_0": "Yeah , send", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Thanks for the help . Now I need a train ticket to get me to Glasgow Queen Street before 10:30 PM from East Croyden", "tgt": "(plan (^(Train) Book :object (& (& (Train.source_? (Place.location_? (?= \" East Croydon \"))) (Train.destination_? (Place.location_? (?= \" Glasgow Queen Street \")))) (Train.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "5864", "datum_id": {"dialogue_id": "17df5b1f-e113-4473-bffb-6a1ee944e269", "turn_index": 4}}
{"user_turn_0": "Can you tell me if it has laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Ok book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "5868", "datum_id": {"dialogue_id": "d2eea171-6225-4b19-bd73-e366e8d3ed65", "turn_index": 3}}
{"user_turn_0": "Can you change my check - in to tomorrow please ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does it come with free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "5874", "datum_id": {"dialogue_id": "d2eea171-6225-4b19-bd73-e366e8d3ed65", "turn_index": 9}}
{"user_turn_0": "On Friday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM", "user_turn_1": "Sounds good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (^((Constraint Hour)) refer)) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "5892", "datum_id": {"dialogue_id": "3f157436-dc6a-40c9-9923-32fe8ebfc222", "turn_index": 6}}
{"user_turn_0": "I will go to Madrid on Saturday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 3 object equals nextDepartureDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM price equals 124", "user_turn_1": "This one seems fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "5898", "datum_id": {"dialogue_id": "524cdab8-9455-4618-9d16-61e77d367ddf", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i want to make a reservation at a restaurant in Somerstown . It should be for 1 PM at a moderate to low priced establishment .", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.location_? (?= \" Somerstown \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))) (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High))))))))", "idx": "5902", "datum_id": {"dialogue_id": "f22088f5-90f2-4a95-b4bb-bf03d267296a", "turn_index": 0}}
{"user_turn_0": "What 's the average cost per person there ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 29", "user_turn_1": "That works , I want to eat there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (^((Constraint String)) refer))))))", "idx": "5905", "datum_id": {"dialogue_id": "f22088f5-90f2-4a95-b4bb-bf03d267296a", "turn_index": 3}}
{"user_turn_0": "Does the restaurant have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "That 's fine . Book it for Monday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))))))))", "idx": "5912", "datum_id": {"dialogue_id": "04b62c33-0977-45c7-a10a-69e1c890314b", "turn_index": 4}}
{"user_turn_0": "Is that direct ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Cool , book the flight for one passenger", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Amsterdam \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 1))))))", "idx": "5924", "datum_id": {"dialogue_id": "a74f46af-87cc-422b-96f6-58d7a7132f17", "turn_index": 3}}
{"user_turn_0": "Hello assistant , tell me what 's the rating of Goat and Guru restaurant", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 5", "user_turn_1": "Book it", "tgt": "(plan (^(Restaurant) Book :object (Restaurant.restaurantName_? (^((Constraint String)) refer))))", "idx": "5928", "datum_id": {"dialogue_id": "e5b45f13-5220-46ca-a076-d8d2969bf2d3", "turn_index": 1}}
{"user_turn_0": "From Liverpool", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 4 minute equals 20 meridiem equals PM price equals 156", "user_turn_1": "Fine , book this one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "5949", "datum_id": {"dialogue_id": "16936df8-a877-40ef-b7aa-f32f742d14c8", "turn_index": 2}}
{"user_turn_0": "Is it a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "That 's fine . Book this one for three passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.source_? (Place.location_? (?= \" London \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.tripType_? (?= (TripType.oneWay)))) (Flight.passengers_? (?= 3))))))", "idx": "5956", "datum_id": {"dialogue_id": "f186968d-3fce-497f-9df1-b021247a8f26", "turn_index": 4}}
{"user_turn_0": "Hello assistant , tell me when my flight BA350 will arrive", "agent_turn_0": "Root system inform flight find focus equals arrivalDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM", "user_turn_1": "Thanks , also send out today 's event to Mr Greene", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))))))) (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Greene \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "5980", "datum_id": {"dialogue_id": "17743ef7-a9ad-4bf8-b3b0-794b816198ab", "turn_index": 1}}
{"user_turn_0": "Next task , i would like to get a flight from London Heathrow to Belfast City to leave on Monday", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 11 minute equals 55 meridiem equals AM", "user_turn_1": "That will do . Book this flight for three people", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.source_? (Place.location_? (?= \" London Heathrow \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 3))))))", "idx": "5983", "datum_id": {"dialogue_id": "17743ef7-a9ad-4bf8-b3b0-794b816198ab", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , book a cheap room at a hotel with a car park in Tottenham from Monday to Friday .", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" Tottenham \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday)))))))) (Hotel.priceRange_? (?= (PriceRange.Low)))) (Hotel.hasParking_? (?= true)))))", "idx": "5994", "datum_id": {"dialogue_id": "66561a7b-f1a4-4afb-89cf-03b81c11107f", "turn_index": 0}}
{"user_turn_0": "How do I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "5996", "datum_id": {"dialogue_id": "66561a7b-f1a4-4afb-89cf-03b81c11107f", "turn_index": 2}}
{"user_turn_0": "Three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Change the check out date to the 25th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 25L))))))", "idx": "5999", "datum_id": {"dialogue_id": "66561a7b-f1a4-4afb-89cf-03b81c11107f", "turn_index": 5}}
{"user_turn_0": "Change the check out date to the 25th", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to pay if I want to cancel ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "6000", "datum_id": {"dialogue_id": "66561a7b-f1a4-4afb-89cf-03b81c11107f", "turn_index": 6}}
{"user_turn_0": "I need three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "I need to know if that booking supports free cancellation", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "6006", "datum_id": {"dialogue_id": "e4323b67-cb71-4a50-aba2-14c6bf3b2046", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , what 's the Vodka rating ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.rating_? (^(Number) always)) :object (Restaurant.restaurantName_? (?= \" Godka \"))))", "idx": "6008", "datum_id": {"dialogue_id": "84da13f7-2da4-4e1a-bce9-2342de023463", "turn_index": 0}}
{"user_turn_0": "I want a different hotel that 's rated four stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals The Fresco price equals 138", "user_turn_1": "Is breakfast provided ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "6017", "datum_id": {"dialogue_id": "553795cc-8bec-4ded-8eb2-5f9d31510451", "turn_index": 4}}
{"user_turn_0": "Is breakfast provided ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Make the reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Triton \"))))))", "idx": "6018", "datum_id": {"dialogue_id": "553795cc-8bec-4ded-8eb2-5f9d31510451", "turn_index": 5}}
{"user_turn_0": "Yes , book it for me please", "agent_turn_0": "Root system inform calendarEvent create Completed restaurant book Completed", "user_turn_1": "Set up an event from 12:30 to 3 PM on the calendar", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 12L))) (Time.minute_? (?= (Minute.apply 30L)))))) (DateTimeRange.endDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "6031", "datum_id": {"dialogue_id": "ef650b81-7e90-4b75-99f9-5108569e84dc", "turn_index": 3}}
{"user_turn_0": "Which airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "6036", "datum_id": {"dialogue_id": "05992ea1-65b5-4e94-a566-fc322db5cc99", "turn_index": 3}}
{"user_turn_0": "Hello assistant , book a room at a hotel with a gym .", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "A low cost one in Canary Wharf", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.location_? (?= \" Canary Wharf \"))) (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "6046", "datum_id": {"dialogue_id": "ec13e8fb-6630-44dd-a8c7-1c94007daf22", "turn_index": 1}}
{"user_turn_0": "I want another hotel that is at least 2 star rated", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Embassy Suites price equals 173", "user_turn_1": "Does that one have a gym ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasFitness_? (^(Boolean) always)))))", "idx": "6049", "datum_id": {"dialogue_id": "ec13e8fb-6630-44dd-a8c7-1c94007daf22", "turn_index": 4}}
{"user_turn_0": "Does that one have a gym ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book me that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Etiquette Suites \"))))))", "idx": "6050", "datum_id": {"dialogue_id": "ec13e8fb-6630-44dd-a8c7-1c94007daf22", "turn_index": 5}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 2 object equals nextDepartureDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM price equals 127", "user_turn_1": "I want this one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "6059", "datum_id": {"dialogue_id": "ce2cb5b9-a438-47db-9304-3d2f46d6f3d7", "turn_index": 5}}
{"user_turn_0": "Hi there , please book a hotel near my event from the 16th to the 20th of December", "agent_turn_0": "Root system prompt hotel book object equals priceRange", "user_turn_1": "I 'd like a two star or better in the moderate or low price range please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Hotel.rating_? (?>= (someSalient (?= 2))))))))", "idx": "6062", "datum_id": {"dialogue_id": "3a37097b-302b-4a83-a801-7de153330603", "turn_index": 1}}
{"user_turn_0": "I 'd like a two star or better in the moderate or low price range please", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals River Park price equals 130", "user_turn_1": "Do they offer free wifi", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasWifi_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "6063", "datum_id": {"dialogue_id": "3a37097b-302b-4a83-a801-7de153330603", "turn_index": 2}}
{"user_turn_0": "Do they offer free wifi", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "6064", "datum_id": {"dialogue_id": "3a37097b-302b-4a83-a801-7de153330603", "turn_index": 3}}
{"user_turn_0": "None but make sure it fits two suitcases", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals Dexion House", "user_turn_1": "Change my destination to 29 Alexander Road", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" 29 Alexander Road \"))))", "idx": "6073", "datum_id": {"dialogue_id": "7b988afa-e3e2-4ec1-b159-c1f59c03cfd7", "turn_index": 5}}
{"user_turn_0": "Can you provide the direction to get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Please go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "6078", "datum_id": {"dialogue_id": "3db30a1f-e1eb-4388-a28e-482076500290", "turn_index": 3}}
{"user_turn_0": "I want to book 2 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does it have breakfast service included ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "6081", "datum_id": {"dialogue_id": "3db30a1f-e1eb-4388-a28e-482076500290", "turn_index": 6}}
{"user_turn_0": "Does it have breakfast service included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "That 's fine , please go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "6082", "datum_id": {"dialogue_id": "3db30a1f-e1eb-4388-a28e-482076500290", "turn_index": 7}}
{"user_turn_0": "Hey assistant , how long does it take to get to my event on Monday ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 20 object equals destination equals location equals Dexion House", "user_turn_1": "How long will it take me to drive to 8063 Lake View", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Navigation)) Path.apply \" object \") (lambda (^(Constraint Navigation) x0) (& (Navigation.destination_? (Place.location_? (?= \" 8063 Lake View \"))) (Navigation.transportationMode_? (?= (TransportationMode.Driving)))))))", "idx": "6084", "datum_id": {"dialogue_id": "0c7c8cdd-1dcc-4665-bcd5-284651f6df3a", "turn_index": 1}}
{"user_turn_0": "I will return on the 26th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 4 meridiem equals PM price equals 170", "user_turn_1": "Looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "6137", "datum_id": {"dialogue_id": "e3515d19-dd33-42ac-9840-b205b88825b0", "turn_index": 4}}
{"user_turn_0": "Hello , i want to know the time of my reminder", "agent_turn_0": "Root system inform reminder find focus equals atDateTime equals time equals hour equals 5 minute equals 30 meridiem equals PM", "user_turn_1": "I need the reminder at 4 PM updated", "tgt": "(plan (^(Reminder) Update :object (Reminder.atDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))", "idx": "6140", "datum_id": {"dialogue_id": "3e64d4cf-e6bb-47ad-b6bd-eb5cd2cdedbb", "turn_index": 1}}
{"user_turn_0": "I am leaving from Leicester", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM", "user_turn_1": "I want the one at 1:45 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "6151", "datum_id": {"dialogue_id": "4aab7f6a-f0fb-4160-8883-62b82d3d9370", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i would like to book a table for 6 PM on the 14th for restaurant in Earls Court with parking .", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.location_? (?= \" Earls Court \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 14L))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (meridiem_? (?= (Meridiem.PM))))))))) (Restaurant.hasParking_? (?= true)))))", "idx": "6159", "datum_id": {"dialogue_id": "0fbbf55d-c2d2-4947-92dd-05b841b6d602", "turn_index": 0}}
{"user_turn_0": "Which of these have three stars ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floq", "user_turn_1": "What does a person usually pay there ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "6162", "datum_id": {"dialogue_id": "0fbbf55d-c2d2-4947-92dd-05b841b6d602", "turn_index": 3}}
{"user_turn_0": "I want another one that 's got outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Bandits", "user_turn_1": "Do they accept card there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "6164", "datum_id": {"dialogue_id": "0fbbf55d-c2d2-4947-92dd-05b841b6d602", "turn_index": 5}}
{"user_turn_0": "Do they accept card there ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "I 'm fine with that , so book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Boiling Fence \"))))))", "idx": "6165", "datum_id": {"dialogue_id": "0fbbf55d-c2d2-4947-92dd-05b841b6d602", "turn_index": 6}}
{"user_turn_0": "Go ahead and send it", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Also put Business Insider at 11:30 AM on my calendar", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.eventName_? (?= \" Business Insider \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM))))))))))", "idx": "6177", "datum_id": {"dialogue_id": "2c571c18-d212-40e3-9d31-7f62108e4801", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i would like to book a hotel with a 3 star or better rating a queen sized bed room .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.rating_? (?>= (someSalient (?= 3)))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Queen)))))))", "idx": "6178", "datum_id": {"dialogue_id": "ac2ea525-9862-4702-bd8e-2d5ccd15b08d", "turn_index": 0}}
{"user_turn_0": "Does this hotel have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "6182", "datum_id": {"dialogue_id": "ac2ea525-9862-4702-bd8e-2d5ccd15b08d", "turn_index": 4}}
{"user_turn_0": "Going to Belfast , and make reservation for two people please", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "What about Tuesday then ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "6189", "datum_id": {"dialogue_id": "e6647cb4-7ee0-42be-a81b-ca0ae89c45c2", "turn_index": 3}}
{"user_turn_0": "Just make sure the restaurant has a rating of four stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flew Z", "user_turn_1": "Is parking offered at the restaurant ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "6195", "datum_id": {"dialogue_id": "84e36550-f4b4-46c6-96d6-eacfa9ab47ac", "turn_index": 3}}
{"user_turn_0": "Give me a different restaurant that has outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flip Out", "user_turn_1": "Is parking offered at the restaurant ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "6197", "datum_id": {"dialogue_id": "84e36550-f4b4-46c6-96d6-eacfa9ab47ac", "turn_index": 5}}
{"user_turn_0": "Is parking offered at the restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flew Z \"))))))", "idx": "6198", "datum_id": {"dialogue_id": "84e36550-f4b4-46c6-96d6-eacfa9ab47ac", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i want to send event to my mom", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Mother))))))))", "idx": "6201", "datum_id": {"dialogue_id": "b2174fc3-d538-4801-912a-7a6c53ddc92d", "turn_index": 0}}
{"user_turn_0": "Go ahead and sen dit", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "I need another favor . Yes , make a hotel reservation , I need a single room", "tgt": "(plan (^(Hotel) Book :object (Hotel.roomType_? (List.exists_? (?= (RoomType.Single))))))", "idx": "6203", "datum_id": {"dialogue_id": "b2174fc3-d538-4801-912a-7a6c53ddc92d", "turn_index": 2}}
{"user_turn_0": "Hi my assistant , tell me how I can get to Westgate House by bike", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book a taxi for mr please", "tgt": "(plan (^(Taxi) Book))", "idx": "6207", "datum_id": {"dialogue_id": "57012f94-71eb-4cd8-8e12-b8638530cd57", "turn_index": 1}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 2 object equals nextDepartureDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM price equals 134", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "6261", "datum_id": {"dialogue_id": "1acfdab2-0e22-4995-9235-6fbb3d3dc0e5", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , i need to schedule Grocery deliver with Mr Hodges on Thursday at 10 on my calendar", "tgt": "(plan (^(CalendarEvent) Create :object (& (& (CalendarEvent.eventName_? (?= \" Grocery delivery \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday)))) (DateTime.time_? (Time.hour_? (?= (Hour.apply 10L)))))))) (CalendarEvent.attendees_? (Contact.person_? (& (Person.name_? (?= \" Hodges \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "6265", "datum_id": {"dialogue_id": "101c3709-7653-481f-baa9-4ef000ff3772", "turn_index": 0}}
{"user_turn_0": "Hello , book a business class flight with British Airways .", "agent_turn_0": "Root system prompt flight book object equals source", "user_turn_1": "I am going from London to Belfast City on October 6th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& x0 (Flight.source_? (Place.location_? (?= \" London \")))) (Flight.destination_? (Place.location_? (?= \" Belfast City \")))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (& (Date.month_? (?= (October))) (Date.day_? (?= (Day.apply 6L)))))))))))", "idx": "6271", "datum_id": {"dialogue_id": "835d47a1-02da-4121-8cc2-2d44041a091b", "turn_index": 1}}
{"user_turn_0": "I am going from London to Belfast City on October 6th", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM price equals 127", "user_turn_1": "Book this flight for one passenger please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.airLine_? (?= \" British \"))) (Flight.source_? (Place.location_? (?= \" London \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 1))))))", "idx": "6272", "datum_id": {"dialogue_id": "835d47a1-02da-4121-8cc2-2d44041a091b", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , can you book me a hotel near my next event that 's not too expensive ?", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))))))", "idx": "6275", "datum_id": {"dialogue_id": "9834e6f8-3bc2-483d-b33c-9ae93e06dde2", "turn_index": 0}}
{"user_turn_0": "Can you give me directions ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Can you book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Bluebird Guesthouse \"))))))", "idx": "6278", "datum_id": {"dialogue_id": "9834e6f8-3bc2-483d-b33c-9ae93e06dde2", "turn_index": 3}}
{"user_turn_0": "I only need one room and I do n't care about what kind it is", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you actually change my check in date to be today ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Today)))))", "idx": "6282", "datum_id": {"dialogue_id": "9834e6f8-3bc2-483d-b33c-9ae93e06dde2", "turn_index": 7}}
{"user_turn_0": "Do any of them serve Japanese ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Emptia", "user_turn_1": "Book it at 3 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Dim Summit \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 3L))))))))))", "idx": "6303", "datum_id": {"dialogue_id": "b41b6d0c-11e1-4fbc-a27b-4a8fb042f00d", "turn_index": 3}}
{"user_turn_0": "Hi my assistant , is there an event for every Saturday on my calendar", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Make me one", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.eventName_? (?= \" first outdoors \")) (CalendarEvent.attendees_? (Contact.person_? (Person.name_? (?= \" Amy \")))))))", "idx": "6308", "datum_id": {"dialogue_id": "fdc9bbb7-862c-41f3-b82c-4a13a83514e3", "turn_index": 1}}
{"user_turn_0": "On the 26th", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM", "user_turn_1": "Sure , sounds good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "6333", "datum_id": {"dialogue_id": "91fbb187-e0c4-4e8d-b4b5-1d735e162484", "turn_index": 6}}
{"user_turn_0": "Three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to pay now ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "6351", "datum_id": {"dialogue_id": "be245532-092f-49ca-8998-dbe5e8010f99", "turn_index": 6}}
{"user_turn_0": "What class is it ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "I actually prefer the flight which departures 1 PM and I would like to have business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.destination_? (Place.location_? (?= \" Edinburgh \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "6357", "datum_id": {"dialogue_id": "6025d989-516e-4c79-aa54-c7591236678e", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , what 's Hambone Martian rated at ? You know , that restaurant .", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.rating_? (^(Number) always)) :object (Restaurant.restaurantName_? (?= \" Hambone Martian \"))))", "idx": "6381", "datum_id": {"dialogue_id": "c82b7dee-7e1a-46d5-a753-05020ae0bed7", "turn_index": 0}}
{"user_turn_0": "None of them looks good . How about restaurants that serve German Food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Goat and Guru", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Jute Joint \"))))))", "idx": "6411", "datum_id": {"dialogue_id": "f03799ea-cb18-48e0-954d-5bce358c799c", "turn_index": 6}}
{"user_turn_0": "The one which leaves at 1:40 PM looks good", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM price equals 170", "user_turn_1": "This one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "6418", "datum_id": {"dialogue_id": "20ebe3fb-c159-4137-a325-810eeefbd0c8", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , let me book a round - trip train ticket to travel from Manchester Piccadilly to St. Pancras before 7:30 o'clock .", "tgt": "(plan (^(Train) Book :object (& (& (& (Train.source_? (Place.location_? (?= \" Manchester Piccadilly \"))) (Train.destination_? (Place.location_? (?= \" St Pancras \")))) (Train.departureDateTime_? (DateTime.time_? (?<= (someSalient (& (Time.hour_? (?= (Hour.apply 7L))) (Time.minute_? (?= (Minute.apply 30L))))))))) (Train.tripType_? (?= (TripType.roundTrip))))))", "idx": "6425", "datum_id": {"dialogue_id": "0bd5dab2-ce61-4137-88eb-fe908b9da71a", "turn_index": 0}}
{"user_turn_0": "I 'd like somewhere else , with outdoor dining", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floq", "user_turn_1": "What is the address of the restaurant", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "6434", "datum_id": {"dialogue_id": "2b35dfff-fb50-4548-bae3-71dd50ad857b", "turn_index": 4}}
{"user_turn_0": "What is the address of the restaurant", "agent_turn_0": "Root system inform restaurant find focus equals address equals Haywood Way", "user_turn_1": "Okay I want to book it at 3:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Capricorn \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "6435", "datum_id": {"dialogue_id": "2b35dfff-fb50-4548-bae3-71dd50ad857b", "turn_index": 5}}
{"user_turn_0": "it is 3", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Okay try on February 21st", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (& (Date.month_? (?= (February))) (Date.day_? (?= (Day.apply 21L))))))))))", "idx": "6437", "datum_id": {"dialogue_id": "2b35dfff-fb50-4548-bae3-71dd50ad857b", "turn_index": 7}}
{"user_turn_0": "I would actually another hotel with three stars rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Candlewood Suites price equals 201", "user_turn_1": "Is a fitness center available at this hotel ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasFitness_? (^(Boolean) always)))))", "idx": "6448", "datum_id": {"dialogue_id": "05ee7439-5d08-47e9-b783-13f97b946a07", "turn_index": 4}}
{"user_turn_0": "Is a fitness center available at this hotel ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Great , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Diva \"))))))", "idx": "6449", "datum_id": {"dialogue_id": "05ee7439-5d08-47e9-b783-13f97b946a07", "turn_index": 5}}
{"user_turn_0": "Can I check in on November 7th instead ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does this booking support free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "6453", "datum_id": {"dialogue_id": "05ee7439-5d08-47e9-b783-13f97b946a07", "turn_index": 9}}
{"user_turn_0": "Try River Park hotel then", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does it have breakfast ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "6462", "datum_id": {"dialogue_id": "48181c9f-9133-463e-b27f-2240cfe46eb2", "turn_index": 7}}
{"user_turn_0": "Does it have breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Please book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "6463", "datum_id": {"dialogue_id": "48181c9f-9133-463e-b27f-2240cfe46eb2", "turn_index": 8}}
{"user_turn_0": "No , Edinburgh", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM", "user_turn_1": "Let 's do the 4:30 PM please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "6490", "datum_id": {"dialogue_id": "28c68ebd-8fd5-4d82-9a4e-ea6c22feeb17", "turn_index": 2}}
{"user_turn_0": "Yes . For Sunday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM", "user_turn_1": "Let 's do it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "6492", "datum_id": {"dialogue_id": "28c68ebd-8fd5-4d82-9a4e-ea6c22feeb17", "turn_index": 4}}
{"user_turn_0": "Does it have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it !", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "6511", "datum_id": {"dialogue_id": "c942526e-86ed-45cf-b4a1-89a3cd3aec67", "turn_index": 2}}
{"user_turn_0": "3 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel for free ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "6515", "datum_id": {"dialogue_id": "c942526e-86ed-45cf-b4a1-89a3cd3aec67", "turn_index": 6}}
{"user_turn_0": "Hello , when is the event with Justin", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals startDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM", "user_turn_1": "set a reminder for the event", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (^(CalendarEvent) always))))))", "idx": "6518", "datum_id": {"dialogue_id": "40bb9dff-6910-4bbc-ad14-fb236fae8e72", "turn_index": 1}}
{"user_turn_0": "Can you tell me what cabin class it is ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "I want to go with the economy class flight that leaves at 2 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.destination_? (Place.location_? (?= \" Glasgow \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "6525", "datum_id": {"dialogue_id": "111128eb-c3df-4eff-9c5b-f9cf1f0fe282", "turn_index": 3}}
{"user_turn_0": "Yeah", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 1 meridiem equals PM price equals 150", "user_turn_1": "No , I rather get the one that leaves at 1:20 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "6538", "datum_id": {"dialogue_id": "115297a0-2f26-4c7a-87da-50f85a1400b9", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i would like to book a hotel with a moderate price with a king sized bed . I would like to check in today and check out on Sunday .", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.priceRange_? (?= (PriceRange.Moderate))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.King)))))))", "idx": "6541", "datum_id": {"dialogue_id": "398ed2af-3761-4037-a686-c7aae7c53190", "turn_index": 0}}
{"user_turn_0": "I would prefer a different hotel that has a rating of at least 2-stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Ace Hotel price equals 124", "user_turn_1": "Does this hotel have private bathrooms ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.privateBath_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "6545", "datum_id": {"dialogue_id": "398ed2af-3761-4037-a686-c7aae7c53190", "turn_index": 4}}
{"user_turn_0": "Does this hotel have private bathrooms ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Okay , book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Grand Hyatt \"))))))", "idx": "6546", "datum_id": {"dialogue_id": "398ed2af-3761-4037-a686-c7aae7c53190", "turn_index": 5}}
{"user_turn_0": "Could I have 2 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "6548", "datum_id": {"dialogue_id": "398ed2af-3761-4037-a686-c7aae7c53190", "turn_index": 7}}
{"user_turn_0": "Do I need to prepay ?", "agent_turn_0": "Root system inform hotel find focus equals prePayment equals False", "user_turn_1": "Actually , could you change my check out day to be on Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Thursday)))))", "idx": "6549", "datum_id": {"dialogue_id": "398ed2af-3761-4037-a686-c7aae7c53190", "turn_index": 8}}
{"user_turn_0": "Actually , could you change my check out day to be on Thursday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to pre - pay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "6550", "datum_id": {"dialogue_id": "398ed2af-3761-4037-a686-c7aae7c53190", "turn_index": 9}}
{"user_turn_0": "I would lie to change my check in day to be today", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "I would like to change the check in date to be on Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "6552", "datum_id": {"dialogue_id": "398ed2af-3761-4037-a686-c7aae7c53190", "turn_index": 11}}
{"user_turn_0": "I would like to change the check in date to be on Tuesday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does this booking support free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "6553", "datum_id": {"dialogue_id": "398ed2af-3761-4037-a686-c7aae7c53190", "turn_index": 12}}
{"user_turn_0": "It should not be hight , and I prefer rating that is not zero star", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Odysse Suites price equals 170", "user_turn_1": "Sure , do they have private bathrooms ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.privateBath_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "6558", "datum_id": {"dialogue_id": "da7925f1-79b9-4695-81d5-c6c39517d1a3", "turn_index": 3}}
{"user_turn_0": "Sure , do they have private bathrooms ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "6559", "datum_id": {"dialogue_id": "da7925f1-79b9-4695-81d5-c6c39517d1a3", "turn_index": 4}}
{"user_turn_0": "Well , can I book 3 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "I want to change check - out date to Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Sunday))))))", "idx": "6563", "datum_id": {"dialogue_id": "da7925f1-79b9-4695-81d5-c6c39517d1a3", "turn_index": 8}}
{"user_turn_0": "I want to change check - out date to Sunday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is prepayment required ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "6564", "datum_id": {"dialogue_id": "da7925f1-79b9-4695-81d5-c6c39517d1a3", "turn_index": 9}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , can you show me moderate to low priced hotels", "tgt": "(plan (^(Hotel) Find :object (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))))", "idx": "6587", "datum_id": {"dialogue_id": "a174da1f-399c-4b16-b6fe-e0e9a9cc1aeb", "turn_index": 0}}
{"user_turn_0": "I 'd prefer another moderately priced hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Etiquette Suites price equals 199", "user_turn_1": "Do they have a laundry service there", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "6592", "datum_id": {"dialogue_id": "a174da1f-399c-4b16-b6fe-e0e9a9cc1aeb", "turn_index": 5}}
{"user_turn_0": "Do they have a laundry service there", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Lucia \"))))))", "idx": "6593", "datum_id": {"dialogue_id": "a174da1f-399c-4b16-b6fe-e0e9a9cc1aeb", "turn_index": 6}}
{"user_turn_0": "I would like to have two single rooms", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "If I checked in on Monday would it be available ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Monday))))))", "idx": "6596", "datum_id": {"dialogue_id": "a174da1f-399c-4b16-b6fe-e0e9a9cc1aeb", "turn_index": 9}}
{"user_turn_0": "That 's correct", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM", "user_turn_1": "The 4:30 PM one is preferable", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "6600", "datum_id": {"dialogue_id": "a33a5a1b-c7ac-417f-9b3d-f918b17a3278", "turn_index": 2}}
{"user_turn_0": "I want another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone Martian", "user_turn_1": "What 's the address for this restaurant ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "6618", "datum_id": {"dialogue_id": "48dff47a-33a2-459b-8c00-af8b4ec83f46", "turn_index": 5}}
{"user_turn_0": "I would like another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Chipotle Grill", "user_turn_1": "What 's the average cost per person ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "6620", "datum_id": {"dialogue_id": "48dff47a-33a2-459b-8c00-af8b4ec83f46", "turn_index": 7}}
{"user_turn_0": "What 's the average cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 63", "user_turn_1": "That 's fine . Go ahead and book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Jurassic Pork \"))))))", "idx": "6621", "datum_id": {"dialogue_id": "48dff47a-33a2-459b-8c00-af8b4ec83f46", "turn_index": 8}}
{"user_turn_0": "Hi my assistant , create a calendar event at 4 o'clock on the 23rd and add a reminder", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals endDateTime", "user_turn_1": "add my train schedule to Sheffield on the 10th to calendar", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.endDateTime_? (& (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (meridiem_? (?= (Meridiem.PM))))) (DateTime.date_? (?= (Today)))))))))", "idx": "6641", "datum_id": {"dialogue_id": "cb868cb8-0bcc-4ffe-bcef-2f4c1050562b", "turn_index": 1}}
{"user_turn_0": "add my train schedule to Sheffield on the 10th to calendar", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "Thanks so much . Text him", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (?= (^(DateTimeRange Train) reference (& (Train.destination_? (Place.location_? (?= \" Sheffield \"))) (Train.departureDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 10L)))))))))))", "idx": "6642", "datum_id": {"dialogue_id": "cb868cb8-0bcc-4ffe-bcef-2f4c1050562b", "turn_index": 2}}
{"user_turn_0": "Thanks so much . Text him", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Okay , I 've made that event and added a reminder", "tgt": "(plan (^(PhoneCall) CheckExistence :object (PhoneCall.sender_? (Contact.person_? (Person.name_? (?= \" Owen \"))))))", "idx": "6643", "datum_id": {"dialogue_id": "cb868cb8-0bcc-4ffe-bcef-2f4c1050562b", "turn_index": 3}}
{"user_turn_0": "Okay , I 've made that event and added a reminder", "agent_turn_0": "Root system inform phoneCall checkExistence NotExisted", "user_turn_1": "No , there are n't any calls", "tgt": "(plan (^(Message) Create :object (Message.recipients_? (^((Constraint Contact)) refer))))", "idx": "6644", "datum_id": {"dialogue_id": "cb868cb8-0bcc-4ffe-bcef-2f4c1050562b", "turn_index": 4}}
{"user_turn_0": "Yes , I will", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM price equals 199", "user_turn_1": "I 'd prefer to book the one departing at 1:40 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "6652", "datum_id": {"dialogue_id": "aedc3c08-7d3b-449b-93cb-ef78f0d2e326", "turn_index": 2}}
{"user_turn_0": "Actually , would you change my day of departure to today ?", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM price equals 178", "user_turn_1": "Who 's flying ?", "tgt": "(plan (^(Flight) Find :focus (Flight.airWays_? (^(String) always)) :object (?= (^(Flight Dynamic) reference (^(Dynamic) always)))))", "idx": "6656", "datum_id": {"dialogue_id": "aedc3c08-7d3b-449b-93cb-ef78f0d2e326", "turn_index": 6}}
{"user_turn_0": "Who 's flying ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "I 'd actually prefer the one departing at 4:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "6657", "datum_id": {"dialogue_id": "aedc3c08-7d3b-449b-93cb-ef78f0d2e326", "turn_index": 7}}
{"user_turn_0": "Hi assistant , call 07931813650", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Thanks for the help . Send today 's event to my daughter", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))))))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Daughter))))))))", "idx": "6660", "datum_id": {"dialogue_id": "92b302a8-0c1c-450f-b40e-ed81cbcdab5a", "turn_index": 1}}
{"user_turn_0": "What 's the price range of the Peninsula hotel ?", "agent_turn_0": "Root system inform hotel find focus equals priceRange equals Moderate", "user_turn_1": "Ok , I need a single room from March 6th to the 9th", "tgt": "(plan (^(Hotel) Book :object (& (& (^((Constraint Hotel)) refer) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 6L))))) (DateTimeRange.endDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 9L)))) (month_? (Date.month_? (?= (March))))))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Single)))))))", "idx": "6663", "datum_id": {"dialogue_id": "92b302a8-0c1c-450f-b40e-ed81cbcdab5a", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , i need a reservation at a hotel rated at least one star in Chelsea for three nights .", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" Chelsea \")) (Hotel.dateTimeRange_? (DateTimeRange.duration_? (AppleDuration.day_? (?= 3))))) (Hotel.rating_? (?>= (someSalient (?= 1)))))))", "idx": "6669", "datum_id": {"dialogue_id": "456909c1-2a5d-4144-8361-31080960f90d", "turn_index": 0}}
{"user_turn_0": "I 'd rather a different hotel that 's priced low", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Four Seasons price equals 170", "user_turn_1": "Is there a car park there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "6672", "datum_id": {"dialogue_id": "456909c1-2a5d-4144-8361-31080960f90d", "turn_index": 3}}
{"user_turn_0": "Is there a car park there ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Make the reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" The Hot Springs \"))))))", "idx": "6673", "datum_id": {"dialogue_id": "456909c1-2a5d-4144-8361-31080960f90d", "turn_index": 4}}
{"user_turn_0": "It 's going to be on Wednesday for four passengers", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM price equals 130", "user_turn_1": "Let me go with the business class flight that departs at 4:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" London \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.passengers_? (?= 4))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "6694", "datum_id": {"dialogue_id": "df9c1b28-c689-449a-827a-c52d7488d988", "turn_index": 2}}
{"user_turn_0": "Sure , it 's going to be on Sunday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 12 minute equals 25 meridiem equals PM price equals 156", "user_turn_1": "Of course , it 's fine with me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "6696", "datum_id": {"dialogue_id": "df9c1b28-c689-449a-827a-c52d7488d988", "turn_index": 4}}
{"user_turn_0": "Yes , there should be a high price", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Juniper Cloud", "user_turn_1": "Does this restaurant have outdoor seating ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "6705", "datum_id": {"dialogue_id": "77e60b32-7a83-489a-8c36-440d6fbc20d0", "turn_index": 7}}
{"user_turn_0": "Does this restaurant have outdoor seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "Great , book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Encino \"))))))", "idx": "6706", "datum_id": {"dialogue_id": "77e60b32-7a83-489a-8c36-440d6fbc20d0", "turn_index": 8}}
{"user_turn_0": "I need one double room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is prepayment required ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "6714", "datum_id": {"dialogue_id": "3c1c6ce3-7b93-47db-b3dd-e9485b6e0b5b", "turn_index": 4}}
{"user_turn_0": "The event starts at 9 o'clock", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals endDateTime", "user_turn_1": "The event ends at 8:30PM tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.endDateTime_? (& (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 8L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))) (DateTime.date_? (?= (Tomorrow)))))))))", "idx": "6751", "datum_id": {"dialogue_id": "cab630da-a681-476e-bca2-4f938fc34064", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , relay the event on 4th April to Mr Ellison", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (& (Date.day_? (?= (Day.apply 4L))) (Date.month_? (?= (April)))))))))) (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Ellison \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "6754", "datum_id": {"dialogue_id": "33583f03-65c4-4af6-b033-e4b64e25794f", "turn_index": 0}}
{"user_turn_0": "Do they have laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "6762", "datum_id": {"dialogue_id": "bc51ab89-55f6-4879-915b-f3641f14b239", "turn_index": 3}}
{"user_turn_0": "I do n't care , I just need three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they have free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "6765", "datum_id": {"dialogue_id": "bc51ab89-55f6-4879-915b-f3641f14b239", "turn_index": 6}}
{"user_turn_0": "Hi my assistant , do I have an event with Mr Duncan ?", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Create one", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.attendees_? (Contact.person_? (& (Person.name_? (?= \" Tucker \")) (Person.namePrefix_? (^((Constraint String)) refer)))))))", "idx": "6768", "datum_id": {"dialogue_id": "49b09bd5-672e-4cf4-a02c-bf9d0dc05c4c", "turn_index": 1}}
{"user_turn_0": "Departure is from Newcastle", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 meridiem equals PM", "user_turn_1": "That looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "6787", "datum_id": {"dialogue_id": "95212105-b731-4611-ac01-bfa914f41a3f", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , book a table at a restaurant at 5:30 pm in Tottenham . Make sure it is a 5 star restaurant and has a high price range .", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Tottenham \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 5L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))) (Restaurant.priceRange_? (?= (PriceRange.High)))) (Restaurant.rating_? (?= 5)))))", "idx": "6793", "datum_id": {"dialogue_id": "de4c4120-9deb-417a-ab0b-a23f2b0d5c42", "turn_index": 0}}
{"user_turn_0": "Does that one take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "Ok . Book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "6796", "datum_id": {"dialogue_id": "de4c4120-9deb-417a-ab0b-a23f2b0d5c42", "turn_index": 3}}
{"user_turn_0": "How can I get to Angel Central by bike", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Next task , send my next event to Simon", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))) (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Simon \")))))))", "idx": "6822", "datum_id": {"dialogue_id": "d7f5d804-8d63-4fdd-a50c-1d950d8a0cf9", "turn_index": 2}}
{"user_turn_0": "I want another restaurant with on - site parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Encino", "user_turn_1": "What is the estimated cost per person ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "6835", "datum_id": {"dialogue_id": "4e05151e-4ac3-4df5-9a15-fefee78c989c", "turn_index": 5}}
{"user_turn_0": "Which restaurants have a minimum two - star rating ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dingo", "user_turn_1": "What is the estimated cost per person ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "6837", "datum_id": {"dialogue_id": "4e05151e-4ac3-4df5-9a15-fefee78c989c", "turn_index": 7}}
{"user_turn_0": "What is the estimated cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 35", "user_turn_1": "Okay , make the reservation for 4:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Bandits \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "6838", "datum_id": {"dialogue_id": "4e05151e-4ac3-4df5-9a15-fefee78c989c", "turn_index": 8}}
{"user_turn_0": "I prefer a three star hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Odysse Suites price equals 65", "user_turn_1": "Is there a fitness center at the hotel ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasFitness_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "6849", "datum_id": {"dialogue_id": "a99942a5-c11d-444e-b098-f7690da251dd", "turn_index": 3}}
{"user_turn_0": "Is there a fitness center at the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Ok , book the room", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Grand Hyatt \"))))))", "idx": "6850", "datum_id": {"dialogue_id": "a99942a5-c11d-444e-b098-f7690da251dd", "turn_index": 4}}
{"user_turn_0": "I need you to change the check in date to December 13th", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel this room if I need to ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "6856", "datum_id": {"dialogue_id": "a99942a5-c11d-444e-b098-f7690da251dd", "turn_index": 10}}
{"user_turn_0": "What 's the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "6863", "datum_id": {"dialogue_id": "99668c26-52de-4f88-bdeb-ac83a6f4517b", "turn_index": 5}}
{"user_turn_0": "I would like to get two single rooms please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is breakfast included ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "6867", "datum_id": {"dialogue_id": "99668c26-52de-4f88-bdeb-ac83a6f4517b", "turn_index": 9}}
{"user_turn_0": "What 's the address of the restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 12 Hydean Way", "user_turn_1": "Looks fine , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Beef Easy \"))))))", "idx": "6882", "datum_id": {"dialogue_id": "05752dc1-5136-432c-9027-7c0e5298941c", "turn_index": 3}}
{"user_turn_0": "Tomorrow at 10:30 AM", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Ok , change the reservation to Monday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Monday))))))", "idx": "6884", "datum_id": {"dialogue_id": "05752dc1-5136-432c-9027-7c0e5298941c", "turn_index": 5}}
{"user_turn_0": "I want to book one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you check if it has free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "6891", "datum_id": {"dialogue_id": "96ab5952-0389-417a-8394-cb2238246379", "turn_index": 4}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 11 minute equals 45 meridiem equals AM price equals 135", "user_turn_1": "I 'm good with you booking that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "6904", "datum_id": {"dialogue_id": "5819f8d2-9ca8-4e75-be4c-0b53fa6772b4", "turn_index": 6}}
{"user_turn_0": "Does that hotel provide laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it now", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "6919", "datum_id": {"dialogue_id": "7b3b0186-e135-4333-a835-6241cd46537f", "turn_index": 3}}
{"user_turn_0": "4:30 PM on July 6", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Thanks so much . Book a hotel in Stamford hill for Tuesday and Wednesday with an inexpensive price", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" Stamford Hill \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday)))))))) (Hotel.priceRange_? (?= (PriceRange.Low))))))", "idx": "6937", "datum_id": {"dialogue_id": "2fc85f7e-bd87-4c53-8261-b861db38ee28", "turn_index": 4}}
{"user_turn_0": "Three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait . Do I need prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "6944", "datum_id": {"dialogue_id": "2e80e17d-ccca-4379-88bd-887d143c5f9f", "turn_index": 6}}
{"user_turn_0": "Breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Book it !", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "6949", "datum_id": {"dialogue_id": "2a13d223-0f66-42b7-b0f4-b4735d0c6191", "turn_index": 3}}
{"user_turn_0": "Hey , hey bud , I 'd like a flight ticket from Leeds to Glasgow that leaves on Tuesday", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 3 meridiem equals PM price equals 199", "user_turn_1": "That s fine . Can you just make sure to book it for three passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.source_? (Place.location_? (?= \" Leeds \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.passengers_? (?= 3))))))", "idx": "6954", "datum_id": {"dialogue_id": "df2c2f3c-3caa-45ff-81e7-f2952fabcba5", "turn_index": 1}}
{"user_turn_0": "How long will it take to get to my event this morning ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 50", "user_turn_1": "How 's the forecast tomorrow in Leeds ?", "tgt": "(plan (^(WeatherReport) Find :object (& (WeatherReport.location_? (?= \" Leeds \")) (WeatherReport.atdateTime_? (DateTime.date_? (?= (Tomorrow)))))))", "idx": "6962", "datum_id": {"dialogue_id": "a8c10af1-e6ef-45d3-8f97-f4ee0e748d7d", "turn_index": 2}}
{"user_turn_0": "How 's the forecast tomorrow in Leeds ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cloudy", "user_turn_1": "what is the weather in Manchester tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint String)) Path.apply \" object.location \") (lambda (^(Constraint String) x0) (?= \" Manchester \"))))", "idx": "6963", "datum_id": {"dialogue_id": "a8c10af1-e6ef-45d3-8f97-f4ee0e748d7d", "turn_index": 3}}
{"user_turn_0": "what is the weather in Manchester tomorrow", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Rainy", "user_turn_1": "what is the weather in Exeter today ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint WeatherReport)) Path.apply \" object \") (lambda (^(Constraint WeatherReport) x0) (& (WeatherReport.location_? (?= \" Exeter \")) (WeatherReport.atDateTime_? (DateTime.date_? (?= (Today))))))))", "idx": "6964", "datum_id": {"dialogue_id": "a8c10af1-e6ef-45d3-8f97-f4ee0e748d7d", "turn_index": 4}}
{"user_turn_0": "Do they take credit cards ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "6967", "datum_id": {"dialogue_id": "a8c10af1-e6ef-45d3-8f97-f4ee0e748d7d", "turn_index": 7}}
{"user_turn_0": "In Notting Hill , what is the pricing like for Interknack restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals priceRange equals Low", "user_turn_1": "I want to book it for Tuesday", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.restaurantName_? (?= \" Interknack \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday)))))))))", "idx": "6974", "datum_id": {"dialogue_id": "3246a670-72ab-4af1-8fcb-91fe9d196ed5", "turn_index": 3}}
{"user_turn_0": "Today from Birmingham", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 2 meridiem equals PM price equals 142", "user_turn_1": "Give me the business class flight at 3:45 om", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast \"))) (Flight.arrivalDateTime_? (^((Constraint DateTime)) refer))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "6980", "datum_id": {"dialogue_id": "d38ed77b-d507-4ce7-9cee-8cce2e0d4772", "turn_index": 2}}
{"user_turn_0": "Sunday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 3 object equals nextDepartureDateTime equals time equals hour equals 3 meridiem equals PM price equals 135", "user_turn_1": "OK that 's one is found", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "6984", "datum_id": {"dialogue_id": "d38ed77b-d507-4ce7-9cee-8cce2e0d4772", "turn_index": 6}}
{"user_turn_0": "Saloon", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals 54 Islington Park Road", "user_turn_1": "No , change the destination to Westgate House", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" Westgate House \"))))", "idx": "6988", "datum_id": {"dialogue_id": "e96643a8-3c95-4d07-900e-c91e1f68ac3f", "turn_index": 2}}
{"user_turn_0": "I like me some pizza", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flip Out", "user_turn_1": "Can you tell me the address of the place", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "6994", "datum_id": {"dialogue_id": "84f82edc-3db4-48b6-9ad2-e29f8ffa34ff", "turn_index": 3}}
{"user_turn_0": "I think I would really prefer one with outdoor seating though", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Godka", "user_turn_1": "And how much is the average cost per person", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "6996", "datum_id": {"dialogue_id": "84f82edc-3db4-48b6-9ad2-e29f8ffa34ff", "turn_index": 5}}
{"user_turn_0": "And how much is the average cost per person", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 65", "user_turn_1": "That 'll be fine . Please book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flip Out \"))))))", "idx": "6997", "datum_id": {"dialogue_id": "84f82edc-3db4-48b6-9ad2-e29f8ffa34ff", "turn_index": 6}}
{"user_turn_0": "From London Heathrow", "agent_turn_0": "Root system prompt flight book object equals departureDateTime", "user_turn_1": "On MOnday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))))))))", "idx": "7005", "datum_id": {"dialogue_id": "f947065e-5396-463f-803e-3adf8b1bc676", "turn_index": 4}}
{"user_turn_0": "What 's the price range look like ?", "agent_turn_0": "Root system inform hotel find focus equals priceRange equals Moderate", "user_turn_1": "Get me a double room there for check in on the 8th", "tgt": "(plan (^(Hotel) Book :object (& (& (^((Constraint Hotel)) refer) (Hotel.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 8L))))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Double)))))))", "idx": "7008", "datum_id": {"dialogue_id": "e6e1ed9f-579e-4f7d-aeee-8f75e0ed359b", "turn_index": 2}}
{"user_turn_0": "I was hoping for two", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "If I do , do I have to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "7011", "datum_id": {"dialogue_id": "e6e1ed9f-579e-4f7d-aeee-8f75e0ed359b", "turn_index": 5}}
{"user_turn_0": "I want to know how can I get to 12 Hydean Way by car", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "What is the weather like ?", "tgt": "(plan (^(WeatherReport) Find))", "idx": "7022", "datum_id": {"dialogue_id": "a0593860-fac5-4b30-b95f-7831fe45d5bf", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i need to update the location or the Anne Frank Essay Contest with Faith .", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.location_? (^(String) always)) :object (& (CalendarEvent.eventName_? (?= \" Anne Frank Essay Contest \")) (CalendarEvent.attendees_? (Contact.person_? (Person.name_? (?= \" Faith \")))))))", "idx": "7032", "datum_id": {"dialogue_id": "864db3bb-59a2-495e-878d-adeefc5b4614", "turn_index": 0}}
{"user_turn_0": "Hey , i need to update the location or the Anne Frank Essay Contest with Faith .", "agent_turn_0": "Root system prompt calendarEvent update focus equals location", "user_turn_1": "It 's Unwind Ruled", "tgt": "(plan (revise (^(Unit) Path.apply \" Update \") (^((Constraint String)) Path.apply \" focus.location \") (lambda (^(Constraint String) x0) (?= \" Unwind Ruled \"))))", "idx": "7033", "datum_id": {"dialogue_id": "864db3bb-59a2-495e-878d-adeefc5b4614", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , hey homie , make an event on April 24th at 1:30 PM", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (& (Date.month_? (?= (April))) (Date.day_? (?= (Day.apply 24L))))) (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "7052", "datum_id": {"dialogue_id": "618c2d22-9184-4528-b6ba-455181b857c2", "turn_index": 0}}
{"user_turn_0": "Does the hotel have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it for me then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Blossomwell Resorts \"))))))", "idx": "7062", "datum_id": {"dialogue_id": "44903515-4800-4787-8787-f0722e811417", "turn_index": 5}}
{"user_turn_0": "From Swansea", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM", "user_turn_1": "I 'll take it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "7080", "datum_id": {"dialogue_id": "d262798f-1dce-4bca-9540-6cc95095a374", "turn_index": 2}}
{"user_turn_0": "Yes , go on , please", "agent_turn_0": "Root system inform train book Completed", "user_turn_1": "I also need a train ticket for the 25th , destination Edinburgh", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& (Train.destination_? (Place.location_? (?= \" Edinburgh \"))) (Train.departureDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 25L)))))))))", "idx": "7082", "datum_id": {"dialogue_id": "d262798f-1dce-4bca-9540-6cc95095a374", "turn_index": 4}}
{"user_turn_0": "Brilliant , book it anyways", "agent_turn_0": "Root system inform calendarEvent create Completed restaurant book Completed", "user_turn_1": "I need another favor . I 'd like to book a hotel and a queen sized bed", "tgt": "(plan (^(Hotel) Book :object (Hotel.roomType_? (List.exists_? (?= (RoomType.Queen))))))", "idx": "7092", "datum_id": {"dialogue_id": "f06fecfc-b201-463e-bbac-daf826668683", "turn_index": 4}}
{"user_turn_0": "No , I 'm leaving from Birmingham", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 12 minute equals 40 meridiem equals PM", "user_turn_1": "I would rather leave on the 4 PM flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "7115", "datum_id": {"dialogue_id": "52b48401-7908-4677-bdef-6056df5cfb4c", "turn_index": 2}}
{"user_turn_0": "Book a flight ticket from Manchester to Paris for tomorrow", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM price equals 119", "user_turn_1": "Book that flight for one passenger", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.source_? (Place.location_? (?= \" Manchester \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 1))))))", "idx": "7152", "datum_id": {"dialogue_id": "12c6db2f-3464-41e7-8f0e-5eb645529145", "turn_index": 4}}
{"user_turn_0": "Make it for 2 rooms please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do you know if free cancellation is supported in the booking", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "7158", "datum_id": {"dialogue_id": "26f73e2c-c24e-4af6-81c8-273bae919ada", "turn_index": 4}}
{"user_turn_0": "Headed to Jackson Fish Wholesalers", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals Laurel Street", "user_turn_1": "Change where I 'm going to 83 Upper Street", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" 83 Upper Street \"))))", "idx": "7184", "datum_id": {"dialogue_id": "a35e0789-9b53-4d74-86bd-1895d9ad57b4", "turn_index": 2}}
{"user_turn_0": "January 6th at 6:30 PM", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Can you change the date of my appointment to be on the 15th ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 15L))))))", "idx": "7191", "datum_id": {"dialogue_id": "6fff3589-9ff5-4308-91ed-44f2219d111c", "turn_index": 4}}
{"user_turn_0": "Does the hotel have private bathrooms ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it for me then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "7197", "datum_id": {"dialogue_id": "c77ce52b-13c6-43a5-affd-207408792f65", "turn_index": 3}}
{"user_turn_0": "Well I 'd like to have three king - sized beds", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually can you change the check in date to Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "7200", "datum_id": {"dialogue_id": "c77ce52b-13c6-43a5-affd-207408792f65", "turn_index": 6}}
{"user_turn_0": "Hello , please show me directions to Westgate House", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Display two star hotels or better", "tgt": "(plan (^(Hotel) Find :object (Hotel.rating_? (?>= (someSalient (?= 2))))))", "idx": "7214", "datum_id": {"dialogue_id": "f7d9d406-1a19-4144-8136-38f2ad8b24fe", "turn_index": 1}}
{"user_turn_0": "Schedule a reminder for that please", "agent_turn_0": "Root system prompt reminder create object equals atDateTime", "user_turn_1": "4 PM please", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Option (Constraint Reminder))) Path.apply \" object \") (lambda (^(Option (Constraint Reminder)) x0) (Some (Reminder.atDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "7217", "datum_id": {"dialogue_id": "f7d9d406-1a19-4144-8136-38f2ad8b24fe", "turn_index": 4}}
{"user_turn_0": "Hey assistant , make a reminder for my March 9th event", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Make a reminder for my event", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object.atDateTime \") (lambda (^(Constraint CalendarEvent) x0) (^(CalendarEvent) always))))", "idx": "7219", "datum_id": {"dialogue_id": "88d77845-25ee-4f0b-b79a-8c3d5ffabc00", "turn_index": 1}}
{"user_turn_0": "Make a reminder for my event", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Thanks , also book me an MPV taxi and get me at The Body Shop in Upper Street", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.serviceType_? (List.exists_? (?= (ServiceType.MPV)))) (Taxi.source_? (Place.location_? (?= \" The Body Shop in Upper Street \"))))))", "idx": "7220", "datum_id": {"dialogue_id": "88d77845-25ee-4f0b-b79a-8c3d5ffabc00", "turn_index": 2}}
{"user_turn_0": "Is it a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "I rather get the 1:50 PM flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "7241", "datum_id": {"dialogue_id": "7c110159-0b23-44e3-b89c-20c62e22a055", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , i would like to book a train from Glasgow Queen Street to Waverly for after 11:30 AM .", "tgt": "(plan (^(Train) Book :object (& (& (Train.source_? (Place.location_? (?= \" Glasgow Queen Street \"))) (Train.destination_? (Place.location_? (?= \" Waverley \")))) (Train.departureDateTime_? (DateTime.time_? (?>= (someSalient (& (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM)))))))))))", "idx": "7248", "datum_id": {"dialogue_id": "4d8e2531-b3a4-4614-ad80-df378b5054ea", "turn_index": 0}}
{"user_turn_0": "I need another favor . I want to set a reminder for my event scheduled for today", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Remind me to take my umbrella", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Reminder)) Path.apply \" object \") (lambda (^(Constraint Reminder) x0) (Reminder.reminderContent_? (?= \" take my umbrella \")))))", "idx": "7252", "datum_id": {"dialogue_id": "4d8e2531-b3a4-4614-ad80-df378b5054ea", "turn_index": 4}}
{"user_turn_0": "Is that a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "That works . Can you book it for 1 person ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.destination_? (Place.location_? (?= \" Amsterdam \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (^((Constraint (List DateTime))) refer)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 1))))))", "idx": "7256", "datum_id": {"dialogue_id": "06f0da4d-613a-4792-9d74-2454563829cc", "turn_index": 3}}
{"user_turn_0": "Does it have laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "7264", "datum_id": {"dialogue_id": "3ba5b589-2d8d-456f-bda1-54ab7358bf75", "turn_index": 3}}
{"user_turn_0": "I need two rooms but room type does n't matter", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Change the check out date to Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Thursday)))))", "idx": "7267", "datum_id": {"dialogue_id": "3ba5b589-2d8d-456f-bda1-54ab7358bf75", "turn_index": 6}}
{"user_turn_0": "Change the check out date to Thursday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking have free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "7268", "datum_id": {"dialogue_id": "3ba5b589-2d8d-456f-bda1-54ab7358bf75", "turn_index": 7}}
{"user_turn_0": "I need two rooms , I do nt care the room type", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Update the check out date to Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Sunday))))))", "idx": "7279", "datum_id": {"dialogue_id": "d0178112-b99c-4e7d-a8b1-65559c3256a3", "turn_index": 4}}
{"user_turn_0": "Update the check out date to Sunday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I have to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "7280", "datum_id": {"dialogue_id": "d0178112-b99c-4e7d-a8b1-65559c3256a3", "turn_index": 5}}
{"user_turn_0": "Send it please", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "I need another message to be sent", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Option (Constraint Message))) Path.apply \" object \") (lambda (^(Option (Constraint Message)) x0) (^(Message) Create$default$object))))", "idx": "7291", "datum_id": {"dialogue_id": "6527e255-b79b-4a53-94db-65bdc7cd8962", "turn_index": 4}}
{"user_turn_0": "My sister", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Call 07086798286 for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Contact)) Path.apply \" object.recipients \") (lambda (^(Constraint Contact) x0) (Contact.phoneNumber_? (?= \" 07086798286 \")))))", "idx": "7306", "datum_id": {"dialogue_id": "ed008234-ab64-472e-9f35-5d24fb2e9716", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , i want to book a cheap hotel in Green Park", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= \" Green Park \")) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))))))", "idx": "7312", "datum_id": {"dialogue_id": "4da2739d-6f61-4b4c-bc41-e30fcd6ca34f", "turn_index": 0}}
{"user_turn_0": "Is this direct ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "I want the flight that leaves at 1:20 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "7322", "datum_id": {"dialogue_id": "2973b176-7830-4edb-a9da-3537579bc4bf", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , i need the October 28th 3 o'clock reminder updated to 3:30 pm", "tgt": "(plan (^(Reminder) Update :focus (Reminder.atDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))) :object (Reminder.atDateTime_? (& (DateTime.time_? (Time.hour_? (?= (Hour.apply 3L)))) (DateTime.date_? (& (Date.month_? (?= (October))) (Date.day_? (?= (Day.apply 28L)))))))))", "idx": "7324", "datum_id": {"dialogue_id": "a3cf91ac-4795-42f5-a9a3-1dd16813295a", "turn_index": 0}}
{"user_turn_0": "I rather a four start rating hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Crescent Resort price equals 125", "user_turn_1": "Book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Marriott \"))))))", "idx": "7329", "datum_id": {"dialogue_id": "a3cf91ac-4795-42f5-a9a3-1dd16813295a", "turn_index": 5}}
{"user_turn_0": "I need two rooms do n't care about room type", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Update that checkout to Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Thursday))))))", "idx": "7331", "datum_id": {"dialogue_id": "a3cf91ac-4795-42f5-a9a3-1dd16813295a", "turn_index": 7}}
{"user_turn_0": "What 's the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "7337", "datum_id": {"dialogue_id": "9fc1b9b5-aa69-4b3b-bb86-3fc38e4967f3", "turn_index": 4}}
{"user_turn_0": "Book it", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "September 13th to the 14th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 13L)))) (month_? (Date.month_? (?= (September)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 14L)))))))))))", "idx": "7338", "datum_id": {"dialogue_id": "9fc1b9b5-aa69-4b3b-bb86-3fc38e4967f3", "turn_index": 5}}
{"user_turn_0": "One room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Change the checkout date to Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Sunday))))))", "idx": "7340", "datum_id": {"dialogue_id": "9fc1b9b5-aa69-4b3b-bb86-3fc38e4967f3", "turn_index": 7}}
{"user_turn_0": "Change the checkout date to Sunday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does booking supports free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "7341", "datum_id": {"dialogue_id": "9fc1b9b5-aa69-4b3b-bb86-3fc38e4967f3", "turn_index": 8}}
{"user_turn_0": "On Sunday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 2 meridiem equals PM price equals 156", "user_turn_1": "Looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "7366", "datum_id": {"dialogue_id": "4e310579-fff3-479f-8f9e-385f647033fe", "turn_index": 7}}
{"user_turn_0": "Bristol", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM", "user_turn_1": "Looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (^((Constraint Train)) refer)))))", "idx": "7370", "datum_id": {"dialogue_id": "ed254d6d-97db-46ab-bae1-bcceaa6514ab", "turn_index": 2}}
{"user_turn_0": "I will be returning on the 18th", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM", "user_turn_1": "Sounds good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "7372", "datum_id": {"dialogue_id": "ed254d6d-97db-46ab-bae1-bcceaa6514ab", "turn_index": 4}}
{"user_turn_0": "Find me another one , one with four stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Triton price equals 155", "user_turn_1": "Do they serve complimentary breakfast ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "7382", "datum_id": {"dialogue_id": "4d50983a-6b51-4840-bd6f-d1a9c4fe2af9", "turn_index": 3}}
{"user_turn_0": "Do they serve complimentary breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Make the reservation there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Fairmont \"))))))", "idx": "7383", "datum_id": {"dialogue_id": "4d50983a-6b51-4840-bd6f-d1a9c4fe2af9", "turn_index": 4}}
{"user_turn_0": "What about the Fresh Wave Resort ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel for free ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "7387", "datum_id": {"dialogue_id": "4d50983a-6b51-4840-bd6f-d1a9c4fe2af9", "turn_index": 8}}
{"user_turn_0": "Next task , can you send it to Alison ?", "agent_turn_0": "Root system prompt message create object equals recipients equals person equals nameHint", "user_turn_1": "Alison Kerr", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Person)) Path.apply \" object.recipients.person \") (lambda (^(Constraint Person) x0) (& x0 (Person.nameHint_? (?= \" Kerr \"))))))", "idx": "7397", "datum_id": {"dialogue_id": "1b158dee-e0f2-46be-9fe6-4887240068d1", "turn_index": 3}}
{"user_turn_0": "Can you make it for 2 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "No , change the check out date to Saturday , please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Saturday))))))", "idx": "7401", "datum_id": {"dialogue_id": "43332393-488c-4da3-839b-fe59f8a83196", "turn_index": 2}}
{"user_turn_0": "Yes , I 'm ready . Thanks", "agent_turn_0": "Root system inform hotel book Completed", "user_turn_1": "Thanks so much . Thanks . Can you also send my 2 PM event to Mr. Howard in a message ?", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))) (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Howard \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "7403", "datum_id": {"dialogue_id": "43332393-488c-4da3-839b-fe59f8a83196", "turn_index": 4}}
{"user_turn_0": "Leicester", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 55 meridiem equals PM", "user_turn_1": "This one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (^((Constraint Train)) refer)))))", "idx": "7411", "datum_id": {"dialogue_id": "778a7bd6-445b-46f4-8426-c0da2a91741e", "turn_index": 2}}
{"user_turn_0": "Yes please book it", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "Thanks so much . Can you send that happened to Mr. Stewart", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))))))) (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Stewart \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "7418", "datum_id": {"dialogue_id": "42e9b392-0266-4917-a64c-9fc837eb92d6", "turn_index": 3}}
{"user_turn_0": "I 'd prefer something cheaper", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Moody Moon price equals 170", "user_turn_1": "What 's the rating ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.rating_? (^(Number) always)))))", "idx": "7428", "datum_id": {"dialogue_id": "e399d632-909e-4a31-92c5-1652851ee4f6", "turn_index": 3}}
{"user_turn_0": "What 's the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Crescent Resort \"))))))", "idx": "7429", "datum_id": {"dialogue_id": "e399d632-909e-4a31-92c5-1652851ee4f6", "turn_index": 4}}
{"user_turn_0": "Book it", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "August 19th to the 20th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 19L)))) (month_? (Date.month_? (?= (August)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 20L)))))))))))", "idx": "7430", "datum_id": {"dialogue_id": "e399d632-909e-4a31-92c5-1652851ee4f6", "turn_index": 5}}
{"user_turn_0": "I would like two queen sized beds", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you change the check out to the 19th ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Day)) Path.apply \" object.dateTimeRange.endDateTime.date.day \") (lambda (^(Constraint Day) x0) (?= (Day.apply 19L)))))", "idx": "7432", "datum_id": {"dialogue_id": "e399d632-909e-4a31-92c5-1652851ee4f6", "turn_index": 7}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 12 minute equals 40 meridiem equals PM price equals 166", "user_turn_1": "That works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "7442", "datum_id": {"dialogue_id": "8840d0ff-9d5d-4851-ac82-327a2994581a", "turn_index": 3}}
{"user_turn_0": "Edit the time of my next event", "agent_turn_0": "Root system prompt calendarEvent update focus equals dateTimeRange equals startDateTime equals time", "user_turn_1": "it is 5:00", "tgt": "(plan (revise (^(Unit) Path.apply \" Update \") (^((Constraint Time)) Path.apply \" focus.dateTimeRange.startDateTime.time \") (lambda (^(Constraint Time) x0) (Time.hour_? (?= (Hour.apply 5L))))))", "idx": "7447", "datum_id": {"dialogue_id": "9c104efd-62f2-4da2-a8dc-a4855730d1be", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , schedule Dry - Cleaning Pick - Up with Mr Greene . Set it for 9:30 AM in Sky Venus .", "tgt": "(plan (^(CalendarEvent) Create :object (& (& (& (CalendarEvent.eventName_? (?= \" Dry-Cleaning Pick-Up \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 9L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM)))))))) (CalendarEvent.attendees_? (Contact.person_? (& (Person.name_? (?= \" Greene \")) (Person.namePrefix_? (?= \" Mr \")))))) (CalendarEvent.location_? (?= \" Sky Venus \")))))", "idx": "7479", "datum_id": {"dialogue_id": "a461434f-ab14-4c44-8275-53118248a945", "turn_index": 0}}
{"user_turn_0": "Which of those are rated at least one star ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Box", "user_turn_1": "Yea book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flip Out \"))))))", "idx": "7487", "datum_id": {"dialogue_id": "bc2b1c7f-da13-48ce-b09a-d025ce19d910", "turn_index": 3}}
{"user_turn_0": "Yeah", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I want the 2:30 PM departing flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "7494", "datum_id": {"dialogue_id": "d5ded676-6693-413f-8ac0-7d06f1033329", "turn_index": 2}}
{"user_turn_0": "Is this flight a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Book two passengers for this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Brussel \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (^((Constraint (List DateTime))) refer)))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 2))))))", "idx": "7506", "datum_id": {"dialogue_id": "fe376337-6801-42a8-a333-d06991d1651d", "turn_index": 3}}
{"user_turn_0": "The 20th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM price equals 166", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (^((Constraint Hour)) refer)) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "7508", "datum_id": {"dialogue_id": "fe376337-6801-42a8-a333-d06991d1651d", "turn_index": 5}}
{"user_turn_0": "Hi my assistant , book me at the Farmhouse Inn hotel in Wembley I want a double room", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "I 'm checking in tomorrow and out on the 7ht", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 7L)))))))))))", "idx": "7516", "datum_id": {"dialogue_id": "3720b4b7-5504-474e-8412-d57b89954a26", "turn_index": 1}}
{"user_turn_0": "I want two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Sure , update the check out date to Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Sunday))))))", "idx": "7518", "datum_id": {"dialogue_id": "3720b4b7-5504-474e-8412-d57b89954a26", "turn_index": 3}}
{"user_turn_0": "Sure , update the check out date to Sunday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "7519", "datum_id": {"dialogue_id": "3720b4b7-5504-474e-8412-d57b89954a26", "turn_index": 4}}
{"user_turn_0": "Hey assistant , book me a flight to Paris from Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime", "user_turn_1": "I m going to leave before at night at 8", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (?<= (someSalient (& (Time.hour_? (?= (Hour.apply 8L))) (meridiem_? (?= (Meridiem.PM))))))))))))))", "idx": "7533", "datum_id": {"dialogue_id": "512b47d5-bca8-4ff2-ad8e-335f64ca2774", "turn_index": 1}}
{"user_turn_0": "I m going to leave before at night at 8", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM price equals 134", "user_turn_1": "Can you give me the one at 2:40 PM and can you make sure its an ecomony class flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" Manchester \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "7534", "datum_id": {"dialogue_id": "512b47d5-bca8-4ff2-ad8e-335f64ca2774", "turn_index": 2}}
{"user_turn_0": "Hey , what is the arrival time of my train to Leicester", "agent_turn_0": "Root system inform train find focus equals arrivalDateTime equals time equals hour equals 6 minute equals 30", "user_turn_1": "what is the distance from Tie the Knot to 9 School Lane", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (& (Navigation.source_? (Place.location_? (?= \" Tie the Knot \"))) (Navigation.destination_? (Place.location_? (?= \" 9 School Lane \"))))))", "idx": "7545", "datum_id": {"dialogue_id": "fdcf127d-5e09-436f-96ff-3c722c9f0044", "turn_index": 1}}
{"user_turn_0": "Does it offer laundry service", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "7549", "datum_id": {"dialogue_id": "fdcf127d-5e09-436f-96ff-3c722c9f0044", "turn_index": 5}}
{"user_turn_0": "Do you know if it has a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Okay then please book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "7561", "datum_id": {"dialogue_id": "e1752857-51ba-43b6-96c6-2839820d79db", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , aM start time or PM start time ?", "tgt": "(plan (do (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L)))))))) (^(Message) Create :object (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))))))", "idx": "7566", "datum_id": {"dialogue_id": "65a6dabe-2fda-4e31-9345-e83e804a65a9", "turn_index": 0}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM", "user_turn_1": "I want the one at 4:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "7578", "datum_id": {"dialogue_id": "9fd488ab-6c92-4517-9dbd-78488f557431", "turn_index": 2}}
{"user_turn_0": "Can I pay with card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Great book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "7590", "datum_id": {"dialogue_id": "a6fb1d6a-dabf-42d2-aba6-62acaa8972ab", "turn_index": 3}}
{"user_turn_0": "Do any of the restaurants you found serve Chinese ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capricorn", "user_turn_1": "Do they take credit cards ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "7602", "datum_id": {"dialogue_id": "6b91bd49-5062-45ba-bb9f-f1c13e0598cb", "turn_index": 3}}
{"user_turn_0": "Do they take credit cards ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "That 's not a problem . Go ahead and put me down for 4 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Hambone \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "7603", "datum_id": {"dialogue_id": "6b91bd49-5062-45ba-bb9f-f1c13e0598cb", "turn_index": 4}}
{"user_turn_0": "London St Pancras", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM", "user_turn_1": "I want the one at 4:45 in the afternoon", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "7609", "datum_id": {"dialogue_id": "55b71b7c-eb17-47be-8c8b-50799ce8783d", "turn_index": 3}}
{"user_turn_0": "I want the one at 4:45 in the afternoon", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM", "user_turn_1": "That sounds fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "7610", "datum_id": {"dialogue_id": "55b71b7c-eb17-47be-8c8b-50799ce8783d", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , when is my train to GlasgowTell me ,", "tgt": "(plan (^(Train) Find :focus (Train.departureDateTime_? (^(DateTime) always)) :object (Train.destination_? (Place.location_? (?= \" Glasgow \")))))", "idx": "7617", "datum_id": {"dialogue_id": "29d165f0-7787-481b-9548-006ec9b6e9a0", "turn_index": 0}}
{"user_turn_0": "Please check on the calendar where is the event Far Away Feast held", "agent_turn_0": "Root system inform calendarEvent find focus equals location equals FAME Venue", "user_turn_1": "How long will take to get there ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (Place.location_? (^((Constraint String)) refer)))))", "idx": "7619", "datum_id": {"dialogue_id": "29d165f0-7787-481b-9548-006ec9b6e9a0", "turn_index": 2}}
{"user_turn_0": "Do me another favor . I need a reminder created for the event tomorrow", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Set up a reminder for the event today", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Date)) Path.apply \" object.atDateTime.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Today)))))", "idx": "7621", "datum_id": {"dialogue_id": "29d165f0-7787-481b-9548-006ec9b6e9a0", "turn_index": 4}}
{"user_turn_0": "Thanks , next please schedule a reminder for the Bora Bora Boar Hunt", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Thanks , next please book a one way to Exeter", "tgt": "(plan (^(Train) Book :object (& (Train.destination_? (Place.location_? (?= \" Exeter \"))) (Train.tripType_? (?= (TripType.oneWay))))))", "idx": "7629", "datum_id": {"dialogue_id": "bd64b85a-4f3d-4604-9e40-90c0ef3b8224", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , get me a hotel with a moderate price and a queen sized bed .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?= (PriceRange.Moderate))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Queen)))))))", "idx": "7632", "datum_id": {"dialogue_id": "2b951603-3d5e-4504-9fbc-e3a9390223b4", "turn_index": 0}}
{"user_turn_0": "Wait give me two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I have to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "7638", "datum_id": {"dialogue_id": "2b951603-3d5e-4504-9fbc-e3a9390223b4", "turn_index": 6}}
{"user_turn_0": "Will I have to prepay ?", "agent_turn_0": "Root system inform hotel find focus equals prePayment equals True", "user_turn_1": "Wait can you update the check out date to Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Friday)))))", "idx": "7639", "datum_id": {"dialogue_id": "2b951603-3d5e-4504-9fbc-e3a9390223b4", "turn_index": 7}}
{"user_turn_0": "Wait can you update the check out date to Friday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Update the check out date to Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "7640", "datum_id": {"dialogue_id": "2b951603-3d5e-4504-9fbc-e3a9390223b4", "turn_index": 8}}
{"user_turn_0": "For 2 people , I have a date", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Sure , change appointment to Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Sunday))))))", "idx": "7648", "datum_id": {"dialogue_id": "c9621bf8-9a8e-4d72-8903-cd85c75eaf3b", "turn_index": 6}}
{"user_turn_0": "Just make sure the hotel has parking", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Four Seasons price equals 138", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "7653", "datum_id": {"dialogue_id": "af7b372f-8e4e-4d9f-92a4-212e10c644ca", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , add my train schedule to Southhampton to my calendar", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (?= (^(DateTimeRange Train) reference (Train.destination_? (Place.location_? (?= \" Southampton \"))))))))", "idx": "7660", "datum_id": {"dialogue_id": "de04f2fd-7591-4086-ae1f-482c15f7ce42", "turn_index": 0}}
{"user_turn_0": "Find me another restaurant with parking please", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone Martian", "user_turn_1": "How much is it per person ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "7671", "datum_id": {"dialogue_id": "07fac0b9-fd9b-42e4-aaf2-46e29bf6b7fa", "turn_index": 4}}
{"user_turn_0": "How much is it per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 36", "user_turn_1": "Ok , book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" The Boiling Fence \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow)))))))))", "idx": "7672", "datum_id": {"dialogue_id": "07fac0b9-fd9b-42e4-aaf2-46e29bf6b7fa", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , can you book Interknack in Holland park for 2 people please ?", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.restaurantName_? (?= \" Interknack \")) (Restaurant.location_? (?= \" Holland Park \"))) (Restaurant.tableSize_? (?= 2)))))", "idx": "7676", "datum_id": {"dialogue_id": "27eda432-e46a-4689-a155-f564d29e303d", "turn_index": 0}}
{"user_turn_0": "Book it tomorrow at 2:00", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Can you change it to 2:30 ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (& (& x0 (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "7678", "datum_id": {"dialogue_id": "27eda432-e46a-4689-a155-f564d29e303d", "turn_index": 2}}
{"user_turn_0": "Do they offer laundry services ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Hyatt \"))))))", "idx": "7686", "datum_id": {"dialogue_id": "68a2a1c8-428c-41d2-82b3-643e6f2e29d5", "turn_index": 5}}
{"user_turn_0": "Two rooms please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they require a prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "7690", "datum_id": {"dialogue_id": "68a2a1c8-428c-41d2-82b3-643e6f2e29d5", "turn_index": 9}}
{"user_turn_0": "Also yes , please make a reminder for it", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Can you tell me how long it 'll take to get from 54 Islington Park by bike ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (& (Navigation.destination_? (Place.location_? (?= \" 54 Islington Park Road \"))) (Navigation.transportationMode_? (?= (TransportationMode.Biking))))))", "idx": "7709", "datum_id": {"dialogue_id": "8566970e-0b09-461a-93c1-483f9ed4c2a1", "turn_index": 2}}
{"user_turn_0": "Three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "No change the check out date to Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Thursday))))))", "idx": "7735", "datum_id": {"dialogue_id": "9b2d6d70-abb8-4672-a94e-51c819c57eff", "turn_index": 3}}
{"user_turn_0": "No change the check out date to Thursday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to pay now ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "7736", "datum_id": {"dialogue_id": "9b2d6d70-abb8-4672-a94e-51c819c57eff", "turn_index": 4}}
{"user_turn_0": "I 'd rather go to another restaurant that has tables outdoors", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Empirica", "user_turn_1": "What 's the address there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "7742", "datum_id": {"dialogue_id": "ba0f1b2b-3744-4e27-ae9a-57e0183ba330", "turn_index": 4}}
{"user_turn_0": "I do n't like the sound of any of them . Any restaurants serving American food ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Box", "user_turn_1": "Does this place take credit cards ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "7745", "datum_id": {"dialogue_id": "ba0f1b2b-3744-4e27-ae9a-57e0183ba330", "turn_index": 7}}
{"user_turn_0": "Does this place take credit cards ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Okay , make the reservation for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Beef Easy \"))))))", "idx": "7746", "datum_id": {"dialogue_id": "ba0f1b2b-3744-4e27-ae9a-57e0183ba330", "turn_index": 8}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "Get me one the one that leaves at 1:45 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "7807", "datum_id": {"dialogue_id": "6ab4ee70-9d18-4a5b-ae25-02a0ac8de70b", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , directions to Astro Resort hotel", "tgt": "(plan (^(Hotel) Find :focus (Hotel.location_? (^(String) always)) :object (Hotel.hotelName_? (?= \" Astro Resort \"))))", "idx": "7810", "datum_id": {"dialogue_id": "a8bc214b-c7a0-445a-96b1-14914d38bc18", "turn_index": 0}}
{"user_turn_0": "I need two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does I need prepayment", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "7814", "datum_id": {"dialogue_id": "a8bc214b-c7a0-445a-96b1-14914d38bc18", "turn_index": 4}}
{"user_turn_0": "What are directions there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "7824", "datum_id": {"dialogue_id": "185cfc56-6fee-47db-b9c4-23f30e4b641a", "turn_index": 3}}
{"user_turn_0": "Book it", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "What kind of room do you need ? How many rooms ? Almost done", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 16L)))) (month_? (Date.month_? (?= (April)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 22L)))))))))))", "idx": "7825", "datum_id": {"dialogue_id": "185cfc56-6fee-47db-b9c4-23f30e4b641a", "turn_index": 4}}
{"user_turn_0": "What kind of room do you need ? How many rooms ? Almost done", "agent_turn_0": "Root system prompt hotel book object equals roomType rooms", "user_turn_1": "April 16th to the 22th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.roomType_? (List.exists_? (?= (RoomType.Any))))) (Hotel.rooms_? (^((Constraint Number)) refer))))))", "idx": "7826", "datum_id": {"dialogue_id": "185cfc56-6fee-47db-b9c4-23f30e4b641a", "turn_index": 5}}
{"user_turn_0": "April 16th to the 22th", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to pay ahead ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "7827", "datum_id": {"dialogue_id": "185cfc56-6fee-47db-b9c4-23f30e4b641a", "turn_index": 6}}
{"user_turn_0": "Do I need to pay ahead ?", "agent_turn_0": "Root system inform hotel find focus equals prePayment equals False", "user_turn_1": "Edit my check out to Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Sunday))))))", "idx": "7828", "datum_id": {"dialogue_id": "185cfc56-6fee-47db-b9c4-23f30e4b641a", "turn_index": 7}}
{"user_turn_0": "Edit my check out to Sunday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait , change my check out to the 28th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 28L))))))", "idx": "7829", "datum_id": {"dialogue_id": "185cfc56-6fee-47db-b9c4-23f30e4b641a", "turn_index": 8}}
{"user_turn_0": "Wait , change my check out to the 28th", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does it come with free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "7830", "datum_id": {"dialogue_id": "185cfc56-6fee-47db-b9c4-23f30e4b641a", "turn_index": 9}}
{"user_turn_0": "I 'd prefer a place with a two star or better please", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Lucia price equals 125", "user_turn_1": "Do they have laundry services ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.laundry_? (^(Boolean) always)))))", "idx": "7845", "datum_id": {"dialogue_id": "9e1aa37f-108b-422c-b07f-569cb85aebd1", "turn_index": 3}}
{"user_turn_0": "Do they have laundry services ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Renaissance \"))))))", "idx": "7846", "datum_id": {"dialogue_id": "9e1aa37f-108b-422c-b07f-569cb85aebd1", "turn_index": 4}}
{"user_turn_0": "I 'd like two rooms and the type is irrelevant", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Please modify check in to Monday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Monday))))))", "idx": "7849", "datum_id": {"dialogue_id": "9e1aa37f-108b-422c-b07f-569cb85aebd1", "turn_index": 7}}
{"user_turn_0": "Please modify check in to Monday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they require a prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "7850", "datum_id": {"dialogue_id": "9e1aa37f-108b-422c-b07f-569cb85aebd1", "turn_index": 8}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , book a round trip train ticket from Oxford station to Reading stating on the 14th .", "tgt": "(plan (^(Train) Book :object (& (& (& (Train.source_? (Place.location_? (?= \" Oxford station \"))) (Train.destination_? (Place.location_? (?= \" Reading station \")))) (Train.departureDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 14L)))))) (Train.tripType_? (?= (TripType.roundTrip))))))", "idx": "7852", "datum_id": {"dialogue_id": "c6dfef55-9943-4439-8332-f98a15063853", "turn_index": 0}}
{"user_turn_0": "What 's their average cost per person", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 63", "user_turn_1": "Sounds fine , go ahead with it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Gogol \"))))))", "idx": "7863", "datum_id": {"dialogue_id": "f21a6336-c0ea-4169-a9e3-a7ded3325a7e", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , what 's the distance to 83 Upper Street", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (Navigation.destination_? (Place.location_? (?= \" 83 Upper Street \")))))", "idx": "7873", "datum_id": {"dialogue_id": "b245bf95-7920-4fd6-9180-e63689f00c47", "turn_index": 0}}
{"user_turn_0": "Book it", "agent_turn_0": "Root systen inform restaurant book Completed", "user_turn_1": "Book me a hotel in London Bridge with parking from the same day to February 17th", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" London Bridge \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (^((Constraint Date)) refer))) (DateTimeRange.endDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 17L)))) (month_? (Date.month_? (?= (February))))))))) (Hotel.hasParking_? (?= true)))))", "idx": "7880", "datum_id": {"dialogue_id": "2a735c84-ed2c-44f0-9856-ecfb1a4e15dc", "turn_index": 2}}
{"user_turn_0": "Can you get me a table there for 4:30 PM ?", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Ok . How about tomorrow then ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (?= (Tomorrow))))))))", "idx": "7885", "datum_id": {"dialogue_id": "6180ab9c-8a15-4953-b52d-4abeeda4a69e", "turn_index": 2}}
{"user_turn_0": "So how long does it take to get there ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 10", "user_turn_1": "Ok , so how far is the calendar event venue ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (Navigation.destination_? (?= (^(Place CalendarEvent) reference (^(CalendarEvent) always))))))", "idx": "7900", "datum_id": {"dialogue_id": "693715b7-dba8-4f4a-9d68-344f186e6d62", "turn_index": 3}}
{"user_turn_0": "Have it set for 11:30 in the morning", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Can you change the reminder at 11:30 in the morning to be at 1 in the afternoon", "tgt": "(plan (^(Reminder) Update :focus (Reminder.atDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))) :object (Reminder.atDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM))))))))", "idx": "7908", "datum_id": {"dialogue_id": "8d9700eb-51f4-4cff-8614-87d1bd8b6fe6", "turn_index": 2}}
{"user_turn_0": "Can you tell me todays weather", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cloudy", "user_turn_1": "Display my events", "tgt": "(plan (^(CalendarEvent) Find))", "idx": "7910", "datum_id": {"dialogue_id": "8d9700eb-51f4-4cff-8614-87d1bd8b6fe6", "turn_index": 4}}
{"user_turn_0": "Just to make sure , there 's parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "That 's great . Book me a table for Sunday at 11", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 11L)))))))))))", "idx": "7925", "datum_id": {"dialogue_id": "42adc886-e981-4ffd-adf9-e22034c755b7", "turn_index": 4}}
{"user_turn_0": "I need directions to get there", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Please book that place for mne", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" The Watson \"))))))", "idx": "7967", "datum_id": {"dialogue_id": "2b69bb45-7896-4e5a-bd62-805c3fc3754e", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , change the 11:30 AM event to 2 o'clock on my calendar .", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 2L)))))) :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM)))))))))", "idx": "7970", "datum_id": {"dialogue_id": "6864a710-57fe-4078-be14-0aba3c2424f1", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , when will the 11:30 train to Saint Pancras arrive", "tgt": "(plan (^(Train) Find :focus (Train.arrivalDateTime_? (^(DateTime) always)) :object (& (Train.destination_? (Place.location_? (?= \" St Pancras \"))) (Train.departureDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L)))))))))", "idx": "7975", "datum_id": {"dialogue_id": "48a6a917-ff6c-4595-a184-bf284905bd00", "turn_index": 0}}
{"user_turn_0": "The 26th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM price equals 173", "user_turn_1": "This one is fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "7991", "datum_id": {"dialogue_id": "bdf699a1-1375-4025-a4dc-54e375c3d0c9", "turn_index": 6}}
{"user_turn_0": "Does this restaurant take credit cards ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "This is fine , go ahead and book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "8004", "datum_id": {"dialogue_id": "ef808438-db8c-4c90-ae0e-c33655e1a056", "turn_index": 4}}
{"user_turn_0": "Hey , i 'd like to book a round trip flight from Liverpool to Edinburgh . My departure date is Tuesday", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM price equals 156", "user_turn_1": "I actually prefer the flight at 4:30 PM and I would like to have economy class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" Liverpool \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "8016", "datum_id": {"dialogue_id": "e62f2409-ede9-4041-8a31-dceaf005037e", "turn_index": 1}}
{"user_turn_0": "Hello , when will my train to Liverpool arrive ?", "agent_turn_0": "Root system inform train find focus equals departureDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM", "user_turn_1": "I 'd like to book a restaurant that 's a reasonable price", "tgt": "(plan (^(Restaurant) Book :object (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))))", "idx": "8026", "datum_id": {"dialogue_id": "56cad7cd-1b23-4b49-92a1-64706f0d3be6", "turn_index": 1}}
{"user_turn_0": "Do any of these restaurants serve Japanese Cuisine ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Beef Easy", "user_turn_1": "Do they have parking", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "8030", "datum_id": {"dialogue_id": "56cad7cd-1b23-4b49-92a1-64706f0d3be6", "turn_index": 5}}
{"user_turn_0": "I 'd still prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Godka", "user_turn_1": "Do they have parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "8032", "datum_id": {"dialogue_id": "56cad7cd-1b23-4b49-92a1-64706f0d3be6", "turn_index": 7}}
{"user_turn_0": "Do they have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Okay , that 's great . Book it for me at 4 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Interknack \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 4L))))))))))", "idx": "8033", "datum_id": {"dialogue_id": "56cad7cd-1b23-4b49-92a1-64706f0d3be6", "turn_index": 8}}
{"user_turn_0": "Okay , that 's great . Book it for me at 4 o'clock", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Okay , well change the appointment to today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (?= (Today))))))))", "idx": "8034", "datum_id": {"dialogue_id": "56cad7cd-1b23-4b49-92a1-64706f0d3be6", "turn_index": 9}}
{"user_turn_0": "Ok . Book it for me . I need double room please", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "From March 16th to 18th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 16L)))) (month_? (Date.month_? (?= (March)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 18L)))))))))))", "idx": "8046", "datum_id": {"dialogue_id": "6a6f8b49-448c-4104-98df-6e3c2cae9123", "turn_index": 2}}
{"user_turn_0": "Just one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait . Does the booking support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "8049", "datum_id": {"dialogue_id": "6a6f8b49-448c-4104-98df-6e3c2cae9123", "turn_index": 5}}
{"user_turn_0": "Is it a direct flight there ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Ok , book it for two passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.source_? (Place.location_? (?= \" London \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 2))))))", "idx": "8054", "datum_id": {"dialogue_id": "1237f275-4627-4381-afa6-8fa43d6046d5", "turn_index": 3}}
{"user_turn_0": "Hey assistant , where is Chestnut Tree Hotel located ?", "agent_turn_0": "Root system inform hotel find focus equals location equals Stamford Hill", "user_turn_1": "Make me a reservation for a king size bed there for today until the fifth", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.hotelName_? (?= \" Chestnut Tree \")) (Hotel.roomType_? (List.exists_? (?= (RoomType.King))))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 5L))))))))))", "idx": "8085", "datum_id": {"dialogue_id": "b86d9bea-462f-4879-805f-a481f952cd12", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , display Forest Tour on my calendar please", "tgt": "(plan (^(CalendarEvent) Find :object (CalendarEvent.eventName_? (?= \" forest tour \"))))", "idx": "8090", "datum_id": {"dialogue_id": "7a1a7018-384a-4c96-b0c9-115bac17a696", "turn_index": 0}}
{"user_turn_0": "Hey , what is The Fresco hotel rated ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "That works", "tgt": "(plan (^(Hotel) Book :object (Hotel.hotelName_? (^((Constraint String)) refer))))", "idx": "8097", "datum_id": {"dialogue_id": "998cb401-67d0-466e-9172-7114980d7ca5", "turn_index": 1}}
{"user_turn_0": "I want a queen bed", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Move the check in to today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "8100", "datum_id": {"dialogue_id": "998cb401-67d0-466e-9172-7114980d7ca5", "turn_index": 4}}
{"user_turn_0": "Just one", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does it include breakfast ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "8102", "datum_id": {"dialogue_id": "998cb401-67d0-466e-9172-7114980d7ca5", "turn_index": 6}}
{"user_turn_0": "Ok , how long is the journey", "agent_turn_0": "Root system inform flight find focus equals duration equals hour equals 1 minute equals 10", "user_turn_1": "Ok , book it for four people", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.airLine_? (?= \" EasyJet \"))) (Flight.destination_? (Place.location_? (?= \" Belfast \")))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (^((Constraint (List DateTime))) refer)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 4))))))", "idx": "8114", "datum_id": {"dialogue_id": "6c3d7c33-2ceb-4de2-8e9b-d5b38a8290c5", "turn_index": 5}}
{"user_turn_0": "On the 26th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM price equals 142", "user_turn_1": "Ok , that looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "8117", "datum_id": {"dialogue_id": "6c3d7c33-2ceb-4de2-8e9b-d5b38a8290c5", "turn_index": 8}}
{"user_turn_0": "Does that include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Okay , make the reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "8127", "datum_id": {"dialogue_id": "21039e07-170c-4d41-9949-26645bde1bb0", "turn_index": 3}}
{"user_turn_0": "London Heathrow", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "4:20 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "8138", "datum_id": {"dialogue_id": "b43f1e8b-2703-4f9d-85ec-f7be92059f10", "turn_index": 2}}
{"user_turn_0": "N , the next stop will be Madrid on Thursday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 5 object equals nextDepartureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM price equals 199", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "8141", "datum_id": {"dialogue_id": "b43f1e8b-2703-4f9d-85ec-f7be92059f10", "turn_index": 5}}
{"user_turn_0": "I 'd prefer a hotel that did n't have a high price range", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Diva price equals 156", "user_turn_1": "Do they offer wifi to the guests ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasWifi_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "8146", "datum_id": {"dialogue_id": "194febd1-fe38-4333-bc92-c8d6bb27ca65", "turn_index": 3}}
{"user_turn_0": "Do they offer wifi to the guests ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Renaissance \"))))))", "idx": "8147", "datum_id": {"dialogue_id": "194febd1-fe38-4333-bc92-c8d6bb27ca65", "turn_index": 4}}
{"user_turn_0": "Two rooms please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they require a prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "8150", "datum_id": {"dialogue_id": "194febd1-fe38-4333-bc92-c8d6bb27ca65", "turn_index": 7}}
{"user_turn_0": "I will leave on the 14th", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "Does Monday work ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Monday))))))", "idx": "8166", "datum_id": {"dialogue_id": "a8e913bc-c3ac-4caf-88bd-fecc25848afb", "turn_index": 3}}
{"user_turn_0": "Send it", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Book a cheap restaurant", "tgt": "(plan (^(Restaurant) Book :object (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))))", "idx": "8173", "datum_id": {"dialogue_id": "dd63fdcb-b2df-4200-b9b1-e44e566a01a1", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , i want to eat Chinese food at a cheap restaurant for tomorrow .", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.priceRange_? (?= (PriceRange.Low))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow)))))) (Restaurant.foodType_? (?= (FoodType.Chinese))))))", "idx": "8174", "datum_id": {"dialogue_id": "cad1d6d8-9cdf-4999-86cf-c68bd7a0b806", "turn_index": 0}}
{"user_turn_0": "Tell me which restaurants have rating four stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capers", "user_turn_1": "Okay , book that on", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Kiwi Sea \"))))))", "idx": "8178", "datum_id": {"dialogue_id": "cad1d6d8-9cdf-4999-86cf-c68bd7a0b806", "turn_index": 4}}
{"user_turn_0": "I will be departing from London", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "How about Wednesday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Wednesday))))))", "idx": "8186", "datum_id": {"dialogue_id": "4e9dbaa2-95b4-41eb-802d-2577a99f9fc0", "turn_index": 4}}
{"user_turn_0": "Hey , i need a hotel in Hillingdon for three nights that is reasonably prices and has parking .", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Sheraton price equals 150", "user_turn_1": "Does it have wif ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasWifi_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "8188", "datum_id": {"dialogue_id": "cdc96dc3-61bd-413f-b489-59138bc7c966", "turn_index": 1}}
{"user_turn_0": "Look for one with at least two stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Green Acres price equals 199", "user_turn_1": "Does it have laundry ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.laundry_? (^(Boolean) always)))))", "idx": "8190", "datum_id": {"dialogue_id": "cdc96dc3-61bd-413f-b489-59138bc7c966", "turn_index": 3}}
{"user_turn_0": "Does it have laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Sheraton \"))))))", "idx": "8191", "datum_id": {"dialogue_id": "cdc96dc3-61bd-413f-b489-59138bc7c966", "turn_index": 4}}
{"user_turn_0": "I want two single rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "8195", "datum_id": {"dialogue_id": "cdc96dc3-61bd-413f-b489-59138bc7c966", "turn_index": 8}}
{"user_turn_0": "Hi assistant , i 'd like to book a place in Wembley Park please", "agent_turn_0": "Root system prompt restaurant book object equals priceRange", "user_turn_1": "I 'd like a three star rating in the moderate or low price range please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Restaurant.rating_? (?= 3))))))", "idx": "8203", "datum_id": {"dialogue_id": "2a942e5a-5756-4e03-a798-987db12e598a", "turn_index": 1}}
{"user_turn_0": "Which of the places serve Italian ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kiwi Sea", "user_turn_1": "Do they have parking ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "8205", "datum_id": {"dialogue_id": "2a942e5a-5756-4e03-a798-987db12e598a", "turn_index": 3}}
{"user_turn_0": "Do they have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "That 's perfect please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Dimple's \"))))))", "idx": "8206", "datum_id": {"dialogue_id": "2a942e5a-5756-4e03-a798-987db12e598a", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , send tomorrow 's event to Mr McDonald , please", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" McDonald \")) (Person.namePrefix_? (?= \" Mr \"))))) (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))))))))))", "idx": "8216", "datum_id": {"dialogue_id": "ba4d5023-5332-41f4-8998-cf671b143b5c", "turn_index": 0}}
{"user_turn_0": "I need directions", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "8224", "datum_id": {"dialogue_id": "e7c9c42d-ed24-4f73-a0f2-88efec1c10e6", "turn_index": 3}}
{"user_turn_0": "Yes please go ahead and send it", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Please add the National Economics Challenge held in Blue Mark on the calendar", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.eventName_? (?= \" National Economics Challenge \")) (CalendarEvent.location_? (?= \" Blue Mark \")))))", "idx": "8237", "datum_id": {"dialogue_id": "7ad03be8-a723-4191-9e73-384f0e0eadad", "turn_index": 3}}
{"user_turn_0": "I prefer another hotel with rating of at least one star", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Club Quarters price equals 150", "user_turn_1": "And what 's the rating ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.rating_? (^(Number) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "8253", "datum_id": {"dialogue_id": "6509418f-2400-4825-844f-d26cae408f29", "turn_index": 4}}
{"user_turn_0": "And what 's the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" River Park \"))))))", "idx": "8254", "datum_id": {"dialogue_id": "6509418f-2400-4825-844f-d26cae408f29", "turn_index": 5}}
{"user_turn_0": "Does the hotel possess a car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book the hotel for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "8262", "datum_id": {"dialogue_id": "d6879eb9-c8bd-44ab-b240-01f669a62d0b", "turn_index": 5}}
{"user_turn_0": "I need two room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "8267", "datum_id": {"dialogue_id": "d6879eb9-c8bd-44ab-b240-01f669a62d0b", "turn_index": 10}}
{"user_turn_0": "I do n't care , but I want German food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Emptia", "user_turn_1": "Book that one at 2 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "8272", "datum_id": {"dialogue_id": "6d02352b-bc33-4d32-b326-73e6159b0fef", "turn_index": 3}}
{"user_turn_0": "What is it rated ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Okay , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "8278", "datum_id": {"dialogue_id": "2c40bb4b-11de-4a53-ae39-8f37be6aa0f9", "turn_index": 3}}
{"user_turn_0": "Does that place have free Wi - Fi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Make the booking for mw", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "8283", "datum_id": {"dialogue_id": "7525d873-2efd-4bc5-871a-d4df449ddecf", "turn_index": 2}}
{"user_turn_0": "I need three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is prepayment required with this booking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "8286", "datum_id": {"dialogue_id": "7525d873-2efd-4bc5-871a-d4df449ddecf", "turn_index": 5}}
{"user_turn_0": "Actually , I need the check in date to be revised to tomorrow", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Could you revise the check out date to be on Saturday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Saturday)))))", "idx": "8288", "datum_id": {"dialogue_id": "7525d873-2efd-4bc5-871a-d4df449ddecf", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , i 'd like to book a cheap hotel in Northwood from the 12th to the 17th for a double room", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" Northwood \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 12L))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 17L)))))))) (Hotel.priceRange_? (?= (PriceRange.Low)))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Double)))))))", "idx": "8295", "datum_id": {"dialogue_id": "b15c21ea-7ee5-4427-8e0a-faca9d04e3fb", "turn_index": 0}}
{"user_turn_0": "I prefer a hotel with a one star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Hilton price equals 130", "user_turn_1": "Do they have a laundry ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.laundry_? (^(Boolean) always)))))", "idx": "8298", "datum_id": {"dialogue_id": "b15c21ea-7ee5-4427-8e0a-faca9d04e3fb", "turn_index": 3}}
{"user_turn_0": "Do they have a laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Triton \"))))))", "idx": "8299", "datum_id": {"dialogue_id": "b15c21ea-7ee5-4427-8e0a-faca9d04e3fb", "turn_index": 4}}
{"user_turn_0": "Three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Change the checkout date to Saturday instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Saturday))))))", "idx": "8301", "datum_id": {"dialogue_id": "b15c21ea-7ee5-4427-8e0a-faca9d04e3fb", "turn_index": 6}}
{"user_turn_0": "Change the checkout date to Saturday instead", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they support free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "8302", "datum_id": {"dialogue_id": "b15c21ea-7ee5-4427-8e0a-faca9d04e3fb", "turn_index": 7}}
{"user_turn_0": "Please book this flight for three people to leave on July 4th", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "Can I go with Tuesday instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "8308", "datum_id": {"dialogue_id": "1e013f42-e54f-4dad-bd70-0ebf25b23fd2", "turn_index": 4}}
{"user_turn_0": "Thanks , also set up a reminder for my next event", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Next , i would like a hotel reservation for one night", "tgt": "(plan (^(Hotel) Book :object (Hotel.dateTimeRange_? (DateTimeRange.duration_? (AppleDuration.day_? (?= 1))))))", "idx": "8325", "datum_id": {"dialogue_id": "d412072c-853c-4124-a06b-286bbe5eb5f2", "turn_index": 4}}
{"user_turn_0": "Room type does n't matter I just need one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need a prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "8329", "datum_id": {"dialogue_id": "bf4ca467-4b82-4c55-9bbc-dbe86491a68f", "turn_index": 3}}
{"user_turn_0": "on the 24th", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM", "user_turn_1": "Sure", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "8336", "datum_id": {"dialogue_id": "4d4e1fb3-5d33-40d6-a18e-1ed078422e01", "turn_index": 5}}
{"user_turn_0": "What airline is it ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals EasyJet", "user_turn_1": "Cool , book the flight for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "8351", "datum_id": {"dialogue_id": "04eb779e-1b9a-41b8-a18c-a8ec0f00f782", "turn_index": 3}}
{"user_turn_0": "check in tomorrow and check out 27th", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "I need three rooms and the room type does n't matter", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 27L)))))))))))", "idx": "8360", "datum_id": {"dialogue_id": "331af55b-04c4-42b3-9c54-9c7a3dd7c5cf", "turn_index": 2}}
{"user_turn_0": "I need three rooms and the room type does n't matter", "agent_turn_0": "Root system prompt hotel book object equals roomType rooms", "user_turn_1": "The price range on that is high", "tgt": "(plan (^(Hotel) Find :focus (Hotel.roomType_? (^((List RoomType)) always))))", "idx": "8361", "datum_id": {"dialogue_id": "331af55b-04c4-42b3-9c54-9c7a3dd7c5cf", "turn_index": 3}}
{"user_turn_0": "The price range on that is high", "agent_turn_0": "Root system inform hotel find focus equals roomType equals listElementOne Double listElementTwo Single listElementThree King listElementFour Queen", "user_turn_1": "Do you have any preferred room type , and how many rooms do you need ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.roomType_? (List.exists_? (?= (RoomType.Any))))) (Hotel.rooms_? (?= 3))))))", "idx": "8362", "datum_id": {"dialogue_id": "331af55b-04c4-42b3-9c54-9c7a3dd7c5cf", "turn_index": 4}}
{"user_turn_0": "I want a four star Indian restaurant", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Lakeside Demon", "user_turn_1": "Book it for me today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Today)))))))))", "idx": "8378", "datum_id": {"dialogue_id": "6482acd7-15f7-43f5-807b-c7513cc2528a", "turn_index": 3}}
{"user_turn_0": "How do I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it !", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Palm Bliss \"))))))", "idx": "8392", "datum_id": {"dialogue_id": "ebe24baf-51a7-4834-b633-ff3f7c2a856b", "turn_index": 5}}
{"user_turn_0": "Two king sized bed", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Modify the check out date to Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Saturday)))))", "idx": "8395", "datum_id": {"dialogue_id": "ebe24baf-51a7-4834-b633-ff3f7c2a856b", "turn_index": 8}}
{"user_turn_0": "I think I 'd like another hotel with at least two stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Parallel Tower price equals 155", "user_turn_1": "Is there a fitness center ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "8401", "datum_id": {"dialogue_id": "713c31fb-5d8c-4273-b7a2-1ba679119c14", "turn_index": 4}}
{"user_turn_0": "Is there a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "OK , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Harborview \"))))))", "idx": "8402", "datum_id": {"dialogue_id": "713c31fb-5d8c-4273-b7a2-1ba679119c14", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , book a cheap hotel with a car park for today through November 28th .", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.priceRange_? (?= (PriceRange.Low))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (& (Date.day_? (?= (Day.apply 28L))) (Date.month_? (?= (November))))))))) (Hotel.hasParking_? (?= true)))))", "idx": "8405", "datum_id": {"dialogue_id": "b4955773-8efa-4a43-86cb-9029b25e3361", "turn_index": 0}}
{"user_turn_0": "Is there a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "8408", "datum_id": {"dialogue_id": "b4955773-8efa-4a43-86cb-9029b25e3361", "turn_index": 3}}
{"user_turn_0": "Just one", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you make the check out the 19th ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 19L))))))", "idx": "8412", "datum_id": {"dialogue_id": "b4955773-8efa-4a43-86cb-9029b25e3361", "turn_index": 7}}
{"user_turn_0": "Can you make the check out the 19th ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to pay now ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "8413", "datum_id": {"dialogue_id": "b4955773-8efa-4a43-86cb-9029b25e3361", "turn_index": 8}}
{"user_turn_0": "In Dublin and I leave tomorrow", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 12 minute equals 50 meridiem equals PM", "user_turn_1": "Book the flight for two people", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.class_? (?= (FlightClass.Economy))) (Flight.source_? (Place.location_? (?= \" London \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 2))))))", "idx": "8417", "datum_id": {"dialogue_id": "bbc50bf7-960b-457e-9a04-3b93587c252f", "turn_index": 2}}
{"user_turn_0": "Go ahead", "agent_turn_0": "Root system inform flight book Completed", "user_turn_1": "Change the date of the event on October 20th at 10 AM", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (^(Date) always)))) :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (& (Date.month_? (?= (October))) (Date.day_? (?= (Day.apply 20L))))) (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (meridiem_? (?= (Meridiem.AM))))))))))", "idx": "8419", "datum_id": {"dialogue_id": "bbc50bf7-960b-457e-9a04-3b93587c252f", "turn_index": 4}}
{"user_turn_0": "And what 's the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "8428", "datum_id": {"dialogue_id": "14817e8b-28db-4580-ab31-5874f8e27380", "turn_index": 3}}
{"user_turn_0": "Book it for me please", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "From February 13th to 15th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 13L)))) (month_? (Date.month_? (?= (February)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 15L)))))))))))", "idx": "8429", "datum_id": {"dialogue_id": "14817e8b-28db-4580-ab31-5874f8e27380", "turn_index": 4}}
{"user_turn_0": "I would like to have one king sized bed", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you change the check out date to the 22nd", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Day)) Path.apply \" object.dateTimeRange.endDateTime.date.day \") (lambda (^(Constraint Day) x0) (?= (Day.apply 22L)))))", "idx": "8431", "datum_id": {"dialogue_id": "14817e8b-28db-4580-ab31-5874f8e27380", "turn_index": 6}}
{"user_turn_0": "Can you change the check out date to the 22nd", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait . Do I need prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "8432", "datum_id": {"dialogue_id": "14817e8b-28db-4580-ab31-5874f8e27380", "turn_index": 7}}
{"user_turn_0": "Does the hotel have laundry", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "8448", "datum_id": {"dialogue_id": "e6c24952-5dd5-4dbc-a1e5-76510b4613b4", "turn_index": 4}}
{"user_turn_0": "2 rooms", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Can I change the check in date to Wednesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Wednesday))))))", "idx": "8451", "datum_id": {"dialogue_id": "e6c24952-5dd5-4dbc-a1e5-76510b4613b4", "turn_index": 7}}
{"user_turn_0": "Can I change the check in date to Wednesday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "8452", "datum_id": {"dialogue_id": "e6c24952-5dd5-4dbc-a1e5-76510b4613b4", "turn_index": 8}}
{"user_turn_0": "I 'd like one with a king - sized bed", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Hold on , can you change that check out date to Friday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Friday))))))", "idx": "8472", "datum_id": {"dialogue_id": "4b8689af-12bd-4249-b131-efd3949f3085", "turn_index": 3}}
{"user_turn_0": "2 of them", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I need to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "8488", "datum_id": {"dialogue_id": "c39f6882-845c-4a9f-9cd9-71a37b290a01", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , are you going to departure from Birmingham ?", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" Ealing \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 10L))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 15L)))))))) (Hotel.hasParking_? (?= true)))))", "idx": "8490", "datum_id": {"dialogue_id": "1a18c104-16a8-4452-b8f2-3be28aa6f6d7", "turn_index": 0}}
{"user_turn_0": "I prefer another hotel with moderate price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Candlewood Suites price equals 135", "user_turn_1": "Does the hotel have fitness center ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasFitness_? (^(Boolean) always)))))", "idx": "8493", "datum_id": {"dialogue_id": "1a18c104-16a8-4452-b8f2-3be28aa6f6d7", "turn_index": 3}}
{"user_turn_0": "I prefer another hotel with at least two star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals The Blackstone price equals 166", "user_turn_1": "I want to get direction to the The Blackstone hotel", "tgt": "(plan (^(Navigation) Find :object (Navigation.destination_? (?= (^(Place Hotel) reference (^(Hotel) always))))))", "idx": "8495", "datum_id": {"dialogue_id": "1a18c104-16a8-4452-b8f2-3be28aa6f6d7", "turn_index": 5}}
{"user_turn_0": "I want to get direction to the The Blackstone hotel", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Embassy Suites \"))))))", "idx": "8496", "datum_id": {"dialogue_id": "1a18c104-16a8-4452-b8f2-3be28aa6f6d7", "turn_index": 6}}
{"user_turn_0": "I need 2 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you change the check out date to Thursday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Thursday))))))", "idx": "8499", "datum_id": {"dialogue_id": "1a18c104-16a8-4452-b8f2-3be28aa6f6d7", "turn_index": 9}}
{"user_turn_0": "Hey , get me a reservation at the Flavoroso restaurant and then put that on my calendar , please `", "agent_turn_0": "Root system prompt restaurant book restaurant book atDateTime", "user_turn_1": "In the afternoon at 2:30", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "8514", "datum_id": {"dialogue_id": "bfd3c7e8-4087-45b3-b97c-b6d00168a264", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , create event at 10 o'clock for me please .", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 10L))))))))", "idx": "8528", "datum_id": {"dialogue_id": "4f25d015-0ace-42d6-b26a-96e88f6578a7", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , give me the seating for the hotel The Watson located in Somerstown", "tgt": "(plan (^(Hotel) Find :focus (Hotel.rating_? (^(Number) always)) :object (& (Hotel.hotelName_? (?= \" The Watson \")) (Hotel.location_? (?= \" Somerstown \")))))", "idx": "8538", "datum_id": {"dialogue_id": "d5e865e8-0a57-4f57-9866-b5c614518355", "turn_index": 0}}
{"user_turn_0": "Can I update the check in date to tomorrow ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "8542", "datum_id": {"dialogue_id": "d5e865e8-0a57-4f57-9866-b5c614518355", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i need a taxi to take me to the event on my calendar from 54 Islington Park Road .", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" 54 Islington Park Road \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (^(CalendarEvent) always)))))))", "idx": "8544", "datum_id": {"dialogue_id": "ccae6173-84f3-4a4c-bae6-c7a405aec2bc", "turn_index": 0}}
{"user_turn_0": "Sunday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM price equals 201", "user_turn_1": "I 'll do that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "8571", "datum_id": {"dialogue_id": "0ab3d34e-fe02-48cb-87f2-14759c38545a", "turn_index": 6}}
{"user_turn_0": "Tell me the weather in Newcastle", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cold", "user_turn_1": "I need another favor . Make me a reminder regarding my next event", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1)))))))", "idx": "8582", "datum_id": {"dialogue_id": "f7301aee-c132-4e0d-b04e-658356af612b", "turn_index": 4}}
{"user_turn_0": "Hello , when is flight HO347 arriving ?", "agent_turn_0": "Root system inform flight find focus equals arrivalDateTime equals time equals hour equals 6 minute equals 30", "user_turn_1": "Book a table for me at Empirica in Notting Hill", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.location_? (?= \" Notting Hill \")) (Restaurant.restaurantName_? (?= \" Empirica \")))))", "idx": "8584", "datum_id": {"dialogue_id": "add02aa9-a6a9-489d-80d5-bd62cf0de0cd", "turn_index": 1}}
{"user_turn_0": "Set it at 2", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Change it to August 23rd", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (& (Date.month_? (?= (August))) (Date.day_? (?= (Day.apply 23L)))))))", "idx": "8587", "datum_id": {"dialogue_id": "add02aa9-a6a9-489d-80d5-bd62cf0de0cd", "turn_index": 4}}
{"user_turn_0": "one", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will this need prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "8596", "datum_id": {"dialogue_id": "a4bdc42c-60c4-41f7-8540-72d05227b802", "turn_index": 6}}
{"user_turn_0": "Hi my assistant , is there a next event on my calendar ?", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Okay , make one , then , please", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.eventName_? (?= \" Leadership skill discussion \"))))", "idx": "8599", "datum_id": {"dialogue_id": "e9340553-6b9b-4248-9432-3d48782eb1cd", "turn_index": 1}}
{"user_turn_0": "I 'll actually be leaving from Exeter", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM", "user_turn_1": "I 'd actually like to leave earlier , I prefer the 2:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (Train.departureDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "8610", "datum_id": {"dialogue_id": "16df8354-47b0-4b0b-93d5-f33933948e67", "turn_index": 2}}
{"user_turn_0": "I would rather have a hotel that is more moderately priced", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Etiquette Suites price equals 199", "user_turn_1": "Is there a car park ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasParking_? (^(Boolean) always)))))", "idx": "8662", "datum_id": {"dialogue_id": "42be3779-da18-4f64-9172-7191ba418eff", "turn_index": 3}}
{"user_turn_0": "Is there a car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "I would like to book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Shangri-La \"))))))", "idx": "8663", "datum_id": {"dialogue_id": "42be3779-da18-4f64-9172-7191ba418eff", "turn_index": 4}}
{"user_turn_0": "Does the hotel have private bath room ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "8668", "datum_id": {"dialogue_id": "242f986f-19b8-4211-ad87-4a3c5cd7a50f", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i need to reserve a table for 3 today .", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.restaurantName_? (?= \" Jurassic Pork \")) (Restaurant.tableSize_? (?= 3))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Today))))))))", "idx": "8672", "datum_id": {"dialogue_id": "c06eb287-8991-4448-bc6c-439820a5df93", "turn_index": 0}}
{"user_turn_0": "Tell me the weather", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Sunny", "user_turn_1": "Thanks , also i need a restaurant in Bloomsbury for 11:30 AM that is n't too expensive and has parking", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& (& (Restaurant.location_? (?= \" Bloomsbury \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM)))))))) (Restaurant.priceRange_? (?= (PriceRange.High)))) (Restaurant.hasParking_? (?= true))))))", "idx": "8676", "datum_id": {"dialogue_id": "c06eb287-8991-4448-bc6c-439820a5df93", "turn_index": 4}}
{"user_turn_0": "Does it have a fitness center included ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Great ! Then book it for me , please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "8685", "datum_id": {"dialogue_id": "0bfc9f73-2f6a-4514-ab6b-bc8f3d244e86", "turn_index": 3}}
{"user_turn_0": "Just one", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel this book for free if I need to ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "8689", "datum_id": {"dialogue_id": "0bfc9f73-2f6a-4514-ab6b-bc8f3d244e86", "turn_index": 7}}
{"user_turn_0": "I 'm leaving on Wednesday to Amsterdam", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "Try on the 7th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 7L))))))", "idx": "8698", "datum_id": {"dialogue_id": "b34b5c3e-936c-4448-8549-7063e257c018", "turn_index": 2}}
{"user_turn_0": "Try on the 7th", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM price equals 127", "user_turn_1": "I actually prefer the flight which departs at 2:40 PM and I would like to have an economy class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.source_? (Place.location_? (?= \" Liverpool \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "8699", "datum_id": {"dialogue_id": "b34b5c3e-936c-4448-8549-7063e257c018", "turn_index": 3}}
{"user_turn_0": "Yes for the 25th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM price equals 127", "user_turn_1": "That one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "8701", "datum_id": {"dialogue_id": "b34b5c3e-936c-4448-8549-7063e257c018", "turn_index": 5}}
{"user_turn_0": "What 's the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "8714", "datum_id": {"dialogue_id": "a9c6c3c2-c9df-4006-8d9d-c290e403fb9c", "turn_index": 3}}
{"user_turn_0": "Can I get 3 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you change the check in date to Tuesday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "8717", "datum_id": {"dialogue_id": "a9c6c3c2-c9df-4006-8d9d-c290e403fb9c", "turn_index": 6}}
{"user_turn_0": "Hi assistant , i would like to book a flight from London Heathrow to Paris that leaves on the 8th .", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "How about if I departed on Monday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Monday))))))", "idx": "8736", "datum_id": {"dialogue_id": "d7911787-060b-4d0d-8bb4-fe853209f5fe", "turn_index": 1}}
{"user_turn_0": "I actually another hotel with five stars rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Rose price equals 65", "user_turn_1": "Does this hotel have fitness center ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "8775", "datum_id": {"dialogue_id": "7ed52785-3035-4050-bbce-d8a7b398564a", "turn_index": 3}}
{"user_turn_0": "Does this hotel have fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Great , book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Enchanted Isle \"))))))", "idx": "8776", "datum_id": {"dialogue_id": "7ed52785-3035-4050-bbce-d8a7b398564a", "turn_index": 4}}
{"user_turn_0": "Two rooms are needed", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does this booking support free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "8780", "datum_id": {"dialogue_id": "7ed52785-3035-4050-bbce-d8a7b398564a", "turn_index": 8}}
{"user_turn_0": "I 'd rather stay at another moderately priced hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Renaissance price equals 127", "user_turn_1": "What kind of rating do they have ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.rating_? (^(Number) always)))))", "idx": "8806", "datum_id": {"dialogue_id": "913366bd-0a01-427a-993e-db842073db37", "turn_index": 4}}
{"user_turn_0": "What kind of rating do they have ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Make the reservation for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Freehand \"))))))", "idx": "8807", "datum_id": {"dialogue_id": "913366bd-0a01-427a-993e-db842073db37", "turn_index": 5}}
{"user_turn_0": "Just one , any type", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Change it first - I want to check in on the 9th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 9L))))))", "idx": "8810", "datum_id": {"dialogue_id": "913366bd-0a01-427a-993e-db842073db37", "turn_index": 8}}
{"user_turn_0": "Change it first - I want to check in on the 9th", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay for the room ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "8811", "datum_id": {"dialogue_id": "913366bd-0a01-427a-993e-db842073db37", "turn_index": 9}}
{"user_turn_0": "No , I will depart from London", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM", "user_turn_1": "I actually prefer the one at 3 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "8825", "datum_id": {"dialogue_id": "09ccad1d-62f5-4fed-a5c3-e4d58e67ac47", "turn_index": 2}}
{"user_turn_0": "Does this hotel have a laundry service ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "8831", "datum_id": {"dialogue_id": "ef2b7bce-8d23-470f-864e-52d3749a90a8", "turn_index": 3}}
{"user_turn_0": "2 and queen beds", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Change the check - in to the 20th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 20L))))))", "idx": "8840", "datum_id": {"dialogue_id": "9549b139-5825-4d0e-a893-2d6a8b15e9d8", "turn_index": 4}}
{"user_turn_0": "Change the check - in to the 20th", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I do free cancellation with this booking ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "8841", "datum_id": {"dialogue_id": "9549b139-5825-4d0e-a893-2d6a8b15e9d8", "turn_index": 5}}
{"user_turn_0": "Who is attending my event at 11 AM on Thursday ?", "agent_turn_0": "Root system inform calendarEvent find focus equals attendees equals person equals name equals Brian", "user_turn_1": "Add him to student quiz", "tgt": "(plan (^(CalendarEvent) Create :focus (^((Constraint CalendarEvent)) refer) :object (CalendarEvent.eventName_? (?= \" student quiz \"))))", "idx": "8847", "datum_id": {"dialogue_id": "0f057650-394c-4b93-b179-71d6d03baa62", "turn_index": 4}}
{"user_turn_0": "Please do", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Deliver my flight schedule to Jersey on Sunday to Mr Graham", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (& (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Graham \")) (Person.namePrefix_? (?= \" Mr \"))))) (Message.textContent_? (?= (^(String Flight) reference (& (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))) (Flight.destination_? (Place.location_? (?= \" Jersey \")))))))))))", "idx": "8857", "datum_id": {"dialogue_id": "ab68135f-176d-460d-8323-f92da50e7d67", "turn_index": 4}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Please send my event to my love", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (& (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Love)))))))))", "idx": "8866", "datum_id": {"dialogue_id": "306f48b8-8f20-46cd-ba36-76c0e5b2dedf", "turn_index": 3}}
{"user_turn_0": "Is it a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "That 's fine . I want to book the flight for three passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.destination_? (Place.location_? (?= \" Amsterdam \")))) (Flight.departureDateTime_? (& (^((Constraint (List DateTime))) refer) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 3))))))", "idx": "8882", "datum_id": {"dialogue_id": "5f3d1e20-7e86-4268-acb8-f47af2089757", "turn_index": 4}}
{"user_turn_0": "Deliver it", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "When does BA350 headed to Belfast City get in ?", "tgt": "(plan (^(Flight) Find :focus (Flight.arrivalDateTime_? (^(DateTime) always)) :object (& (Flight.flightNumber_? (?= \" BA350 \")) (Flight.destination_? (Place.location_? (?= \" Belfast City \"))))))", "idx": "8889", "datum_id": {"dialogue_id": "6539147b-e898-46d0-9c26-bb660f5c1d00", "turn_index": 4}}
{"user_turn_0": "I want a different hotel , one that 's cheaper", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Embassy Suites price equals 134", "user_turn_1": "OK , but does the hotel have a fitness center ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasFitness_? (^(Boolean) always)))))", "idx": "8922", "datum_id": {"dialogue_id": "f0f349a2-a04d-47dd-8623-8df9fe1d5990", "turn_index": 4}}
{"user_turn_0": "OK , but does the hotel have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Go on and book it for me then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" The Fresco \"))))))", "idx": "8923", "datum_id": {"dialogue_id": "f0f349a2-a04d-47dd-8623-8df9fe1d5990", "turn_index": 5}}
{"user_turn_0": "I do n't like any of them . Can you give me more options ? Food type does n't matter", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Shining Gate", "user_turn_1": "That 's cool . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Cityroom \"))))))", "idx": "8929", "datum_id": {"dialogue_id": "a18bab40-035e-4e86-a3b6-a7d21ba71177", "turn_index": 3}}
{"user_turn_0": "Can you schedule a reminder for me at that time ?", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Can you give me a rating of Jurassic Park restaurant in Oakwood ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.rating_? (^(Number) always)) :object (& (Restaurant.restaurantName_? (?= \" Jurassic Pork \")) (Restaurant.location_? (?= \" Oakwood \")))))", "idx": "8934", "datum_id": {"dialogue_id": "15225a90-f3cf-4fae-a417-d0221ba535d4", "turn_index": 2}}
{"user_turn_0": "Saturday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 3 object equals nextDepartureDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM price equals 201", "user_turn_1": "That s great", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "8947", "datum_id": {"dialogue_id": "af3472e9-d2cd-41a5-aa30-2582687aa0a3", "turn_index": 5}}
{"user_turn_0": "Yes , go ahead with the booking", "agent_turn_0": "Root system inform train book Completed", "user_turn_1": "Thanks , next can I book a table at Interknack 's Preston location for today at 2:30 PM ?", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.location_? (?= \" Preston \")) (Restaurant.restaurantName_? (?= \" Interknack \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "8969", "datum_id": {"dialogue_id": "b09b4537-bb47-42cf-a568-192ff1a96e49", "turn_index": 3}}
{"user_turn_0": "Is there a new call from Mr Paterson ?", "agent_turn_0": "Root system inform phoneCall checkExistence Existed object equals atDateTime equals date definedValue equals Today", "user_turn_1": "Text him saying do we need bananas", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (^((Constraint Contact)) refer)) (Message.textContent_? (?= \" do we need bananas \")))))", "idx": "8973", "datum_id": {"dialogue_id": "8b0e3a16-59d0-4342-b8f9-051cd84c9d12", "turn_index": 2}}
{"user_turn_0": "Is breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Great . Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "8979", "datum_id": {"dialogue_id": "5108446d-3ac5-4a53-a3d8-0b8b07c7abb0", "turn_index": 3}}
{"user_turn_0": "I need two rooms and the room type does n't matter", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait . Can you change the check out date to Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Sunday)))))", "idx": "8982", "datum_id": {"dialogue_id": "5108446d-3ac5-4a53-a3d8-0b8b07c7abb0", "turn_index": 6}}
{"user_turn_0": "I want to eat seafood", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Gogol", "user_turn_1": "What 's the address ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "8989", "datum_id": {"dialogue_id": "fc17921f-e2d7-47d2-b46d-84e412e84d7d", "turn_index": 5}}
{"user_turn_0": "What 's the address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals Dexion House", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Gogol \"))))))", "idx": "8990", "datum_id": {"dialogue_id": "fc17921f-e2d7-47d2-b46d-84e412e84d7d", "turn_index": 6}}
{"user_turn_0": "10 AM", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "I 'd like a hotel near my next event with at least a three star rating", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))) (Hotel.rating_? (?>= (someSalient (?= 3)))))))", "idx": "9004", "datum_id": {"dialogue_id": "20caf77b-955a-4bcf-bcfc-1d3dae56c5cb", "turn_index": 3}}
{"user_turn_0": "It will be to Edinburgh for one passenger", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "Monday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Monday))))))", "idx": "9009", "datum_id": {"dialogue_id": "742bcd1b-1080-4a7d-9d5c-6dd82f60ad2b", "turn_index": 3}}
{"user_turn_0": "No I will head to Lisbon on Sunday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 3 object equals nextDepartureDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM price equals 173", "user_turn_1": "That looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "9012", "datum_id": {"dialogue_id": "742bcd1b-1080-4a7d-9d5c-6dd82f60ad2b", "turn_index": 6}}
{"user_turn_0": "Thanks , next please remind me to do exercise", "agent_turn_0": "Root system prompt reminder create object equals atDateTime", "user_turn_1": "Which day ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Reminder)) Path.apply \" object \") (lambda (^(Constraint Reminder) x0) (& x0 (Reminder.atDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "9021", "datum_id": {"dialogue_id": "dfcd892c-2123-47ce-b4d7-895ce81853b9", "turn_index": 2}}
{"user_turn_0": "Which day ?", "agent_turn_0": "Root system prompt reminder create object equals atDateTime equals date", "user_turn_1": "Ok , what date and time would you want me to remind ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.atDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))))))", "idx": "9022", "datum_id": {"dialogue_id": "dfcd892c-2123-47ce-b4d7-895ce81853b9", "turn_index": 3}}
{"user_turn_0": "Is that a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "I would prefer the flight that departs at 3:45 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "9058", "datum_id": {"dialogue_id": "5009b59d-d813-4687-aff4-c25c5d55ff35", "turn_index": 4}}
{"user_turn_0": "Yes . please", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM", "user_turn_1": "That works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "9063", "datum_id": {"dialogue_id": "5b6951d2-c14b-4703-b396-4c50cbc3dd76", "turn_index": 3}}
{"user_turn_0": "3:30 PM", "agent_turn_0": "Root system prompt restaurant book object equals tableSize", "user_turn_1": "1 , 2 , 3 , 4 , 5", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.tableSize_? (?= 5))))))", "idx": "9098", "datum_id": {"dialogue_id": "ebe909f1-3120-40f2-a3d3-7be0711cb57e", "turn_index": 4}}
{"user_turn_0": "I will be leaving from London , actually", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM", "user_turn_1": "This one seems doable", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (^((Constraint Train)) refer)))))", "idx": "9101", "datum_id": {"dialogue_id": "b1cd0f0b-260b-45dd-ae45-1adf8fedc7b7", "turn_index": 2}}
{"user_turn_0": "I will get back on Friday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM", "user_turn_1": "Hmm , I think I 'd rather take the 2:00 in the afternoon one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "9103", "datum_id": {"dialogue_id": "b1cd0f0b-260b-45dd-ae45-1adf8fedc7b7", "turn_index": 4}}
{"user_turn_0": "Two", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually , change the date of check in to Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "9115", "datum_id": {"dialogue_id": "ab15f7ee-4173-4f17-8db7-6e2ff037fc1d", "turn_index": 5}}
{"user_turn_0": "Which airline is it ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "I prefer the one which departures at 1:20 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "9131", "datum_id": {"dialogue_id": "fe11d3ee-8fc2-4fee-b5fb-7c76d11c2fc8", "turn_index": 3}}
{"user_turn_0": "Thanks , also get me a table at a restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName location", "user_turn_1": "One that is located in Blackwell", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.location_? (?= \" Blackwall \"))))))", "idx": "9151", "datum_id": {"dialogue_id": "bee25a7f-0844-4bcd-b0dd-d88e4cfc6474", "turn_index": 4}}
{"user_turn_0": "Brighton station", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM", "user_turn_1": "No , book the train at 4 instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "9154", "datum_id": {"dialogue_id": "02491150-0850-49b5-98f9-666776e6a524", "turn_index": 2}}
{"user_turn_0": "Yeah , go ahead and book it for me", "agent_turn_0": "Root system inform train book Completed", "user_turn_1": "Thanks , next can you send the details of my ticket to my sister ?", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Sister))))) (Message.textContent_? (?= (^(String Train) reference (^(Train) always)))))))", "idx": "9156", "datum_id": {"dialogue_id": "02491150-0850-49b5-98f9-666776e6a524", "turn_index": 4}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM", "user_turn_1": "That s great", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "9168", "datum_id": {"dialogue_id": "2193c75c-da19-447b-a850-c32d2c8cc5f8", "turn_index": 6}}
{"user_turn_0": "Do any of them serve Chinese ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capers", "user_turn_1": "I do n't like those options , what about places that serve Chinese ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint FoodType)) Path.apply \" object.foodType \") (lambda (^(Constraint FoodType) x0) (?= (FoodType.ChineseHotPot)))))", "idx": "9174", "datum_id": {"dialogue_id": "69d1fce7-da2b-4c3a-801b-1d4ad1d87752", "turn_index": 4}}
{"user_turn_0": "I do n't like those options , what about places that serve Chinese ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jurassic Pork", "user_turn_1": "What 's the address ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "9175", "datum_id": {"dialogue_id": "69d1fce7-da2b-4c3a-801b-1d4ad1d87752", "turn_index": 5}}
{"user_turn_0": "I 'd prefer something with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floq", "user_turn_1": "About how much will it cost per person ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "9177", "datum_id": {"dialogue_id": "69d1fce7-da2b-4c3a-801b-1d4ad1d87752", "turn_index": 7}}
{"user_turn_0": "I 'd prefer a place with parking please", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Cityroom", "user_turn_1": "Do they accept credit card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "9179", "datum_id": {"dialogue_id": "69d1fce7-da2b-4c3a-801b-1d4ad1d87752", "turn_index": 9}}
{"user_turn_0": "Do they accept credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "That 's perfect please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Inheat \"))))))", "idx": "9180", "datum_id": {"dialogue_id": "69d1fce7-da2b-4c3a-801b-1d4ad1d87752", "turn_index": 10}}
{"user_turn_0": "Hi there , create an event held in Shoreditch and send it to my brother", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange", "user_turn_1": "Send it", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object \") (lambda (^(Constraint CalendarEvent) x0) (& x0 (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))) (DateTimeRange.endDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 3L)))))))))))", "idx": "9202", "datum_id": {"dialogue_id": "1fffaa8c-d3c4-4d2b-9b0f-2da99a806d88", "turn_index": 1}}
{"user_turn_0": "I 'm check in February 28th for one night", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "I 've created your event and message containing the event . Do you want me to send it ?", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= \" Wembley \")) (Hotel.hotelName_? (?= \" Palm Bliss \")))))", "idx": "9204", "datum_id": {"dialogue_id": "1fffaa8c-d3c4-4d2b-9b0f-2da99a806d88", "turn_index": 3}}
{"user_turn_0": "I 've created your event and message containing the event . Do you want me to send it ?", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "? What dates are you staying >", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (& (Date.month_? (?= (February))) (Date.day_? (?= (Day.apply 28L)))))) (DateTimeRange.duration_? (AppleDuration.day_? (?= 1)))))))))", "idx": "9205", "datum_id": {"dialogue_id": "1fffaa8c-d3c4-4d2b-9b0f-2da99a806d88", "turn_index": 4}}
{"user_turn_0": "I need two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Hold on , does the booking have free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "9240", "datum_id": {"dialogue_id": "bfcd5cff-5cbf-4512-8970-3b15d2329a4f", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , please book a high priced restaurant at 7:30 , and please make sure it has a two star rating or better", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.priceRange_? (?= (PriceRange.High))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 7L))) (Time.minute_? (?= (Minute.apply 30L)))))))) (Restaurant.rating_? (?>= (someSalient (?= 2)))))))", "idx": "9252", "datum_id": {"dialogue_id": "5b771b30-9815-4b12-a190-13eb605a3471", "turn_index": 0}}
{"user_turn_0": "Grill please", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Joint", "user_turn_1": "That 's perfect , please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "9255", "datum_id": {"dialogue_id": "5b771b30-9815-4b12-a190-13eb605a3471", "turn_index": 3}}
{"user_turn_0": "How long is the flight ?", "agent_turn_0": "Root system inform flight find focus equals duration equals hour equals 1 minute equals 20", "user_turn_1": "Ok book four tickets", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Paris \"))) (Flight.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (Time.hour_? (^((Constraint Hour)) refer)) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (^((Constraint (List DateTime))) refer)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 4))))))", "idx": "9267", "datum_id": {"dialogue_id": "9d37b934-24ec-4000-9348-cffe3245c9a5", "turn_index": 4}}
{"user_turn_0": "What restaurant serves Italian", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Encino", "user_turn_1": "Does the restaurant have outdoor seating", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "9286", "datum_id": {"dialogue_id": "815b6d9b-68d2-4f1c-bf6d-ad54ea7d82d6", "turn_index": 3}}
{"user_turn_0": "Do any of them have a four star rating ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kitty City", "user_turn_1": "Is there parking at the restaurant", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "9288", "datum_id": {"dialogue_id": "815b6d9b-68d2-4f1c-bf6d-ad54ea7d82d6", "turn_index": 5}}
{"user_turn_0": "Is there parking at the restaurant", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Alright , book it for me for the 26th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" The Shining Gate \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 26L))))))))))", "idx": "9289", "datum_id": {"dialogue_id": "815b6d9b-68d2-4f1c-bf6d-ad54ea7d82d6", "turn_index": 6}}
{"user_turn_0": "Make an event at 10:30 and set a reminder for it", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals endDateTime", "user_turn_1": "until 1:30", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.duration_? (AppleDuration.hour_? (?= 2)))))))", "idx": "9312", "datum_id": {"dialogue_id": "9bbbc078-9384-4622-838a-c24b4eb6e5b2", "turn_index": 4}}
{"user_turn_0": "Does the hotel have fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it for me then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "9315", "datum_id": {"dialogue_id": "4ef5f739-5391-4246-b094-aa0f8039148f", "turn_index": 2}}
{"user_turn_0": "I want three queen sized beds", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "How about if I check in on Monday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.startDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Monday)))))", "idx": "9330", "datum_id": {"dialogue_id": "360fa176-9871-42da-b927-3c5f955076f4", "turn_index": 5}}
{"user_turn_0": "How about if I check in on Monday ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "9331", "datum_id": {"dialogue_id": "360fa176-9871-42da-b927-3c5f955076f4", "turn_index": 6}}
{"user_turn_0": "I need a restaurant that serves Grill", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Beef Easy", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Hambone \"))))))", "idx": "9337", "datum_id": {"dialogue_id": "e2e921e3-15c6-4cba-be8c-3da514734012", "turn_index": 4}}
{"user_turn_0": "OK , is it a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "OK . Go ahead and book it for one passenger", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.source_? (Place.location_? (?= \" London \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (^((Constraint (List DateTime))) refer)))) (Flight.class_? (?= (FlightClass.Economy)))) (Flight.passengers_? (?= 1))))))", "idx": "9346", "datum_id": {"dialogue_id": "085845eb-95aa-4680-8bd9-ee55798083b3", "turn_index": 4}}
{"user_turn_0": "I am coming back on Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM price equals 145", "user_turn_1": "OK , it looks fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "9348", "datum_id": {"dialogue_id": "085845eb-95aa-4680-8bd9-ee55798083b3", "turn_index": 6}}
{"user_turn_0": "Which of the restaurants have rating at least one star", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Emptia", "user_turn_1": "Does it have this", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "9358", "datum_id": {"dialogue_id": "54f2a277-3c8a-456a-9da9-fe9104615c16", "turn_index": 3}}
{"user_turn_0": "I prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floss and Joes", "user_turn_1": "Does the restaurant have outdoor seats", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "9360", "datum_id": {"dialogue_id": "54f2a277-3c8a-456a-9da9-fe9104615c16", "turn_index": 5}}
{"user_turn_0": "Does the restaurant have outdoor seats", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Maple \"))))))", "idx": "9361", "datum_id": {"dialogue_id": "54f2a277-3c8a-456a-9da9-fe9104615c16", "turn_index": 6}}
{"user_turn_0": "Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM price equals 130", "user_turn_1": "Book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "9366", "datum_id": {"dialogue_id": "0f59feb2-6a57-4223-b808-7ec11982fc76", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , book hotel near my next event with rating at least one star .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))) (Hotel.rating_? (?>= (someSalient (?= 1)))))))", "idx": "9369", "datum_id": {"dialogue_id": "dea8244b-c70c-42b9-8974-3541a7f697e4", "turn_index": 0}}
{"user_turn_0": "Breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Book it !", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "9371", "datum_id": {"dialogue_id": "dea8244b-c70c-42b9-8974-3541a7f697e4", "turn_index": 2}}
{"user_turn_0": "Change the check in date to tomorrow", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does it support free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "9376", "datum_id": {"dialogue_id": "dea8244b-c70c-42b9-8974-3541a7f697e4", "turn_index": 7}}
{"user_turn_0": "Yo , make an event . I want to send it to Carol", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange", "user_turn_1": "At half past eleven", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Option (Constraint CalendarEvent))) Path.apply \" object \") (lambda (^(Option (Constraint CalendarEvent)) x0) (Some (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L)))))))))))", "idx": "9380", "datum_id": {"dialogue_id": "4fe55f71-c987-4a79-8a47-33d8f08d29c2", "turn_index": 2}}
{"user_turn_0": "That is right my friend", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM price equals 166", "user_turn_1": "It 's ok . This flight is what i m looking for", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "9387", "datum_id": {"dialogue_id": "024535de-5373-4ad7-b55f-06537c058220", "turn_index": 3}}
{"user_turn_0": "Liverpool", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "Ill take the 1 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "9395", "datum_id": {"dialogue_id": "7b2037cd-4467-4146-b2fe-8fa47e1f730c", "turn_index": 3}}
{"user_turn_0": "How far away is 100 Foregate Street ?", "agent_turn_0": "Root system inform navigation find focus equals distance equals number equals 2", "user_turn_1": "Did my mother call ?", "tgt": "(plan (revise (^(Unit) Path.apply \" CheckExistence \") (^((Constraint PhoneCall)) Path.apply \" object \") (lambda (^(Constraint PhoneCall) x0) (PhoneCall.sender_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Mother))))))))", "idx": "9409", "datum_id": {"dialogue_id": "34521fad-a8df-49d3-80c1-5964fadbce30", "turn_index": 4}}
{"user_turn_0": "Hi there , how long does it take to get to my calendar event", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 50", "user_turn_1": "Thanks , also i want to book hotel near my next event with an average price", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))) (Hotel.priceRange_? (?= (PriceRange.Moderate))))))", "idx": "9417", "datum_id": {"dialogue_id": "b5245ea3-21df-4db1-9bb8-0ae05e733721", "turn_index": 1}}
{"user_turn_0": "how many stars", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "I prefer another hotel with at least 1 star", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.rating_? (?!= (someSalient (?= 0))))))))", "idx": "9419", "datum_id": {"dialogue_id": "b5245ea3-21df-4db1-9bb8-0ae05e733721", "turn_index": 3}}
{"user_turn_0": "I prefer another hotel with at least 1 star", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Vitale price equals 178", "user_turn_1": "Is there a fitness center", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasFitness_? (^(Boolean) always)))))", "idx": "9420", "datum_id": {"dialogue_id": "b5245ea3-21df-4db1-9bb8-0ae05e733721", "turn_index": 4}}
{"user_turn_0": "Is there a fitness center", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Palm Bliss \"))))))", "idx": "9421", "datum_id": {"dialogue_id": "b5245ea3-21df-4db1-9bb8-0ae05e733721", "turn_index": 5}}
{"user_turn_0": "I need two rooms and the room type does n't matter", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "do you know if breakfast is included", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "9426", "datum_id": {"dialogue_id": "b5245ea3-21df-4db1-9bb8-0ae05e733721", "turn_index": 10}}
{"user_turn_0": "The event will last for two hours", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "Also add my flight scheduled to Dudley to the calendar", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (?= (^(DateTimeRange Flight) reference (Flight.destination_? (Place.location_? (?= \" Dudley \"))))))))", "idx": "9438", "datum_id": {"dialogue_id": "e947b467-36ae-4db2-a673-409936b5e46a", "turn_index": 4}}
{"user_turn_0": "Monday and book it for two passengers", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "I guess Wednesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.departureDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Wednesday)))))", "idx": "9458", "datum_id": {"dialogue_id": "5db13d04-3cc3-4874-9328-0d943fd1390b", "turn_index": 3}}
{"user_turn_0": "Does it include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "9464", "datum_id": {"dialogue_id": "b7034870-5d6f-4195-8ed3-b473cee42373", "turn_index": 3}}
{"user_turn_0": "Two", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does it support free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "9468", "datum_id": {"dialogue_id": "b7034870-5d6f-4195-8ed3-b473cee42373", "turn_index": 7}}
{"user_turn_0": "Does it support free cancellation ?", "agent_turn_0": "Root system inform hotel find focus equals freeCancellation equals False", "user_turn_1": "Change the check out date to Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Friday)))))", "idx": "9469", "datum_id": {"dialogue_id": "b7034870-5d6f-4195-8ed3-b473cee42373", "turn_index": 8}}
{"user_turn_0": "I need another favor . Can you set a reminder for the event please", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Next , i need Thursday 's event sent to Mr. Jackson", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday))))))))) (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Jackson \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "9475", "datum_id": {"dialogue_id": "42d413f9-7955-4fdf-aeef-c00a2680ac10", "turn_index": 3}}
{"user_turn_0": "Hey , please call 07984014665", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Please send the event tomorrow to my son", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Son))))) (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))))))))))", "idx": "9478", "datum_id": {"dialogue_id": "d7c697c6-6ab8-406f-8c79-14f89c98803d", "turn_index": 1}}
{"user_turn_0": "What carbin class is it ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "That 's ok . I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "9491", "datum_id": {"dialogue_id": "c785130e-9c0c-4049-8797-f330b277c7f6", "turn_index": 3}}
{"user_turn_0": "Is it a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "I would rather take the 1:45 PM departure", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "9511", "datum_id": {"dialogue_id": "0a9d9900-269f-4c4c-827f-42b7bdd34d4d", "turn_index": 3}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM price equals 127", "user_turn_1": "That looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "9515", "datum_id": {"dialogue_id": "0a9d9900-269f-4c4c-827f-42b7bdd34d4d", "turn_index": 7}}
{"user_turn_0": "Make it for 7:30 on the 6th", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Can you set another reminder of my calendar event", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.atDateTime \") (lambda (^(Constraint DateTime) x0) (?= (^(DateTime CalendarEvent) reference (^(CalendarEvent) always))))))", "idx": "9519", "datum_id": {"dialogue_id": "e76ef631-8d42-4801-8215-ccf9cad441dc", "turn_index": 2}}
{"user_turn_0": "Is the flight nonstop ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Okay , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "9526", "datum_id": {"dialogue_id": "e87cc246-23aa-4acb-bf75-a82a39be2f28", "turn_index": 4}}
{"user_turn_0": "The 20th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM price equals 201", "user_turn_1": "That works for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "9534", "datum_id": {"dialogue_id": "75cbc105-2336-4b72-81cb-c03fcb3c2be7", "turn_index": 6}}
{"user_turn_0": "Is that a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Alright . Book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "9561", "datum_id": {"dialogue_id": "df855976-fd9d-4618-bc55-0baa67fca051", "turn_index": 4}}
{"user_turn_0": "Yes . Get one for Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 12 minute equals 30 meridiem equals PM price equals 127", "user_turn_1": "Get that one for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "9564", "datum_id": {"dialogue_id": "df855976-fd9d-4618-bc55-0baa67fca051", "turn_index": 7}}
{"user_turn_0": "Hi assistant , do I have a new call from Mr Carr", "agent_turn_0": "Root system inform phoneCall checkExistence Existed object equals atDateTime equals date definedValue equals Today", "user_turn_1": "Yes please", "tgt": "(plan (^(Message) Create :object (Message.recipients_? (^((Constraint Contact)) refer))))", "idx": "9567", "datum_id": {"dialogue_id": "a5ffd921-be00-4a59-a9bd-f7000c7808b6", "turn_index": 1}}
{"user_turn_0": "What airline is it ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "Ok , book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "9573", "datum_id": {"dialogue_id": "988b1da8-1097-4ac0-a16d-2e91267e15e7", "turn_index": 2}}
{"user_turn_0": "What airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "Let me do the 3:50 PM instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "9579", "datum_id": {"dialogue_id": "310bec93-e2bf-4c59-b91c-de677a7f63af", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , what is the rating of the Palm Bliss hotel in Abby Wood ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.rating_? (^(Number) always)) :object (& (Hotel.hotelName_? (?= \" Palm Bliss \")) (Hotel.location_? (?= \" Abbey Wood \")))))", "idx": "9583", "datum_id": {"dialogue_id": "3c14581c-008b-45b0-9e88-a3110558c4b9", "turn_index": 0}}
{"user_turn_0": "What rating does it have", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "9601", "datum_id": {"dialogue_id": "c9a32ac3-fda2-48eb-9e49-f3f00f9ebb92", "turn_index": 3}}
{"user_turn_0": "On the 27th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM price equals 201", "user_turn_1": "That will be fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "9618", "datum_id": {"dialogue_id": "f399caca-d006-4003-8ae7-f0673b7f490c", "turn_index": 3}}
{"user_turn_0": "It will only be for one hour", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "Can you send my next event to my parents", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Parents))))) (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))))))", "idx": "9628", "datum_id": {"dialogue_id": "16b5228e-2dfb-4a48-87ba-f5beb2e23647", "turn_index": 2}}
{"user_turn_0": "Friday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM", "user_turn_1": "Yeah , okay", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "9643", "datum_id": {"dialogue_id": "2fc6b78e-4b65-4e16-8089-5761b8759c58", "turn_index": 7}}
{"user_turn_0": "I do n't care what it is . Just have it fit three people", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals 40 Mayors Road", "user_turn_1": "Actually , change the destination to Jackson Fish Wholesalers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" Jackson Fish Wholesalers \"))))", "idx": "9655", "datum_id": {"dialogue_id": "d0a46e7c-fc18-415a-82b9-4549dcfdafaa", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , send Virginia the event that is this morning", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Virginia \")))) (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Morning)))))))))))", "idx": "9668", "datum_id": {"dialogue_id": "440fea16-cfb6-41c9-8255-afb5ada95c1e", "turn_index": 0}}
{"user_turn_0": "Hi there , how far away is from 24 Empire Way to 234 University Street by walking", "agent_turn_0": "Root system inform navigation find focus equals distance equals number equals 2", "user_turn_1": "Book a cheap price checking in today and checking out on the 28th", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?= (PriceRange.Low))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 28L))))))))))", "idx": "9685", "datum_id": {"dialogue_id": "085d1ca8-b8d9-4290-b002-b2d874bd5968", "turn_index": 1}}
{"user_turn_0": "Is there a car park", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "9688", "datum_id": {"dialogue_id": "085d1ca8-b8d9-4290-b002-b2d874bd5968", "turn_index": 4}}
{"user_turn_0": "Yes . I would like to have three single rooms", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Ok . Then can I check in on Wednesday instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.startDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Wednesday)))))", "idx": "9701", "datum_id": {"dialogue_id": "c06b4240-4353-4c32-a4ba-3da0d6f018f9", "turn_index": 5}}
{"user_turn_0": "I would prefer a hotel with a three star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Club Quarters price equals 130", "user_turn_1": "Is there laundry there ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.laundry_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "9711", "datum_id": {"dialogue_id": "de1a35c4-e082-4e08-a791-c017e8ce5e9a", "turn_index": 3}}
{"user_turn_0": "Is there laundry there ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "I would like a hotel with a lower price", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "9712", "datum_id": {"dialogue_id": "de1a35c4-e082-4e08-a791-c017e8ce5e9a", "turn_index": 4}}
{"user_turn_0": "I would like a hotel with a lower price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Four Seasons price equals 178", "user_turn_1": "Is there a car park there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasParking_? (^(Boolean) always)))))", "idx": "9713", "datum_id": {"dialogue_id": "de1a35c4-e082-4e08-a791-c017e8ce5e9a", "turn_index": 5}}
{"user_turn_0": "Is there a car park there ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Do it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" The Watson \"))))))", "idx": "9714", "datum_id": {"dialogue_id": "de1a35c4-e082-4e08-a791-c017e8ce5e9a", "turn_index": 6}}
{"user_turn_0": "Could I have 3 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there a prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "9716", "datum_id": {"dialogue_id": "de1a35c4-e082-4e08-a791-c017e8ce5e9a", "turn_index": 8}}
{"user_turn_0": "Hey assistant , when is the end of my event in the afternoon ?", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals endDateTime equals time equals hour equals 2", "user_turn_1": "Thanks for the help . Set me a reminder for that time", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 2L)))))))", "idx": "9719", "datum_id": {"dialogue_id": "a00a0b16-c143-435f-9819-4a71b51eff85", "turn_index": 1}}
{"user_turn_0": "None of them looks good . How about restaurants that serve Chinese food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Gogol", "user_turn_1": "What is the address of the restaurant ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "9737", "datum_id": {"dialogue_id": "38b2fad8-9c0d-4dea-9558-5de5489e0bd3", "turn_index": 4}}
{"user_turn_0": "What is the address of the restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals Camden Passage", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Emptia \"))))))", "idx": "9738", "datum_id": {"dialogue_id": "38b2fad8-9c0d-4dea-9558-5de5489e0bd3", "turn_index": 5}}
{"user_turn_0": "No , give me two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "No , I want to check out on the 22nd", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 22L))))))", "idx": "9747", "datum_id": {"dialogue_id": "ab7306d9-4f28-442f-b597-3c2425bfd0c3", "turn_index": 4}}
{"user_turn_0": "No , I want to check out on the 22nd", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "9748", "datum_id": {"dialogue_id": "ab7306d9-4f28-442f-b597-3c2425bfd0c3", "turn_index": 5}}
{"user_turn_0": "Hey assistant , add my restaurant appointment this afternoon to my calendar", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "How long does it take to get there ?", "tgt": "(plan (^(Navigation) Find :object (Navigation.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow))))))))))", "idx": "9766", "datum_id": {"dialogue_id": "6051dc6d-2882-4309-95e8-882653b3b78b", "turn_index": 1}}
{"user_turn_0": "what is the weather", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 50", "user_turn_1": "Here are the directions to your next event taking place at 207 Upper Street", "tgt": "(plan (^(PhoneCall) Create :object (PhoneCall.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Brother)))))))", "idx": "9768", "datum_id": {"dialogue_id": "6051dc6d-2882-4309-95e8-882653b3b78b", "turn_index": 3}}
{"user_turn_0": "Here are the directions to your next event taking place at 207 Upper Street", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Calling brother", "tgt": "(plan (^(WeatherReport) Find))", "idx": "9769", "datum_id": {"dialogue_id": "6051dc6d-2882-4309-95e8-882653b3b78b", "turn_index": 4}}
{"user_turn_0": "Friday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "9799", "datum_id": {"dialogue_id": "73f5b616-32dc-423b-b82f-63e362c74732", "turn_index": 3}}
{"user_turn_0": "Hey assistant , show me my train to Barking that 's coming up", "agent_turn_0": "Root system inform train find", "user_turn_1": "Next , yes , now I need to order a cap to go to this afternoon 's event from Compton Arms", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" Compton Arms \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Afternoon)))))))))))", "idx": "9802", "datum_id": {"dialogue_id": "a41eba5f-eb68-4f9e-9d16-42a29871c6a0", "turn_index": 1}}
{"user_turn_0": "Hmm . Do they have private bath rooms ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Cool . Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "9809", "datum_id": {"dialogue_id": "0ae92007-f8f3-40a4-904b-02e3f0a53438", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , is there an outgoing message to 07933511659 ?", "tgt": "(plan (^(Message) CheckExistence :object (Message.recipients_? (Contact.phoneNumber_? (?= \" 07933511659 \")))))", "idx": "9813", "datum_id": {"dialogue_id": "68455e1d-41df-4e4d-a66b-6d8b6e3d9e6f", "turn_index": 0}}
{"user_turn_0": "Nope , find me one with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Interknack", "user_turn_1": "Does it have parking though ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "9846", "datum_id": {"dialogue_id": "f6000c25-35c7-48e8-8301-850cf1bc02c5", "turn_index": 3}}
{"user_turn_0": "Does it have parking though ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Go ahead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flip Out \"))))))", "idx": "9847", "datum_id": {"dialogue_id": "f6000c25-35c7-48e8-8301-850cf1bc02c5", "turn_index": 4}}
{"user_turn_0": "I will leave from London Heathrow", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I choose the one which departures 1:45 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "9852", "datum_id": {"dialogue_id": "ab2db76d-1e48-41f6-957f-d57f53be9cf7", "turn_index": 2}}
{"user_turn_0": "Leaving from Leeds", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM price equals 119", "user_turn_1": "That works . Order the tickets", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "9861", "datum_id": {"dialogue_id": "1f1a4cef-027d-41f2-914e-ce419ac5869e", "turn_index": 3}}
{"user_turn_0": "York", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "9878", "datum_id": {"dialogue_id": "15e308c5-bdc6-4adf-9963-6d71aa76eab4", "turn_index": 2}}
{"user_turn_0": "Sunday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "9882", "datum_id": {"dialogue_id": "15e308c5-bdc6-4adf-9963-6d71aa76eab4", "turn_index": 6}}
{"user_turn_0": "I actually want another one with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Shining Gate", "user_turn_1": "I want to book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Hambone Martian \"))))))", "idx": "9896", "datum_id": {"dialogue_id": "f3f25625-fc4d-4b07-b2b7-cbb02f965742", "turn_index": 3}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system inform train book Completed", "user_turn_1": "Show me cheap hotels", "tgt": "(plan (^(Hotel) Find :object (Hotel.priceRange_? (?= (PriceRange.Low)))))", "idx": "9903", "datum_id": {"dialogue_id": "5f1c4c58-46fc-482a-9045-48b8f826e094", "turn_index": 4}}
{"user_turn_0": "For 2 PM , today", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "OK . Can you change the booking to 7:30 o'clock instead of 2 PM ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 7L))) (Time.minute_? (?= (Minute.apply 30L)))))))", "idx": "9908", "datum_id": {"dialogue_id": "d2e4f55f-66b1-4fda-9be6-f4e302039dc7", "turn_index": 4}}
{"user_turn_0": "Yes I will and on Sunday please", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM price equals 127", "user_turn_1": "Looks great really great", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "9938", "datum_id": {"dialogue_id": "947f6473-1d8f-49e7-8a35-32d9a90a9d55", "turn_index": 5}}
{"user_turn_0": "Table for 5", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Ok , edit time to 6:30", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (?= (Minute.apply 30L)))))))", "idx": "9950", "datum_id": {"dialogue_id": "129b58ab-a432-4dbd-b19f-5e1d6031594d", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i would like to book a moderately priced hotel rated at least three stars .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?= (PriceRange.Moderate))) (Hotel.rating_? (?= 3)))))", "idx": "9966", "datum_id": {"dialogue_id": "39142c27-eef2-4d80-aa70-a466eb0a855f", "turn_index": 0}}
{"user_turn_0": "Does that place offer free Wi - Fi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Okay , I 'd like to make that booking", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "9969", "datum_id": {"dialogue_id": "39142c27-eef2-4d80-aa70-a466eb0a855f", "turn_index": 3}}
{"user_turn_0": "Three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "I need to know if prepayment is necessary", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "9974", "datum_id": {"dialogue_id": "39142c27-eef2-4d80-aa70-a466eb0a855f", "turn_index": 8}}
{"user_turn_0": "I 'd rather have a five star hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Fairmont price equals 166", "user_turn_1": "Ok book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Shangri-La \"))))))", "idx": "9979", "datum_id": {"dialogue_id": "30918d12-36d0-42ef-88dc-bbf9b7ab0ae9", "turn_index": 3}}
{"user_turn_0": "What 's the distance from 207 Upper Street to 415 Park Lane by bike", "agent_turn_0": "Root system inform navigation find focus equals distance equals number equals 4", "user_turn_1": "Send the message to the number 07707911991", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (Message.recipients_? (Contact.phoneNumber_? (?= \" 07707911991 \"))))))", "idx": "9998", "datum_id": {"dialogue_id": "4d357b37-9838-4fd5-a307-a6adb663beec", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , give me directions to the Enchanted Isle hotel", "tgt": "(plan (^(Hotel) Find :focus (Hotel.location_? (^(String) always)) :object (Hotel.hotelName_? (?= \" Enchanted Isle \"))))", "idx": "10006", "datum_id": {"dialogue_id": "b77a9562-ae4e-4329-ac5c-159f72e78b87", "turn_index": 0}}
{"user_turn_0": "Yes , and I want to leave today", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 4 minute equals 20 meridiem equals PM price equals 119", "user_turn_1": "I 'd rather do the one that leaves at 3 , but I want business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Brussel \"))) (Flight.passengers_? (?= 1))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "10019", "datum_id": {"dialogue_id": "9090ca4e-8326-4fe1-ba88-7072e7ea5a92", "turn_index": 2}}
{"user_turn_0": "I 'd like to book a flight ticket from Manchester to Edinburgh leaving on Tuesday", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM price equals 138", "user_turn_1": "That 's fine . Book this flight for four passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.source_? (Place.location_? (?= \" Manchester \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 4))))))", "idx": "10030", "datum_id": {"dialogue_id": "65f002f5-ab3b-4400-afb4-4e2bdae9fb41", "turn_index": 2}}
{"user_turn_0": "I do n't like any of them . Can you offer anything else ? Does not matter what type of food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dim Summit", "user_turn_1": "Do they have outdoor seats", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "10037", "datum_id": {"dialogue_id": "0385f8ee-b1e9-4784-bdd7-213e8c399253", "turn_index": 4}}
{"user_turn_0": "I would rather pick the one with parking available", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "Go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Capers \"))))))", "idx": "10039", "datum_id": {"dialogue_id": "0385f8ee-b1e9-4784-bdd7-213e8c399253", "turn_index": 6}}
{"user_turn_0": "Great , is breakfast included in the price ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Sure , make reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "10050", "datum_id": {"dialogue_id": "c1e51044-a3f0-4dfe-b0d3-1cad989c1b24", "turn_index": 3}}
{"user_turn_0": "Hi there , let me see my reminders .", "agent_turn_0": "Root system inform reminder find", "user_turn_1": "New reminder", "tgt": "(plan (^(Reminder) Create))", "idx": "10078", "datum_id": {"dialogue_id": "6bd5249a-9416-486e-8922-9877e3dacffa", "turn_index": 1}}
{"user_turn_0": "Is there a new call from Joshua ?", "agent_turn_0": "Root system inform phoneCall checkExistence NotExisted", "user_turn_1": "Text him wish I was there", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (^((Constraint Contact)) refer)) (Message.textContent_? (?= \" wish I was there \")))))", "idx": "10081", "datum_id": {"dialogue_id": "6bd5249a-9416-486e-8922-9877e3dacffa", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i 'd like to get a reservation on Tuesday on a flight to Brussels departing after 9:30", "tgt": "(plan (^(Flight) Book :object (& (Flight.destination_? (Place.location_? (?= \" Brussel \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (List.exists_? (DateTime.time_? (?>= (someSalient (& (Time.hour_? (?= (Hour.apply 9L))) (Time.minute_? (?= (Minute.apply 30L)))))))))))))", "idx": "10082", "datum_id": {"dialogue_id": "dfaae6af-770c-47a1-9939-44b9d76dbdf7", "turn_index": 0}}
{"user_turn_0": "That 's correct", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM price equals 156", "user_turn_1": "Okay , I 'll take that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "10084", "datum_id": {"dialogue_id": "dfaae6af-770c-47a1-9939-44b9d76dbdf7", "turn_index": 2}}
{"user_turn_0": "Ok book it", "agent_turn_0": "Root systen inform restaurant book Completed", "user_turn_1": "How about the train at 4 PM ?", "tgt": "(plan (^(Train) Book :object (& (& (& (Train.source_? (Place.location_? (?= \" Glasgow Central \"))) (Train.destination_? (Place.location_? (?= \" St Pancras \")))) (Train.departureDateTime_? (DateTime.date_? (& (Date.month_? (?= (July))) (Date.day_? (?= (Day.apply 17L))))))) (Train.returnDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 9L))))))))", "idx": "10123", "datum_id": {"dialogue_id": "f7c3d5aa-9642-4b4e-adb9-0817763e9427", "turn_index": 4}}
{"user_turn_0": "Hi there , i need a plane ticket to Glasgow on the 8th from London .", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 12 minute equals 45 meridiem equals PM", "user_turn_1": "That works , I need four tickets", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.source_? (Place.location_? (?= \" London \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 4))))))", "idx": "10125", "datum_id": {"dialogue_id": "33b351a6-ff43-454b-b45a-c173fd2f5454", "turn_index": 1}}
{"user_turn_0": "Hey assistant , please add something to my calendar and send it to my son .", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange", "user_turn_1": "Tomorrow please", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object \") (lambda (^(Constraint CalendarEvent) x0) (& x0 (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))))))))", "idx": "10132", "datum_id": {"dialogue_id": "e6387404-4eaa-4dc8-b1d1-7539f22f1c43", "turn_index": 1}}
{"user_turn_0": "Can I get 2 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Change the check in date to the 6th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.startDateTime \") (lambda (^(Constraint DateTime) x0) (DateTime.date_? (Date.day_? (?= (Day.apply 6L)))))))", "idx": "10140", "datum_id": {"dialogue_id": "562ba135-3456-4b6e-bdac-f31779abc461", "turn_index": 4}}
{"user_turn_0": "I would like another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Spago", "user_turn_1": "Would you book this for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Godka \"))))))", "idx": "10145", "datum_id": {"dialogue_id": "a16bdf45-25a9-47c9-b54b-fc4d2e33cbb9", "turn_index": 3}}
{"user_turn_0": "I would rather have a different restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dimple\u2019s", "user_turn_1": "Does the restaurant have parking ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "10153", "datum_id": {"dialogue_id": "1b02e465-0bf7-4b00-9b9f-4862229a859f", "turn_index": 5}}
{"user_turn_0": "Find one with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floss and Joes", "user_turn_1": "Is there outdoor seating there ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "10158", "datum_id": {"dialogue_id": "48b3c719-8b1f-4889-836b-b5d2d816070a", "turn_index": 4}}
{"user_turn_0": "Is there outdoor seating there ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "Good then book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Lakeside Demon \"))))))", "idx": "10159", "datum_id": {"dialogue_id": "48b3c719-8b1f-4889-836b-b5d2d816070a", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , can you book me a hotel near my next even please and thank you", "tgt": "(plan (^(Hotel) Book :object (Hotel.location_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1)))))))", "idx": "10163", "datum_id": {"dialogue_id": "9c741f91-17ac-408f-b988-4a793a270484", "turn_index": 0}}
{"user_turn_0": "No I need something else . Something inexpensive", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals The Watson price equals 142", "user_turn_1": "Okay let me think . Is there a gym ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasFitness_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "10165", "datum_id": {"dialogue_id": "9c741f91-17ac-408f-b988-4a793a270484", "turn_index": 2}}
{"user_turn_0": "well no . Can . you find me something else ? Nothing with a zero star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Vitale price equals 127", "user_turn_1": "Does the hotel have private bathrooms ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.privateBath_? (^(Boolean) always)))))", "idx": "10167", "datum_id": {"dialogue_id": "9c741f91-17ac-408f-b988-4a793a270484", "turn_index": 4}}
{"user_turn_0": "Does the hotel have private bathrooms ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Okay book me that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Grand Hyatt \"))))))", "idx": "10168", "datum_id": {"dialogue_id": "9c741f91-17ac-408f-b988-4a793a270484", "turn_index": 5}}
{"user_turn_0": "I need two double rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Hmm ... no I need to change the check in date to Wednesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Wednesday))))))", "idx": "10171", "datum_id": {"dialogue_id": "9c741f91-17ac-408f-b988-4a793a270484", "turn_index": 8}}
{"user_turn_0": "Hmm ... no I need to change the check in date to Wednesday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is prepayment required ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "10172", "datum_id": {"dialogue_id": "9c741f91-17ac-408f-b988-4a793a270484", "turn_index": 9}}
{"user_turn_0": "From Birmingham actually", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM price equals 155", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "10181", "datum_id": {"dialogue_id": "c483c746-65d6-4be3-8e3b-3ce336553379", "turn_index": 2}}
{"user_turn_0": "Friday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 3 object equals nextDepartureDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM price equals 130", "user_turn_1": "This one 's fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "10185", "datum_id": {"dialogue_id": "c483c746-65d6-4be3-8e3b-3ce336553379", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , how long is the journey to my next event this moring", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Morning))))))))))", "idx": "10187", "datum_id": {"dialogue_id": "5db00c41-6db8-4380-bc47-76da43d591d2", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , can you get me a table at a moderately priced restaurant with at least 1 star , for Monday at 11:30 AM ?", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.priceRange_? (?= (PriceRange.Moderate))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM))))))))) (Restaurant.rating_? (?>= (someSalient (?= 1)))))))", "idx": "10197", "datum_id": {"dialogue_id": "1240f806-38c8-4ce0-b565-63d00d471a8b", "turn_index": 0}}
{"user_turn_0": "Nah . Let me try something else where I can sit outside", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Joint", "user_turn_1": "How much is it per person ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "10201", "datum_id": {"dialogue_id": "1240f806-38c8-4ce0-b565-63d00d471a8b", "turn_index": 4}}
{"user_turn_0": "How much is it per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 43", "user_turn_1": "That 'll work . Let 's do it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Juniper Cloud \"))))))", "idx": "10202", "datum_id": {"dialogue_id": "1240f806-38c8-4ce0-b565-63d00d471a8b", "turn_index": 5}}
{"user_turn_0": "Indian food and make sure the rating is at least one star", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Bard\u2019s Bench", "user_turn_1": "What is the average cost per person over there", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "10207", "datum_id": {"dialogue_id": "c96c7b2e-da38-42b9-b43f-6d4e7f48701f", "turn_index": 2}}
{"user_turn_0": "None of them looks good . Can you show me more options ? Food type does n't matter", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Gogol", "user_turn_1": "Does the restaurant have parking", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "10210", "datum_id": {"dialogue_id": "c96c7b2e-da38-42b9-b43f-6d4e7f48701f", "turn_index": 5}}
{"user_turn_0": "Does the restaurant have parking", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Bard's Bench \"))))))", "idx": "10211", "datum_id": {"dialogue_id": "c96c7b2e-da38-42b9-b43f-6d4e7f48701f", "turn_index": 6}}
{"user_turn_0": "For 11 AM today", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Would you also create a reminder for the next event ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Reminder)) Path.apply \" object \") (lambda (^(Constraint Reminder) x0) (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))))))", "idx": "10232", "datum_id": {"dialogue_id": "eb69bdb6-2a8b-450d-aaa6-550261f348e4", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , book an inexpensive restaurant with parking in Hillingdon on the 19th .", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Hillingdon \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 19L))))))) (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Restaurant.hasParking_? (?= true)))))", "idx": "10235", "datum_id": {"dialogue_id": "23af7163-6c50-472b-a3d3-d42dc483bd57", "turn_index": 0}}
{"user_turn_0": "What kind of food does it serve ?", "agent_turn_0": "Root system inform restaurant find focus equals foodType equals pizza", "user_turn_1": "Can you book it ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "10237", "datum_id": {"dialogue_id": "23af7163-6c50-472b-a3d3-d42dc483bd57", "turn_index": 2}}
{"user_turn_0": "I want a different restaurant that has outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals La Zilla", "user_turn_1": "Is there parking at the restaurant ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "10246", "datum_id": {"dialogue_id": "49d7feae-e41f-4081-9ece-2a2c48b5660c", "turn_index": 4}}
{"user_turn_0": "I want a different restaurant that has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "Can I pay by credit card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "10248", "datum_id": {"dialogue_id": "49d7feae-e41f-4081-9ece-2a2c48b5660c", "turn_index": 6}}
{"user_turn_0": "Can I pay by credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "That works , make the reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Capricorn \"))))))", "idx": "10249", "datum_id": {"dialogue_id": "49d7feae-e41f-4081-9ece-2a2c48b5660c", "turn_index": 7}}
{"user_turn_0": "I want 3 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "I want to change the check out date to Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Sunday))))))", "idx": "10260", "datum_id": {"dialogue_id": "fc7fb11f-2638-4edd-8c8b-d431e7bbe8fd", "turn_index": 3}}
{"user_turn_0": "I want to change the check out date to Sunday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "10261", "datum_id": {"dialogue_id": "fc7fb11f-2638-4edd-8c8b-d431e7bbe8fd", "turn_index": 4}}
{"user_turn_0": "It does not matter as long as the rating is four stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dimple\u2019s", "user_turn_1": "Does the restaurant accept credit card ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "10270", "datum_id": {"dialogue_id": "842a2aef-a37f-4759-ab74-599464854d66", "turn_index": 2}}
{"user_turn_0": "Does the restaurant accept credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "10271", "datum_id": {"dialogue_id": "842a2aef-a37f-4759-ab74-599464854d66", "turn_index": 3}}
{"user_turn_0": "Newcastle", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM", "user_turn_1": "I choose 1:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "10279", "datum_id": {"dialogue_id": "9ec55cb4-3036-4215-8b78-66e9a8bdbf2d", "turn_index": 4}}
{"user_turn_0": "What rating do they have ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "10282", "datum_id": {"dialogue_id": "5db0b4da-36e2-4253-a27e-8af43b7763b3", "turn_index": 2}}
{"user_turn_0": "Two", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "No , change the check out date to Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Thursday))))))", "idx": "10284", "datum_id": {"dialogue_id": "5db0b4da-36e2-4253-a27e-8af43b7763b3", "turn_index": 4}}
{"user_turn_0": "What is the price range ?", "agent_turn_0": "Root system inform hotel find focus equals priceRange equals High", "user_turn_1": "Book it from August 10th to the 11th", "tgt": "(plan (^(Hotel) Book :object (& (^((Constraint Hotel)) refer) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 10L)))) (month_? (Date.month_? (?= (August)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 11L))))))))))", "idx": "10295", "datum_id": {"dialogue_id": "f016d8a2-1bd3-4c87-a667-36d7c6ef1e25", "turn_index": 4}}
{"user_turn_0": "What is the weather like in Leeds tomorrow", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cold", "user_turn_1": "Get me driving directions from 66 Park Avenue to 6 John Street", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Navigation)) Path.apply \" object \") (lambda (^(Constraint Navigation) x0) (& (& (Navigation.source_? (Place.location_? (?= \" 66 Park Avenue \"))) (Navigation.destination_? (Place.location_? (?= \" 6 John Street \")))) (Navigation.transportationMode_? (?= (TransportationMode.Driving)))))))", "idx": "10319", "datum_id": {"dialogue_id": "bdd7f6e7-0e6a-4676-9a43-afad023a1551", "turn_index": 2}}
{"user_turn_0": "Hi my assistant , i need you to book me a taxi .", "agent_turn_0": "Root system prompt taxi book object equals destination", "user_turn_1": "Tie the Knot from 54 Islington Park Road", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint Taxi))) Path.apply \" object \") (lambda (^(Option (Constraint Taxi)) x0) (Some (& (Taxi.source_? (Place.location_? (?= \" 54 Islington Park Road \"))) (Taxi.destination_? (Place.location_? (?= \" Tie the Knot \"))))))))", "idx": "10328", "datum_id": {"dialogue_id": "a311c5e0-1e6d-4792-ab69-b6ae679de64a", "turn_index": 1}}
{"user_turn_0": "Hi my assistant , i want to book hotel with moderate price", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "It should be in Hammersmith with rating of at least 1 star", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.location_? (?= \" Hammersmith \"))) (Hotel.rating_? (?!= (someSalient (?= 0))))))))", "idx": "10351", "datum_id": {"dialogue_id": "9d3471c8-1957-41d2-bada-869e180ddb73", "turn_index": 1}}
{"user_turn_0": "Ok and what 's the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "10353", "datum_id": {"dialogue_id": "9d3471c8-1957-41d2-bada-869e180ddb73", "turn_index": 3}}
{"user_turn_0": "I would like to have one single room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait . Does the booking support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "10357", "datum_id": {"dialogue_id": "9d3471c8-1957-41d2-bada-869e180ddb73", "turn_index": 7}}
{"user_turn_0": "Wait . Does the booking support free cancellation ?", "agent_turn_0": "Root system inform hotel find focus equals freeCancellation equals False", "user_turn_1": "Actually can you change the check out date to Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Thursday))))))", "idx": "10358", "datum_id": {"dialogue_id": "9d3471c8-1957-41d2-bada-869e180ddb73", "turn_index": 8}}
{"user_turn_0": "Actually can you change the check out date to Thursday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "10359", "datum_id": {"dialogue_id": "9d3471c8-1957-41d2-bada-869e180ddb73", "turn_index": 9}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i would like to book a hotel that has a rating of at least 1-star and a car park .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.rating_? (?>= (someSalient (?= 1)))) (Hotel.hasParking_? (?= true)))))", "idx": "10371", "datum_id": {"dialogue_id": "33f4a5f8-670f-412a-ad65-b2a561595441", "turn_index": 0}}
{"user_turn_0": "Does this hotel have a private bathroom ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "10375", "datum_id": {"dialogue_id": "33f4a5f8-670f-412a-ad65-b2a561595441", "turn_index": 4}}
{"user_turn_0": "I would like to have a room with 2 queen - sized beds", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Could you change it to be a check in for today ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Today)))))", "idx": "10379", "datum_id": {"dialogue_id": "33f4a5f8-670f-412a-ad65-b2a561595441", "turn_index": 8}}
{"user_turn_0": "Could you change it to be a check in for today ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does this booking support free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "10380", "datum_id": {"dialogue_id": "33f4a5f8-670f-412a-ad65-b2a561595441", "turn_index": 9}}
{"user_turn_0": "Hi there , i want to call 07928048124 .", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Next task , please book a train ride from Newcastle to Straford", "tgt": "(plan (^(Train) Book :object (& (Train.source_? (Place.location_? (?= \" Newcastle \"))) (Train.destination_? (Place.location_? (?= \" Stratford \"))))))", "idx": "10383", "datum_id": {"dialogue_id": "1696f66f-0ce1-4fa5-8dac-c0e0e39894d5", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i need two plane tickets to Edinburg .", "tgt": "(plan (^(Flight) Book :object (& (Flight.destination_? (Place.location_? (?= \" Edinburgh \"))) (Flight.passengers_? (?= 2)))))", "idx": "10387", "datum_id": {"dialogue_id": "0fcbad41-da7a-4fef-9fa7-c86ee2c0d7a2", "turn_index": 0}}
{"user_turn_0": "Does is making any stops ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "The one at 3:45 PM is better actually", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "10397", "datum_id": {"dialogue_id": "caae7928-2aef-45d3-ae6c-4c5bc6b7ff70", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , i 'd like to make a reservation at an inexpensive restaurant with onsite parking .", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.priceRange_? (?= (PriceRange.Low))) (Restaurant.hasParking_? (?= true)))))", "idx": "10398", "datum_id": {"dialogue_id": "aae2bd0c-eb06-40a6-a671-1ddbe13d969e", "turn_index": 0}}
{"user_turn_0": "Eh , maybe I 'll go with a place that serves German food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Encino", "user_turn_1": "Is there parking ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "10401", "datum_id": {"dialogue_id": "aae2bd0c-eb06-40a6-a671-1ddbe13d969e", "turn_index": 3}}
{"user_turn_0": "No , I 'd like to go with a place that has outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Beef Easy", "user_turn_1": "Does it take credit ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "10404", "datum_id": {"dialogue_id": "aae2bd0c-eb06-40a6-a671-1ddbe13d969e", "turn_index": 6}}
{"user_turn_0": "Does it take credit ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "Ah , OK . That 's fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flip Out \"))))))", "idx": "10405", "datum_id": {"dialogue_id": "aae2bd0c-eb06-40a6-a671-1ddbe13d969e", "turn_index": 7}}
{"user_turn_0": "I am leaving from Birmingham", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM price equals 201", "user_turn_1": "I actually want the one which departures 3:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "10419", "datum_id": {"dialogue_id": "5b23f70c-7a7f-4fbf-bebc-04c4dce21baa", "turn_index": 2}}
{"user_turn_0": "Can you check for a new call from my daughter ?", "agent_turn_0": "Root system inform phoneCall checkExistence NotExisted", "user_turn_1": "Text her", "tgt": "(plan (^(Message) Create :object (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Daughter)))))))", "idx": "10441", "datum_id": {"dialogue_id": "e197bb0f-0f95-4871-ad27-f937e2dc70c1", "turn_index": 2}}
{"user_turn_0": "it is 07905976850", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "dial", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Option (Constraint PhoneCall))) Path.apply \" object \") (lambda (^(Option (Constraint PhoneCall)) x0) (^(PhoneCall) Create$default$object))))", "idx": "10446", "datum_id": {"dialogue_id": "c2d14838-cdd3-444f-85ae-8445045955c2", "turn_index": 2}}
{"user_turn_0": "East Croydon", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM", "user_turn_1": "It looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "10457", "datum_id": {"dialogue_id": "2e785145-9f2a-41a5-ac1d-78c79ca8862c", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , can you make me an event on the 23rd at 11 o'clock , put it on my calendar", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 23L)))) (DateTime.time_? (Time.hour_? (?= (Hour.apply 11L)))))))))", "idx": "10460", "datum_id": {"dialogue_id": "41d8b2cb-4c97-4984-bf8d-52aab8ae82bd", "turn_index": 0}}
{"user_turn_0": "Hi my assistant , change the attendee of my calendar event", "agent_turn_0": "Root system prompt calendarEvent update object", "user_turn_1": "The Expert Conference held in Spacious Union Square", "tgt": "(plan (revise (^(Unit) Path.apply \" Update \") (^((Option (Constraint CalendarEvent))) Path.apply \" object \") (lambda (^(Option (Constraint CalendarEvent)) x0) (Some (& (CalendarEvent.eventName_? (?= \" The Expert Conference \")) (CalendarEvent.location_? (?= \" Spacious Union Square \")))))))", "idx": "10466", "datum_id": {"dialogue_id": "6cfa6884-c894-4689-8e2e-d7a701f7fadb", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , let me book a low price hotel that is close to my event .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Hotel.priceRange_? (?= (PriceRange.Low))))))", "idx": "10470", "datum_id": {"dialogue_id": "63c642b8-9bd9-47e2-ac15-073f33acc6cc", "turn_index": 0}}
{"user_turn_0": "Can you check if it has a laundry service ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Sounds great . Please book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "10472", "datum_id": {"dialogue_id": "63c642b8-9bd9-47e2-ac15-073f33acc6cc", "turn_index": 2}}
{"user_turn_0": "When will my train to Sheffield arrive ?", "agent_turn_0": "Root system inform train find focus equals arrivalDateTime equals time equals hour equals 1 meridiem equals PM", "user_turn_1": "Can you book me a seat at Acacia Saint for tomorrow at 10:30 AM ?", "tgt": "(plan (do (^(Restaurant) Book :object (& (Restaurant.restaurantName_? (?= \" Acacia Saint \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM)))))))))) (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (?= (^(DateTimeRange Restaurant) reference (^(Restaurant) always)))))))", "idx": "10491", "datum_id": {"dialogue_id": "d6b4d33e-2483-4ceb-945d-59adb2caafc5", "turn_index": 3}}
{"user_turn_0": "Do they have breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "That s okay , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "10495", "datum_id": {"dialogue_id": "c81f3b79-4f8b-4d4c-822d-2ded6665359c", "turn_index": 2}}
{"user_turn_0": "I need three rooms , the type does n't matter", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "I wanna check in Monday instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Monday))))))", "idx": "10497", "datum_id": {"dialogue_id": "c81f3b79-4f8b-4d4c-822d-2ded6665359c", "turn_index": 4}}
{"user_turn_0": "It has been set", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "Set a reminder for it", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (meridiem_? (?= (Meridiem.AM)))))) (DateTimeRange.duration_? (AppleDuration.hour_? (?= 1)))))))", "idx": "10538", "datum_id": {"dialogue_id": "7ebaf6da-a848-4947-9170-d4d1911f66a4", "turn_index": 3}}
{"user_turn_0": "Set a reminder for it", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Ok it has been set", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (^(CalendarEvent) always))))))", "idx": "10539", "datum_id": {"dialogue_id": "7ebaf6da-a848-4947-9170-d4d1911f66a4", "turn_index": 4}}
{"user_turn_0": "It should be a low price range", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flavoroso", "user_turn_1": "What is the address of the restaurant", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "10569", "datum_id": {"dialogue_id": "a7dfad7c-075e-46e3-a383-778f8b7144ee", "turn_index": 5}}
{"user_turn_0": "Can you actually change the departure date to second trip to Sunday ?", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 2 object equals nextDepartureDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM price equals 142", "user_turn_1": "This one is fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "10582", "datum_id": {"dialogue_id": "d9a6741f-4b14-4019-a2d8-a6d950bafd8f", "turn_index": 7}}
{"user_turn_0": "Just make sure it is n't too high and has pizza", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Shining Gate", "user_turn_1": "Do they take card there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "10588", "datum_id": {"dialogue_id": "c9c75d6d-fe5b-4adf-b9e7-fa48baabc7ac", "turn_index": 4}}
{"user_turn_0": "Get me another one that has outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Maple", "user_turn_1": "I want another one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.hasParking_? (?= true))))))", "idx": "10590", "datum_id": {"dialogue_id": "c9c75d6d-fe5b-4adf-b9e7-fa48baabc7ac", "turn_index": 6}}
{"user_turn_0": "I want another one", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone", "user_turn_1": "That works . Book it there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Kitty City \"))))))", "idx": "10591", "datum_id": {"dialogue_id": "c9c75d6d-fe5b-4adf-b9e7-fa48baabc7ac", "turn_index": 7}}
{"user_turn_0": "Hi assistant , call my love for me .", "agent_turn_0": "Root system inform navigation find focus equals distance equals number equals 7", "user_turn_1": "it is 07805433095", "tgt": "(plan (^(Navigation) Find :object (& (Navigation.destination_? (Place.location_? (?= \" 29 Highgate Lane \"))) (Navigation.transportationMode_? (?= (TransportationMode.Walking))))))", "idx": "10596", "datum_id": {"dialogue_id": "a7dd6ae0-5ee2-4600-becc-e71b04c34f31", "turn_index": 1}}
{"user_turn_0": "it is 07805433095", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Who would you like to call ?", "tgt": "(plan (^(PhoneCall) Create))", "idx": "10597", "datum_id": {"dialogue_id": "a7dd6ae0-5ee2-4600-becc-e71b04c34f31", "turn_index": 2}}
{"user_turn_0": "Who would you like to call ?", "agent_turn_0": "Root system prompt phoneCall create object equals recipients", "user_turn_1": "It 's 7 miles away", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Option (Constraint PhoneCall))) Path.apply \" object \") (lambda (^(Option (Constraint PhoneCall)) x0) (Some (PhoneCall.recipients_? (Contact.phoneNumber_? (?= \" 07805433095 \")))))))", "idx": "10598", "datum_id": {"dialogue_id": "a7dd6ae0-5ee2-4600-becc-e71b04c34f31", "turn_index": 3}}
{"user_turn_0": "It 's 7 miles away", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Here are the directions to your destination", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Contact)) Path.apply \" object.recipients \") (lambda (^(Constraint Contact) x0) (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Love)))))))", "idx": "10599", "datum_id": {"dialogue_id": "a7dd6ae0-5ee2-4600-becc-e71b04c34f31", "turn_index": 4}}
{"user_turn_0": "I actually want one with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Joint", "user_turn_1": "Is there parking ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "10608", "datum_id": {"dialogue_id": "4b6b2537-964e-4a7d-8580-057554796723", "turn_index": 8}}
{"user_turn_0": "Is there parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Juniper Cloud \"))))))", "idx": "10609", "datum_id": {"dialogue_id": "4b6b2537-964e-4a7d-8580-057554796723", "turn_index": 9}}
{"user_turn_0": "Can you schedule it on Thursday ?", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM price equals 65", "user_turn_1": "OK , that looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "10619", "datum_id": {"dialogue_id": "8a2059e7-1194-4ac0-916a-641e349a39e3", "turn_index": 6}}
{"user_turn_0": "Leeds", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "4:20 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "10628", "datum_id": {"dialogue_id": "568c7a35-e63b-4401-9c56-e405e63a9ab1", "turn_index": 2}}
{"user_turn_0": "Do they have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "10656", "datum_id": {"dialogue_id": "6909415c-8776-480e-996b-67478c40ad30", "turn_index": 3}}
{"user_turn_0": "Hello , display the message to 07984014665", "agent_turn_0": "Root system inform message find", "user_turn_1": "Please send that to 07712350877", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Message.recipients_? (Contact.phoneNumber_? (?= \" 07712350877 \"))))))", "idx": "10671", "datum_id": {"dialogue_id": "abde9b70-1966-4c4f-84f7-e130b5f900e0", "turn_index": 1}}
{"user_turn_0": "Can you call him", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Now can you call my father", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Person)) Path.apply \" object.recipients.person \") (lambda (^(Constraint Person) x0) (Person.relationshipType_? (?= (RelationshipType.Father))))))", "idx": "10677", "datum_id": {"dialogue_id": "b80e2266-91ce-4a2a-9765-79e2f13eb304", "turn_index": 2}}
{"user_turn_0": "Have I missed any calls from Mr Graham ?", "agent_turn_0": "Root system inform phoneCall checkExistence NotExisted", "user_turn_1": "Call him", "tgt": "(plan (^(PhoneCall) Create :object (PhoneCall.recipients_? (^((Constraint Contact)) refer))))", "idx": "10688", "datum_id": {"dialogue_id": "0b356ed1-644a-4d51-89cc-c74845b26213", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i need to leave tomorrow to Edinburgh from Liverpool on a plan", "tgt": "(plan (^(Flight) Book :object (& (& (Flight.source_? (Place.location_? (?= \" Liverpool \"))) (Flight.destination_? (Place.location_? (?= \" Edinburgh \")))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow))))))))", "idx": "10695", "datum_id": {"dialogue_id": "14e2f22e-e68b-4a60-bfa9-b6b17052ba92", "turn_index": 0}}
{"user_turn_0": "I am departing from Glasgow", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM", "user_turn_1": "That one looks fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (^((Constraint Train)) refer)))))", "idx": "10707", "datum_id": {"dialogue_id": "5eab3371-ec28-4667-bcc3-b763e53915c6", "turn_index": 2}}
{"user_turn_0": "One room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "10714", "datum_id": {"dialogue_id": "8b3f3b1e-bf41-47fd-ad28-89ff5af93ffc", "turn_index": 4}}
{"user_turn_0": "I want another hotel with a low price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Hyatt price equals 119", "user_turn_1": "What is the rating ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.rating_? (^(Number) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "10732", "datum_id": {"dialogue_id": "a30f5989-fbb7-4edc-b98c-e5aa53bf458b", "turn_index": 5}}
{"user_turn_0": "Hi assistant , tell me how long it will take to get to 24 Empire Way by public transportation", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 15", "user_turn_1": "On foot , how long does it take to get from Tie the Knot to 7 Upper Street", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Navigation)) Path.apply \" object \") (lambda (^(Constraint Navigation) x0) (& (& (Navigation.source_? (Place.location_? (?= \" Tie the Knot \"))) (Navigation.destination_? (Place.location_? (?= \" 7 Upper Street \")))) (Navigation.transportationMode_? (?= (TransportationMode.Walking)))))))", "idx": "10734", "datum_id": {"dialogue_id": "80d5e151-5ee0-4bfa-94ae-f5c32a05019b", "turn_index": 1}}
{"user_turn_0": "I 'm leaving from London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 12 minute equals 15 meridiem equals PM", "user_turn_1": "That works for me . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "10745", "datum_id": {"dialogue_id": "57cf3b54-bb45-4090-894d-e0b2a8890659", "turn_index": 2}}
{"user_turn_0": "What 's the weather like today ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Rainy", "user_turn_1": "How long will it take to get from 6 John Street to Little Bat ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Navigation)) Path.apply \" object \") (lambda (^(Constraint Navigation) x0) (& (Navigation.source_? (Place.location_? (?= \" 6 John Street \"))) (Navigation.destination_? (Place.location_? (?= \" Little Bat \")))))))", "idx": "10752", "datum_id": {"dialogue_id": "e53a7b16-da27-4e6b-9183-6aaae4b45184", "turn_index": 3}}
{"user_turn_0": "How long will it take to get from 6 John Street to Little Bat ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 25", "user_turn_1": "Thanks so much . Can you book me a table at a restaurant that 's not too expensive ? I want it to have a rating higher than zero stars", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High))))) (Restaurant.rating_? (?!= (someSalient (?= 0)))))))", "idx": "10753", "datum_id": {"dialogue_id": "e53a7b16-da27-4e6b-9183-6aaae4b45184", "turn_index": 4}}
{"user_turn_0": "It 'll end at 4:30 PM", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Can you also create a reminder ?", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (^(CalendarEvent) always))))))", "idx": "10766", "datum_id": {"dialogue_id": "ea1e39ca-22b8-42ba-a1f8-9c634524bc81", "turn_index": 2}}
{"user_turn_0": "One", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is the breakfast included ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "10781", "datum_id": {"dialogue_id": "ad1f9dcb-6f93-4ea2-bb64-c06d6aa3f691", "turn_index": 2}}
{"user_turn_0": "Hi assistant , can I book a hotel with a car park with a single room", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "It should be low priced", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.location_? (?= \" Oxford Circus \"))) (Hotel.rating_? (?>= (someSalient (?= 2))))))))", "idx": "10791", "datum_id": {"dialogue_id": "cb72f9d6-2370-4153-8ada-33dcb10614c6", "turn_index": 1}}
{"user_turn_0": "It should be low priced", "agent_turn_0": "Root system prompt hotel book object equals priceRange", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "10792", "datum_id": {"dialogue_id": "cb72f9d6-2370-4153-8ada-33dcb10614c6", "turn_index": 2}}
{"user_turn_0": "Book it for me", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Hilton Garden price equals 127", "user_turn_1": "Can I check in on Monday", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasParking_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "10793", "datum_id": {"dialogue_id": "cb72f9d6-2370-4153-8ada-33dcb10614c6", "turn_index": 3}}
{"user_turn_0": "Can I check in on Monday", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "That 's fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "10794", "datum_id": {"dialogue_id": "cb72f9d6-2370-4153-8ada-33dcb10614c6", "turn_index": 4}}
{"user_turn_0": "That 's fine", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "What 's your price range ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday)))))))))))", "idx": "10795", "datum_id": {"dialogue_id": "cb72f9d6-2370-4153-8ada-33dcb10614c6", "turn_index": 5}}
{"user_turn_0": "What 's your price range ?", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Yes , there 's a car park", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.startDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Monday)))))", "idx": "10796", "datum_id": {"dialogue_id": "cb72f9d6-2370-4153-8ada-33dcb10614c6", "turn_index": 6}}
{"user_turn_0": "Yes , there 's a car park", "agent_turn_0": "Root system prompt hotel book object equals rooms", "user_turn_1": "Sorry , the hotel does n't have that room type in that time period", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.rooms_? (?= 1))))))", "idx": "10797", "datum_id": {"dialogue_id": "cb72f9d6-2370-4153-8ada-33dcb10614c6", "turn_index": 7}}
{"user_turn_0": "Check its rating", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "Ok good book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "10803", "datum_id": {"dialogue_id": "b2d515c5-5ec7-4227-8228-729586030bd7", "turn_index": 4}}
{"user_turn_0": "Two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Update the check out to Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Thursday)))))", "idx": "10807", "datum_id": {"dialogue_id": "b2d515c5-5ec7-4227-8228-729586030bd7", "turn_index": 8}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , here is what I could find for an inexpensive hotel in Ealing . I think Bourbon Bliss hotel is a good option priced at 210 pounds per night .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= \" Ealing \")) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))))))", "idx": "10815", "datum_id": {"dialogue_id": "5cbba129-ab0a-43e2-8bd9-220d6757b470", "turn_index": 0}}
{"user_turn_0": "Do you know if the hotel has a car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it thanks", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "10817", "datum_id": {"dialogue_id": "5cbba129-ab0a-43e2-8bd9-220d6757b470", "turn_index": 2}}
{"user_turn_0": "Please make it 3 rooms before completing", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you make an adjustment to the check out date to Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Sunday)))))", "idx": "10822", "datum_id": {"dialogue_id": "5cbba129-ab0a-43e2-8bd9-220d6757b470", "turn_index": 7}}
{"user_turn_0": "Can you make an adjustment to the check out date to Sunday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there a prepayment needed ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "10823", "datum_id": {"dialogue_id": "5cbba129-ab0a-43e2-8bd9-220d6757b470", "turn_index": 8}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , display low priced hotels .", "tgt": "(plan (^(Hotel) Find :object (Hotel.priceRange_? (?= (PriceRange.Low)))))", "idx": "10830", "datum_id": {"dialogue_id": "6a433c53-e0ce-41f7-8e96-df0f000ca0ea", "turn_index": 0}}
{"user_turn_0": "Hi assistant , display low priced hotels .", "agent_turn_0": "Root system inform hotel find", "user_turn_1": "Also text 07773736049 tomorrow 's even", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))))))) (Message.recipients_? (Contact.phoneNumber_? (?= \" 07773736049 \"))))))", "idx": "10831", "datum_id": {"dialogue_id": "6a433c53-e0ce-41f7-8e96-df0f000ca0ea", "turn_index": 1}}
{"user_turn_0": "Yes , deliver it", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Book a three star minimum hotel for me", "tgt": "(plan (^(Hotel) Book :object (Hotel.rating_? (?>= (someSalient (?= 3))))))", "idx": "10833", "datum_id": {"dialogue_id": "6a433c53-e0ce-41f7-8e96-df0f000ca0ea", "turn_index": 3}}
{"user_turn_0": "What kind of food do they serve there ?", "agent_turn_0": "Root system inform restaurant find focus equals foodType equals Korean food", "user_turn_1": "Please book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "10842", "datum_id": {"dialogue_id": "8ce66651-2765-42cb-b2cd-8771e23d69b4", "turn_index": 2}}
{"user_turn_0": "Thanks , next book me a spot at an at least a three star restaurant rating in Queensbury for today", "agent_turn_0": "Root system prompt restaurant book object equals foodType", "user_turn_1": "I 'd prefer Mexican Food with a high price range", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.foodType_? (?= (FoodType.Mexican)))) (Restaurant.priceRange_? (?= (PriceRange.High)))))))", "idx": "10858", "datum_id": {"dialogue_id": "ac0c723f-d6fe-4660-af20-ccfd1c13f30f", "turn_index": 2}}
{"user_turn_0": "I 'd prefer Mexican Food with a high price range", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Canton Silk", "user_turn_1": "Tell me what 's the address of the restaurant", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "10859", "datum_id": {"dialogue_id": "ac0c723f-d6fe-4660-af20-ccfd1c13f30f", "turn_index": 3}}
{"user_turn_0": "I 'd prefer a different restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Gogol", "user_turn_1": "Do you know if the restaurant takes credit card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "10861", "datum_id": {"dialogue_id": "ac0c723f-d6fe-4660-af20-ccfd1c13f30f", "turn_index": 5}}
{"user_turn_0": "Do you know if the restaurant takes credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Ok cool , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Canton Silk \"))))))", "idx": "10862", "datum_id": {"dialogue_id": "ac0c723f-d6fe-4660-af20-ccfd1c13f30f", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , book me a cheap sushi restaurant", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High))))) (Restaurant.foodType_? (?= (FoodType.Sushi))))))", "idx": "10866", "datum_id": {"dialogue_id": "ca67df9a-6b30-4024-95a9-423f34ce5f25", "turn_index": 0}}
{"user_turn_0": "Show me the five star ones", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals La Zilla", "user_turn_1": "Is there outdoor seating", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "10870", "datum_id": {"dialogue_id": "ca67df9a-6b30-4024-95a9-423f34ce5f25", "turn_index": 4}}
{"user_turn_0": "One with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone", "user_turn_1": "Book it for tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Floss and Joes \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow)))))))))", "idx": "10872", "datum_id": {"dialogue_id": "ca67df9a-6b30-4024-95a9-423f34ce5f25", "turn_index": 6}}
{"user_turn_0": "Is there private bath rooms ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "10878", "datum_id": {"dialogue_id": "4585c8fa-880f-45fe-a95c-4c31a1d46241", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , 6:30 o'clock", "tgt": "(plan (do (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 5L))) (meridiem_? (?= (Meridiem.PM)))))))) (^(Reminder) Create :object (Reminder.reminderContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))))))", "idx": "10883", "datum_id": {"dialogue_id": "f1877865-857c-4b7d-a294-01aea0be4b9d", "turn_index": 0}}
{"user_turn_0": "Hello , 6:30 o'clock", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals endDateTime", "user_turn_1": "Make a new event at 5 pm and set a remind", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.endDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 8L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "10884", "datum_id": {"dialogue_id": "f1877865-857c-4b7d-a294-01aea0be4b9d", "turn_index": 1}}
{"user_turn_0": "Make a new event at 5 pm and set a remind", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "Thanks , also at 8:30pm", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (?= (^(DateTimeRange Flight) reference (Flight.destination_? (Place.location_? (?= \" Cardiff \"))))))))", "idx": "10885", "datum_id": {"dialogue_id": "f1877865-857c-4b7d-a294-01aea0be4b9d", "turn_index": 2}}
{"user_turn_0": "Add a flight to Cardiff", "agent_turn_0": "Root system prompt restaurant book restaurant book atDateTime equals time", "user_turn_1": "book the Chipotle Grill restaurant for tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (^((Constraint Minute)) refer)))))))))", "idx": "10887", "datum_id": {"dialogue_id": "f1877865-857c-4b7d-a294-01aea0be4b9d", "turn_index": 4}}
{"user_turn_0": "Do they offer laundry services ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "10896", "datum_id": {"dialogue_id": "5a7f345e-36c3-4b00-858a-9c3d0e6e1641", "turn_index": 3}}
{"user_turn_0": "Hi there , display my calendar events", "agent_turn_0": "Root system inform calendarEvent find", "user_turn_1": "Display my calendar events", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "10906", "datum_id": {"dialogue_id": "81cdab37-aa84-4353-a09e-beb875a2e1a1", "turn_index": 1}}
{"user_turn_0": "Tell me how long it takes to get to 397 Tallwood Court", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 45", "user_turn_1": "I would like to book a restaurant near my event for 2 people", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.location_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Restaurant.tableSize_? (?= 2)))))", "idx": "10908", "datum_id": {"dialogue_id": "81cdab37-aa84-4353-a09e-beb875a2e1a1", "turn_index": 3}}
{"user_turn_0": "They should have at least one star rating and be of a high price", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capricorn", "user_turn_1": "Does the restaurant take credit cards ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "10912", "datum_id": {"dialogue_id": "81cdab37-aa84-4353-a09e-beb875a2e1a1", "turn_index": 7}}
{"user_turn_0": "Does the restaurant take credit cards ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "That 's fine . Book it for me at Saturday 5 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Empirica \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 5L))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "10913", "datum_id": {"dialogue_id": "81cdab37-aa84-4353-a09e-beb875a2e1a1", "turn_index": 8}}
{"user_turn_0": "high price", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Maple", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "10919", "datum_id": {"dialogue_id": "7deefd84-f9b3-483c-8861-ddd21c07c188", "turn_index": 4}}
{"user_turn_0": "Sunday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM", "user_turn_1": "Yes please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "10930", "datum_id": {"dialogue_id": "3877b276-ee22-4002-9784-e94f0ec30b6d", "turn_index": 6}}
{"user_turn_0": "What 's the weather like there ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cloudy", "user_turn_1": "Thanks , also send the event on the 16th to my love", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 16L))))))))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Love))))))))", "idx": "10936", "datum_id": {"dialogue_id": "388b60de-d99a-484f-80e2-3b9387d52a0a", "turn_index": 4}}
{"user_turn_0": "Is breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "10949", "datum_id": {"dialogue_id": "682e9c85-a4b1-48da-b1f4-ca74136d1375", "turn_index": 5}}
{"user_turn_0": "Does the hotel have car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "10956", "datum_id": {"dialogue_id": "758e21cc-c290-4f77-b66c-b148e2ccfbea", "turn_index": 4}}
{"user_turn_0": "What 's the star rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Can you book it for me ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "10974", "datum_id": {"dialogue_id": "b2aa8bb3-645a-498b-baa1-477a775f4ddd", "turn_index": 3}}
{"user_turn_0": "Give me a different restaurant that provides outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capricorn", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flip Out \"))))))", "idx": "10993", "datum_id": {"dialogue_id": "74da6a0d-d3db-4c39-94fa-08dfe608e9c1", "turn_index": 2}}
{"user_turn_0": "Table for 4 people", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Switch the appointment time to 6 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (Time.hour_? (?= (Hour.apply 6L))))))", "idx": "10995", "datum_id": {"dialogue_id": "74da6a0d-d3db-4c39-94fa-08dfe608e9c1", "turn_index": 4}}
{"user_turn_0": "Correct", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM", "user_turn_1": "I want the 3:30 PM one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "10999", "datum_id": {"dialogue_id": "a3408487-7153-46ce-ab2e-e63eed86231f", "turn_index": 2}}
{"user_turn_0": "Can you tell me how long it takes to get to my event today ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 25", "user_turn_1": "Do you know how long it takes to get to my calendar event today ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "11006", "datum_id": {"dialogue_id": "0cfe2ba0-b6bb-4864-a83b-028255c12c55", "turn_index": 4}}
{"user_turn_0": "Leaving from Liverpool", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM", "user_turn_1": "I want the one scheduled at 1:40 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "11009", "datum_id": {"dialogue_id": "dc817895-c266-4203-adc9-b3d9dba0e96a", "turn_index": 2}}
{"user_turn_0": "I want the one scheduled at 1:40 PM", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM", "user_turn_1": "Perfect", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "11010", "datum_id": {"dialogue_id": "dc817895-c266-4203-adc9-b3d9dba0e96a", "turn_index": 3}}
{"user_turn_0": "Yes . please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 1 meridiem equals PM price equals 124", "user_turn_1": "All right . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "11019", "datum_id": {"dialogue_id": "731f3b22-7a51-4d1c-850b-d497e6a8eabd", "turn_index": 2}}
{"user_turn_0": "I 'm going to Belfast City", "agent_turn_0": "Root system prompt flight book object equals departureDateTime", "user_turn_1": "Before 8 this evening", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (?<= (someSalient (& (Time.hour_? (?= (Hour.apply 8L))) (meridiem_? (?= (Meridiem.PM))))))))))))))", "idx": "11025", "datum_id": {"dialogue_id": "6500840b-3c91-4ebf-8b84-c6944b56b91e", "turn_index": 2}}
{"user_turn_0": "What airline is that on ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "Okay , get me on it , please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "11027", "datum_id": {"dialogue_id": "6500840b-3c91-4ebf-8b84-c6944b56b91e", "turn_index": 4}}
{"user_turn_0": "Returning Sunday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM price equals 156", "user_turn_1": "That sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "11031", "datum_id": {"dialogue_id": "6500840b-3c91-4ebf-8b84-c6944b56b91e", "turn_index": 8}}
{"user_turn_0": "Hi there , will you find me a hotel with wifi ?", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "I want a cheap one in Oxford Circus", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.location_? (?= \" Oxford Circus \"))) (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "11047", "datum_id": {"dialogue_id": "e6ce52e2-3835-4d6d-bfcf-91021ed23617", "turn_index": 1}}
{"user_turn_0": "I 'd rather a hotel with five stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Four Seasons price equals 145", "user_turn_1": "OK , book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Renaissance \"))))))", "idx": "11050", "datum_id": {"dialogue_id": "e6ce52e2-3835-4d6d-bfcf-91021ed23617", "turn_index": 4}}
{"user_turn_0": "Make the check in date Monday instead", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they have free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "11055", "datum_id": {"dialogue_id": "e6ce52e2-3835-4d6d-bfcf-91021ed23617", "turn_index": 9}}
{"user_turn_0": "How is it rated ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "I need a single room , from Monday through Saturday", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.hotelName_? (^((Constraint String)) refer)) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday)))))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Single)))))))", "idx": "11066", "datum_id": {"dialogue_id": "20dd0d84-6d16-402e-82b1-5e18a8cfca9a", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , deliver tomorrows event to Mr Langdon .", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))))))) (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Langdon \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "11069", "datum_id": {"dialogue_id": "3acf494b-009c-428a-a0d4-fcb794dac922", "turn_index": 0}}
{"user_turn_0": "Hey , get me a saloon taxi from 29 Highgate Lane to 7615 Eagle Lane", "agent_turn_0": "Root system offer taxi book", "user_turn_1": "Change the destination to 29 Alexander Road", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" 29 Alexander Road \"))))", "idx": "11075", "datum_id": {"dialogue_id": "3ea73845-10cb-4f87-bbea-fa6e8ca93ed2", "turn_index": 1}}
{"user_turn_0": "Yeah , book it", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "Tell me how to get to the destination that 's on my calendar event", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (?= (^(Place CalendarEvent) reference (^(CalendarEvent) always))))))", "idx": "11077", "datum_id": {"dialogue_id": "3ea73845-10cb-4f87-bbea-fa6e8ca93ed2", "turn_index": 3}}
{"user_turn_0": "Is breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "11086", "datum_id": {"dialogue_id": "3a503903-93ec-4a0f-a061-6ee3f8a770af", "turn_index": 2}}
{"user_turn_0": "I will be back on the 21st", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM price equals 210", "user_turn_1": "That one looks ideal", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "11099", "datum_id": {"dialogue_id": "4d16ba4c-726a-45d2-b116-39bc6862ec8c", "turn_index": 4}}
{"user_turn_0": "I want another hotel that has a five - star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Ritz-Carlton price equals 170", "user_turn_1": "Does it have free wifi ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasWifi_? (^(Boolean) always)))))", "idx": "11104", "datum_id": {"dialogue_id": "80a7e7b9-dcd8-4e86-baf6-0cfce157fd6c", "turn_index": 3}}
{"user_turn_0": "Does it have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Etiquette Suites \"))))))", "idx": "11105", "datum_id": {"dialogue_id": "80a7e7b9-dcd8-4e86-baf6-0cfce157fd6c", "turn_index": 4}}
{"user_turn_0": "Just one", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does it include breakfast ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "11110", "datum_id": {"dialogue_id": "80a7e7b9-dcd8-4e86-baf6-0cfce157fd6c", "turn_index": 9}}
{"user_turn_0": "Does it include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Okay , book it now", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "11111", "datum_id": {"dialogue_id": "80a7e7b9-dcd8-4e86-baf6-0cfce157fd6c", "turn_index": 10}}
{"user_turn_0": "Hey , how long does it take to get to my next event ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 25 object equals destination equals location equals 29 Highgate Lane", "user_turn_1": "How far away is the event on the 14th ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (Navigation.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 14L)))))))))))", "idx": "11113", "datum_id": {"dialogue_id": "17c055bb-50c4-4ee1-8273-2f9c96211b52", "turn_index": 1}}
{"user_turn_0": "Address of the restaurant", "agent_turn_0": "Root system inform restaurant find focus equals address equals 54 Islington Park Road", "user_turn_1": "Book it for me at 6 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Dim Summit \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 6L))))))))))", "idx": "11125", "datum_id": {"dialogue_id": "3e1b83f6-4677-4bbd-86e6-6ca22f202273", "turn_index": 5}}
{"user_turn_0": "Change the venue to Old Country Barn", "agent_turn_0": "Root system inform calendarEvent update Completed", "user_turn_1": "How can I get the by car ?", "tgt": "(plan (^(Navigation) Find :object (& (Navigation.destination_? (Place.location_? (?= \" Old Country Barn \"))) (Navigation.transportationMode_? (?= (TransportationMode.Driving))))))", "idx": "11131", "datum_id": {"dialogue_id": "646b33ca-8538-4346-abc8-70bba542e868", "turn_index": 3}}
{"user_turn_0": "What is it rated ?", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 4", "user_turn_1": "Ok book it", "tgt": "(plan (^(Restaurant) Book :object (Restaurant.restaurantName_? (^((Constraint String)) refer))))", "idx": "11135", "datum_id": {"dialogue_id": "de41f2bb-6188-4f88-864b-970633c219e3", "turn_index": 2}}
{"user_turn_0": "I 'll return Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 12 minute equals 40 meridiem equals PM price equals 150", "user_turn_1": "That sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "11152", "datum_id": {"dialogue_id": "607d641a-5871-4631-9a81-569f39d4d399", "turn_index": 8}}
{"user_turn_0": "I return on Thursday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "11157", "datum_id": {"dialogue_id": "cf713987-6a7e-4030-b3ad-068da34d224f", "turn_index": 3}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "ok now send message to 07960984386 that says I like to read", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (& (Message.recipients_? (Contact.phoneNumber_? (?= \" 07960984386 \"))) (Message.textContent_? (?= \" I like to read \"))))))", "idx": "11163", "datum_id": {"dialogue_id": "63256b61-5045-4029-af6e-e95fd3bb416e", "turn_index": 4}}
{"user_turn_0": "I do n't like any of those . Try restaurant that serve Japanese food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Lakeside Demon", "user_turn_1": "Do they take credit cards ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "11213", "datum_id": {"dialogue_id": "46a31695-2c9a-40ff-b0d7-da8fb26ab8c2", "turn_index": 5}}
{"user_turn_0": "I want another restaurant with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Beef Easy", "user_turn_1": "Does the restaurant have on - site parking", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "11215", "datum_id": {"dialogue_id": "46a31695-2c9a-40ff-b0d7-da8fb26ab8c2", "turn_index": 7}}
{"user_turn_0": "Does the restaurant have on - site parking", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Okay , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Dingo \"))))))", "idx": "11216", "datum_id": {"dialogue_id": "46a31695-2c9a-40ff-b0d7-da8fb26ab8c2", "turn_index": 8}}
{"user_turn_0": "I want another hotel but cheaper", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Sheraton price equals 125", "user_turn_1": "Is there free Wifi ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasWifi_? (^(Boolean) always)))))", "idx": "11222", "datum_id": {"dialogue_id": "5e2b18a1-e33c-475d-a89b-f5ff31c7c667", "turn_index": 3}}
{"user_turn_0": "Is there free Wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Obsidian Sky \"))))))", "idx": "11223", "datum_id": {"dialogue_id": "5e2b18a1-e33c-475d-a89b-f5ff31c7c667", "turn_index": 4}}
{"user_turn_0": "Only two", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Oh , well what about Wednesday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Wednesday))))))", "idx": "11228", "datum_id": {"dialogue_id": "5e2b18a1-e33c-475d-a89b-f5ff31c7c667", "turn_index": 9}}
{"user_turn_0": "Oh , well what about Wednesday ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel for free at anytime ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "11229", "datum_id": {"dialogue_id": "5e2b18a1-e33c-475d-a89b-f5ff31c7c667", "turn_index": 10}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , is there an event for today on the calendar ?", "tgt": "(plan (^(CalendarEvent) CheckExistence :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))))))", "idx": "11231", "datum_id": {"dialogue_id": "7e79a456-df04-4a8b-a071-703d62772774", "turn_index": 0}}
{"user_turn_0": "Is that a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Cool , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "11243", "datum_id": {"dialogue_id": "2b8eaf59-8a40-4dfa-92cb-03dd05b8762f", "turn_index": 2}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 12 minute equals 25 meridiem equals PM price equals 170", "user_turn_1": "That s great , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "11245", "datum_id": {"dialogue_id": "2b8eaf59-8a40-4dfa-92cb-03dd05b8762f", "turn_index": 4}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM price equals 201", "user_turn_1": "looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "11251", "datum_id": {"dialogue_id": "83646a52-633b-4845-a854-f8dfd8715f1e", "turn_index": 4}}
{"user_turn_0": "Ok it has been booked", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "It 's raining", "tgt": "(plan (^(WeatherReport) Find :object (WeatherReport.atDateTime_? (DateTime.date_? (?= (Today))))))", "idx": "11261", "datum_id": {"dialogue_id": "267a252d-b066-4b4f-b3b3-25a0099588a1", "turn_index": 3}}
{"user_turn_0": "It 's raining", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Rainy", "user_turn_1": "I need another favor . Book an economy flight to Dublin that leaves before 5 pm", "tgt": "(plan (^(Flight) Book :object (& (& (Flight.class_? (?= (FlightClass.Economy))) (Flight.destination_? (Place.location_? (?= \" Dublin \")))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (List.exists_? (DateTime.time_? (?<= (someSalient (& (Time.hour_? (?= (Hour.apply 5L))) (meridiem_? (?= (Meridiem.PM)))))))))))))", "idx": "11262", "datum_id": {"dialogue_id": "267a252d-b066-4b4f-b3b3-25a0099588a1", "turn_index": 4}}
{"user_turn_0": "What type of restaurant is that ?", "agent_turn_0": "Root system inform restaurant find focus equals foodType equals Chinese hotpot", "user_turn_1": "Make a booking there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "11305", "datum_id": {"dialogue_id": "45ff34b4-2d21-40e0-a69c-d0e54998b026", "turn_index": 5}}
{"user_turn_0": "When is my next event scheduled to begin ?", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals startDateTime equals time equals hour equals 11", "user_turn_1": "Can you set a reminder for me at that time ?", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (^((Constraint DateTime)) refer))))", "idx": "11311", "datum_id": {"dialogue_id": "26f85f87-8e74-4942-9542-6e92d2f42e72", "turn_index": 3}}
{"user_turn_0": "Please book that for me", "agent_turn_0": "Root system inform train book Completed", "user_turn_1": "Please book a Saloon taxi from 8063 Lake View to Tie the Knot", "tgt": "(plan (^(Taxi) Book :object (& (& (Taxi.serviceType_? (List.exists_? (?= (ServiceType.Saloon)))) (Taxi.source_? (Place.location_? (?= \" 8063 Lake View \")))) (Taxi.destination_? (Place.location_? (?= \" Tie the Knot \"))))))", "idx": "11322", "datum_id": {"dialogue_id": "7e6660e9-631e-4043-9b8f-3c53deb71c07", "turn_index": 4}}
{"user_turn_0": "Nope , I just need a queen size bed", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Shangri-La price equals 210", "user_turn_1": "Where is it ?", "tgt": "(plan (^(Navigation) Find :object (Navigation.destination_? (?= (^(Place Hotel) reference (^(Hotel) always))))))", "idx": "11333", "datum_id": {"dialogue_id": "42df2672-4312-41d4-b672-7e84ceb34434", "turn_index": 4}}
{"user_turn_0": "Where is it ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Ok , book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "11334", "datum_id": {"dialogue_id": "42df2672-4312-41d4-b672-7e84ceb34434", "turn_index": 5}}
{"user_turn_0": "What about the Freehand hotel ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel at anytime for free ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "11337", "datum_id": {"dialogue_id": "42df2672-4312-41d4-b672-7e84ceb34434", "turn_index": 8}}
{"user_turn_0": "Ok , what rating do they have ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "Ok , book it", "tgt": "(plan (^(Hotel) Book :object (Hotel.hotelName_? (^((Constraint String)) refer))))", "idx": "11391", "datum_id": {"dialogue_id": "a6ee939a-6d35-4e45-a739-25b6a7181fbe", "turn_index": 2}}
{"user_turn_0": "Do any of the restaurants you found serve Thai food ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Goat and Guru", "user_turn_1": "Is parking offered at the restaurant ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "11399", "datum_id": {"dialogue_id": "22ca1735-e12c-47ce-a914-15e45b4375df", "turn_index": 3}}
{"user_turn_0": "Give me a different restaurant that offers parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Spago", "user_turn_1": "Tell me the average cost per person at this restaurant", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "11401", "datum_id": {"dialogue_id": "22ca1735-e12c-47ce-a914-15e45b4375df", "turn_index": 5}}
{"user_turn_0": "Tell me the average cost per person at this restaurant", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 36", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Kitty City \"))))))", "idx": "11402", "datum_id": {"dialogue_id": "22ca1735-e12c-47ce-a914-15e45b4375df", "turn_index": 6}}
{"user_turn_0": "I will depart from Coventry", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 55 meridiem equals PM", "user_turn_1": "I would prefer the one leaving at 4:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (Train.departureDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "11413", "datum_id": {"dialogue_id": "3bc00a1e-3b2e-4516-a014-d90910641e1a", "turn_index": 2}}
{"user_turn_0": "Does the restaurant take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "That 's fine . Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "11427", "datum_id": {"dialogue_id": "38e1f08a-402e-4155-9ae3-d8aaaee443a7", "turn_index": 4}}
{"user_turn_0": "I think MPV should be good", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals 83 Upper Street", "user_turn_1": "Actually , change the destination to Westgate House please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Place)) Path.apply \" object.destination \") (lambda (^(Constraint Place) x0) (Place.location_? (?= \" Westgate House \")))))", "idx": "11433", "datum_id": {"dialogue_id": "51b53af6-637f-43c7-858d-065f2c53f63c", "turn_index": 2}}
{"user_turn_0": "I will leave on June 7th", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "How about Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "11444", "datum_id": {"dialogue_id": "250ca538-c876-40d2-95ef-79bdc0e8cac2", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i would like to book a flight to Belfast city with Ryanair Airways", "tgt": "(plan (^(Flight) Book :object (& (Flight.destination_? (Place.location_? (?= \" Belfast City \"))) (Flight.airLine_? (?= \" Ryanair \")))))", "idx": "11455", "datum_id": {"dialogue_id": "2d3d9b1e-d27f-4198-a824-ee1d0365ba2c", "turn_index": 0}}
{"user_turn_0": "On Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM price equals 130", "user_turn_1": "That will be fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "11462", "datum_id": {"dialogue_id": "2d3d9b1e-d27f-4198-a824-ee1d0365ba2c", "turn_index": 7}}
{"user_turn_0": "Hey , make me a reminder for my next event", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Make me a reminder for the event tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object.atDateTime \") (lambda (^(Constraint CalendarEvent) x0) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow))))))))", "idx": "11465", "datum_id": {"dialogue_id": "99b61cef-4558-4c11-bc6e-4e5172d8496a", "turn_index": 1}}
{"user_turn_0": "I 'd rather a different hotel that 's not rated zero stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Moody Moon price equals 119", "user_turn_1": "What are they rated ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.rating_? (^(Number) always)))))", "idx": "11474", "datum_id": {"dialogue_id": "204d8e6b-6fb5-43f9-9ea0-bceca77b9a16", "turn_index": 5}}
{"user_turn_0": "Can I have 2 rooms ?", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Check for the 9th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 9L))))))", "idx": "11478", "datum_id": {"dialogue_id": "c22742bc-bc1c-4bd7-9173-bb9500a57df4", "turn_index": 3}}
{"user_turn_0": "Check for the 9th", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "11479", "datum_id": {"dialogue_id": "c22742bc-bc1c-4bd7-9173-bb9500a57df4", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i would like to book a ticket for October 25th from Galsgow to Exeter .", "tgt": "(plan (^(Train) Book :object (& (& (Train.source_? (Place.location_? (?= \" Glasgow \"))) (Train.destination_? (Place.location_? (?= \" Exeter \")))) (Train.departureDateTime_? (DateTime.date_? (& (Date.month_? (?= (October))) (Date.day_? (?= (Day.apply 25L)))))))))", "idx": "11492", "datum_id": {"dialogue_id": "780e5a9c-d55f-402d-adbb-9332346e1ade", "turn_index": 0}}
{"user_turn_0": "Norwich thanks", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM", "user_turn_1": "That will be good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (^((Constraint Train)) refer)))))", "idx": "11501", "datum_id": {"dialogue_id": "16c3df50-8a24-4e18-8aea-4abb041f3b59", "turn_index": 4}}
{"user_turn_0": "Hi there , erase Barber Night in Fiesta Hall .", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Thanks , next set a remainder for my next event", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1)))))))", "idx": "11513", "datum_id": {"dialogue_id": "b34e4b90-0f4e-4fd9-a524-246a572c02da", "turn_index": 1}}
{"user_turn_0": "Yes and I will come back on Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM price equals 150", "user_turn_1": "This one works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "11532", "datum_id": {"dialogue_id": "fff0db78-1131-4d4d-ba3d-79d0c2b7a9ca", "turn_index": 4}}
{"user_turn_0": "Hello , how can I get from 22 North Ridge Park to Laurel Street ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "How long does it take to get to 54 Duncan Street by public transportation ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (& (Navigation.destination_? (Place.location_? (?= \" 54 Duncan Street \"))) (Navigation.transportationMode_? (?= (TransportationMode.PublicTransportation))))))", "idx": "11544", "datum_id": {"dialogue_id": "48312c8c-4e72-45b6-a15f-b809e38638d9", "turn_index": 1}}
{"user_turn_0": "Can you tell me if that is a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "I would actually prefer the 1 PM departure", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "11555", "datum_id": {"dialogue_id": "d5b4db2f-555f-41af-9795-0685a3b1818e", "turn_index": 5}}
{"user_turn_0": "Hi assistant , book a hotel with five stars and a double room .", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "Make sure it 's cheap and in Morden Park", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.location_? (?= \" Morden Park \"))) (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "11561", "datum_id": {"dialogue_id": "f8cb3e2e-48d2-40fa-b40a-8664818e1b9a", "turn_index": 1}}
{"user_turn_0": "Do they have a private bathroom ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Great . Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "11563", "datum_id": {"dialogue_id": "f8cb3e2e-48d2-40fa-b40a-8664818e1b9a", "turn_index": 3}}
{"user_turn_0": "Put an event on my calendar for 6:30 and send that in a message", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals endDateTime", "user_turn_1": "Tomorrow evening at 8:30", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.endDateTime_? (& (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 8L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))) (DateTime.date_? (?= (Tomorrow)))))))))", "idx": "11577", "datum_id": {"dialogue_id": "6ca559d0-f3d2-4610-9e25-8f9efcb4e385", "turn_index": 2}}
{"user_turn_0": "Hello , how long is the trip from The Daily Grind to The Daily Grind by public transportation ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 20", "user_turn_1": "Book a table at Kitty City restaurant at 6 on the 6th , and add that to my calendar", "tgt": "(plan (do (^(Restaurant) Book :object (& (Restaurant.restaurantName_? (?= \" Kitty City \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 6L))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 6L))))))))) (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (?= (^(DateTimeRange Restaurant) reference (^(Restaurant) always)))))))", "idx": "11582", "datum_id": {"dialogue_id": "0c11ab38-b415-4479-976f-d3acebb3d376", "turn_index": 1}}
{"user_turn_0": "I 'm leaving from London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "Let 's go with the one at 1:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "11616", "datum_id": {"dialogue_id": "765db09b-78ec-4ab5-9c7e-11869153d7f3", "turn_index": 2}}
{"user_turn_0": "Find me a restaurant that serves German Food please", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Juniper Cloud", "user_turn_1": "How much is it per person ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "11623", "datum_id": {"dialogue_id": "fbd61716-e83c-413f-8de6-506a52df8bf8", "turn_index": 3}}
{"user_turn_0": "Yes , make sure it 's expensive and has three stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Lakeside Demon", "user_turn_1": "That 's fine . Book it for 3 PM please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Dimple's \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "11626", "datum_id": {"dialogue_id": "fbd61716-e83c-413f-8de6-506a52df8bf8", "turn_index": 6}}
{"user_turn_0": "Book a table for 2 please", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Ok , change the date to Saturday then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday)))))))))", "idx": "11628", "datum_id": {"dialogue_id": "fbd61716-e83c-413f-8de6-506a52df8bf8", "turn_index": 8}}
{"user_turn_0": "What are directions to 22 North Ridge Park from Rose Street ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Add Book Trials in Luce Loft to my calendar", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.eventName_? (?= \" Book Trials \")) (CalendarEvent.location_? (?= \" Luce Loft \")))))", "idx": "11633", "datum_id": {"dialogue_id": "eded507f-5738-4004-a8a0-97acd6ca70f1", "turn_index": 3}}
{"user_turn_0": "Is it possible to get 3 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Are you able to change the check out date to the 28th ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Day)) Path.apply \" object.dateTimeRange.endDateTime.date.day \") (lambda (^(Constraint Day) x0) (?= (Day.apply 28L)))))", "idx": "11639", "datum_id": {"dialogue_id": "92adc523-3ca8-47f9-aeea-5a3a7c414f29", "turn_index": 4}}
{"user_turn_0": "Are you able to change the check out date to the 28th ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to make a prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "11640", "datum_id": {"dialogue_id": "92adc523-3ca8-47f9-aeea-5a3a7c414f29", "turn_index": 5}}
{"user_turn_0": "That looks fine", "agent_turn_0": "Root systen inform restaurant book Completed", "user_turn_1": "Who do you want to add to the event ?", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.attendees_? (^(Contact) always)) :object (CalendarEvent.recurrenceUnit_? (RecurrenceUnit.dayOfWeek_? (?= (Monday))))))", "idx": "11645", "datum_id": {"dialogue_id": "047c0b38-8349-42f7-b51d-0b778b042a44", "turn_index": 3}}
{"user_turn_0": "Where is my calendar event being held at on Monday at 1 PM", "agent_turn_0": "Root system inform calendarEvent find focus equals location equals Tides Estate", "user_turn_1": "Tell me what 's the weather like there ?", "tgt": "(plan (^(WeatherReport) Find :object (WeatherReport.location_? (^((Constraint String)) refer))))", "idx": "11654", "datum_id": {"dialogue_id": "17502683-0ec9-496f-bc5e-9caf89d917e0", "turn_index": 2}}
{"user_turn_0": "Yes , I want you to send it now", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Have the message sent to Mr. Burgess", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Burgess \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "11661", "datum_id": {"dialogue_id": "048a93e1-c145-4314-ae1c-a23b51b46bc2", "turn_index": 4}}
{"user_turn_0": "What rating does that hotel have ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "I prefer another hotel with a minimum of three stars", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.rating_? (?>= (someSalient (?= 3))))))))", "idx": "11664", "datum_id": {"dialogue_id": "d3573742-ee35-443e-ba77-53d885282797", "turn_index": 2}}
{"user_turn_0": "How can I get there", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Triton \"))))))", "idx": "11666", "datum_id": {"dialogue_id": "d3573742-ee35-443e-ba77-53d885282797", "turn_index": 4}}
{"user_turn_0": "Is there private bathroom ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Actually , I would rather stay in hotel which is rated at least as a two star one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.rating_? (?>= (someSalient (?= 2))))))))", "idx": "11680", "datum_id": {"dialogue_id": "afb9a65e-c09c-4301-b585-e0c11129d66e", "turn_index": 3}}
{"user_turn_0": "Actually , I would rather stay in hotel which is rated at least as a two star one", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Hilton Garden price equals 124", "user_turn_1": "Do the provide laundry service ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.laundry_? (^(Boolean) always)))))", "idx": "11681", "datum_id": {"dialogue_id": "afb9a65e-c09c-4301-b585-e0c11129d66e", "turn_index": 4}}
{"user_turn_0": "Do the provide laundry service ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Then make reservation there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Grand Hyatt \"))))))", "idx": "11682", "datum_id": {"dialogue_id": "afb9a65e-c09c-4301-b585-e0c11129d66e", "turn_index": 5}}
{"user_turn_0": "I need three rooms please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to make a prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "11691", "datum_id": {"dialogue_id": "921edef1-eb7c-47eb-8f41-1d873774f03c", "turn_index": 5}}
{"user_turn_0": "What 's the weather like there ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Sunny", "user_turn_1": "What 's the weather in Sheffield today ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint WeatherReport)) Path.apply \" object \") (lambda (^(Constraint WeatherReport) x0) (& (WeatherReport.location_? (?= \" Sheffield \")) (WeatherReport.atDateTime_? (DateTime.date_? (?= (Today))))))))", "idx": "11712", "datum_id": {"dialogue_id": "052f3aa9-d78b-434f-8df6-2c786f1acf3e", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , I need you to help me book a hotel stay close to the event going on from Monday to Wednesday .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))))))))", "idx": "11713", "datum_id": {"dialogue_id": "d958dcfc-d622-467f-811f-4f165bb35dcb", "turn_index": 0}}
{"user_turn_0": "Hmm , but do they have parking ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Cool , that 's awesome . Let 's book that one , then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "11716", "datum_id": {"dialogue_id": "d958dcfc-d622-467f-811f-4f165bb35dcb", "turn_index": 3}}
{"user_turn_0": "Directions by car to The Orion Suite from 21 Parkfield Street", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Thanks , next make a reminder for my event", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (^(CalendarEvent) always))))))", "idx": "11722", "datum_id": {"dialogue_id": "4556ac12-12cd-482f-919e-1c03df0c1bb0", "turn_index": 2}}
{"user_turn_0": "Thanks , next make a reminder for my event", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Book me a train that leaves before tonight at 8 going to Swansea", "tgt": "(plan (^(Train) Book :object (& (Train.destination_? (Place.location_? (?= \" Swansea \"))) (Train.departureDateTime_? (DateTime.time_? (?<= (someSalient (& (Time.hour_? (?= (Hour.apply 8L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "11723", "datum_id": {"dialogue_id": "4556ac12-12cd-482f-919e-1c03df0c1bb0", "turn_index": 3}}
{"user_turn_0": "No , find another hotel that is n't expensive", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Parallel Tower price equals 166", "user_turn_1": "Can I do laundry there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.laundry_? (^(Boolean) always)))))", "idx": "11734", "datum_id": {"dialogue_id": "718027fe-23dc-48cc-a3ab-c82dd0c61a2a", "turn_index": 3}}
{"user_turn_0": "Can I do laundry there ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Four Seasons \"))))))", "idx": "11735", "datum_id": {"dialogue_id": "718027fe-23dc-48cc-a3ab-c82dd0c61a2a", "turn_index": 4}}
{"user_turn_0": "No , next I will go to Roma on Friday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 3 object equals nextDepartureDateTime equals time equals hour equals 2 meridiem equals PM price equals 138", "user_turn_1": "This one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "11747", "datum_id": {"dialogue_id": "6ee12fff-c5f2-4839-a971-a6daf6749625", "turn_index": 6}}
{"user_turn_0": "I will depart from Belfast", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 1 meridiem equals PM", "user_turn_1": "I want the one at 3 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "11765", "datum_id": {"dialogue_id": "5db39bd0-b077-4cc5-be0f-890d96318dd7", "turn_index": 4}}
{"user_turn_0": "From London Heathrow", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 11 minute equals 40 meridiem equals AM", "user_turn_1": "Book that time for 1 passenger", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Glasgow \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (^((Constraint (List DateTime))) refer)))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 1))))))", "idx": "11779", "datum_id": {"dialogue_id": "45120b2e-e115-4c04-8deb-7079c4242d0f", "turn_index": 2}}
{"user_turn_0": "How long is the journey toWest Plumb Branch Lane by bike", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 50", "user_turn_1": "How long is the journey to my event on the calendar", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Navigation)) Path.apply \" object \") (lambda (^(Constraint Navigation) x0) (Navigation.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Morning)))))))))))", "idx": "11787", "datum_id": {"dialogue_id": "ce24e81e-6886-471a-a768-dafd8f768d68", "turn_index": 4}}
{"user_turn_0": "What type of food does it have", "agent_turn_0": "Root system inform restaurant find focus equals foodType equals Chinese food", "user_turn_1": "Book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "11806", "datum_id": {"dialogue_id": "c4f84d32-2029-4b81-9698-dc726badc7e7", "turn_index": 2}}
{"user_turn_0": "Do they have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Make the reservation there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "11813", "datum_id": {"dialogue_id": "59e7bad6-2582-43d0-9c4d-8fbeb8d13318", "turn_index": 3}}
{"user_turn_0": "Just one", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel free of charge ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "11815", "datum_id": {"dialogue_id": "59e7bad6-2582-43d0-9c4d-8fbeb8d13318", "turn_index": 5}}
{"user_turn_0": "Hello , i need a hotel booking in Holland Park , checking in today and checking out tomorrow . Get me a queen sized bed .", "agent_turn_0": "Root system prompt hotel book object equals priceRange", "user_turn_1": "I want it to be inexpensive and have a rating of at least one star", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.priceRange_? (?= (PriceRange.Low)))) (Hotel.rating_? (?>= (someSalient (?= 1))))))))", "idx": "11818", "datum_id": {"dialogue_id": "d65bdfca-af37-46e2-896c-ff04e0f0ba32", "turn_index": 1}}
{"user_turn_0": "Does this hotel have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "OK great , book it for me then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "11820", "datum_id": {"dialogue_id": "d65bdfca-af37-46e2-896c-ff04e0f0ba32", "turn_index": 3}}
{"user_turn_0": "Just three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually , I need to change the check out date to Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Thursday))))))", "idx": "11822", "datum_id": {"dialogue_id": "d65bdfca-af37-46e2-896c-ff04e0f0ba32", "turn_index": 5}}
{"user_turn_0": "What is the weather like today", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cloudy", "user_turn_1": "Make a Healthy Blossom with my brother from 9 to 10:30 on the calendar", "tgt": "(plan (^(CalendarEvent) Create :object (& (& (CalendarEvent.eventName_? (?= \" Healthy Blossom \")) (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 9L))))) (DateTimeRange.endDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L))))))))) (CalendarEvent.attendees_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Brother))))))))", "idx": "11827", "datum_id": {"dialogue_id": "70c82c54-673f-4a13-8eb1-5b76c8c49247", "turn_index": 3}}
{"user_turn_0": "Leeds", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM", "user_turn_1": "I want the one leaving at 4 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (Train.departureDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "11841", "datum_id": {"dialogue_id": "bca20fbd-c106-4c7b-b43f-ea4d79ef4e64", "turn_index": 2}}
{"user_turn_0": "Saturday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (^((Constraint Hour)) refer)) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "11845", "datum_id": {"dialogue_id": "bca20fbd-c106-4c7b-b43f-ea4d79ef4e64", "turn_index": 6}}
{"user_turn_0": "I prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "What is the average cost per person", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "11863", "datum_id": {"dialogue_id": "f753caf5-2fbd-48a3-b296-e772220c4729", "turn_index": 4}}
{"user_turn_0": "What is the average cost per person", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 65", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Godka \"))))))", "idx": "11864", "datum_id": {"dialogue_id": "f753caf5-2fbd-48a3-b296-e772220c4729", "turn_index": 5}}
{"user_turn_0": "That 's fine . Book it", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Ok , can you change the appointment date to today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (?= (Today))))))))", "idx": "11865", "datum_id": {"dialogue_id": "f753caf5-2fbd-48a3-b296-e772220c4729", "turn_index": 6}}
{"user_turn_0": "On Thursday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM", "user_turn_1": "Yeah sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "11886", "datum_id": {"dialogue_id": "ee88baef-c5db-41fe-a4c4-3c7c25437835", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , order complete", "tgt": "(plan (^(Flight) Book :object (Flight.destination_? (Place.location_? (?= \" Belfast City \")))))", "idx": "11899", "datum_id": {"dialogue_id": "59e08419-db38-4b98-a521-1d6b2b4a21a3", "turn_index": 0}}
{"user_turn_0": "Hey , order complete", "agent_turn_0": "Root system prompt flight book object equals source", "user_turn_1": "OK should I submit it now", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.source_? (Place.location_? (?= \" Birmingham \")))))))", "idx": "11900", "datum_id": {"dialogue_id": "59e08419-db38-4b98-a521-1d6b2b4a21a3", "turn_index": 1}}
{"user_turn_0": "OK should I submit it now", "agent_turn_0": "Root system prompt flight book object equals departureDateTime", "user_turn_1": "Give thee the 3:30 pm ticket", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& x0 (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (List.exists_? (DateTime.time_? (?<= (someSalient (& (Time.hour_? (?= (Hour.apply 7L))) (Time.minute_? (?= (Minute.apply 30L))))))))))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "11901", "datum_id": {"dialogue_id": "59e08419-db38-4b98-a521-1d6b2b4a21a3", "turn_index": 2}}
{"user_turn_0": "Give thee the 3:30 pm ticket", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "Book me a flight to Belfast City", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "11902", "datum_id": {"dialogue_id": "59e08419-db38-4b98-a521-1d6b2b4a21a3", "turn_index": 3}}
{"user_turn_0": "From Birmingham", "agent_turn_0": "Root system offer flight book", "user_turn_1": "I need a business flight leaving before 7:30 on Monday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "11904", "datum_id": {"dialogue_id": "59e08419-db38-4b98-a521-1d6b2b4a21a3", "turn_index": 5}}
{"user_turn_0": "I ca n't figure out how to get from Starline Cabs to 100 Foregate Street by car", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Put me down a reminder for my upcoming event , will you ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.atDateTime \") (lambda (^(Constraint DateTime) x0) (?= (^(DateTime CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1)))))))", "idx": "11909", "datum_id": {"dialogue_id": "1674c625-9358-4cc1-bac9-441c15428292", "turn_index": 4}}
{"user_turn_0": "What carbin class is it ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "I actually prefer the flight which departs at 1:30 PM and I would like to have business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "11914", "datum_id": {"dialogue_id": "4810574a-85d9-43e0-8234-9eff0734229d", "turn_index": 4}}
{"user_turn_0": "Do you know of any Japanese restaurants there ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capers", "user_turn_1": "Is there parking available ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "11920", "datum_id": {"dialogue_id": "22079c64-c9ed-4518-bff7-616ace3d11db", "turn_index": 4}}
{"user_turn_0": "So , which of those restaurants rate zero star ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kitty City", "user_turn_1": "Do they accept credit cards ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "11922", "datum_id": {"dialogue_id": "22079c64-c9ed-4518-bff7-616ace3d11db", "turn_index": 6}}
{"user_turn_0": "Do they accept credit cards ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "Fine . Go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Interknack \"))))))", "idx": "11923", "datum_id": {"dialogue_id": "22079c64-c9ed-4518-bff7-616ace3d11db", "turn_index": 7}}
{"user_turn_0": "Could I get two rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay for the hotel rooms ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "11936", "datum_id": {"dialogue_id": "12f738a4-8bc8-4250-99ee-c8adc723e6a7", "turn_index": 5}}
{"user_turn_0": "I actually need to move the check in date to the 8th", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Switch my check in date to today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Today)))))", "idx": "11938", "datum_id": {"dialogue_id": "12f738a4-8bc8-4250-99ee-c8adc723e6a7", "turn_index": 7}}
{"user_turn_0": "Switch my check in date to today", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Would I need to pay before I book ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "11939", "datum_id": {"dialogue_id": "12f738a4-8bc8-4250-99ee-c8adc723e6a7", "turn_index": 8}}
{"user_turn_0": "OK , go ahead and make me a reservation there for two nights , starting tomorrow", "agent_turn_0": "Root system prompt hotel book object equals roomType", "user_turn_1": "I want single rooms", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.roomType_? (List.exists_? (?= (RoomType.Single))))))))", "idx": "11944", "datum_id": {"dialogue_id": "b211cb4a-ea36-41b7-aad1-3d82659e3ad0", "turn_index": 3}}
{"user_turn_0": "Two , please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will it include breakfast ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "11946", "datum_id": {"dialogue_id": "b211cb4a-ea36-41b7-aad1-3d82659e3ad0", "turn_index": 5}}
{"user_turn_0": "Will it include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Ah , well . Ca n't win 'em all . Go ahead and make the reservation anyway", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "11947", "datum_id": {"dialogue_id": "b211cb4a-ea36-41b7-aad1-3d82659e3ad0", "turn_index": 6}}
{"user_turn_0": "Brussel", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "The one that leaves at 4:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "11951", "datum_id": {"dialogue_id": "57fc24db-1f76-4e74-971f-f7d525fe7573", "turn_index": 3}}
{"user_turn_0": "I prefer another hotel with at least two stars rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Rose price equals 160", "user_turn_1": "What 's the rating ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.rating_? (^(Number) always)))))", "idx": "11958", "datum_id": {"dialogue_id": "9d7a24de-5253-47b1-9f1d-014012ab7fa4", "turn_index": 3}}
{"user_turn_0": "What 's the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "Book it on my behalf", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Ace Hotel \"))))))", "idx": "11959", "datum_id": {"dialogue_id": "9d7a24de-5253-47b1-9f1d-014012ab7fa4", "turn_index": 4}}
{"user_turn_0": "One room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is a prepayment required ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "11963", "datum_id": {"dialogue_id": "9d7a24de-5253-47b1-9f1d-014012ab7fa4", "turn_index": 8}}
{"user_turn_0": "Does it have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "11967", "datum_id": {"dialogue_id": "bb94b0fd-444b-4f22-9c3a-5b2f00297562", "turn_index": 2}}
{"user_turn_0": "Can I see directions there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Make the reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "11975", "datum_id": {"dialogue_id": "e3276356-9852-4bde-a6f3-20e89067d528", "turn_index": 2}}
{"user_turn_0": "Does that place offer private bathrooms ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Okay , make the booking for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "11981", "datum_id": {"dialogue_id": "7cd5420e-6634-46ac-8438-e77bf0a4bcba", "turn_index": 3}}
{"user_turn_0": "Hey assistant , how far away is the venue of the event this morning", "agent_turn_0": "Root system inform navigation find focus equals distance equals number equals 1", "user_turn_1": "How long does it take to get to my next event", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1)))))))", "idx": "11992", "datum_id": {"dialogue_id": "170b34e3-e0ab-45d7-9344-767a2b15fd1d", "turn_index": 1}}
{"user_turn_0": "Hey , what is the location of the event I have with my son ?", "agent_turn_0": "Root system inform calendarEvent find focus equals location equals Chelsea", "user_turn_1": "How long to get there ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (Place.location_? (^((Constraint String)) refer)))))", "idx": "12015", "datum_id": {"dialogue_id": "6304ab63-0ba8-43c6-b161-c07807771d28", "turn_index": 1}}
{"user_turn_0": "Hey , can you get rid of the event I have on my calendar for Thursday ?", "agent_turn_0": "Root system inform calendarEvent delete Completed", "user_turn_1": "I want to get to the location of my event today by taxi . I want to be picked up from The Orion Suite", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" The Orion Suite \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))))))))))", "idx": "12021", "datum_id": {"dialogue_id": "505c6192-c532-420e-82fc-09b3bb722a93", "turn_index": 1}}
{"user_turn_0": "What 's the airline", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "Nope , no good . The 3:40 PM is better", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "12033", "datum_id": {"dialogue_id": "260181c4-bbf4-49bd-823f-2c90ed566042", "turn_index": 3}}
{"user_turn_0": "Hi there , book me a restaurant at 2 : 00 tomorrow", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName location", "user_turn_1": "Yes , it should be in Blackwell", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.location_? (?= \" Blackwall \"))))))", "idx": "12036", "datum_id": {"dialogue_id": "4235b0bb-d5d0-432a-978c-5ce4f31004a9", "turn_index": 1}}
{"user_turn_0": "Yes , it should be in Blackwell", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Encino", "user_turn_1": "Does it have outdoor seating", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "12037", "datum_id": {"dialogue_id": "4235b0bb-d5d0-432a-978c-5ce4f31004a9", "turn_index": 2}}
{"user_turn_0": "Does it have outdoor seating", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "That 's ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "12038", "datum_id": {"dialogue_id": "4235b0bb-d5d0-432a-978c-5ce4f31004a9", "turn_index": 3}}
{"user_turn_0": "How do I get there", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" River Park \"))))))", "idx": "12045", "datum_id": {"dialogue_id": "7242a84b-563c-4b67-bafc-a21719c07207", "turn_index": 4}}
{"user_turn_0": "3 single rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel for free ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "12048", "datum_id": {"dialogue_id": "7242a84b-563c-4b67-bafc-a21719c07207", "turn_index": 7}}
{"user_turn_0": "Book it for the 21st", "agent_turn_0": "Root system prompt restaurant book object equals atDateTime equals time", "user_turn_1": "OK . And how many people will be dining there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (?= (Minute.apply 30L))))))))))", "idx": "12062", "datum_id": {"dialogue_id": "265536bd-022c-40dd-91e8-7810246adbee", "turn_index": 2}}
{"user_turn_0": "I 'd like someplace else with at least a star in its rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Hilton price equals 145", "user_turn_1": "What 's its rating ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.rating_? (^(Number) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "12082", "datum_id": {"dialogue_id": "0d686a54-bb88-492c-9715-69c9421b3869", "turn_index": 2}}
{"user_turn_0": "What 's its rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Okay , book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" The Fresco \"))))))", "idx": "12083", "datum_id": {"dialogue_id": "0d686a54-bb88-492c-9715-69c9421b3869", "turn_index": 3}}
{"user_turn_0": "No , I am going to Zurich next on Sunday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 2 object equals nextDepartureDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM price equals 160", "user_turn_1": "That looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "12094", "datum_id": {"dialogue_id": "55d3e2c1-f1b2-4047-9f8c-aaea74eff605", "turn_index": 6}}
{"user_turn_0": "Wait , change the departure date of my second trip to the 17th", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 3 object equals nextDepartureDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM price equals 65", "user_turn_1": "Ok that sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "12096", "datum_id": {"dialogue_id": "55d3e2c1-f1b2-4047-9f8c-aaea74eff605", "turn_index": 8}}
{"user_turn_0": "On the 27th", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 2 object equals nextDepartureDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM price equals 138", "user_turn_1": "That works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "12104", "datum_id": {"dialogue_id": "129cdd89-6a12-4a55-99fe-ed43a1505f9d", "turn_index": 6}}
{"user_turn_0": "I 'm interested in restaurants which serve pizza or pizzerias", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dingo", "user_turn_1": "Can you tell me what the average cost per person is ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "12108", "datum_id": {"dialogue_id": "ec545b15-3544-4cc7-aff9-67362d309508", "turn_index": 2}}
{"user_turn_0": "Can you tell me what the average cost per person is ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 43", "user_turn_1": "That looks OK . Can you book it ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Interknack \"))))))", "idx": "12109", "datum_id": {"dialogue_id": "ec545b15-3544-4cc7-aff9-67362d309508", "turn_index": 3}}
{"user_turn_0": "Thanks so much . Can you get me a cab for 6 passengers to The African Waistcoat ?", "agent_turn_0": "Root system prompt taxi book object equals serviceType inform taxi find object equals serviceType equals listElementOne Saloon listElementTwo MPV listElementThree Executive", "user_turn_1": "I have no preference", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Taxi)) Path.apply \" object \") (lambda (^(Constraint Taxi) x0) (& x0 (Taxi.serviceType_? (List.exists_? (?= (ServiceType.Saloon))))))))", "idx": "12117", "datum_id": {"dialogue_id": "a0dace64-656e-441f-b92d-30ad57b921a9", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , create Online English from 2:30 to 4", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.eventName_? (?= \" Online English \")) (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))))) (DateTimeRange.endDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 4L))))))))))", "idx": "12134", "datum_id": {"dialogue_id": "a780bfc6-3822-48bd-8b99-582788bec5c9", "turn_index": 0}}
{"user_turn_0": "In Ealing", "agent_turn_0": "Root system prompt restaurant book object equals foodType", "user_turn_1": "I do n't care as long as it has three stars", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.rating_? (?>= (someSalient (?= 3))))) (Restaurant.foodType_? (?= (FoodType.Any)))))))", "idx": "12141", "datum_id": {"dialogue_id": "5580839e-c0be-4d02-9f5b-141ed1e8a9dc", "turn_index": 2}}
{"user_turn_0": "I do n't care as long as it has three stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "Do they take credit cards ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "12142", "datum_id": {"dialogue_id": "5580839e-c0be-4d02-9f5b-141ed1e8a9dc", "turn_index": 3}}
{"user_turn_0": "Do they take credit cards ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "12143", "datum_id": {"dialogue_id": "5580839e-c0be-4d02-9f5b-141ed1e8a9dc", "turn_index": 4}}
{"user_turn_0": "I need you to book it today at 3:30 PM", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Ok , change it to 7:30", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 7L))) (Time.minute_? (?= (Minute.apply 30L)))))))", "idx": "12145", "datum_id": {"dialogue_id": "5580839e-c0be-4d02-9f5b-141ed1e8a9dc", "turn_index": 6}}
{"user_turn_0": "Hey , book me a taxi from Angel Central", "agent_turn_0": "Root system prompt taxi book object equals destination", "user_turn_1": "I 'm going to Westgate House", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Taxi)) Path.apply \" object \") (lambda (^(Constraint Taxi) x0) (& x0 (Taxi.destination_? (Place.location_? (?= \" Westgate House \")))))))", "idx": "12149", "datum_id": {"dialogue_id": "589972cf-6715-4351-a48b-e1c3438f62f8", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , is it a direct flight ?", "tgt": "(plan (^(Flight) Book :object (& (& (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" London Heathrow \")))) (Flight.destination_? (Place.location_? (?= \" Amsterdam \")))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))))) (Flight.returnDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 26L))))))))", "idx": "12153", "datum_id": {"dialogue_id": "2efb569f-2665-47e0-bb6a-6ff700d65b1a", "turn_index": 0}}
{"user_turn_0": "Hi there , is it a direct flight ?", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 12 minute equals 25 meridiem equals PM", "user_turn_1": "Ok book it", "tgt": "(plan (^(Flight) Find :focus (Flight.stops_? (^(Number) always)) :object (?= (^(Flight Dynamic) reference (^(Dynamic) always)))))", "idx": "12154", "datum_id": {"dialogue_id": "2efb569f-2665-47e0-bb6a-6ff700d65b1a", "turn_index": 1}}
{"user_turn_0": "Ok book it", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Give me that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "12155", "datum_id": {"dialogue_id": "2efb569f-2665-47e0-bb6a-6ff700d65b1a", "turn_index": 2}}
{"user_turn_0": "Correct", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 4 minute equals 20 meridiem equals PM price equals 65", "user_turn_1": "I 'd rather the flight leaving at 3 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "12160", "datum_id": {"dialogue_id": "95e82ee5-7a65-4264-b8c2-6a9f81979e00", "turn_index": 2}}
{"user_turn_0": "Friday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 1 meridiem equals PM price equals 210", "user_turn_1": "That works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "12162", "datum_id": {"dialogue_id": "95e82ee5-7a65-4264-b8c2-6a9f81979e00", "turn_index": 4}}
{"user_turn_0": "Yes I want the price to be low and have a rating of five stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Gogol", "user_turn_1": "On average , how much will it cost per person ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "12172", "datum_id": {"dialogue_id": "dee7a7c7-6c5c-47c3-8c9b-bff8ad8fa533", "turn_index": 2}}
{"user_turn_0": "I prefer another restaurant that has outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kiwi Sea", "user_turn_1": "What kind of food does it have ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.foodType_? (^(FoodType) always)))))", "idx": "12174", "datum_id": {"dialogue_id": "dee7a7c7-6c5c-47c3-8c9b-bff8ad8fa533", "turn_index": 4}}
{"user_turn_0": "Tell me which restaurants have Seafood", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jurassic Pork", "user_turn_1": "On average , how much will it cost per person ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "12176", "datum_id": {"dialogue_id": "dee7a7c7-6c5c-47c3-8c9b-bff8ad8fa533", "turn_index": 6}}
{"user_turn_0": "On average , how much will it cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 39", "user_turn_1": "That \u2019s good , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Gogol \"))))))", "idx": "12177", "datum_id": {"dialogue_id": "dee7a7c7-6c5c-47c3-8c9b-bff8ad8fa533", "turn_index": 7}}
{"user_turn_0": "I prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Cityroom", "user_turn_1": "Does the restaurant take credit card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "12185", "datum_id": {"dialogue_id": "8468d06f-1ea3-4062-8017-c17d85019c43", "turn_index": 4}}
{"user_turn_0": "Which of the restaurants have rating at least two stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Spago", "user_turn_1": "What is the address of the restaurant", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "12187", "datum_id": {"dialogue_id": "8468d06f-1ea3-4062-8017-c17d85019c43", "turn_index": 6}}
{"user_turn_0": "I prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floss and Joes", "user_turn_1": "Does the restaurant have parking", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "12189", "datum_id": {"dialogue_id": "8468d06f-1ea3-4062-8017-c17d85019c43", "turn_index": 8}}
{"user_turn_0": "Does the restaurant have parking", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "That 's fine . Book it for me at 4 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Bard's Bench \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 4L))))))))))", "idx": "12190", "datum_id": {"dialogue_id": "8468d06f-1ea3-4062-8017-c17d85019c43", "turn_index": 9}}
{"user_turn_0": "Does this hotel offer a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "I would like to book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "12194", "datum_id": {"dialogue_id": "2661dde9-c1e8-4119-a919-a0c07d85bc65", "turn_index": 2}}
{"user_turn_0": "Which airline", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "Book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "12228", "datum_id": {"dialogue_id": "d136eb08-77f5-49a1-a559-4eb3b6009ab2", "turn_index": 6}}
{"user_turn_0": "I think I 'd like one with outdoor seating instead", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Maple", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Chipotle Grill \"))))))", "idx": "12244", "datum_id": {"dialogue_id": "06b69f75-d4b9-4889-b13a-b165dde82934", "turn_index": 4}}
{"user_turn_0": "Book me a room there please", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "March 14th through 17th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 14L))))) (DateTimeRange.endDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 17L)))) (month_? (Date.month_? (?= (March))))))))))))", "idx": "12261", "datum_id": {"dialogue_id": "ce24f7e5-16d7-414b-9188-d35c2ad26c0e", "turn_index": 2}}
{"user_turn_0": "Can you try at the Astro Resort hotel then ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there a cancellation fee ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "12264", "datum_id": {"dialogue_id": "ce24f7e5-16d7-414b-9188-d35c2ad26c0e", "turn_index": 5}}
{"user_turn_0": "Hey , can you get me a hotel room somewhere in Northwood with parking ?", "agent_turn_0": "Root system prompt hotel book object equals priceRange", "user_turn_1": "Something cheap with at least 3 stars", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.priceRange_? (?= (PriceRange.Low)))) (Hotel.rating_? (?>= (someSalient (?= 3))))))))", "idx": "12267", "datum_id": {"dialogue_id": "1de2c554-219a-4919-9cf3-11e61d06dc8f", "turn_index": 1}}
{"user_turn_0": "How many stars do they have ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Wow . Ok . I 'll take it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "12269", "datum_id": {"dialogue_id": "1de2c554-219a-4919-9cf3-11e61d06dc8f", "turn_index": 3}}
{"user_turn_0": "Which airline is it ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "That 's ok . I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "12277", "datum_id": {"dialogue_id": "b3c796b0-6b8a-4f87-84a6-d03638dacf38", "turn_index": 4}}
{"user_turn_0": "Which airline is it ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "I would rather have the one that departs at 2:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "12286", "datum_id": {"dialogue_id": "087879d8-92ca-4c1c-a3df-6112cd178d42", "turn_index": 7}}
{"user_turn_0": "when is my event with Anna ?", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals startDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM", "user_turn_1": "Remind me", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (^(CalendarEvent) always))))))", "idx": "12307", "datum_id": {"dialogue_id": "30c488eb-83dc-47c2-a23a-1286203852e5", "turn_index": 2}}
{"user_turn_0": "Is it a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "OK book me for that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "12324", "datum_id": {"dialogue_id": "42dac27e-6c9c-4afe-a489-985ec9a074ce", "turn_index": 4}}
{"user_turn_0": "No after that I will be going to Lisbon on Saturday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 3 object equals nextDepartureDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM price equals 155", "user_turn_1": "That is good for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "12326", "datum_id": {"dialogue_id": "42dac27e-6c9c-4afe-a489-985ec9a074ce", "turn_index": 6}}
{"user_turn_0": "I want another hotel with not zero star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Freehand price equals 125", "user_turn_1": "Does it has free wifi", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasWifi_? (^(Boolean) always)))))", "idx": "12332", "datum_id": {"dialogue_id": "b6830095-8c83-45b7-8e3e-2b6a6fdc5c96", "turn_index": 4}}
{"user_turn_0": "Does it has free wifi", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it please !", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Hilton \"))))))", "idx": "12333", "datum_id": {"dialogue_id": "b6830095-8c83-45b7-8e3e-2b6a6fdc5c96", "turn_index": 5}}
{"user_turn_0": "Hello , is there Point Presentation every week on the calendar", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Then create one", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday))))))))", "idx": "12339", "datum_id": {"dialogue_id": "c3fb0479-57a9-4243-880f-c1bdd7e0256c", "turn_index": 1}}
{"user_turn_0": "Then create one", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals startDateTime equals time", "user_turn_1": "The event will start at 11 AM and it will last for one hour", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.dayOfWeek_? (?= (Friday)))) (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (meridiem_? (?= (Meridiem.AM))))))) (DateTimeRange.duration_? (AppleDuration.hour_? (?= 1)))))))", "idx": "12340", "datum_id": {"dialogue_id": "c3fb0479-57a9-4243-880f-c1bdd7e0256c", "turn_index": 2}}
{"user_turn_0": "What is the weather today ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cold", "user_turn_1": "What is the weather in Bristol like today ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint WeatherReport)) Path.apply \" object \") (lambda (^(Constraint WeatherReport) x0) (& (WeatherReport.location_? (?= \" Bristol \")) x0))))", "idx": "12352", "datum_id": {"dialogue_id": "8363c843-8fd3-49ca-88cf-ef6537fb0790", "turn_index": 4}}
{"user_turn_0": "What is the weather in Bristol like today ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cloudy", "user_turn_1": "Thanks , also set up a reminder for Dry - Cleaning onto my calendar", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (CalendarEvent.eventName_? (?= \" Dry-Cleaning \")))))))", "idx": "12353", "datum_id": {"dialogue_id": "8363c843-8fd3-49ca-88cf-ef6537fb0790", "turn_index": 5}}
{"user_turn_0": "Some place where there 's parking that also has a low price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Parallel Tower price equals 134", "user_turn_1": "Is there free wifi ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasWifi_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "12356", "datum_id": {"dialogue_id": "6a8f9675-d313-4d9d-b947-fba067a8bf5e", "turn_index": 2}}
{"user_turn_0": "Is there free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Okay , make the reservation , please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "12357", "datum_id": {"dialogue_id": "6a8f9675-d313-4d9d-b947-fba067a8bf5e", "turn_index": 3}}
{"user_turn_0": "Can I get 3 rooms , please ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "First make the check out for Thursday instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Thursday)))))", "idx": "12361", "datum_id": {"dialogue_id": "6a8f9675-d313-4d9d-b947-fba067a8bf5e", "turn_index": 7}}
{"user_turn_0": "What class is the flight ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "That 's perfect , please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "12365", "datum_id": {"dialogue_id": "4c8c5ac8-7599-4530-8460-d54784683ddf", "turn_index": 2}}
{"user_turn_0": "Does it include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Please book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "12398", "datum_id": {"dialogue_id": "9294ed13-c817-4494-bc7e-c45a8db12155", "turn_index": 3}}
{"user_turn_0": "Birmingham", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I want the one that leaves at 4:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "12410", "datum_id": {"dialogue_id": "39bbf168-a8e3-4677-a426-0e0faff96992", "turn_index": 2}}
{"user_turn_0": "Next task , set up a reminder for my event on Wednesday", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Change the date of Math Bee on my calendar", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (^(Date) always)))) :object (CalendarEvent.eventName_? (?= \" Math Bee \"))))", "idx": "12417", "datum_id": {"dialogue_id": "7ffa5083-a743-4c28-8580-4092ae061cf7", "turn_index": 4}}
{"user_turn_0": "Yes , you are correct . Right as rain", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 2 meridiem equals PM price equals 119", "user_turn_1": "That 's good , book this flight for four people please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Glasgow \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 4))))))", "idx": "12425", "datum_id": {"dialogue_id": "303858a8-1192-4107-b622-24c5b1ebcdcc", "turn_index": 2}}
{"user_turn_0": "I come back on Friday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "12431", "datum_id": {"dialogue_id": "3db7fef8-c407-436a-80aa-bc14f734345d", "turn_index": 3}}
{"user_turn_0": "Yes you are right", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM price equals 135", "user_turn_1": "That 's fine . I 'd like to book this flight for three passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.destination_? (Place.location_? (?= \" Paris \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (^((Constraint (List DateTime))) refer)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 3))))))", "idx": "12443", "datum_id": {"dialogue_id": "53ca9739-27c8-48d0-af9a-dabb74f9c11d", "turn_index": 4}}
{"user_turn_0": "What is the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Book it with check - in today and check - out tomorrow", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.hotelName_? (^((Constraint String)) refer)) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.duration_? (AppleDuration.day_? (?= 1))))))))", "idx": "12458", "datum_id": {"dialogue_id": "b8b74cdd-53c4-49b3-a9d8-3462d6a93f41", "turn_index": 2}}
{"user_turn_0": "it is 3", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I have free cancellation with this booking ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "12462", "datum_id": {"dialogue_id": "b8b74cdd-53c4-49b3-a9d8-3462d6a93f41", "turn_index": 6}}
{"user_turn_0": "I prefer another restaurant that has outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Shining Gate", "user_turn_1": "Does the restaurant take credit card ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "12468", "datum_id": {"dialogue_id": "e52db7f1-bc97-49af-9125-44ba8939421c", "turn_index": 4}}
{"user_turn_0": "Does the restaurant take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "That 's fine . Book it for me at July 17th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Dim Summit \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (& (Date.month_? (?= (July))) (Date.day_? (?= (Day.apply 17L)))))))))))", "idx": "12469", "datum_id": {"dialogue_id": "e52db7f1-bc97-49af-9125-44ba8939421c", "turn_index": 5}}
{"user_turn_0": "Saloon would be good", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals 76 Windsor Road", "user_turn_1": "Edit the destination to 29 Alexander Road", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Place)) Path.apply \" object.destination \") (lambda (^(Constraint Place) x0) (Place.location_? (?= \" 29 Alexander Road \")))))", "idx": "12481", "datum_id": {"dialogue_id": "d466a500-5e3c-4584-a851-4f927dae73de", "turn_index": 2}}
{"user_turn_0": "Yes , book it", "agent_turn_0": "Root system inform calendarEvent create Completed restaurant book Completed", "user_turn_1": "Do me another favor . Can you send my calendar event to Lillian ?", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Lillian \")))) (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))))))", "idx": "12488", "datum_id": {"dialogue_id": "e436e045-4c4a-498b-9b34-b8316d7fee47", "turn_index": 4}}
{"user_turn_0": "Hi assistant , is there an event on my calendar that includes my sister ?", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Okay , make one then , please", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.attendees_? (Contact.person_? (Person.name_? (?= \" Austin \"))))))", "idx": "12495", "datum_id": {"dialogue_id": "84dfb8d4-6836-4113-ac55-65a648f315a0", "turn_index": 1}}
{"user_turn_0": "Yes . please", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "I want to book a minimum one star rated restaurant that is not expensive located in Notting Hill for the 15th", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Notting Hill \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 15L))))))) (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Restaurant.rating_? (?>= (someSalient (?= 1)))))))", "idx": "12512", "datum_id": {"dialogue_id": "273c24b4-e9ce-4293-935d-bad5e168cc92", "turn_index": 3}}
{"user_turn_0": "How can I get there ? Do you know ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Does n't look too bad . Okay , book it for me , please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Bourbon Bliss \"))))))", "idx": "12518", "datum_id": {"dialogue_id": "a56cd974-f501-4829-a41a-2433e40344b6", "turn_index": 4}}
{"user_turn_0": "From Cardiff", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM", "user_turn_1": "I actually prefer the one at 4:20 PM better", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "12535", "datum_id": {"dialogue_id": "63bd0a6b-f798-4098-9141-c8e2b703e1b5", "turn_index": 4}}
{"user_turn_0": "Curious which restaurants have Italian food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Juniper Cloud", "user_turn_1": "Where is that restaurant located ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "12543", "datum_id": {"dialogue_id": "1e3c01e2-775e-478f-a665-ae273ebc824e", "turn_index": 2}}
{"user_turn_0": "I 'd rather a different eatery with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Godka", "user_turn_1": "That works , make the reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" La Zilla \"))))))", "idx": "12546", "datum_id": {"dialogue_id": "1e3c01e2-775e-478f-a665-ae273ebc824e", "turn_index": 5}}
{"user_turn_0": "I will be coming back on Friday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM", "user_turn_1": "That will work", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "12562", "datum_id": {"dialogue_id": "85840782-24a3-4aa2-86d7-a44b8ed1d9da", "turn_index": 3}}
{"user_turn_0": "Include Mr Hart", "agent_turn_0": "Root system inform calendarEvent update Completed", "user_turn_1": "Thanks , next can you send them a text saying do n't wait me", "tgt": "(plan (^(Message) Create :object (Message.recipients_? (& (^((Constraint Contact)) refer) (Contact.textContent_? (?= \" don't wait me \"))))))", "idx": "12567", "datum_id": {"dialogue_id": "cdc92289-f7ff-4c39-98c1-cbfdef781977", "turn_index": 3}}
{"user_turn_0": "Friday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM price equals 145", "user_turn_1": "Let 's go with that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "12574", "datum_id": {"dialogue_id": "71887037-46a5-4cf8-b025-a41d63acaa25", "turn_index": 5}}
{"user_turn_0": "Is breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "I 'd rather stay somewhere else moderately priced", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.priceRange_? (?= (PriceRange.Moderate)))))))", "idx": "12584", "datum_id": {"dialogue_id": "67add966-774d-4609-be16-0138817aa501", "turn_index": 3}}
{"user_turn_0": "I 'd rather stay somewhere else moderately priced", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Crescent Resort price equals 170", "user_turn_1": "Yea I 'll take that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Freehand \"))))))", "idx": "12585", "datum_id": {"dialogue_id": "67add966-774d-4609-be16-0138817aa501", "turn_index": 4}}
{"user_turn_0": "Does the restaurant have outdoor seats ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "That 's fine . Book it anyway", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "12592", "datum_id": {"dialogue_id": "a25a62ac-c83d-4052-a73c-97727eba752d", "turn_index": 3}}
{"user_turn_0": "I want it have parking , and a low price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Ritz-Carlton price equals 65", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "12607", "datum_id": {"dialogue_id": "24d706c9-9fe6-43e3-905d-9c2284c8dfce", "turn_index": 2}}
{"user_turn_0": "mid range and I want Mexican", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kiwi Sea", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "12625", "datum_id": {"dialogue_id": "2f75a3bd-f5c1-4a2c-804b-2d202f19cddb", "turn_index": 2}}
{"user_turn_0": "That 's absolutely right", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "Let me go with the one at 4:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "12633", "datum_id": {"dialogue_id": "eabb2cb4-33ae-4167-803c-08b6fb9765a3", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , book the Empirica in Canary Wharf with a table for 6 . The booking time will be on Thursday at 4 o'clock", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.restaurantName_? (?= \" Empirica \")) (Restaurant.location_? (?= \" Canary Wharf \"))) (Restaurant.tableSize_? (?= 6))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 4L))))))))))", "idx": "12636", "datum_id": {"dialogue_id": "2c737f07-ab65-4b56-a229-958aa9373efe", "turn_index": 0}}
{"user_turn_0": "How do I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "12644", "datum_id": {"dialogue_id": "8b82a4bc-b2f6-4a2f-99b8-0ee47c8e3e51", "turn_index": 3}}
{"user_turn_0": "Remind me about the event", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Create a reminder for the event today", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object.atDateTime \") (lambda (^(Constraint CalendarEvent) x0) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today))))))))", "idx": "12660", "datum_id": {"dialogue_id": "50639d06-543c-4f06-8d29-6834ff199e07", "turn_index": 4}}
{"user_turn_0": "The 4th , and I need it to be 2 tickets", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "What about the 9th ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Day)) Path.apply \" object.departureDateTime.date.day \") (lambda (^(Constraint Day) x0) (?= (Day.apply 9L)))))", "idx": "12669", "datum_id": {"dialogue_id": "dee7493e-b5c0-4cad-b41f-2db5501ec01c", "turn_index": 3}}
{"user_turn_0": "Does it have a private bathroom", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Can you book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "12677", "datum_id": {"dialogue_id": "641f8ffc-94bf-4151-aba2-c14bb711ad1d", "turn_index": 3}}
{"user_turn_0": "Yeah , can I get 2 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Sure , can you change the check in date to Tuesday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "12680", "datum_id": {"dialogue_id": "641f8ffc-94bf-4151-aba2-c14bb711ad1d", "turn_index": 6}}
{"user_turn_0": "Sure , can you change the check in date to Tuesday ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "12681", "datum_id": {"dialogue_id": "641f8ffc-94bf-4151-aba2-c14bb711ad1d", "turn_index": 7}}
{"user_turn_0": "Delete boat race from my calendar", "agent_turn_0": "Root system inform calendarEvent delete Completed", "user_turn_1": "Create event Team Building Meetings on the calendar", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.eventName_? (?= \" Team Building Meetings \"))))", "idx": "12692", "datum_id": {"dialogue_id": "a633eb5b-2806-4570-b814-fac950a9c3c1", "turn_index": 4}}
{"user_turn_0": "I d rather have one with a not zero star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Moody Moon price equals 155", "user_turn_1": "Can you book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Hyatt \"))))))", "idx": "12746", "datum_id": {"dialogue_id": "277fbc0b-1089-43f1-b6ea-b93c084b10e5", "turn_index": 6}}
{"user_turn_0": "Give me three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Would I need to pay at booking", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "12748", "datum_id": {"dialogue_id": "277fbc0b-1089-43f1-b6ea-b93c084b10e5", "turn_index": 8}}
{"user_turn_0": "Yes , price range should be not a high price", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Bard\u2019s Bench", "user_turn_1": "Does the restaurant have parking ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "12756", "datum_id": {"dialogue_id": "6010727b-9598-49e2-bcb1-caf3baf5cd43", "turn_index": 4}}
{"user_turn_0": "I prefer another restaurant in the Abbey Wood area with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flew Z", "user_turn_1": "Does the restaurant have parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "12758", "datum_id": {"dialogue_id": "6010727b-9598-49e2-bcb1-caf3baf5cd43", "turn_index": 6}}
{"user_turn_0": "I prefer another restaurant in the Abbey Wood area with outdoor seats ,", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floss and Joes", "user_turn_1": "What is the average cost per person ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "12760", "datum_id": {"dialogue_id": "6010727b-9598-49e2-bcb1-caf3baf5cd43", "turn_index": 8}}
{"user_turn_0": "What is the average cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 29", "user_turn_1": "Ok . That 's fine . Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Bard's Bench \"))))))", "idx": "12761", "datum_id": {"dialogue_id": "6010727b-9598-49e2-bcb1-caf3baf5cd43", "turn_index": 9}}
{"user_turn_0": "Yup , send it", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Thanks so much . Get me a hotel booking in Ealing from April 16th to the 18th with a double room", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" Ealing \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 16L)))) (month_? (Date.month_? (?= (April)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 18L)))))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Double)))))))", "idx": "12773", "datum_id": {"dialogue_id": "3adcdfd7-46b1-4e9e-aab9-9d6a751e51bd", "turn_index": 3}}
{"user_turn_0": "Thanks so much . Get me a hotel booking in Ealing from April 16th to the 18th with a double room", "agent_turn_0": "Root system prompt hotel book object equals priceRange", "user_turn_1": "Can you find me an inexpensive one with parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.priceRange_? (?= (PriceRange.Low)))) (Hotel.hasParking_? (?= true))))))", "idx": "12774", "datum_id": {"dialogue_id": "3adcdfd7-46b1-4e9e-aab9-9d6a751e51bd", "turn_index": 4}}
{"user_turn_0": "What 's the weather like in Coventry ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Sunny", "user_turn_1": "Please modify the date of World of Opportunities to Monday from today at 2:30 PM", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday)))))) :object (& (CalendarEvent.eventName_? (?= \" World of Opportunities \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (?= (Today))) (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "12782", "datum_id": {"dialogue_id": "88d0f2b0-54f5-49de-b0a9-0887ea4cf214", "turn_index": 2}}
{"user_turn_0": "Please modify the date of World of Opportunities to Monday from today at 2:30 PM", "agent_turn_0": "Root system inform calendarEvent update Completed", "user_turn_1": "Please give me directions to 29 Alexander road by public transport", "tgt": "(plan (^(Navigation) Find :object (& (Navigation.destination_? (Place.location_? (?= \" 29 Alexander Road \"))) (Navigation.transportationMode_? (?= (TransportationMode.PublicTransportation))))))", "idx": "12783", "datum_id": {"dialogue_id": "88d0f2b0-54f5-49de-b0a9-0887ea4cf214", "turn_index": 3}}
{"user_turn_0": "I 'd actually like a restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "Did you check if it has parking", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "12788", "datum_id": {"dialogue_id": "5ffb9afb-fdc2-485a-8760-e81efd5116b1", "turn_index": 3}}
{"user_turn_0": "Did you check if it has parking", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Okay then , fine . Please book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Jute Box \"))))))", "idx": "12789", "datum_id": {"dialogue_id": "5ffb9afb-fdc2-485a-8760-e81efd5116b1", "turn_index": 4}}
{"user_turn_0": "Hey assistant , make a reservation for me at a five star restaurant in London Bridge .", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Spago", "user_turn_1": "What about outdoor seats", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "12799", "datum_id": {"dialogue_id": "fbc1182a-23cc-4169-82d0-4a3691f1d6da", "turn_index": 1}}
{"user_turn_0": "What about outdoor seats", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "Sweet , make it for July 19th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (& (Date.month_? (?= (July))) (Date.day_? (?= (Day.apply 19L)))))))))))", "idx": "12800", "datum_id": {"dialogue_id": "fbc1182a-23cc-4169-82d0-4a3691f1d6da", "turn_index": 2}}
{"user_turn_0": "it is 11:30", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Shoot , change it for tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Tomorrow)))))", "idx": "12802", "datum_id": {"dialogue_id": "fbc1182a-23cc-4169-82d0-4a3691f1d6da", "turn_index": 4}}
{"user_turn_0": "That 's right . I 'm leaving on Monday", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM price equals 210", "user_turn_1": "I rather have the one that leaves at 1:30 PM . Make sure its economy class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Paris \"))) (Flight.tripType_? (?= (TripType.oneWay)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "12807", "datum_id": {"dialogue_id": "90b75926-0f34-4835-bda8-98803d533d88", "turn_index": 2}}
{"user_turn_0": "Any time after 7:30 AM on the 14th", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM price equals 201", "user_turn_1": "Okay , I 'll book it for one passenger", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Glasgow \"))) (Flight.tripType_? (?= (TripType.oneWay)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 1))))))", "idx": "12818", "datum_id": {"dialogue_id": "80ee7014-0cb3-458d-8869-42e34f86f8be", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , please send the May the 5th event to Mr Harris", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Harris \")) (Person.namePrefix_? (?= \" Mr \"))))) (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (& (Date.day_? (?= (Day.apply 5L))) (Date.month_? (?= (May)))))))))))))", "idx": "12820", "datum_id": {"dialogue_id": "55340335-5d3a-469b-ab19-80d8d231ab2a", "turn_index": 0}}
{"user_turn_0": "Hello assistant , create a reminder for me will you", "agent_turn_0": "Root system prompt reminder create object equals atDateTime", "user_turn_1": "10 AM on Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Option (Constraint Reminder))) Path.apply \" object \") (lambda (^(Option (Constraint Reminder)) x0) (Some (Reminder.atDateTime_? (& (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (meridiem_? (?= (Meridiem.AM))))) (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday))))))))))", "idx": "12826", "datum_id": {"dialogue_id": "b2b82348-0773-44ea-8226-2286267c544d", "turn_index": 1}}
{"user_turn_0": "I want a different hotel with not zero star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Hilton Garden price equals 138", "user_turn_1": "Book the hotel for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Diva \"))))))", "idx": "12860", "datum_id": {"dialogue_id": "6b2e1974-08cd-4c28-82c1-076ab81475c8", "turn_index": 3}}
{"user_turn_0": "I need 2 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there booking cancellation", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "12865", "datum_id": {"dialogue_id": "6b2e1974-08cd-4c28-82c1-076ab81475c8", "turn_index": 8}}
{"user_turn_0": "That event will be complete at 8:30 PM", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "I also need a calendar event set up at 4 o'clock and put on my reminders", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (DateTimeRange.startDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 4L))))))))", "idx": "12869", "datum_id": {"dialogue_id": "224be734-21c1-4321-9962-29b90a0720b1", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , send next next event to my love", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Love))))))))", "idx": "12895", "datum_id": {"dialogue_id": "c257392d-296d-4b17-aa3b-b8d67a6afde2", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , i would like to book a train to Waverely arriving before 8 PM ; I will be leaving from York central station", "tgt": "(plan (^(Train) Book :object (& (& (Train.source_? (Place.location_? (?= \" York central station \"))) (Train.destination_? (Place.location_? (?= \" Waverley \")))) (Train.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (Time.hour_? (?= (Hour.apply 8L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "12899", "datum_id": {"dialogue_id": "ada6093e-430c-40c9-a84c-c4ddc357f50a", "turn_index": 0}}
{"user_turn_0": "From Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM price equals 124", "user_turn_1": "Ok book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "12923", "datum_id": {"dialogue_id": "62aaa235-908d-404b-9b68-dab3e053512f", "turn_index": 4}}
{"user_turn_0": "I will leave from London on April 12th", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 11 minute equals 50 meridiem equals AM", "user_turn_1": "ko should I send it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "12928", "datum_id": {"dialogue_id": "007c4f4b-90b5-4d94-beb8-351b3dd3f0a6", "turn_index": 3}}
{"user_turn_0": "Is it a roundtrip ticket", "agent_turn_0": "Root system prompt flight book object equals tripType", "user_turn_1": "Ok there are five , the earliest is at 12:30 pm and costs 166 pounds", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday)))))))))", "idx": "12930", "datum_id": {"dialogue_id": "007c4f4b-90b5-4d94-beb8-351b3dd3f0a6", "turn_index": 5}}
{"user_turn_0": "Hi my assistant , display hotels in Notting Hill", "agent_turn_0": "Root system inform hotel find", "user_turn_1": "I need to make a reservation to check - in tomorrow and check - out on Tuesday", "tgt": "(plan (^(Hotel) Book :object (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday)))))))))", "idx": "12934", "datum_id": {"dialogue_id": "afd3fcf5-696b-4abc-9494-6c9ec30e6494", "turn_index": 1}}
{"user_turn_0": "I would like a different hotel with a price that 's not high", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Peninsula price equals 138", "user_turn_1": "Does it have private bath rooms ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "12938", "datum_id": {"dialogue_id": "afd3fcf5-696b-4abc-9494-6c9ec30e6494", "turn_index": 5}}
{"user_turn_0": "Does it have private bath rooms ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Go ahead and book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Etiquette Suites \"))))))", "idx": "12939", "datum_id": {"dialogue_id": "afd3fcf5-696b-4abc-9494-6c9ec30e6494", "turn_index": 6}}
{"user_turn_0": "2 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you make the check - out date be the 21st ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 21L))))))", "idx": "12943", "datum_id": {"dialogue_id": "afd3fcf5-696b-4abc-9494-6c9ec30e6494", "turn_index": 10}}
{"user_turn_0": "Floss and Joes restaurant is in what price range ?", "agent_turn_0": "Root system inform restaurant find focus equals priceRange equals High", "user_turn_1": "I 'd like to make a reservation there tomorrow", "tgt": "(plan (^(Restaurant) Book :object (& (^((Constraint Restaurant)) refer) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow))))))))", "idx": "12964", "datum_id": {"dialogue_id": "ad6fb5a1-9776-4e9b-8d9a-2b8cd92872b7", "turn_index": 4}}
{"user_turn_0": "What 's the trip from The Orion Suite to 207 Upper Street duration ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 10", "user_turn_1": "How long will it take me to drive to Westgate House ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Navigation)) Path.apply \" object \") (lambda (^(Constraint Navigation) x0) (& (Navigation.destination_? (Place.location_? (?= \" Westgate House \"))) (Navigation.transportationMode_? (?= (TransportationMode.Driving)))))))", "idx": "12967", "datum_id": {"dialogue_id": "314f50f3-8137-4c1d-b712-490cf2f7f304", "turn_index": 2}}
{"user_turn_0": "I need another favor . Create an event held in Shoreditch from 9 AM to 11 AM on the calendar", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Send the event for tomorrow to Mr Kerr", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))))))) (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Kerr \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "12978", "datum_id": {"dialogue_id": "51202607-6d66-433f-9fb5-db9efaae3826", "turn_index": 3}}
{"user_turn_0": "How long will it take to get to the event today ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 20", "user_turn_1": "What 's the weather in York for today like ?", "tgt": "(plan (^(WeatherReport) Find :object (& (WeatherReport.location_? (?= \" York \")) (WeatherReport.atDateTime_? (DateTime.date_? (?= (Today)))))))", "idx": "12983", "datum_id": {"dialogue_id": "ec20d033-db8a-418e-88cd-9a951ed2e85c", "turn_index": 3}}
{"user_turn_0": "What 's the weather in York for today like ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cold", "user_turn_1": "I would like to book the Goat and Guru restaurant in Handley Wood for 11", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.location_? (?= \" Hadley Wood \")) (Restaurant.restaurantName_? (?= \" Goat and Guru \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 11L)))))))))", "idx": "12984", "datum_id": {"dialogue_id": "ec20d033-db8a-418e-88cd-9a951ed2e85c", "turn_index": 4}}
{"user_turn_0": "Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 1 meridiem equals PM price equals 119", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (^((Constraint Hour)) refer)) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "12992", "datum_id": {"dialogue_id": "56819e5d-c8cf-4341-84bc-9565a99c05eb", "turn_index": 5}}
{"user_turn_0": "Okay , that one", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM", "user_turn_1": "Alright , looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "13014", "datum_id": {"dialogue_id": "901b8473-0617-48af-b3c1-1d98ced074ea", "turn_index": 2}}
{"user_turn_0": "Hi there , i want to know where is my calendar event held at 11:30 AM going to be held .", "agent_turn_0": "Root system inform calendarEvent find focus equals location equals Soho", "user_turn_1": "Please tell me how long does it take to get there", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (Place.location_? (^((Constraint String)) refer)))))", "idx": "13024", "datum_id": {"dialogue_id": "5aa5e427-36c5-475a-9b57-8589fa67ad49", "turn_index": 1}}
{"user_turn_0": "I will return on Thursday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "13040", "datum_id": {"dialogue_id": "68278001-c236-4eae-9985-5214b5d6fcf5", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , book a hotel that is n't too expensive with car parking .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))) (Hotel.hasParking_? (?= true)))))", "idx": "13042", "datum_id": {"dialogue_id": "af8a37b8-a032-4891-923f-10d44725f7f8", "turn_index": 0}}
{"user_turn_0": "Do they have a gym ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Can you book it for me ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "13045", "datum_id": {"dialogue_id": "af8a37b8-a032-4891-923f-10d44725f7f8", "turn_index": 3}}
{"user_turn_0": "Thursday at 10 AM", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Ok , edit to tomorrow instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Tomorrow)))))", "idx": "13053", "datum_id": {"dialogue_id": "4ca8b445-537e-4be4-b73a-576e85be8cf6", "turn_index": 3}}
{"user_turn_0": "Hi assistant , please add a reminder for the event tomorrow .", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Please set a reminder for the event tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "13056", "datum_id": {"dialogue_id": "bbf40d88-8d73-47e8-82cc-9e2a40548355", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , book a cheap hotel in Forest Hill", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= \" Forest Hill \")) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))))))", "idx": "13065", "datum_id": {"dialogue_id": "318cf58c-c96c-4057-82af-71f3aed4ae08", "turn_index": 0}}
{"user_turn_0": "I prefer another hotel with at least three stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Green Lushy Resorts price equals 134", "user_turn_1": "What 's the rating", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.rating_? (^(Number) always)))))", "idx": "13068", "datum_id": {"dialogue_id": "318cf58c-c96c-4057-82af-71f3aed4ae08", "turn_index": 3}}
{"user_turn_0": "What 's the rating", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Blossomwell Resorts \"))))))", "idx": "13069", "datum_id": {"dialogue_id": "318cf58c-c96c-4057-82af-71f3aed4ae08", "turn_index": 4}}
{"user_turn_0": "Can I have 3 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "13074", "datum_id": {"dialogue_id": "318cf58c-c96c-4057-82af-71f3aed4ae08", "turn_index": 9}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , hey , book me Chipotle Grill in Hillingdon with table for 5 . The booking time should be at 1:30 PM .", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.restaurantName_? (?= \" Chipotle Grill \")) (Restaurant.location_? (?= \" Hillingdon \"))) (Restaurant.tableSize_? (?= 5))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "13078", "datum_id": {"dialogue_id": "0bf87bb9-aa54-47a7-80e8-4aa789d83a4e", "turn_index": 0}}
{"user_turn_0": "Yeah , American Food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Lakeside Demon", "user_turn_1": "Does this restaurant take credit card ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "13083", "datum_id": {"dialogue_id": "0bf87bb9-aa54-47a7-80e8-4aa789d83a4e", "turn_index": 5}}
{"user_turn_0": "Let me have 3 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Change the check out date to Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Sunday)))))", "idx": "13094", "datum_id": {"dialogue_id": "41522650-8aef-47db-b038-dfb3675895f2", "turn_index": 5}}
{"user_turn_0": "Change the check out date to Sunday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there a prepayment needed ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "13095", "datum_id": {"dialogue_id": "41522650-8aef-47db-b038-dfb3675895f2", "turn_index": 6}}
{"user_turn_0": "It will end at 6:30 PM today", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "How do I get from 66 Park Avenue to Ash Grove Industrial park by walking ?", "tgt": "(plan (^(Navigation) Find :object (& (& (Navigation.source_? (Place.location_? (?= \" 66 Park Avenue \"))) (Navigation.destination_? (Place.location_? (?= \" Ash Grove Industrial Park \")))) (Navigation.transportationMode_? (?= (TransportationMode.Walking))))))", "idx": "13114", "datum_id": {"dialogue_id": "1474e0c5-9c0f-4465-81ac-4d4a4e689162", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , what table size do you want ?", "tgt": "(plan (do (^(Restaurant) Book :object (& (Restaurant.restaurantName_? (?= \" Godka \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM))))))))) (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (?= (^(DateTimeRange Restaurant) reference (^(Restaurant) always)))))))", "idx": "13132", "datum_id": {"dialogue_id": "2d2ef8a4-d5af-4227-8717-c6a194f68820", "turn_index": 0}}
{"user_turn_0": "Hello assistant , what table size do you want ?", "agent_turn_0": "Root system prompt restaurant book object equals tableSize", "user_turn_1": "Book the Godka restaurant for 11:30 AM and have it added to calendar", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.tableSize_? (?= 3))))))", "idx": "13133", "datum_id": {"dialogue_id": "2d2ef8a4-d5af-4227-8717-c6a194f68820", "turn_index": 1}}
{"user_turn_0": "Book the Godka restaurant for 11:30 AM and have it added to calendar", "agent_turn_0": "Root system offer restaurant book inform calendarEvent find Conflicted", "user_turn_1": "No . Switch the time to 10:30", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))))))", "idx": "13134", "datum_id": {"dialogue_id": "2d2ef8a4-d5af-4227-8717-c6a194f68820", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , my Canada Water train , when does it arrive", "tgt": "(plan (^(Train) Find :focus (Train.arrivalDateTime_? (^(DateTime) always)) :object (Train.destination_? (Place.location_? (?= \" Canada Water \")))))", "idx": "13143", "datum_id": {"dialogue_id": "8bb65c24-1118-4a8a-a961-7bce4cdb4f57", "turn_index": 0}}
{"user_turn_0": "Hi there , get me a train to St Pancras coming before 9 PM .", "agent_turn_0": "Root system prompt train book object equals source", "user_turn_1": "Kings Cross", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (Train.source_? (Place.location_? (?= \" King's Cross \")))))))", "idx": "13159", "datum_id": {"dialogue_id": "00bc1d56-2b54-42d3-8958-eab6e897f703", "turn_index": 1}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Also book me a cheap hotel today and checking out on the 12th with a king bed", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 12L)))))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.King)))))))", "idx": "13167", "datum_id": {"dialogue_id": "ef2af880-8520-446d-9e84-f7f0e5ecadc9", "turn_index": 4}}
{"user_turn_0": "Hey assistant , i want to book a restaurant that is n't zero stars in Liverpool Street", "agent_turn_0": "Root system prompt restaurant book object equals foodType", "user_turn_1": "I want a cheap Mexican restaurant", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.foodType_? (?= (FoodType.Mexican)))) (Restaurant.priceRange_? (?= (PriceRange.Low)))))))", "idx": "13182", "datum_id": {"dialogue_id": "0851d32f-21eb-438b-a495-435ef0a08e50", "turn_index": 1}}
{"user_turn_0": "I prefer a different restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Empirica", "user_turn_1": "How much does it cost per person ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "13185", "datum_id": {"dialogue_id": "0851d32f-21eb-438b-a495-435ef0a08e50", "turn_index": 4}}
{"user_turn_0": "None of those look good what about a sushi restaurant", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Beef Easy", "user_turn_1": "Where is this location ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "13188", "datum_id": {"dialogue_id": "0851d32f-21eb-438b-a495-435ef0a08e50", "turn_index": 7}}
{"user_turn_0": "Where is this location ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 66 Park Avenue", "user_turn_1": "Sounds good . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Interknack \"))))))", "idx": "13189", "datum_id": {"dialogue_id": "0851d32f-21eb-438b-a495-435ef0a08e50", "turn_index": 8}}
{"user_turn_0": "I want another restaurant that has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floq", "user_turn_1": "Does it have parking ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "13213", "datum_id": {"dialogue_id": "9eb3d491-c430-4925-a0dc-6bbb6fec3260", "turn_index": 4}}
{"user_turn_0": "I want one that has outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Bandits", "user_turn_1": "Does it accept credit cards ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "13215", "datum_id": {"dialogue_id": "9eb3d491-c430-4925-a0dc-6bbb6fec3260", "turn_index": 6}}
{"user_turn_0": "Which one has a three stars rating ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Emptia", "user_turn_1": "Does they take credit cards ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "13217", "datum_id": {"dialogue_id": "9eb3d491-c430-4925-a0dc-6bbb6fec3260", "turn_index": 8}}
{"user_turn_0": "Does they take credit cards ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Book it for November the 13th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Spago \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (& (Date.month_? (?= (November))) (Date.day_? (?= (Day.apply 13L)))))))))))", "idx": "13218", "datum_id": {"dialogue_id": "9eb3d491-c430-4925-a0dc-6bbb6fec3260", "turn_index": 9}}
{"user_turn_0": "What time is my reminder ?", "agent_turn_0": "Root system inform reminder find focus equals atDateTime equals time equals hour equals 6 minute equals 30 meridiem equals PM", "user_turn_1": "Set a reminder for the event tomorrow", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow))))))))))", "idx": "13226", "datum_id": {"dialogue_id": "ea12a553-7329-4104-a727-897a9f0f624e", "turn_index": 4}}
{"user_turn_0": "I want three single rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there a prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "13248", "datum_id": {"dialogue_id": "efbbbfcc-d21c-4424-90e9-d6aebcee7880", "turn_index": 6}}
{"user_turn_0": "I 'm heading to Amsterdam ; ticket for one person please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 4 meridiem equals PM price equals 160", "user_turn_1": "I would actually prefer the flight leaving at 4:20 PM ; make it an economy class ticket", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.source_? (Place.location_? (?= \" London Heathrow \"))) (Flight.departureDateTime_? (& (^((Constraint (List DateTime))) refer) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 1))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "13253", "datum_id": {"dialogue_id": "96d3cbf3-02c7-45e8-a65b-cb4aaeb1c417", "turn_index": 3}}
{"user_turn_0": "Thanks for the help . Can you make a reminder for the event as well ?", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Thanks so much . Send the event happening tomorrow to Mr Gill", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))))))) (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Gill \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "13261", "datum_id": {"dialogue_id": "e785c879-f6fd-4d03-adf9-98ca5de6892c", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i would like to reserve business class flight tickets leaving from London Heathrow for one passenger . Going to travel by myself .", "tgt": "(plan (^(Flight) Book :object (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.source_? (Place.location_? (?= \" London Heathrow \")))) (Flight.passengers_? (?= 1)))))", "idx": "13281", "datum_id": {"dialogue_id": "d4952657-3ed1-4091-9ae1-e0bee9603ded", "turn_index": 0}}
{"user_turn_0": "Could you check which airline it is ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "I would rather go at 3:40 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "13285", "datum_id": {"dialogue_id": "d4952657-3ed1-4091-9ae1-e0bee9603ded", "turn_index": 4}}
{"user_turn_0": "I would rather go at 3:40 PM", "agent_turn_0": "Root system prompt flight book object equals tripType", "user_turn_1": "I am not coming back", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.tripType_? (?= (TripType.oneWay)))))))", "idx": "13286", "datum_id": {"dialogue_id": "d4952657-3ed1-4091-9ae1-e0bee9603ded", "turn_index": 5}}
{"user_turn_0": "Hi assistant , how many stars does Hambone restaurant in Old Ford have ?", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 4", "user_turn_1": "What 's the price range ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.priceRange_? (^(PriceRange) always)) :object (Restaurant.restaurantName_? (?= \" Hambone \"))))", "idx": "13294", "datum_id": {"dialogue_id": "30c6c97e-3cac-44cb-b32c-9cbddf7586e8", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , 2 until 5 PM .", "tgt": "(plan (do (^(CalendarEvent) Create :object (CalendarEvent.attendees_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Sister)))))) (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Message.recipients_? (Contact.person_? (?= (^(Person CalendarEvent) reference (^(CalendarEvent) always)))))))))", "idx": "13298", "datum_id": {"dialogue_id": "ee118e59-086f-4ee3-bcc6-22e6a21cf92d", "turn_index": 0}}
{"user_turn_0": "Hello , 2 until 5 PM .", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange", "user_turn_1": "Schedule a calendar event with my sister and have it sent to her", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object \") (lambda (^(Constraint CalendarEvent) x0) (& x0 (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 2L))))) (DateTimeRange.endDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 5L))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "13299", "datum_id": {"dialogue_id": "ee118e59-086f-4ee3-bcc6-22e6a21cf92d", "turn_index": 1}}
{"user_turn_0": "Is breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "K. Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "13310", "datum_id": {"dialogue_id": "d65f1c39-57ab-4f73-8051-18309a6c4954", "turn_index": 2}}
{"user_turn_0": "Also , how far is it from 7193 South Evergreen Road over to The African Waistcoat ?", "agent_turn_0": "Root system inform navigation find focus equals distance equals number equals 2", "user_turn_1": "Thanks for the help . Cool , I need you to get me a cab ride from 67 North Street and going to my event", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" 67 North Street \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (^(CalendarEvent) always)))))))", "idx": "13319", "datum_id": {"dialogue_id": "fb679ef4-149e-4dde-a772-9018cf653d65", "turn_index": 4}}
{"user_turn_0": "Hi assistant , send my train schedule going to Dudley from Glasgow to Mr Parr please", "agent_turn_0": "Root system prompt message create object equals recipients equals person equals nameHint", "user_turn_1": "Send it to Mr Michael Parr", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Person)) Path.apply \" object.recipients.person \") (lambda (^(Constraint Person) x0) (& x0 (Person.nameHint_? (?= \" Michael \"))))))", "idx": "13326", "datum_id": {"dialogue_id": "d7f291dc-18b1-49d9-bc3d-9e250e98ab50", "turn_index": 1}}
{"user_turn_0": "Hey assistant , i \u2019d like to book a table for 4 at 6:30 PM at The Shining Gate in Middle Park .", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Change the booking date for January 26th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (& (Date.month_? (?= (January))) (Date.day_? (?= (Day.apply 26L))))))))))", "idx": "13331", "datum_id": {"dialogue_id": "cc9d53ae-b3be-4c2a-afb1-82d21fca7ead", "turn_index": 1}}
{"user_turn_0": "2 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to pay ahead of time ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "13341", "datum_id": {"dialogue_id": "8334333e-31b0-446e-aaf6-84e189fd582f", "turn_index": 6}}
{"user_turn_0": "Can you check if it has free Wi - Fi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "I would like to book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "13351", "datum_id": {"dialogue_id": "95806484-1260-4845-895a-0dbe448d510a", "turn_index": 3}}
{"user_turn_0": "How much is it ?", "agent_turn_0": "Root system inform flight find focus equals price equals 127", "user_turn_1": "That 's fine . Book this flight for three passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast \"))) (Flight.tripType_? (?= (TripType.oneWay)))) (Flight.class_? (?= (FlightClass.Economy)))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (^((Constraint (List DateTime))) refer)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 3))))))", "idx": "13359", "datum_id": {"dialogue_id": "f528be9a-d988-440d-a093-39f83fd4d4a9", "turn_index": 4}}
{"user_turn_0": "Economy or business ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "13371", "datum_id": {"dialogue_id": "dc35f361-b2a2-4c34-a7aa-cb17886c25c4", "turn_index": 4}}
{"user_turn_0": "Is there a weekly event scheduled on my calendar ?", "agent_turn_0": "Root system inform calendarEvent find Existed", "user_turn_1": "What 's today 's weather in Leicester like ?", "tgt": "(plan (^(WeatherReport) Find :object (& (WeatherReport.location_? (?= \" Leicester \")) (WeatherReport.atDateTime_? (DateTime.date_? (?= (Today)))))))", "idx": "13378", "datum_id": {"dialogue_id": "69307f11-381b-4b73-983e-914fb682f9dc", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , show me hotels with at least one star", "tgt": "(plan (^(Hotel) Find :object (Hotel.rating_? (?!= (someSalient (?= 0))))))", "idx": "13380", "datum_id": {"dialogue_id": "0d5d3453-3fe0-4d65-a18c-f2bdcd79beeb", "turn_index": 0}}
{"user_turn_0": "No , but it must have a one - star rating at the very least", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Bluebird Guesthouse price equals 150", "user_turn_1": "Does it offer a fitness center ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasFitness_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "13392", "datum_id": {"dialogue_id": "6627da1a-8198-4f8e-a609-263fad3553ab", "turn_index": 2}}
{"user_turn_0": "Does it offer a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "OK , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "13393", "datum_id": {"dialogue_id": "6627da1a-8198-4f8e-a609-263fad3553ab", "turn_index": 3}}
{"user_turn_0": "I need three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you tell me if a prepayment is required ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "13397", "datum_id": {"dialogue_id": "6627da1a-8198-4f8e-a609-263fad3553ab", "turn_index": 7}}
{"user_turn_0": "Hello assistant , delete the event tomorrow for me please .", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "I need another favor . I want to book a cheap grill restaurant in London Bridge for 11:30 o'clock for the 20th", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" London Bridge \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 20L))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L))))))))) (Restaurant.priceRange_? (?= (PriceRange.Low)))) (Restaurant.foodType_? (?= (FoodType.Grill))))))", "idx": "13400", "datum_id": {"dialogue_id": "45fe74c8-802c-4516-bb65-b5fee1408d39", "turn_index": 1}}
{"user_turn_0": "I prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Beef Easy", "user_turn_1": "What is the address of the restaurant ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "13403", "datum_id": {"dialogue_id": "45fe74c8-802c-4516-bb65-b5fee1408d39", "turn_index": 4}}
{"user_turn_0": "I prefer another restaurant with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Spago", "user_turn_1": "Does the restaurant take credit card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "13405", "datum_id": {"dialogue_id": "45fe74c8-802c-4516-bb65-b5fee1408d39", "turn_index": 6}}
{"user_turn_0": "Does the restaurant take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Godka \"))))))", "idx": "13406", "datum_id": {"dialogue_id": "45fe74c8-802c-4516-bb65-b5fee1408d39", "turn_index": 7}}
{"user_turn_0": "From Liverpool", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM price equals 138", "user_turn_1": "I 'd like to book the flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "13411", "datum_id": {"dialogue_id": "8f56a072-27a9-49bc-a8ad-78b1f607b024", "turn_index": 2}}
{"user_turn_0": "Can you change the departure day of my second trip to Saturday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 3 object equals nextDepartureDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM price equals 210", "user_turn_1": "This one is fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "13415", "datum_id": {"dialogue_id": "8f56a072-27a9-49bc-a8ad-78b1f607b024", "turn_index": 6}}
{"user_turn_0": "Is there free wifi included ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Alright book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "13430", "datum_id": {"dialogue_id": "4bc48dd9-9312-4181-bacc-8ade9a54df58", "turn_index": 3}}
{"user_turn_0": "Alright book it for me please", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "From November 14th to the 16th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 14L)))) (month_? (Date.month_? (?= (November)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 16L)))))))))))", "idx": "13431", "datum_id": {"dialogue_id": "4bc48dd9-9312-4181-bacc-8ade9a54df58", "turn_index": 4}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 12 minute equals 45 meridiem equals PM", "user_turn_1": "That 's ok . I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "13442", "datum_id": {"dialogue_id": "e5059ad5-4d36-4ab5-923a-61618a73d14f", "turn_index": 2}}
{"user_turn_0": "Hello assistant , erase my calendar event .", "agent_turn_0": "Root system prompt calendarEvent delete object", "user_turn_1": "I have Dry - Cleaning Pick Up every Wednesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Delete \") (^((Option (Constraint CalendarEvent))) Path.apply \" object \") (lambda (^(Option (Constraint CalendarEvent)) x0) (Some (& (CalendarEvent.eventName_? (?= \" Dry-Cleaning Pick-Up \")) (CalendarEvent.recurrenceUnit_? (RecurrenceUnit.dayOfWeek_? (?= (Wednesday)))))))))", "idx": "13461", "datum_id": {"dialogue_id": "bd7be900-9bae-452f-8fbd-30cfc9593b3f", "turn_index": 1}}
{"user_turn_0": "Does that hotel offer car parking ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Great . Please make that booking for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "13469", "datum_id": {"dialogue_id": "e86690c0-8998-4469-844e-6b92beb50daf", "turn_index": 4}}
{"user_turn_0": "Just one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does that booking include breakfast ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "13472", "datum_id": {"dialogue_id": "e86690c0-8998-4469-844e-6b92beb50daf", "turn_index": 7}}
{"user_turn_0": "Hey , what rating does Dimple \u2019s restaurant have", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 3", "user_turn_1": "I need to book it for 2:30 PM", "tgt": "(plan (^(Restaurant) Book :object (& (^((Constraint Restaurant)) refer) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "13491", "datum_id": {"dialogue_id": "a03ac8c1-a293-4a92-bbff-102f14b71b6b", "turn_index": 1}}
{"user_turn_0": "In the morning", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals endDateTime", "user_turn_1": "Sunday evening at 7:30", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.endDateTime_? (& (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 7L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))) (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday))))))))))", "idx": "13518", "datum_id": {"dialogue_id": "c329726a-fab0-4a77-b957-222ab9dfb387", "turn_index": 3}}
{"user_turn_0": "No from Sheffield", "agent_turn_0": "Root system prompt train book object equals departureDateTime", "user_turn_1": "Tomorro2", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (Train.departureDateTime_? (DateTime.date_? (?= (Tomorrow))))))))", "idx": "13523", "datum_id": {"dialogue_id": "d26b853d-eecd-42a1-9f63-50da3540fac1", "turn_index": 3}}
{"user_turn_0": "Tomorro2", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM", "user_turn_1": "I want the one at 4:45 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "13524", "datum_id": {"dialogue_id": "d26b853d-eecd-42a1-9f63-50da3540fac1", "turn_index": 4}}
{"user_turn_0": "Yeah , for Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 3 meridiem equals PM price equals 127", "user_turn_1": "That looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "13534", "datum_id": {"dialogue_id": "13b24eac-dad7-4fa9-a876-826dc7766ecd", "turn_index": 5}}
{"user_turn_0": "Next task , put a reminder for today 's event", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Please put a reminder for my event", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object.atDateTime \") (lambda (^(Constraint CalendarEvent) x0) (^(CalendarEvent) always))))", "idx": "13538", "datum_id": {"dialogue_id": "a2653951-357f-4c79-af27-2689e8a17401", "turn_index": 2}}
{"user_turn_0": "Yes the price range should be high and the place should serve American Food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kiwi Sea", "user_turn_1": "On average , how much will it cost per person ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "13559", "datum_id": {"dialogue_id": "b0e59d62-30e6-4d09-b9b9-b8ac4c85f9e1", "turn_index": 5}}
{"user_turn_0": "I would rather have a restaurant with parking available", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flip Out", "user_turn_1": "Does the restaurant take credit cards ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "13561", "datum_id": {"dialogue_id": "b0e59d62-30e6-4d09-b9b9-b8ac4c85f9e1", "turn_index": 7}}
{"user_turn_0": "I prefer another restaurant that has outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Juniper Cloud", "user_turn_1": "On average , how much will it cost per person ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "13563", "datum_id": {"dialogue_id": "b0e59d62-30e6-4d09-b9b9-b8ac4c85f9e1", "turn_index": 9}}
{"user_turn_0": "On average , how much will it cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 39", "user_turn_1": "That \u2019s good , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Kiwi Sea \"))))))", "idx": "13564", "datum_id": {"dialogue_id": "b0e59d62-30e6-4d09-b9b9-b8ac4c85f9e1", "turn_index": 10}}
{"user_turn_0": "Coming back Friday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 4 meridiem equals PM price equals 199", "user_turn_1": "That 's good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "13579", "datum_id": {"dialogue_id": "d9d2a824-108a-4fdf-b3e6-509234b18e80", "turn_index": 7}}
{"user_turn_0": "Yeah , on with it", "agent_turn_0": "Root system inform train book Completed", "user_turn_1": "Thanks , also mr . Henderson needs this info", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Henderson \")) (Person.namePrefix_? (?= \" Mr \"))))) (Message.textContent_? (?= (^(String Train) reference (^(Train) always)))))))", "idx": "13585", "datum_id": {"dialogue_id": "136f6afa-0c86-43ea-aa7f-69021229ffa9", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , schedule an event on May 14th at 9:30 AM .", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (& (Date.month_? (?= (May))) (Date.day_? (?= (Day.apply 14L))))) (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 9L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM))))))))))", "idx": "13598", "datum_id": {"dialogue_id": "5286d89e-93bd-4749-b0fe-c72e1dd47a4d", "turn_index": 0}}
{"user_turn_0": "Hi assistant , please add my train schedule on December 20th to my calendar", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Create team building for 45 minutes on the calendar", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object \") (lambda (^(Constraint CalendarEvent) x0) (& (CalendarEvent.dateTimeRange_? (DateTimeRange.duration_? (AppleDuration.minute_? (?= 45)))) (CalendarEvent.eventName_? (?= \" team building \"))))))", "idx": "13609", "datum_id": {"dialogue_id": "2320f3f3-7e16-4f24-8ced-fa5050fadcde", "turn_index": 1}}
{"user_turn_0": "Hey , how do I get to 12 Hydean Way using public transportation .", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Thanks so much . Now , I 'd like to book a five star hotel for tomorrow night", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.rating_? (?= 5)) (Hotel.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow))))))))", "idx": "13624", "datum_id": {"dialogue_id": "ce54457f-dcdf-46a7-9d96-0746dfb5e6ad", "turn_index": 1}}
{"user_turn_0": "How would I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Okay , book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "13628", "datum_id": {"dialogue_id": "ce54457f-dcdf-46a7-9d96-0746dfb5e6ad", "turn_index": 5}}
{"user_turn_0": "Is breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Super ! Please book that for me then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "13636", "datum_id": {"dialogue_id": "b37868b8-4f88-4d0e-b8be-74c8e900886e", "turn_index": 3}}
{"user_turn_0": "Is that one a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Okay , reserve this one , please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "13649", "datum_id": {"dialogue_id": "59052573-1382-46d9-99ca-0c7ecc8a01b8", "turn_index": 3}}
{"user_turn_0": "The 28th", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 3 object equals nextDepartureDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM price equals 150", "user_turn_1": "That looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "13653", "datum_id": {"dialogue_id": "59052573-1382-46d9-99ca-0c7ecc8a01b8", "turn_index": 7}}
{"user_turn_0": "It 's Reading", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM", "user_turn_1": "That 's fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "13667", "datum_id": {"dialogue_id": "09f406a4-c589-43bb-a7eb-e523dc1aab3a", "turn_index": 2}}
{"user_turn_0": "Hello assistant , display to me the hotels with at least a two star rating .", "agent_turn_0": "Root system inform hotel find", "user_turn_1": "I would like to book a three star hotel with a queen sized bed", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.rating_? (?= 3)) (Hotel.roomType_? (List.exists_? (?= (RoomType.Queen)))))))", "idx": "13671", "datum_id": {"dialogue_id": "265e9e3d-31bd-4ffe-9d32-e52532feb40f", "turn_index": 1}}
{"user_turn_0": "Will breakfast be included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "13674", "datum_id": {"dialogue_id": "265e9e3d-31bd-4ffe-9d32-e52532feb40f", "turn_index": 4}}
{"user_turn_0": "Two", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking have free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "13677", "datum_id": {"dialogue_id": "265e9e3d-31bd-4ffe-9d32-e52532feb40f", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , can you delete the saloon on my calendar ?", "tgt": "(plan (^(CalendarEvent) Delete :object (CalendarEvent.eventName_? (?= \" salon \"))))", "idx": "13679", "datum_id": {"dialogue_id": "77129f03-78c6-44d4-8122-348ee44b58b8", "turn_index": 0}}
{"user_turn_0": "Only show me restaurants that are n't too expensive", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dimple\u2019s", "user_turn_1": "Is there parking at that restaurant ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "13684", "datum_id": {"dialogue_id": "77129f03-78c6-44d4-8122-348ee44b58b8", "turn_index": 5}}
{"user_turn_0": "Can you find me a different restaurant that also has parking ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Encino", "user_turn_1": "How much does it cost on average for someone to live there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "13686", "datum_id": {"dialogue_id": "77129f03-78c6-44d4-8122-348ee44b58b8", "turn_index": 7}}
{"user_turn_0": "How much does it cost on average for someone to live there ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 65", "user_turn_1": "Ok , book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Kitty City \"))))))", "idx": "13687", "datum_id": {"dialogue_id": "77129f03-78c6-44d4-8122-348ee44b58b8", "turn_index": 8}}
{"user_turn_0": "No , I will go to Zurich on the 19th", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 4 object equals nextDepartureDateTime equals time equals hour equals 4 minute equals 20 meridiem equals PM price equals 173", "user_turn_1": "That one is fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "13695", "datum_id": {"dialogue_id": "94c63e17-43bb-4001-9782-b5a204ba47e6", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , book a cheap hotel on the 7th for one night and a double room .", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.priceRange_? (?= (PriceRange.Low))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 7L))))) (DateTimeRange.duration_? (AppleDuration.day_? (?= 1)))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Double)))))))", "idx": "13702", "datum_id": {"dialogue_id": "0d5f0146-4c05-4d2d-a460-9a30824e93ce", "turn_index": 0}}
{"user_turn_0": "Does it have breakfast included", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "It does n't matter anyways . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "13705", "datum_id": {"dialogue_id": "0d5f0146-4c05-4d2d-a460-9a30824e93ce", "turn_index": 3}}
{"user_turn_0": "Three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does it have free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "13707", "datum_id": {"dialogue_id": "0d5f0146-4c05-4d2d-a460-9a30824e93ce", "turn_index": 5}}
{"user_turn_0": "Show other restaurants with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Shining Gate", "user_turn_1": "Does this restaurant take credit card ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "13749", "datum_id": {"dialogue_id": "bf2c41a8-1acd-479b-9516-69986cbfe10d", "turn_index": 4}}
{"user_turn_0": "Does this restaurant take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Capers \"))))))", "idx": "13750", "datum_id": {"dialogue_id": "bf2c41a8-1acd-479b-9516-69986cbfe10d", "turn_index": 5}}
{"user_turn_0": "Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM price equals 125", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "13764", "datum_id": {"dialogue_id": "7462a61c-2b10-4a33-ab69-f2c51589e5e5", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , i want to book a cheap Chinese restaurant in Temple at 11:30 AM .", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Temple \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM)))))))) (Restaurant.priceRange_? (?= (PriceRange.Low)))) (Restaurant.foodType_? (?= (FoodType.Chinese))))))", "idx": "13766", "datum_id": {"dialogue_id": "a8c38d15-f2ac-400f-b180-0c25326a50d1", "turn_index": 0}}
{"user_turn_0": "What about Mexican restaurants", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Emptia", "user_turn_1": "What is the average cost per person", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "13770", "datum_id": {"dialogue_id": "a8c38d15-f2ac-400f-b180-0c25326a50d1", "turn_index": 4}}
{"user_turn_0": "Which of the restaurants have rating at least three stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kiwi Sea", "user_turn_1": "Does the restaurant have parking", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "13772", "datum_id": {"dialogue_id": "a8c38d15-f2ac-400f-b180-0c25326a50d1", "turn_index": 6}}
{"user_turn_0": "Does the restaurant have parking", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Interknack \"))))))", "idx": "13773", "datum_id": {"dialogue_id": "a8c38d15-f2ac-400f-b180-0c25326a50d1", "turn_index": 7}}
{"user_turn_0": "Seafood and make sure it has a five star rating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Lakeside Demon", "user_turn_1": "What is the average cost per person", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "13779", "datum_id": {"dialogue_id": "ed749b3e-4bbd-49e0-bf9c-57230ffaed52", "turn_index": 3}}
{"user_turn_0": "I prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Lakeside Demon", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "13781", "datum_id": {"dialogue_id": "ed749b3e-4bbd-49e0-bf9c-57230ffaed52", "turn_index": 5}}
{"user_turn_0": "Tell me if I have any missed calls from Natalie", "agent_turn_0": "Root system inform phoneCall checkExistence NotExisted", "user_turn_1": "Call her", "tgt": "(plan (^(PhoneCall) Create :object (PhoneCall.recipients_? (^((Constraint Contact)) refer))))", "idx": "13788", "datum_id": {"dialogue_id": "3456303e-92d8-474a-ae6e-917734d2849c", "turn_index": 3}}
{"user_turn_0": "Call her", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "I would like to book air tickets to Belfast city for two people", "tgt": "(plan (^(Flight) Book :object (& (Flight.destination_? (Place.location_? (?= \" Belfast City \"))) (Flight.passengers_? (?= 2)))))", "idx": "13789", "datum_id": {"dialogue_id": "3456303e-92d8-474a-ae6e-917734d2849c", "turn_index": 4}}
{"user_turn_0": "Three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there breakfast in this price ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "13794", "datum_id": {"dialogue_id": "88165e82-bfa7-43fc-a77e-77ddca6d726a", "turn_index": 4}}
{"user_turn_0": "Yes . please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 3 meridiem equals PM price equals 178", "user_turn_1": "I want the one at 1:40 PM , and I want business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.destination_? (Place.location_? (?= \" Glasgow \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "13803", "datum_id": {"dialogue_id": "e832124a-a109-497d-afab-3512972ad4b9", "turn_index": 2}}
{"user_turn_0": "Hello assistant , can you tell me what price range the Kitty City restaurant in Bedfordshire falls under ?", "agent_turn_0": "Root system inform restaurant find focus equals priceRange equals High", "user_turn_1": "It has a one - star rating", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.rating_? (^(Number) always)) :object (Restaurant.restaurantName_? (?= \" Kitty City \"))))", "idx": "13812", "datum_id": {"dialogue_id": "7700335d-8f43-4e70-aeea-0c3ad09fc4b0", "turn_index": 1}}
{"user_turn_0": "Next task , dial", "agent_turn_0": "Root system prompt phoneCall create object equals recipients", "user_turn_1": "mr payne", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Option (Constraint PhoneCall))) Path.apply \" object \") (lambda (^(Option (Constraint PhoneCall)) x0) (Some (PhoneCall.recipients_? (Contact.person_? (& (Person.name_? (?= \" Payne \")) (Person.namePrefix_? (?= \" Mr \")))))))))", "idx": "13819", "datum_id": {"dialogue_id": "0ad18482-3b09-4b02-85ca-87baf20b5a0f", "turn_index": 2}}
{"user_turn_0": "And it has car parking , right ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Okay , let 's go ahead and get the room", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "13837", "datum_id": {"dialogue_id": "59b3608d-6c7f-4267-8853-84c6b40e8d52", "turn_index": 2}}
{"user_turn_0": "I want a double room , if you 'd be so kind", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Try it if I check in on the 13th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 13L))))))", "idx": "13839", "datum_id": {"dialogue_id": "59b3608d-6c7f-4267-8853-84c6b40e8d52", "turn_index": 4}}
{"user_turn_0": "At the risk of sounding greedy , can I get 3 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "13841", "datum_id": {"dialogue_id": "59b3608d-6c7f-4267-8853-84c6b40e8d52", "turn_index": 6}}
{"user_turn_0": "Meadow County from 9 AM to 3 PM", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Schedule a doctor 's appointment with Mr Pullman", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object \") (lambda (^(Constraint CalendarEvent) x0) (& (CalendarEvent.eventName_? (?= \" doctor's appointment \")) (CalendarEvent.attendees_? (Contact.person_? (& (Person.name_? (?= \" Pullman \")) (Person.namePrefix_? (?= \" Mr \")))))))))", "idx": "13862", "datum_id": {"dialogue_id": "4fb126cb-d553-40f1-bc81-b6b031a145c9", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , book a restaurant in Notting Hill today . The restaurant should be inexpensive , and I want to eat pizza .", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Notting Hill \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Today)))))) (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Restaurant.foodType_? (?= (FoodType.Pizza))))))", "idx": "13870", "datum_id": {"dialogue_id": "c09bc6ff-3f1c-4722-9e3a-a5deba236198", "turn_index": 0}}
{"user_turn_0": "How long does it take to get there ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 25", "user_turn_1": "Send the event I have tomorrow to Mr Brown would you", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))))))) (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Brown \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "13888", "datum_id": {"dialogue_id": "e0e5db97-4353-4299-a5a4-495bb9dfddfa", "turn_index": 2}}
{"user_turn_0": "I need three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there prepayment", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "13922", "datum_id": {"dialogue_id": "7d734bb0-4ad5-4bb2-b424-45c7371cbd8a", "turn_index": 4}}
{"user_turn_0": "Thanks , also i want to stay at a hotel in Northwick Park from the 14th to the 18 of July with a double room", "agent_turn_0": "Root system prompt hotel book object equals priceRange", "user_turn_1": "Ideally at a place that is moderate to low priced and has parking", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Hotel.hasParking_? (?= true))))))", "idx": "13927", "datum_id": {"dialogue_id": "4c37291c-6076-4efd-bc55-396fceece0ac", "turn_index": 3}}
{"user_turn_0": "Three , please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the room include breakfast ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "13938", "datum_id": {"dialogue_id": "0a5858bb-77f9-4fdc-8aae-80128259b149", "turn_index": 4}}
{"user_turn_0": "Does the room include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Okay , make the reservation for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "13939", "datum_id": {"dialogue_id": "0a5858bb-77f9-4fdc-8aae-80128259b149", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , hail a taxi to my eventuate 2:30 from 94 Hall Lane", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" 94 Hall Lane \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))))", "idx": "13945", "datum_id": {"dialogue_id": "1cff9e52-3482-4a4a-b43e-1c58ddc6a3b0", "turn_index": 0}}
{"user_turn_0": "Hi assistant , may I have the directions from 94 Hall Lane to 100 Foregate Street .", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "I 'd like to book a restaurant that serves expensive cuisines", "tgt": "(plan (^(Restaurant) Book :object (Restaurant.priceRange_? (?= (PriceRange.High)))))", "idx": "13966", "datum_id": {"dialogue_id": "cc15ad63-e3eb-4d26-b37b-405e4a109ab4", "turn_index": 1}}
{"user_turn_0": "See if there are any restaurants with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "Does the restaurant have parking", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "13970", "datum_id": {"dialogue_id": "cc15ad63-e3eb-4d26-b37b-405e4a109ab4", "turn_index": 5}}
{"user_turn_0": "I 'd like to see restaurants with at least a one star rating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Gogol", "user_turn_1": "What is there address ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "13974", "datum_id": {"dialogue_id": "cc15ad63-e3eb-4d26-b37b-405e4a109ab4", "turn_index": 9}}
{"user_turn_0": "What is there address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 83 Upper Street", "user_turn_1": "Okay , let 's go with that one . Book me for Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Floss and Joes \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday))))))))))", "idx": "13975", "datum_id": {"dialogue_id": "cc15ad63-e3eb-4d26-b37b-405e4a109ab4", "turn_index": 10}}
{"user_turn_0": "I prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Encino", "user_turn_1": "Does the restaurant take credit card ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "13997", "datum_id": {"dialogue_id": "3a535b1f-6488-4f88-b0f5-ff6ed8fca05c", "turn_index": 3}}
{"user_turn_0": "Does the restaurant take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Canton Silk \"))))))", "idx": "13998", "datum_id": {"dialogue_id": "3a535b1f-6488-4f88-b0f5-ff6ed8fca05c", "turn_index": 4}}
{"user_turn_0": "I prefer another hotel with at least two stars rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Triton price equals 160", "user_turn_1": "Is there a fitness center ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasFitness_? (^(Boolean) always)))))", "idx": "14031", "datum_id": {"dialogue_id": "e5f81a4c-86c5-4805-851b-462193800cba", "turn_index": 6}}
{"user_turn_0": "Is there a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Okay book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Blue Moon \"))))))", "idx": "14032", "datum_id": {"dialogue_id": "e5f81a4c-86c5-4805-851b-462193800cba", "turn_index": 7}}
{"user_turn_0": "Hello assistant , i would like to book a flight to Belfast City from London .", "agent_turn_0": "Root system prompt flight book object equals departureDateTime", "user_turn_1": "On Monday , and it will be me and two other people", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& x0 (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))))) (Flight.passengers_? (?= 3))))))", "idx": "14042", "datum_id": {"dialogue_id": "a7ec9391-2ed3-4cdc-a3bd-f0a64d619bf4", "turn_index": 1}}
{"user_turn_0": "Which airline is that flight with ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "OK , let 's book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "14044", "datum_id": {"dialogue_id": "a7ec9391-2ed3-4cdc-a3bd-f0a64d619bf4", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , book a round trip air ticket to Amsterdam , the departure date in on Mandy with the return date on the 21st .", "tgt": "(plan (^(Flight) Book :object (& (& (& (Flight.destination_? (Place.location_? (?= \" Amsterdam \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))))) (Flight.returnDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 21L))))))))", "idx": "14051", "datum_id": {"dialogue_id": "30be11f4-348e-4d90-b272-94c6abb48b64", "turn_index": 0}}
{"user_turn_0": "Birmingham", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 4 minute equals 20 meridiem equals PM price equals 134", "user_turn_1": "I want to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "14053", "datum_id": {"dialogue_id": "30be11f4-348e-4d90-b272-94c6abb48b64", "turn_index": 2}}
{"user_turn_0": "What rating does it have", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "14065", "datum_id": {"dialogue_id": "3b8e3d7f-ac29-4d7f-b764-499bd351dd0a", "turn_index": 4}}
{"user_turn_0": "There are three rooms required", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you alter the check in date to Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "14068", "datum_id": {"dialogue_id": "3b8e3d7f-ac29-4d7f-b764-499bd351dd0a", "turn_index": 7}}
{"user_turn_0": "Bradford", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 20 meridiem equals PM", "user_turn_1": "Actually I want the one at 1:45 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "14072", "datum_id": {"dialogue_id": "cef58f11-2410-4fbd-9109-ad6a1b883d44", "turn_index": 2}}
{"user_turn_0": "Hi my assistant , i would like to book a train ticket to Southampton", "agent_turn_0": "Root system prompt train book object equals source", "user_turn_1": "I am leaving from the reading station", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (Train.source_? (Place.location_? (?= \" Reading station \")))))))", "idx": "14077", "datum_id": {"dialogue_id": "9dd6ecab-6f35-46c0-91ab-a7e27cd21cf9", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , please book a flight for me and two passengers that will depart from London", "tgt": "(plan (^(Flight) Book :object (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.source_? (Place.location_? (?= \" London \")))) (Flight.passengers_? (?= 3)))))", "idx": "14101", "datum_id": {"dialogue_id": "cfdeead6-86ea-47a7-a11b-d8de5effeccd", "turn_index": 0}}
{"user_turn_0": "I prefer another hotel with a five star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Moody Moon price equals 166", "user_turn_1": "Is breakfast included ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "14110", "datum_id": {"dialogue_id": "c882426f-8fc5-4c92-90b2-4ddbe42a9db0", "turn_index": 4}}
{"user_turn_0": "Is breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Book it for me anyway please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Hilton \"))))))", "idx": "14111", "datum_id": {"dialogue_id": "c882426f-8fc5-4c92-90b2-4ddbe42a9db0", "turn_index": 5}}
{"user_turn_0": "I would like to have one king sized bed", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to make a prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "14115", "datum_id": {"dialogue_id": "c882426f-8fc5-4c92-90b2-4ddbe42a9db0", "turn_index": 9}}
{"user_turn_0": "Hi my assistant , i want to make a reservation at an expensive pizza restaurant", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName location", "user_turn_1": "It should be a 1 star location in Oxford Circus", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.location_? (?= \" Oxford Circus \"))) (Restaurant.rating_? (?>= (someSalient (?= 1))))))))", "idx": "14118", "datum_id": {"dialogue_id": "366bbd04-2613-464c-ba72-89fc72cefb21", "turn_index": 1}}
{"user_turn_0": "Does this place have onsite parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Make a reservation for me tomorrow at 4 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 4L)))))))))))", "idx": "14120", "datum_id": {"dialogue_id": "366bbd04-2613-464c-ba72-89fc72cefb21", "turn_index": 3}}
{"user_turn_0": "I 'll be leaving from London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM price equals 166", "user_turn_1": "Ok , and book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "14125", "datum_id": {"dialogue_id": "af1f4f6b-b3d5-4456-a5db-4485384b6ba1", "turn_index": 2}}
{"user_turn_0": "Right from Liverpool", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM price equals 160", "user_turn_1": "That is fine . Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "14131", "datum_id": {"dialogue_id": "cbac971e-03c0-4eb2-9469-67d78c68df24", "turn_index": 3}}
{"user_turn_0": "What airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "Okay , book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "14136", "datum_id": {"dialogue_id": "f43ad062-aa3a-446f-a8b7-63e5824c2b88", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , display the directions to my football game event", "tgt": "(plan (^(Navigation) Find :object (Navigation.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.eventName_? (?= \" football game \")))))))", "idx": "14146", "datum_id": {"dialogue_id": "9cd32d37-5b7d-4b52-b211-149153cc75e9", "turn_index": 0}}
{"user_turn_0": "I want to know how far away is the venue of the event this afternoon", "agent_turn_0": "Root system inform navigation find focus equals distance equals number equals 1", "user_turn_1": "Please display my upcoming train to Southampton", "tgt": "(plan (^(Train) Find :object (Train.destination_? (Place.location_? (?= \" Southampton \")))))", "idx": "14154", "datum_id": {"dialogue_id": "059c47f3-4ceb-4abe-a904-62f063bec9f8", "turn_index": 2}}
{"user_turn_0": "Sure . Send it now", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Also book a business class flight that departs on Tuesday", "tgt": "(plan (^(Flight) Book :object (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.destination_? (Place.location_? (?= \" Paris \")))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday)))))))))", "idx": "14166", "datum_id": {"dialogue_id": "6d9e8a99-7182-4fb3-8784-ebae43174f0b", "turn_index": 3}}
{"user_turn_0": "Will it be a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "That s fine . I want to book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "14173", "datum_id": {"dialogue_id": "233775d6-2d30-4d08-9502-ec08bcb08dc2", "turn_index": 4}}
{"user_turn_0": "I will be coming back on Friday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM price equals 210", "user_turn_1": "That looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "14176", "datum_id": {"dialogue_id": "233775d6-2d30-4d08-9502-ec08bcb08dc2", "turn_index": 7}}
{"user_turn_0": "I 'm coming back on Sunday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM price equals 173", "user_turn_1": "That one is fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "14183", "datum_id": {"dialogue_id": "ffa3ae25-fe8c-43f0-9a6a-f79ea21dc6d1", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , book a restaurant for me at 11 AM . It should be in Preston , and be inexpensive Spanish food .", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Preston \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (meridiem_? (?= (Meridiem.AM)))))))) (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Restaurant.foodType_? (?= (FoodType.Spanish))))))", "idx": "14190", "datum_id": {"dialogue_id": "bfdbe046-a105-4de7-80b5-8d9b79f1e098", "turn_index": 0}}
{"user_turn_0": "Which of those restaurants are 3 stars at the minimum ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dingo", "user_turn_1": "Will they accept credit card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "14193", "datum_id": {"dialogue_id": "bfdbe046-a105-4de7-80b5-8d9b79f1e098", "turn_index": 3}}
{"user_turn_0": "I 'd prefer another place , with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kiwi Sea", "user_turn_1": "That looks okay . Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Jurassic Pork \"))))))", "idx": "14195", "datum_id": {"dialogue_id": "bfdbe046-a105-4de7-80b5-8d9b79f1e098", "turn_index": 5}}
{"user_turn_0": "Which of the restaurants have rating of four stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Bandits", "user_turn_1": "Does the restaurant have parking", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "14202", "datum_id": {"dialogue_id": "be79fae8-5293-44d1-b6e8-69510bbd93ec", "turn_index": 3}}
{"user_turn_0": "Does the restaurant have parking", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Encino \"))))))", "idx": "14203", "datum_id": {"dialogue_id": "be79fae8-5293-44d1-b6e8-69510bbd93ec", "turn_index": 4}}
{"user_turn_0": "That 's fine . Book it", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Ok , can you change the appointment time to 11 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (Time.hour_? (?= (Hour.apply 11L))))))", "idx": "14204", "datum_id": {"dialogue_id": "be79fae8-5293-44d1-b6e8-69510bbd93ec", "turn_index": 5}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "Can you also add Mr MacDonald to my event ?", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.attendees_? (Contact.person_? (& (Person.name_? (?= \" MacDonald \")) (Person.namePrefix_? (?= \" Mr \")))))))", "idx": "14210", "datum_id": {"dialogue_id": "03f58a28-2fbe-4280-bd30-0e00115a4626", "turn_index": 3}}
{"user_turn_0": "I would rather have another restaurant with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capers", "user_turn_1": "Does the restaurant have parking ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "14232", "datum_id": {"dialogue_id": "b474e604-da1f-4e62-82e1-3a6770f1c1a0", "turn_index": 4}}
{"user_turn_0": "Does the restaurant have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Boiling Fence \"))))))", "idx": "14233", "datum_id": {"dialogue_id": "b474e604-da1f-4e62-82e1-3a6770f1c1a0", "turn_index": 5}}
{"user_turn_0": "Please book 2 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Instead modify check in to March 7th please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (& (Date.month_? (?= (March))) (Date.day_? (?= (Day.apply 7L)))))))", "idx": "14246", "datum_id": {"dialogue_id": "688f9826-fba6-4314-a5c6-5441ed0c3e9c", "turn_index": 4}}
{"user_turn_0": "Instead modify check in to March 7th please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "14247", "datum_id": {"dialogue_id": "688f9826-fba6-4314-a5c6-5441ed0c3e9c", "turn_index": 5}}
{"user_turn_0": "Tell me the average cost per person", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 63", "user_turn_1": "Ok fine , book it for me on the 18th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (^((Constraint String)) refer))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 18L))))))))))", "idx": "14276", "datum_id": {"dialogue_id": "0b940a50-4bf1-4474-a6a3-229190f787ba", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , book a hotel in Forest Hill from April 7th to 9th with king sized bed .", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" Forest Hill \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 7L)))) (month_? (Date.month_? (?= (April)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 9L)))))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.King)))))))", "idx": "14285", "datum_id": {"dialogue_id": "6cfe7904-b562-447b-98dd-1423b903a323", "turn_index": 0}}
{"user_turn_0": "Do they have a parking lot ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "14288", "datum_id": {"dialogue_id": "6cfe7904-b562-447b-98dd-1423b903a323", "turn_index": 3}}
{"user_turn_0": "I want 2 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "I need to change the check - out date to the 21st", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Day)) Path.apply \" object.dateTimeRange.endDateTime.date.day \") (lambda (^(Constraint Day) x0) (?= (Day.apply 21L)))))", "idx": "14290", "datum_id": {"dialogue_id": "6cfe7904-b562-447b-98dd-1423b903a323", "turn_index": 5}}
{"user_turn_0": "Do you know the airline", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "Alright okay . I 'd like to have that flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "14295", "datum_id": {"dialogue_id": "94bbba84-3afb-4df2-82b2-e58aef6b9249", "turn_index": 3}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM price equals 210", "user_turn_1": "That one looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (^((Constraint Hour)) refer)) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "14298", "datum_id": {"dialogue_id": "94bbba84-3afb-4df2-82b2-e58aef6b9249", "turn_index": 6}}
{"user_turn_0": "I would rather have a different hotel with at least a two star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Triton price equals 138", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Moody Moon \"))))))", "idx": "14310", "datum_id": {"dialogue_id": "6094e87a-07f8-4a3f-9841-1efdd1b22dc7", "turn_index": 5}}
{"user_turn_0": "I want to check in on the 12th instead", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking support cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "14316", "datum_id": {"dialogue_id": "6094e87a-07f8-4a3f-9841-1efdd1b22dc7", "turn_index": 11}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , the flightThe flight to Edenburgh arriving before 8 PM", "tgt": "(plan (^(Flight) Book :object (& (Flight.destination_? (Place.location_? (?= \" Edinburgh \"))) (Flight.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (Time.hour_? (?= (Hour.apply 8L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "14323", "datum_id": {"dialogue_id": "9bbfccf7-4c39-44a2-b450-0f382e95e833", "turn_index": 0}}
{"user_turn_0": "Hello assistant , update the date of next calendar event on the calendar .", "agent_turn_0": "Root system prompt calendarEvent update focus equals dateTimeRange equals startDateTime equals date", "user_turn_1": "Friday is the new date", "tgt": "(plan (revise (^(Unit) Path.apply \" Update \") (^((Constraint Date)) Path.apply \" focus.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Friday))))))", "idx": "14331", "datum_id": {"dialogue_id": "90eb2000-eebf-4089-8ef4-8a4114d12a37", "turn_index": 1}}
{"user_turn_0": "How long will it take to get to the event today", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 20 object equals destination equals location equals 100 Upper Street", "user_turn_1": "Next , remind me to look at the mails at 10:30", "tgt": "(plan (^(Reminder) Create :object (& (Reminder.reminderContent_? (?= \" look at the mails \")) (Reminder.atDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))))))))", "idx": "14350", "datum_id": {"dialogue_id": "f1305af2-b09d-46d5-a248-97d85407ed71", "turn_index": 4}}
{"user_turn_0": "What class is that one ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "I want a business class one at 1:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast City \"))) (Flight.source_? (Place.location_? (?= \" Liverpool \")))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.nextDestination_? (^((Constraint Place)) refer))) (Flight.nextDepartureDateTime_? (& (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))) (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "14358", "datum_id": {"dialogue_id": "de864485-bc28-47f4-8653-5a2c3dcb7254", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i would like to make reservation in a hotel , I need room with king sized bed .", "tgt": "(plan (^(Hotel) Book :object (Hotel.roomType_? (List.exists_? (?= (RoomType.King))))))", "idx": "14360", "datum_id": {"dialogue_id": "75e9ece3-7654-4c57-9174-ba2627612cc0", "turn_index": 0}}
{"user_turn_0": "Well , do they have fitness center for this price ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "I actually want a different , less expensive hotel", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))))))", "idx": "14363", "datum_id": {"dialogue_id": "75e9ece3-7654-4c57-9174-ba2627612cc0", "turn_index": 3}}
{"user_turn_0": "Do they offer laundry service ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Sure , book this hotel", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Etiquette Suites \"))))))", "idx": "14365", "datum_id": {"dialogue_id": "75e9ece3-7654-4c57-9174-ba2627612cc0", "turn_index": 5}}
{"user_turn_0": "Does is have an onsite fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Can you show me hotels with three star ratings instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.rating_? (?= 3))))))", "idx": "14372", "datum_id": {"dialogue_id": "2991f4e5-42dd-4714-9469-7e3e50a9a0e3", "turn_index": 2}}
{"user_turn_0": "Can you show me hotels with three star ratings instead ?", "agent_turn_0": "Root system prompt hotel book object equals priceRange", "user_turn_1": "I want something inexpensive", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "14373", "datum_id": {"dialogue_id": "2991f4e5-42dd-4714-9469-7e3e50a9a0e3", "turn_index": 3}}
{"user_turn_0": "I want something inexpensive", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Marriott price equals 65", "user_turn_1": "Does the room come with a private bathroom ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.privateBath_? (^(Boolean) always)))))", "idx": "14374", "datum_id": {"dialogue_id": "2991f4e5-42dd-4714-9469-7e3e50a9a0e3", "turn_index": 4}}
{"user_turn_0": "Does the room come with a private bathroom ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Fresh Wave Resort \"))))))", "idx": "14375", "datum_id": {"dialogue_id": "2991f4e5-42dd-4714-9469-7e3e50a9a0e3", "turn_index": 5}}
{"user_turn_0": "Can I book 3 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does it support free cancellation", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "14379", "datum_id": {"dialogue_id": "2991f4e5-42dd-4714-9469-7e3e50a9a0e3", "turn_index": 9}}
{"user_turn_0": "how long does it take to get from Tie the Knot to 22 North Ridge Park by public transportation", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 10", "user_turn_1": "Book the jukebox with table for five today at 5:30 PM", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.restaurantName_? (?= \" Jute Box \")) (Restaurant.tableSize_? (?= 5))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 5L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "14385", "datum_id": {"dialogue_id": "f215e02c-745f-40ad-8adc-df5a3207ee06", "turn_index": 4}}
{"user_turn_0": "Thanks so much . Can you set a reminder for the Dental routine on my calendar ?", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Can you book me a restaurant that 's not too expensive ?", "tgt": "(plan (^(Restaurant) Book :object (Restaurant.priceRange_? (?= (PriceRange.Moderate)))))", "idx": "14390", "datum_id": {"dialogue_id": "bcbbe7d8-29b9-4cc1-8e1c-52d7f015216b", "turn_index": 4}}
{"user_turn_0": "From Brighton", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM", "user_turn_1": "That will do", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "14400", "datum_id": {"dialogue_id": "7c8a85b5-f4a2-49d7-a51f-eb022ad24551", "turn_index": 2}}
{"user_turn_0": "I 'll be returning Saturday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM", "user_turn_1": "That 's fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "14402", "datum_id": {"dialogue_id": "7c8a85b5-f4a2-49d7-a51f-eb022ad24551", "turn_index": 4}}
{"user_turn_0": "I want to leave on Monday", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM price equals 119", "user_turn_1": "I 'll take the one at 1:30 PM instead , please , and make it economy class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" Manchester \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "14406", "datum_id": {"dialogue_id": "1471c78b-df37-4371-a255-bef5da8c65a7", "turn_index": 2}}
{"user_turn_0": "Returning Sunday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM price equals 134", "user_turn_1": "Okay , that works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "14408", "datum_id": {"dialogue_id": "1471c78b-df37-4371-a255-bef5da8c65a7", "turn_index": 4}}
{"user_turn_0": "Which airline is it ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals British", "user_turn_1": "I actually prefer the one leaving at 4:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "14429", "datum_id": {"dialogue_id": "77bc2d91-bfc6-4853-a77e-6be7153cfb63", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , book a cheap restaurant today .", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.priceRange_? (?= (PriceRange.Low))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Today))))))))", "idx": "14431", "datum_id": {"dialogue_id": "5bba6e43-952a-467f-9ad4-f373c6347451", "turn_index": 0}}
{"user_turn_0": "Which of the restaurants have a four star rating ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Boiling Fence", "user_turn_1": "Does It accept credit cards ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "14437", "datum_id": {"dialogue_id": "5bba6e43-952a-467f-9ad4-f373c6347451", "turn_index": 6}}
{"user_turn_0": "Does It accept credit cards ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Floq \"))))))", "idx": "14438", "datum_id": {"dialogue_id": "5bba6e43-952a-467f-9ad4-f373c6347451", "turn_index": 7}}
{"user_turn_0": "Is there a fitness center there ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book the hotel for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "14445", "datum_id": {"dialogue_id": "8e9b5efe-e7c3-483d-b2e2-7e3eed598833", "turn_index": 3}}
{"user_turn_0": "I need one double room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "14447", "datum_id": {"dialogue_id": "8e9b5efe-e7c3-483d-b2e2-7e3eed598833", "turn_index": 5}}
{"user_turn_0": "What is the average cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 29", "user_turn_1": "That 's fine ! Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (^((Constraint String)) refer))))))", "idx": "14457", "datum_id": {"dialogue_id": "6612f7ee-f683-4c97-abe4-65b2033bdbcc", "turn_index": 3}}
{"user_turn_0": "At 4", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Ok , will you change the appointment to today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (?= (Today))))))))", "idx": "14483", "datum_id": {"dialogue_id": "21f4bc4b-eacd-45d9-8e00-201fa0d56ffe", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i need an event added to my calendar for tomorrow .", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))))))", "idx": "14494", "datum_id": {"dialogue_id": "abd767b3-b1e8-4ed6-a834-3887b8ae8c5a", "turn_index": 0}}
{"user_turn_0": "5:30 PM", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Next task , i need a reservation for a cheap restaurant in Notting Hill", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.location_? (?= \" Notting Hill \")) (Restaurant.priceRange_? (?= (PriceRange.Low))))))", "idx": "14497", "datum_id": {"dialogue_id": "abd767b3-b1e8-4ed6-a834-3887b8ae8c5a", "turn_index": 3}}
{"user_turn_0": "Does that place offer car parking ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Please book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "14502", "datum_id": {"dialogue_id": "16a4892f-053c-41af-8cd6-f734b8d4085d", "turn_index": 3}}
{"user_turn_0": "Three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is prepayment required for this booking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "14507", "datum_id": {"dialogue_id": "16a4892f-053c-41af-8cd6-f734b8d4085d", "turn_index": 8}}
{"user_turn_0": "How can I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Please make the booking for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Fairmont \"))))))", "idx": "14512", "datum_id": {"dialogue_id": "43f00a70-3b4f-46b7-81f9-92321394f6a8", "turn_index": 3}}
{"user_turn_0": "Hmm , what airline is that one on ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals British", "user_turn_1": "Hmm . I think I 'd rather take the one leaving at half past 2:00 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "14520", "datum_id": {"dialogue_id": "b17fd7ad-bbd8-4e89-9279-446c2493afbc", "turn_index": 4}}
{"user_turn_0": "Which airline is it ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals British", "user_turn_1": "The one departing at 3:40 PM works better for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "14527", "datum_id": {"dialogue_id": "d35cdd5f-124f-4aa1-bf23-c3af020ff8c1", "turn_index": 3}}
{"user_turn_0": "Yes for Saturday please", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM price equals 155", "user_turn_1": "This one works for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "14529", "datum_id": {"dialogue_id": "d35cdd5f-124f-4aa1-bf23-c3af020ff8c1", "turn_index": 5}}
{"user_turn_0": "Does that place offer outdoor seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "Sounds great . Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "14549", "datum_id": {"dialogue_id": "d6362733-0921-4ac8-8ad1-62f9ec4b29ae", "turn_index": 3}}
{"user_turn_0": "I would prefer another place that has parking available", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Bard\u2019s Bench", "user_turn_1": "What 's the restaurant 's address ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "14557", "datum_id": {"dialogue_id": "f1f813c7-13f3-489c-9dc5-286f6c598070", "turn_index": 4}}
{"user_turn_0": "What 's the restaurant 's address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals Medivet Islington", "user_turn_1": "That \u2019s good , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Stazione restaurant \"))))))", "idx": "14558", "datum_id": {"dialogue_id": "f1f813c7-13f3-489c-9dc5-286f6c598070", "turn_index": 5}}
{"user_turn_0": "Get me another hotel with a three star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Blue Moon price equals 173", "user_turn_1": "Do they have a fitness center ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasFitness_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "14565", "datum_id": {"dialogue_id": "72c7b28b-392d-4b53-ba66-6268b9660861", "turn_index": 3}}
{"user_turn_0": "Do they have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "14566", "datum_id": {"dialogue_id": "72c7b28b-392d-4b53-ba66-6268b9660861", "turn_index": 4}}
{"user_turn_0": "I 'm leaving from Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime", "user_turn_1": "I 'm leaving today before 7 PM . Book a business class ticket for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& x0 (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (?<= (someSalient (& (Time.hour_? (?= (Hour.apply 7L))) (meridiem_? (?= (Meridiem.PM))))))))))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "14573", "datum_id": {"dialogue_id": "6283f583-d759-4762-b96b-f9d60c4ac8a0", "turn_index": 2}}
{"user_turn_0": "Wait , change the date of departure of my second trip to the 19th", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 2 object equals nextDepartureDateTime equals time equals hour equals 2 meridiem equals PM price equals 135", "user_turn_1": "That one looks fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (^((Constraint Time)) refer))))))", "idx": "14578", "datum_id": {"dialogue_id": "6283f583-d759-4762-b96b-f9d60c4ac8a0", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i want to book a restaurant with a rating of at least one star , and it should have parking .", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.rating_? (?>= (someSalient (?= 1)))) (Restaurant.hasParking_? (?= true)))))", "idx": "14580", "datum_id": {"dialogue_id": "c3f9be2c-8179-496b-b5a8-a0cf1ffc6486", "turn_index": 0}}
{"user_turn_0": "I prefer another restaurant with outdoor seats please", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Canton Silk", "user_turn_1": "Does the restaurant take credit card ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "14584", "datum_id": {"dialogue_id": "c3f9be2c-8179-496b-b5a8-a0cf1ffc6486", "turn_index": 4}}
{"user_turn_0": "Does the restaurant take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "That 's fine . Book it for me at 4 PM please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Acacia Saint \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "14585", "datum_id": {"dialogue_id": "c3f9be2c-8179-496b-b5a8-a0cf1ffc6486", "turn_index": 5}}
{"user_turn_0": "That 's fine . Book it for me at 4 PM please", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "k , can you change the appointment date to Friday instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday)))))))))", "idx": "14586", "datum_id": {"dialogue_id": "c3f9be2c-8179-496b-b5a8-a0cf1ffc6486", "turn_index": 6}}
{"user_turn_0": "It 's Mr Randall", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "What 's the Morden Park restaurant Kitty City 's price range ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.priceRange_? (^(PriceRange) always)) :object (& (Restaurant.restaurantName_? (?= \" Kitty City \")) (Restaurant.location_? (?= \" Morden Park \")))))", "idx": "14591", "datum_id": {"dialogue_id": "ab41bec5-1f7d-4b72-9c28-e9e690ea2d6b", "turn_index": 2}}
{"user_turn_0": "What 's the Morden Park restaurant Kitty City 's price range ?", "agent_turn_0": "Root system inform restaurant find focus equals priceRange equals Moderate", "user_turn_1": "Book that for me", "tgt": "(plan (^(Restaurant) Book :object (Restaurant.restaurantName_? (?= \" Kitty City \"))))", "idx": "14592", "datum_id": {"dialogue_id": "ab41bec5-1f7d-4b72-9c28-e9e690ea2d6b", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , what 's my train after 10:30 AM ?", "tgt": "(plan (^(Train) Find :object (Train.departureDateTime_? (DateTime.time_? (?>= (someSalient (& (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM))))))))))", "idx": "14599", "datum_id": {"dialogue_id": "7ee349d1-7095-47c5-b2db-359d2b79b67d", "turn_index": 0}}
{"user_turn_0": "Do I have a missed call from Mr. Hardacre ?", "agent_turn_0": "Root system inform phoneCall checkExistence Existed", "user_turn_1": "Next , text him saying when is the homework due ?", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (^((Constraint Contact)) refer)) (Message.textContent_? (?= \" when is the homework due? \")))))", "idx": "14602", "datum_id": {"dialogue_id": "7ee349d1-7095-47c5-b2db-359d2b79b67d", "turn_index": 3}}
{"user_turn_0": "It 'll last 45 minutes", "agent_turn_0": "Root system inform calendarEvent create Completed prompt message create recipients", "user_turn_1": "it is 00740004762", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (& x0 (Message.recipients_? (Contact.phoneNumber_? (?= \" 07740004762 \")))))))", "idx": "14608", "datum_id": {"dialogue_id": "1158197d-c57e-4d18-a3ab-d5ea59d9f481", "turn_index": 4}}
{"user_turn_0": "I do n't care , but I want it to be an expensive place", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Emptia", "user_turn_1": "Sure , where is it located ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "14617", "datum_id": {"dialogue_id": "b3253d14-8e1e-4a26-94c1-0d3557395e09", "turn_index": 2}}
{"user_turn_0": "I would rather pick the one with parking spaces", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Juniper Cloud", "user_turn_1": "Go ahead and make reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Emptia \"))))))", "idx": "14619", "datum_id": {"dialogue_id": "b3253d14-8e1e-4a26-94c1-0d3557395e09", "turn_index": 4}}
{"user_turn_0": "I prefer another hotel with at least two stars rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Vitale price equals 138", "user_turn_1": "And what 's the rating ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.rating_? (^(Number) always)))))", "idx": "14629", "datum_id": {"dialogue_id": "6870767a-4eb0-4afd-b7f6-d881ee2b9f51", "turn_index": 5}}
{"user_turn_0": "And what 's the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" The Watson \"))))))", "idx": "14630", "datum_id": {"dialogue_id": "6870767a-4eb0-4afd-b7f6-d881ee2b9f51", "turn_index": 6}}
{"user_turn_0": "Wait . Can I have 3 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you change the check out date to Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Thursday))))))", "idx": "14635", "datum_id": {"dialogue_id": "6870767a-4eb0-4afd-b7f6-d881ee2b9f51", "turn_index": 11}}
{"user_turn_0": "Does the hotel have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Let 's book it then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "14652", "datum_id": {"dialogue_id": "67a62e6c-b9a0-4040-986d-4de87f40def1", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , please get me a taxi with a Saloon the car from The Bull Islington .", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.serviceType_? (List.exists_? (?= (ServiceType.Saloon)))) (Taxi.source_? (Place.location_? (?= \" The Bull Islington \"))))))", "idx": "14666", "datum_id": {"dialogue_id": "fd3ec282-a05c-4e20-9581-88c1e09e2d1b", "turn_index": 0}}
{"user_turn_0": "I am , go ahead", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "Please book a train before 5:30 PM to Leeds", "tgt": "(plan (^(Train) Book :object (& (Train.destination_? (Place.location_? (?= \" Leeds \"))) (Train.departureDateTime_? (DateTime.time_? (?<= (someSalient (& (& (Time.hour_? (?= (Hour.apply 5L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "14670", "datum_id": {"dialogue_id": "fd3ec282-a05c-4e20-9581-88c1e09e2d1b", "turn_index": 4}}
{"user_turn_0": "Is breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "14674", "datum_id": {"dialogue_id": "50f6b6a3-0edd-4e01-9b01-414cfd863e18", "turn_index": 3}}
{"user_turn_0": "I need two rooms and the room type does n't matter", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "14678", "datum_id": {"dialogue_id": "50f6b6a3-0edd-4e01-9b01-414cfd863e18", "turn_index": 7}}
{"user_turn_0": "Do I need to prepay ?", "agent_turn_0": "Root system inform hotel find focus equals prePayment equals True", "user_turn_1": "Okay . Change my check out date to Sunday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.endDateTime \") (lambda (^(Constraint DateTime) x0) (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))))", "idx": "14679", "datum_id": {"dialogue_id": "50f6b6a3-0edd-4e01-9b01-414cfd863e18", "turn_index": 8}}
{"user_turn_0": "Okay . Change my check out date to Sunday ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait . Change my check in to Wednesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Wednesday))))))", "idx": "14680", "datum_id": {"dialogue_id": "50f6b6a3-0edd-4e01-9b01-414cfd863e18", "turn_index": 9}}
{"user_turn_0": "I 'll be leaving tomorrow after 9:30 AM", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM price equals 166", "user_turn_1": "That 's cool , book this flight for four passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast City \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.class_? (?= (FlightClass.Economy)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 4))))))", "idx": "14701", "datum_id": {"dialogue_id": "8c8e2b57-27f3-45f2-b291-8538e8e06f20", "turn_index": 3}}
{"user_turn_0": "Does it have outdoor seating", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "Okay , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "14709", "datum_id": {"dialogue_id": "6cda4803-04d5-4c51-82b5-eca86b3ad41c", "turn_index": 4}}
{"user_turn_0": "I 'd prefer a place with a four star rating please", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Astro Resort price equals 145", "user_turn_1": "What is the hotel 's rating ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.rating_? (^(Number) always)))))", "idx": "14718", "datum_id": {"dialogue_id": "2ae5d56e-099a-4dce-9754-7839ea0b39fa", "turn_index": 4}}
{"user_turn_0": "What is the hotel 's rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" The Fresco \"))))))", "idx": "14719", "datum_id": {"dialogue_id": "2ae5d56e-099a-4dce-9754-7839ea0b39fa", "turn_index": 5}}
{"user_turn_0": "Does it come with a private bathroom ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "14733", "datum_id": {"dialogue_id": "632d8f82-0c5e-4550-b1f4-0eea9673568d", "turn_index": 4}}
{"user_turn_0": "One room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Ok , edit my check out to Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Saturday))))))", "idx": "14736", "datum_id": {"dialogue_id": "632d8f82-0c5e-4550-b1f4-0eea9673568d", "turn_index": 7}}
{"user_turn_0": "Oh , on Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM price equals 124", "user_turn_1": "That one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "14743", "datum_id": {"dialogue_id": "1986857e-f6fd-4fca-9985-0c40cb353759", "turn_index": 5}}
{"user_turn_0": "Yes , price range should be high price", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Juniper Cloud", "user_turn_1": "What is the address of the restaurant", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "14749", "datum_id": {"dialogue_id": "e1190695-538f-428d-b33c-b875d927f9a6", "turn_index": 4}}
{"user_turn_0": "I prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dimple\u2019s", "user_turn_1": "What is the address of the restaurant", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "14751", "datum_id": {"dialogue_id": "e1190695-538f-428d-b33c-b875d927f9a6", "turn_index": 6}}
{"user_turn_0": "What is the address of the restaurant", "agent_turn_0": "Root system inform restaurant find focus equals address equals 4 Compton Avenue", "user_turn_1": "That 's fine . Book it for Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" The Juniper Cloud \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday))))))))))", "idx": "14752", "datum_id": {"dialogue_id": "e1190695-538f-428d-b33c-b875d927f9a6", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , reserve a cheap hotel for tomorrow through Friday , with a single room , in Hammersmith .", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" Hammersmith \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday)))))))) (Hotel.priceRange_? (?= (PriceRange.Low)))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Single)))))))", "idx": "14771", "datum_id": {"dialogue_id": "db42536b-3893-4d8d-9e1b-c1ce63f0f531", "turn_index": 0}}
{"user_turn_0": "Ok , book it", "agent_turn_0": "Root system inform hotel book Completed", "user_turn_1": "What are directions to the Marriott hotel ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.location_? (^(String) always)) :object (Hotel.hotelName_? (?= \" Marriott \"))))", "idx": "14775", "datum_id": {"dialogue_id": "db42536b-3893-4d8d-9e1b-c1ce63f0f531", "turn_index": 4}}
{"user_turn_0": "Is there outdoor seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "Oh well book it anyway", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "14786", "datum_id": {"dialogue_id": "d12cfbd3-e2c9-4f4f-807b-4a908c265611", "turn_index": 5}}
{"user_turn_0": "The event ends at 8:30 PM on the 26th", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "Would you book me a taxi from 76 Windsor Road to Healthy Blossom , the venue that 's on my calendar ?", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" 76 Windsor Road \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.eventName_? (?= \" Healthy Blossom \"))))))))", "idx": "14792", "datum_id": {"dialogue_id": "26911c68-6ed7-40db-8379-276e9cfece06", "turn_index": 2}}
{"user_turn_0": "What type of food does that place serve ?", "agent_turn_0": "Root system inform restaurant find focus equals foodType equals Chinese food", "user_turn_1": "I need a booking at that restaurant", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "14797", "datum_id": {"dialogue_id": "7019ad70-5100-41b7-800d-3285ebd01a75", "turn_index": 2}}
{"user_turn_0": "Try another hotel , one that is inexpensive", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Four Seasons price equals 119", "user_turn_1": "Is there free wifi ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasWifi_? (^(Boolean) always)))))", "idx": "14804", "datum_id": {"dialogue_id": "f5edfda3-2bb5-421d-8012-7688475a8732", "turn_index": 4}}
{"user_turn_0": "Is there free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Okay I 'll take it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Astro Resort \"))))))", "idx": "14805", "datum_id": {"dialogue_id": "f5edfda3-2bb5-421d-8012-7688475a8732", "turn_index": 5}}
{"user_turn_0": "I want one room of any type", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait no change the checkout to Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Friday))))))", "idx": "14809", "datum_id": {"dialogue_id": "f5edfda3-2bb5-421d-8012-7688475a8732", "turn_index": 9}}
{"user_turn_0": "Wait no change the checkout to Friday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "14810", "datum_id": {"dialogue_id": "f5edfda3-2bb5-421d-8012-7688475a8732", "turn_index": 10}}
{"user_turn_0": "Hi assistant , who are the attendees of my event at 3 PM ?", "agent_turn_0": "Root system inform calendarEvent find focus equals attendees equals person equals name equals Caroline", "user_turn_1": "Add her to the boat race", "tgt": "(plan (^(CalendarEvent) Create :focus (^((Constraint CalendarEvent)) refer) :object (CalendarEvent.eventName_? (?= \" boat race \"))))", "idx": "14813", "datum_id": {"dialogue_id": "750bea55-aae6-4919-a57d-9a1285501497", "turn_index": 1}}
{"user_turn_0": "I need to know if I have any calls from my brother", "agent_turn_0": "Root system inform phoneCall checkExistence NotExisted", "user_turn_1": "Text him and say where is the bathroom", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Brother))))) (Message.textContent_? (?= \" where is the bathroom \")))))", "idx": "14826", "datum_id": {"dialogue_id": "72d5d3e6-c09e-467e-b6b6-95fbbec34a0f", "turn_index": 2}}
{"user_turn_0": "Anne", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "change my reminder at 3 PM tomorrow to 6 o'clock", "tgt": "(plan (^(Reminder) Update :focus (Reminder.atDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 6L))))) :object (Reminder.atDateTime_? (& (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM))))) (DateTime.date_? (?= (Tomorrow)))))))", "idx": "14842", "datum_id": {"dialogue_id": "ee253001-3154-4843-8eb2-33556b4e9036", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i need to book a hotel in Oakwood that has car park . I want to check in tomorrow for two nights and not spend a lot", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" Oakwood \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))) (DateTimeRange.duration_? (AppleDuration.day_? (?= 2)))))) (Hotel.priceRange_? (?= (PriceRange.Low)))) (Hotel.hasParking_? (?= true)))))", "idx": "14844", "datum_id": {"dialogue_id": "fe9ec22f-5b18-487a-b772-7c92689bb10a", "turn_index": 0}}
{"user_turn_0": "Ok , how do I get there", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "14846", "datum_id": {"dialogue_id": "fe9ec22f-5b18-487a-b772-7c92689bb10a", "turn_index": 2}}
{"user_turn_0": "One", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does that include breakfast ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "14849", "datum_id": {"dialogue_id": "fe9ec22f-5b18-487a-b772-7c92689bb10a", "turn_index": 5}}
{"user_turn_0": "Does that include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Ok , book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "14850", "datum_id": {"dialogue_id": "fe9ec22f-5b18-487a-b772-7c92689bb10a", "turn_index": 6}}
{"user_turn_0": "I rather have a different restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kitty City", "user_turn_1": "Book it for me for tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Dingo \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow)))))))))", "idx": "14857", "datum_id": {"dialogue_id": "239c3bb2-9f83-40e8-a0d4-4a0e5dde4ec2", "turn_index": 6}}
{"user_turn_0": "Ok book it", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "Do you want a Saloon , MPV or Executive car ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Taxi)) Path.apply \" object \") (lambda (^(Constraint Taxi) x0) (& (Taxi.source_? (Place.location_? (?= \" The Dima Foundation \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.eventName_? (?= \" summer outing \")))))))))", "idx": "14865", "datum_id": {"dialogue_id": "43c7b3ce-85d1-4c45-bca2-b3f472622231", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , book me a table at a cheap pizza restaurant for 3 PM .", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.priceRange_? (?= (PriceRange.Low))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM)))))))) (Restaurant.foodType_? (?= (FoodType.Pizza))))))", "idx": "14871", "datum_id": {"dialogue_id": "533ee1e0-63d0-48a2-beb3-b657988855b3", "turn_index": 0}}
{"user_turn_0": "I want a restaurant with parking instead", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flew Z", "user_turn_1": "Do they have parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "14876", "datum_id": {"dialogue_id": "533ee1e0-63d0-48a2-beb3-b657988855b3", "turn_index": 5}}
{"user_turn_0": "Do they have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Ok , book the restaurant", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Gogol \"))))))", "idx": "14877", "datum_id": {"dialogue_id": "533ee1e0-63d0-48a2-beb3-b657988855b3", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i found the following restaurants that fit your criteria . A good option appears to be Capricorn .", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Ealing \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))) (Restaurant.priceRange_? (?= (PriceRange.High)))) (Restaurant.hasParking_? (?= true)))))", "idx": "14880", "datum_id": {"dialogue_id": "dc0035f7-3f67-4369-9392-e8e8397fc113", "turn_index": 0}}
{"user_turn_0": "Hey , i found the following restaurants that fit your criteria . A good option appears to be Capricorn .", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capricorn", "user_turn_1": "Yes , outdoor seating is provided at the restaurant", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "14881", "datum_id": {"dialogue_id": "dc0035f7-3f67-4369-9392-e8e8397fc113", "turn_index": 1}}
{"user_turn_0": "Do any of the restaurants have a rating of at least one star ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Maple", "user_turn_1": "Tell me the average cost per person", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "14883", "datum_id": {"dialogue_id": "dc0035f7-3f67-4369-9392-e8e8397fc113", "turn_index": 3}}
{"user_turn_0": "Japanese", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Godka", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Capricorn \"))))))", "idx": "14886", "datum_id": {"dialogue_id": "dc0035f7-3f67-4369-9392-e8e8397fc113", "turn_index": 6}}
{"user_turn_0": "Hello , when will the 4 PM train to Nottingham arrive ?", "agent_turn_0": "Root system inform train find focus equals arrivalDateTime equals time equals hour equals 11 minute equals 30", "user_turn_1": "I want to know when will my train on Monday to Nottingham arrive ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (DateTime.date_? (Date.dayOfWeek_? (?= (Monday)))))))", "idx": "14890", "datum_id": {"dialogue_id": "66ce387e-2b2b-4e1d-84d6-006935b2e607", "turn_index": 1}}
{"user_turn_0": "Ok , Is it a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "I actually prefer the flight which departs at 3 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "14894", "datum_id": {"dialogue_id": "66ce387e-2b2b-4e1d-84d6-006935b2e607", "turn_index": 5}}
{"user_turn_0": "Saturday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM", "user_turn_1": "Yes , that works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "14905", "datum_id": {"dialogue_id": "16453844-73f9-489f-ae46-678d35ddc481", "turn_index": 5}}
{"user_turn_0": "Three rooms and the room type does n't matter to me", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Could I cancel the room at no charge ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "14915", "datum_id": {"dialogue_id": "3b743012-68a0-436b-bcd2-63ebe0f55a35", "turn_index": 2}}
{"user_turn_0": "Yes I am", "agent_turn_0": "Root system inform hotel book Completed", "user_turn_1": "Thanks so much . I need play tickets for three passengers from London to Edinburgh", "tgt": "(plan (^(Flight) Book :object (& (& (Flight.source_? (Place.location_? (?= \" London \"))) (Flight.destination_? (Place.location_? (?= \" Edinburgh \")))) (Flight.passengers_? (?= 3)))))", "idx": "14921", "datum_id": {"dialogue_id": "a5834b8d-851f-4db3-9306-42822243eac8", "turn_index": 3}}
{"user_turn_0": "Does the hotel have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Can your reserve me a room ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "14926", "datum_id": {"dialogue_id": "5750c610-81d8-4863-86be-7a37bc493662", "turn_index": 3}}
{"user_turn_0": "Can you set my check in to be tomorrow instead ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to pay now ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "14930", "datum_id": {"dialogue_id": "5750c610-81d8-4863-86be-7a37bc493662", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , can you show me hotels with at least 1 star ?", "tgt": "(plan (^(Hotel) Find :object (Hotel.rating_? (?!= (someSalient (?= 0))))))", "idx": "14932", "datum_id": {"dialogue_id": "c86e65be-86f0-4bf2-9aff-378ab6ed4d58", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , when will the event finish on Sunday", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.endDateTime_? (^(DateTime) always))) :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday))))))))", "idx": "14957", "datum_id": {"dialogue_id": "97e41b81-407d-419c-baa0-75450c02e37c", "turn_index": 0}}
{"user_turn_0": "Hi my assistant , when will the event finish on Sunday", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals endDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM", "user_turn_1": "Also please schedule a reminder for me at that time slot", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (^((Constraint DateTime)) refer))))", "idx": "14958", "datum_id": {"dialogue_id": "97e41b81-407d-419c-baa0-75450c02e37c", "turn_index": 1}}
{"user_turn_0": "What kind of food does it serve ?", "agent_turn_0": "Root system inform restaurant find focus equals foodType equals German Food", "user_turn_1": "Sounds really good . Go ahead and book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "14966", "datum_id": {"dialogue_id": "e22464cc-d4cd-4b12-9e2e-f9f984241ecb", "turn_index": 4}}
{"user_turn_0": "On the 17th", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "14977", "datum_id": {"dialogue_id": "55113f66-f4b5-408d-b401-0930e4505443", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , two stars .", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.rating_? (^(Number) always)) :object (& (Restaurant.restaurantName_? (?= \" Jurassic Pork \")) (Restaurant.location_? (?= \" New Cross \")))))", "idx": "14979", "datum_id": {"dialogue_id": "3eec5280-9529-4305-982c-1df2c661639f", "turn_index": 0}}
{"user_turn_0": "Yes , I will departure from London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I choose the one which departures at 2:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "14986", "datum_id": {"dialogue_id": "8c4088fa-5302-4f49-acbe-3ba068ed2866", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , book a low price Grill restaurant in Liverpool Street tomorrow .", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Liverpool Street \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow)))))) (Restaurant.priceRange_? (?= (PriceRange.Low)))) (Restaurant.foodType_? (?= (FoodType.Grill))))))", "idx": "15001", "datum_id": {"dialogue_id": "012bca72-8a2e-48b6-9af2-7cc1258858fb", "turn_index": 0}}
{"user_turn_0": "What restaurants have at least a three star rating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Bard\u2019s Bench", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flew Z \"))))))", "idx": "15003", "datum_id": {"dialogue_id": "012bca72-8a2e-48b6-9af2-7cc1258858fb", "turn_index": 2}}
{"user_turn_0": "I would rather choose another moderately priced hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Ritz-Carlton price equals 138", "user_turn_1": "Sure , are there any parking spaces ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasParking_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "15012", "datum_id": {"dialogue_id": "f5a4de82-3657-45f2-9868-ba76e07350a4", "turn_index": 5}}
{"user_turn_0": "Sure , are there any parking spaces ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Could you make reservation for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Blossomwell Resorts \"))))))", "idx": "15013", "datum_id": {"dialogue_id": "f5a4de82-3657-45f2-9868-ba76e07350a4", "turn_index": 6}}
{"user_turn_0": "Boone one room . And I do n't care what room type to book", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually , I need to update the check - out date to the 22nd", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 22L))))))", "idx": "15016", "datum_id": {"dialogue_id": "f5a4de82-3657-45f2-9868-ba76e07350a4", "turn_index": 9}}
{"user_turn_0": "Actually , I need to update the check - out date to the 22nd", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I be able to cancel for free ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "15017", "datum_id": {"dialogue_id": "f5a4de82-3657-45f2-9868-ba76e07350a4", "turn_index": 10}}
{"user_turn_0": "Do you know the airline the flight is with", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "Guess that 's okay , I 'd like to book the flight please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "15023", "datum_id": {"dialogue_id": "94d5fd82-3d9e-4092-847a-2f341a4fc5c2", "turn_index": 4}}
{"user_turn_0": "I will return on the 19th", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM", "user_turn_1": "Sounds good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "15030", "datum_id": {"dialogue_id": "ae30f32e-a62f-470d-9604-89f4de964e87", "turn_index": 4}}
{"user_turn_0": "How much is it there ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 29", "user_turn_1": "Perfect . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Jurassic Pork \"))))))", "idx": "15042", "datum_id": {"dialogue_id": "b5983799-0ac0-4781-afbc-874a37e700f2", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i need a cheap hotel for tonight till Sunday", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?= (PriceRange.Low))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday))))))))))", "idx": "15055", "datum_id": {"dialogue_id": "6d6f232f-8f46-4a98-9229-d6e04492a71a", "turn_index": 0}}
{"user_turn_0": "Is there a gym ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Do it !", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15058", "datum_id": {"dialogue_id": "6d6f232f-8f46-4a98-9229-d6e04492a71a", "turn_index": 3}}
{"user_turn_0": "Ugh , what about the Hilton Garden ? Are they available ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Shoot , what if I need to cancel", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "15062", "datum_id": {"dialogue_id": "6d6f232f-8f46-4a98-9229-d6e04492a71a", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , make the reminder be at 10 AM", "tgt": "(plan (^(Reminder) Update :focus (Reminder.atDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (meridiem_? (?= (Meridiem.AM))))))))", "idx": "15064", "datum_id": {"dialogue_id": "8b6dfb8e-c309-427b-90ff-b105d6b873b1", "turn_index": 0}}
{"user_turn_0": "Look for a hotel in Notting Hill", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Club Quarters price equals 135", "user_turn_1": "Can you find another three star hotel", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.rating_? (?>= (someSalient (?= 3))))))))", "idx": "15076", "datum_id": {"dialogue_id": "f7b4a942-8fb5-4540-bd41-2ecace6dbec8", "turn_index": 2}}
{"user_turn_0": "Can you find another three star hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals InterContinental price equals 130", "user_turn_1": "Do they have private bathrooms there ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.privateBath_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "15077", "datum_id": {"dialogue_id": "f7b4a942-8fb5-4540-bd41-2ecace6dbec8", "turn_index": 3}}
{"user_turn_0": "Do they have private bathrooms there ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "OK I would like to stay there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Club Quarters \"))))))", "idx": "15078", "datum_id": {"dialogue_id": "f7b4a942-8fb5-4540-bd41-2ecace6dbec8", "turn_index": 4}}
{"user_turn_0": "I need two rooms and the type does n't matter", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually can you change the checkout date to Saturday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Saturday))))))", "idx": "15082", "datum_id": {"dialogue_id": "f7b4a942-8fb5-4540-bd41-2ecace6dbec8", "turn_index": 8}}
{"user_turn_0": "Actually can you change the checkout date to Saturday ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you see if I need a pre - pay first", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "15083", "datum_id": {"dialogue_id": "f7b4a942-8fb5-4540-bd41-2ecace6dbec8", "turn_index": 9}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM", "user_turn_1": "I 'd like the one for 3:40 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "15088", "datum_id": {"dialogue_id": "b75f9c9c-4467-402a-820d-549cfb4bb55d", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , which city or airport are you headed ?", "tgt": "(plan (^(Flight) Book :object (& (Flight.class_? (?= (FlightClass.Economy))) (Flight.source_? (Place.location_? (?= \" Manchester \"))))))", "idx": "15101", "datum_id": {"dialogue_id": "62688689-7a2e-479c-befb-c6cacee3d41c", "turn_index": 0}}
{"user_turn_0": "Hi there , which city or airport are you headed ?", "agent_turn_0": "Root system prompt flight book object equals destination", "user_turn_1": "What day will you be leaving ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.destination_? (Place.location_? (?= \" Belfast City \")))))))", "idx": "15102", "datum_id": {"dialogue_id": "62688689-7a2e-479c-befb-c6cacee3d41c", "turn_index": 1}}
{"user_turn_0": "Tell me how I can get there", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15129", "datum_id": {"dialogue_id": "b0d7981e-24bd-4f90-90ae-befc39d9f6db", "turn_index": 3}}
{"user_turn_0": "I will return on Saturday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM", "user_turn_1": "Good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "15137", "datum_id": {"dialogue_id": "31992b9f-bf58-4d32-b387-29bde092cd6a", "turn_index": 4}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 20 meridiem equals PM", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "15141", "datum_id": {"dialogue_id": "fe3d5ca3-ddcc-43e3-b1b1-ef7b79fe4af2", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , send the September 12th event to my mom .", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (& (Date.day_? (?= (Day.apply 12L))) (Date.month_? (?= (September)))))))))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Mother))))))))", "idx": "15144", "datum_id": {"dialogue_id": "f92901a5-2509-4fcf-af65-650becdfc300", "turn_index": 0}}
{"user_turn_0": "Hi my assistant , what time does my event in the morning start ?", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals startDateTime equals time equals hour equals 11", "user_turn_1": "Place a reminder on it for me", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (^(CalendarEvent) always))))))", "idx": "15156", "datum_id": {"dialogue_id": "60abc794-fa2b-4e03-b05c-2962c47b0399", "turn_index": 1}}
{"user_turn_0": "Can you give me it 's rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Ok , I will book the room", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15164", "datum_id": {"dialogue_id": "eb3027a1-b01d-406e-b7b3-715652172366", "turn_index": 4}}
{"user_turn_0": "Change the venue to Sphirostic", "agent_turn_0": "Root system inform calendarEvent update Completed", "user_turn_1": "How do I get there ?", "tgt": "(plan (^(Navigation) Find :object (Navigation.destination_? (Place.location_? (?= \" Sphirostic \")))))", "idx": "15177", "datum_id": {"dialogue_id": "75b4296e-0d52-4bf1-931f-9358846fa3a9", "turn_index": 3}}
{"user_turn_0": "Hey , get me a taxi to The Body Shop in Upper Street with a car type of executive", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals 9 School Lane", "user_turn_1": "Make the destination be 7 Upper Street instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" 7 Upper Street \"))))", "idx": "15191", "datum_id": {"dialogue_id": "64696b45-8c40-49e3-bd47-16db0ad1a8ea", "turn_index": 1}}
{"user_turn_0": "Next , okay thank you . Can you book me a restaurant in Northwick Park ? I need the reservation to be at 10 o'clock . Make sure it does n't have zero stars", "agent_turn_0": "Root system prompt restaurant book object equals priceRange", "user_turn_1": "Yeah , I need it to be inexpensive", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.priceRange_? (?= (PriceRange.Low)))))))", "idx": "15198", "datum_id": {"dialogue_id": "2492b750-9857-4462-8355-ecac55fdeaad", "turn_index": 3}}
{"user_turn_0": "No , find me something else . Something with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Empirica", "user_turn_1": "What is the address ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "15202", "datum_id": {"dialogue_id": "2492b750-9857-4462-8355-ecac55fdeaad", "turn_index": 7}}
{"user_turn_0": "What is the address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 40 Mayors Road", "user_turn_1": "That 's fine go ahead and book me that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flip Out \"))))))", "idx": "15203", "datum_id": {"dialogue_id": "2492b750-9857-4462-8355-ecac55fdeaad", "turn_index": 8}}
{"user_turn_0": "I would like another place that offers parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Maple", "user_turn_1": "Does that place offer outdoor seating ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "15212", "datum_id": {"dialogue_id": "a46e825a-3b71-42e2-af72-c302461e9d48", "turn_index": 6}}
{"user_turn_0": "Does that place offer outdoor seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "Sounds good . Please make the booking for tomorrow at 4", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Flavoroso \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 4L)))))))))))", "idx": "15213", "datum_id": {"dialogue_id": "a46e825a-3b71-42e2-af72-c302461e9d48", "turn_index": 7}}
{"user_turn_0": "On which airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "I 'll take the 3:40 PM flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "15237", "datum_id": {"dialogue_id": "aeba8c4a-1db9-4ecc-93a6-8721c4828bc7", "turn_index": 2}}
{"user_turn_0": "Three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait . Do I need prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "15253", "datum_id": {"dialogue_id": "bd0263b5-f350-41c4-8c94-95332ee03b31", "turn_index": 5}}
{"user_turn_0": "I think I 'd prefer a restaurant with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Acacia Saint", "user_turn_1": "That looks suitable . Please book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flavoroso \"))))))", "idx": "15270", "datum_id": {"dialogue_id": "5f4a8d9a-2f00-4180-abf8-b21deb4b1b51", "turn_index": 4}}
{"user_turn_0": "Does it have free wifi", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15276", "datum_id": {"dialogue_id": "40a27a63-d590-40f8-9948-e4ad9b958f2f", "turn_index": 3}}
{"user_turn_0": "What class is the flight ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "I 'd prefer an economy class flight departing at 4:50 PM please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.source_? (Place.location_? (?= \" Manchester \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.tripType_? (?= (TripType.oneWay)))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "15288", "datum_id": {"dialogue_id": "cb1aaee3-3ea3-4755-b67a-1ce4d7e2e174", "turn_index": 2}}
{"user_turn_0": "Please book that for me", "agent_turn_0": "Root system inform train book Completed", "user_turn_1": "Thanks , also include that booking this afternoon to my calendar", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (?= (^(DateTimeRange Restaurant) reference (Restaurant.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Afternoon))))))))))", "idx": "15297", "datum_id": {"dialogue_id": "b5c26826-9f0b-471d-9602-7abe93fde20b", "turn_index": 4}}
{"user_turn_0": "What kind of food does it serve ?", "agent_turn_0": "Root system inform restaurant find focus equals foodType equals Seafood", "user_turn_1": "Cool . Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "15300", "datum_id": {"dialogue_id": "9994ee3d-577e-4244-b238-0734da563398", "turn_index": 2}}
{"user_turn_0": "6 people", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Ok . Can you change it to 3 o'clock then ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (Time.hour_? (?= (Hour.apply 3L))))))", "idx": "15303", "datum_id": {"dialogue_id": "9994ee3d-577e-4244-b238-0734da563398", "turn_index": 5}}
{"user_turn_0": "How much is the average cost ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 65", "user_turn_1": "Book it for me on May the 23rd", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (^((Constraint String)) refer))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (& (Date.month_? (?= (May))) (Date.day_? (?= (Day.apply 23L)))))))))))", "idx": "15314", "datum_id": {"dialogue_id": "8f17dcd2-a770-4091-b06f-2576dee8c801", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i need a room for one night at a low - priced Temple hotel on the 19th of June . I want a double room and it will be for just the one night .", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" Temple \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (& (Date.month_? (?= (June))) (Date.day_? (?= (Day.apply 19L)))))) (DateTimeRange.duration_? (AppleDuration.day_? (?= 1)))))) (Hotel.priceRange_? (?= (PriceRange.Low)))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Double)))))))", "idx": "15323", "datum_id": {"dialogue_id": "aa779cfb-45c3-443a-845f-9f3ba49a934d", "turn_index": 0}}
{"user_turn_0": "Do they have laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Okay , make the reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15325", "datum_id": {"dialogue_id": "aa779cfb-45c3-443a-845f-9f3ba49a934d", "turn_index": 2}}
{"user_turn_0": "Hey , i would like to book a one way flight from London Heathrow to Edinburgh", "agent_turn_0": "Root system prompt flight book object equals departureDateTime", "user_turn_1": "I will leave on the 16th after 930 AM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 16L))))) (List.exists_? (DateTime.time_? (?>= (someSalient (& (& (Time.hour_? (?= (Hour.apply 9L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM))))))))))))))", "idx": "15339", "datum_id": {"dialogue_id": "b0d5a3be-8409-43e7-9f81-78db0d24d9c9", "turn_index": 1}}
{"user_turn_0": "Is it economy or business class ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "I would rather have the one that departs at 1:50 Pm and I want business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.tripType_? (?= (TripType.oneWay))) (Flight.source_? (Place.location_? (?= \" London Heathrow \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "15341", "datum_id": {"dialogue_id": "b0d5a3be-8409-43e7-9f81-78db0d24d9c9", "turn_index": 3}}
{"user_turn_0": "which of the restaurants serve pizza", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Shining Gate", "user_turn_1": "Well , do they have parking", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "15351", "datum_id": {"dialogue_id": "0420c477-300d-4b7a-b87a-21830f28b4ce", "turn_index": 3}}
{"user_turn_0": "I actually would like another restaurant with outdoor seats , you ca n't beat this outdoor spring weather you know", "agent_turn_0": "Root system prompt restaurant book object equals priceRange", "user_turn_1": "Yes of course , I want good quality food , not that junk", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.priceRange_? (?= (PriceRange.High)))))))", "idx": "15353", "datum_id": {"dialogue_id": "0420c477-300d-4b7a-b87a-21830f28b4ce", "turn_index": 5}}
{"user_turn_0": "Yes of course , I want good quality food , not that junk", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Boiling Fence", "user_turn_1": "you know ill try it , go ahead with booking", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Empirica \"))))))", "idx": "15354", "datum_id": {"dialogue_id": "0420c477-300d-4b7a-b87a-21830f28b4ce", "turn_index": 6}}
{"user_turn_0": "Well its suppose to be 4 unless Julie skips out , she better not skip out like last time", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Ok , can you change the appointment date to today , man now I have to tell everyone hopefully they can reschedule", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (?= (Today))))))))", "idx": "15356", "datum_id": {"dialogue_id": "0420c477-300d-4b7a-b87a-21830f28b4ce", "turn_index": 8}}
{"user_turn_0": "See if I have a new message", "agent_turn_0": "Root system inform message checkExistence Existed", "user_turn_1": "Send my event from this morning to Mr McDonald", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" McDonald \")) (Person.namePrefix_? (?= \" Mr \"))))) (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Morning)))))))))))", "idx": "15360", "datum_id": {"dialogue_id": "6361bd3c-83c1-48df-9867-9eebb9af3c1f", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i want to book a two star restaurant in Queens 's Park .", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.location_? (?= \" Queen's Park \")) (Restaurant.rating_? (?>= (someSalient (?= 2)))))))", "idx": "15363", "datum_id": {"dialogue_id": "31efe92f-9a3d-4467-be08-b959f4af56d9", "turn_index": 0}}
{"user_turn_0": "What about parking . try one with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floss and Joes", "user_turn_1": "Is there outdoor seats ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "15367", "datum_id": {"dialogue_id": "31efe92f-9a3d-4467-be08-b959f4af56d9", "turn_index": 4}}
{"user_turn_0": "Is there outdoor seats ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "Looks good book it for 4 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Beef Easy \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 4L))))))))))", "idx": "15368", "datum_id": {"dialogue_id": "31efe92f-9a3d-4467-be08-b959f4af56d9", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , can you book me a round trip ticket from East Croydon to Aberdeen on the 6th ?", "tgt": "(plan (^(Train) Book :object (& (& (& (Train.source_? (Place.location_? (?= \" East Croydon \"))) (Train.destination_? (Place.location_? (?= \" Aberdeen \")))) (Train.departureDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 6L)))))) (Train.tripType_? (?= (TripType.roundTrip))))))", "idx": "15377", "datum_id": {"dialogue_id": "f6b5c8ee-c41b-48ce-91f8-10f2e7ab64dc", "turn_index": 0}}
{"user_turn_0": "What 's the address of that place ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 234 University Street", "user_turn_1": "Alright , that works . Book me a table there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Boiling Fence \"))))))", "idx": "15384", "datum_id": {"dialogue_id": "a9a41739-c936-45cc-8828-bd15f3ceab1e", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , how much does Dimple \u2019s restaurant cost", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.priceRange_? (^(PriceRange) always)) :object (Restaurant.restaurantName_? (?= \" Dimple's \"))))", "idx": "15388", "datum_id": {"dialogue_id": "6a4ffa00-ee7b-4ad5-a7f8-b5ba1c676b9a", "turn_index": 0}}
{"user_turn_0": "Get me directions from Laurel Street to 7 Barrow Point Avenue", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "I would like you to reserve the Lakeside Demon restaurant for me and add it to calendar", "tgt": "(plan (do (^(Restaurant) Book :object (Restaurant.restaurantName_? (?= \" The Lakeside Demon \"))) (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (?= (^(DateTimeRange Restaurant) reference (^(Restaurant) always)))))))", "idx": "15395", "datum_id": {"dialogue_id": "f7f9c146-5ec8-4e3e-9170-63e7dd219729", "turn_index": 2}}
{"user_turn_0": "Does it have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Okay , that 's fine then . Please make the booking for 4:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "15402", "datum_id": {"dialogue_id": "df88ac39-e353-4469-adf7-249defb6b72e", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , book the Beef Easy restaurant for me on January 10th 10 o'clock", "tgt": "(plan (do (^(Restaurant) Book :object (& (Restaurant.restaurantName_? (?= \" Beef Easy \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (January))) (Date.day_? (?= (Day.apply 10L)))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 10L))))))))) (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (?= (^(DateTimeRange Restaurant) reference (^(Restaurant) always)))))))", "idx": "15405", "datum_id": {"dialogue_id": "291c853f-b121-4e7e-af0e-fd7e4d6ac842", "turn_index": 0}}
{"user_turn_0": "I would like another moderately priced hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Sheraton price equals 156", "user_turn_1": "Is there a private bath room ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.privateBath_? (^(Boolean) always)))))", "idx": "15413", "datum_id": {"dialogue_id": "1087aed8-456b-48a0-8009-179acb98488b", "turn_index": 3}}
{"user_turn_0": "Is there a private bath room ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "I want to book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Obsidian Sky \"))))))", "idx": "15414", "datum_id": {"dialogue_id": "1087aed8-456b-48a0-8009-179acb98488b", "turn_index": 4}}
{"user_turn_0": "I need three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I have to pay in advance ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "15418", "datum_id": {"dialogue_id": "1087aed8-456b-48a0-8009-179acb98488b", "turn_index": 8}}
{"user_turn_0": "At 4 PM", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "Make a reservation at the Emptia restaurant for me on October 21st and add it to my reminders", "tgt": "(plan (do (^(Restaurant) Book :object (& (Restaurant.restaurantName_? (?= \" Emptia \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (& (Date.month_? (?= (October))) (Date.day_? (?= (Day.apply 21L))))))))) (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (?= (^(DateTimeRange Restaurant) reference (^(Restaurant) always)))))))", "idx": "15432", "datum_id": {"dialogue_id": "c000f56d-c398-4811-b35b-9ec97dc6637b", "turn_index": 2}}
{"user_turn_0": "Can I have 3 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "No change the check out day to Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.endDateTime \") (lambda (^(Constraint DateTime) x0) (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))))", "idx": "15442", "datum_id": {"dialogue_id": "757dd285-e311-4018-818a-fb6792f2acbd", "turn_index": 2}}
{"user_turn_0": "No change the check out day to Sunday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "15443", "datum_id": {"dialogue_id": "757dd285-e311-4018-818a-fb6792f2acbd", "turn_index": 3}}
{"user_turn_0": "Yep , that 's right !", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM", "user_turn_1": "Hmm . I think I 'd rather have the one that leaves at 3:45 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "15447", "datum_id": {"dialogue_id": "fa9e835c-ff2a-4bf2-9604-73d615a0f207", "turn_index": 2}}
{"user_turn_0": "Yes , please", "agent_turn_0": "Root system inform train book Completed", "user_turn_1": "Yeah , I need you to send the Balls of the Bull Festival event today to my dad", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Father))))) (Message.textContent_? (?= (^(String CalendarEvent) reference (& (CalendarEvent.eventName_? (?= \" Balls of the Bull Festival \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today))))))))))))", "idx": "15449", "datum_id": {"dialogue_id": "fa9e835c-ff2a-4bf2-9604-73d615a0f207", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , book a one - way trick ticket to Brighton station please .", "tgt": "(plan (^(Train) Book :object (& (Train.destination_? (Place.location_? (?= \" Brighton station \"))) (Train.tripType_? (?= (TripType.oneWay))))))", "idx": "15450", "datum_id": {"dialogue_id": "fd8570fe-9d3f-4c1c-be6a-43bdc4fabf2e", "turn_index": 0}}
{"user_turn_0": "I 'm returning on Sunday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM", "user_turn_1": "That looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "15456", "datum_id": {"dialogue_id": "fd8570fe-9d3f-4c1c-be6a-43bdc4fabf2e", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , book a hotel with at least one star with a king sized bed please .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.rating_? (?!= (someSalient (?= 0)))) (Hotel.roomType_? (List.exists_? (?= (RoomType.King)))))))", "idx": "15458", "datum_id": {"dialogue_id": "ce8f48c2-a53e-49a3-8fd5-3d43c1b17677", "turn_index": 0}}
{"user_turn_0": "Hey assistant , book a hotel with at least one star with a king sized bed please .", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "Yes , make sure it 's in Hadley Wood and it 's cheap", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.location_? (?= \" Hadley Wood \"))) (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "15459", "datum_id": {"dialogue_id": "ce8f48c2-a53e-49a3-8fd5-3d43c1b17677", "turn_index": 1}}
{"user_turn_0": "Do they serve breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Go ahead and book it anyway", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15461", "datum_id": {"dialogue_id": "ce8f48c2-a53e-49a3-8fd5-3d43c1b17677", "turn_index": 3}}
{"user_turn_0": "Do they have a gym ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15489", "datum_id": {"dialogue_id": "b912ad9c-8178-4430-aecf-9ffedb14ef38", "turn_index": 3}}
{"user_turn_0": "Direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "15507", "datum_id": {"dialogue_id": "4925d5b5-fcab-4cca-86b0-90b7304443d1", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , when will the train to Chlemsford arrive", "tgt": "(plan (^(Train) Find :focus (Train.arrivalDateTime_? (^(DateTime) always)) :object (Train.destination_? (Place.location_? (?= \" Chelmsford \")))))", "idx": "15520", "datum_id": {"dialogue_id": "8616575e-cb9c-4592-ad7b-31ed5a9530bc", "turn_index": 0}}
{"user_turn_0": "Hi assistant , what is the arrival time of HO347 going to Glasgow ?", "agent_turn_0": "Root system inform flight find focus equals arrivalDateTime equals time equals hour equals 6", "user_turn_1": "What is the arrival time of my flight to Brussel on Saturday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday)))))) (Flight.destination_? (Place.location_? (?= \" Brussel \")))))))", "idx": "15538", "datum_id": {"dialogue_id": "ff940c61-0846-43a6-922d-3e09e5fb7001", "turn_index": 1}}
{"user_turn_0": "Hey , please create a reminder for my next event", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Please remind me to go shopping", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Reminder)) Path.apply \" object \") (lambda (^(Constraint Reminder) x0) (Reminder.reminderContent_? (?= \" go shopping \")))))", "idx": "15548", "datum_id": {"dialogue_id": "63d1d94e-5cff-45aa-8441-3bd7f6eeff55", "turn_index": 1}}
{"user_turn_0": "Make it a round - trip ticket to Dublin", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "Try for tomorrow ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Tomorrow)))))", "idx": "15560", "datum_id": {"dialogue_id": "34a54473-fc94-4bb7-b5b8-b4f2c110bfd6", "turn_index": 3}}
{"user_turn_0": "What class of cabin is it for ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "I would rather have the flight departing at 2:40 PM on business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.source_? (Place.location_? (?= \" Birmingham \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "15562", "datum_id": {"dialogue_id": "34a54473-fc94-4bb7-b5b8-b4f2c110bfd6", "turn_index": 5}}
{"user_turn_0": "Hi my assistant , how long will it take to get to my event tomorrow", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 25", "user_turn_1": "Get me a bargain priced hotel in Wembley from the 16th to the 20th . I need a double room by the way", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" Wembley \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 16L))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 20L)))))))) (Hotel.priceRange_? (?= (PriceRange.Low)))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Double)))))))", "idx": "15567", "datum_id": {"dialogue_id": "5b5c4da4-42b0-45c9-b29c-598782bd4c28", "turn_index": 1}}
{"user_turn_0": "Yo , do they got breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Bet !", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15569", "datum_id": {"dialogue_id": "5b5c4da4-42b0-45c9-b29c-598782bd4c28", "turn_index": 3}}
{"user_turn_0": "Hold up . Change it to check in on June 15th", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "When do I pay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "15572", "datum_id": {"dialogue_id": "5b5c4da4-42b0-45c9-b29c-598782bd4c28", "turn_index": 6}}
{"user_turn_0": "Book a table for six people at The Shining Gate on February 11th at 7:30", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Ok . Change the date to the 25th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 25L))))))", "idx": "15598", "datum_id": {"dialogue_id": "905f5c08-5a1a-479d-93ed-440fa201f62c", "turn_index": 4}}
{"user_turn_0": "What time is my reminder", "agent_turn_0": "Root system inform reminder find focus equals atDateTime equals time equals hour equals 2 date equals definedValue equals Tomorrow", "user_turn_1": "Set a reminder for the event tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object.atDateTime \") (lambda (^(Constraint CalendarEvent) x0) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow))))))))", "idx": "15611", "datum_id": {"dialogue_id": "d5670d7f-9c1c-452b-9903-17d4ffe27125", "turn_index": 2}}
{"user_turn_0": "Is it a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "That 's ok . I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "15648", "datum_id": {"dialogue_id": "8ffe052f-7cf0-4209-87e8-2a2fc67d2b16", "turn_index": 3}}
{"user_turn_0": "Does the hotel have free wifi", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15656", "datum_id": {"dialogue_id": "d4f2310a-dee4-4136-9b0c-d7402e27dce8", "turn_index": 2}}
{"user_turn_0": "Three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "15660", "datum_id": {"dialogue_id": "d4f2310a-dee4-4136-9b0c-d7402e27dce8", "turn_index": 6}}
{"user_turn_0": "None but make sure it fits four people", "agent_turn_0": "Root system offer taxi book inform taxi find destination equals location equals 83 Upper Street", "user_turn_1": "When does my flight to Brussel get here on the fourth", "tgt": "(plan (^(Taxi) Find :focus (Taxi.travelTime_? (^(AppleDuration) always)) :object (?= (^(Taxi Dynamic) reference (^(Dynamic) always)))))", "idx": "15672", "datum_id": {"dialogue_id": "6c061a70-6ca3-4cbe-8150-feb3f8c3a901", "turn_index": 2}}
{"user_turn_0": "yes book it", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "about 45 minutes", "tgt": "(plan (^(Flight) Find :focus (Flight.arrivalDateTime_? (^(DateTime) always)) :object (& (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 4L)))))) (Flight.destination_? (Place.location_? (?= \" Brussel \"))))))", "idx": "15674", "datum_id": {"dialogue_id": "6c061a70-6ca3-4cbe-8150-feb3f8c3a901", "turn_index": 4}}
{"user_turn_0": "Will breakfast be included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "OK that 's perfect for my booking , submit it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15677", "datum_id": {"dialogue_id": "2024c7c0-06de-42ad-b9ef-3e0ddd0fcbc0", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , give me the rating of The Boiling fence restaurant .", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.rating_? (^(Number) always)) :object (Restaurant.restaurantName_? (?= \" The Boiling Fence \"))))", "idx": "15680", "datum_id": {"dialogue_id": "081caf28-852b-4f47-a760-542cf1de748d", "turn_index": 0}}
{"user_turn_0": "Hello , give me the rating of The Boiling fence restaurant .", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 3", "user_turn_1": "Book it", "tgt": "(plan (^(Restaurant) Book :object (Restaurant.restaurantName_? (^((Constraint String)) refer))))", "idx": "15681", "datum_id": {"dialogue_id": "081caf28-852b-4f47-a760-542cf1de748d", "turn_index": 1}}
{"user_turn_0": "I 'd like Japanese Cuisine", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Acacia Saint", "user_turn_1": "What is the address of this restaurant ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "15688", "datum_id": {"dialogue_id": "178530ad-34b5-40d7-baa5-a03be6ec6689", "turn_index": 2}}
{"user_turn_0": "You know what , I prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capers", "user_turn_1": "What is the average cost per person there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "15690", "datum_id": {"dialogue_id": "178530ad-34b5-40d7-baa5-a03be6ec6689", "turn_index": 4}}
{"user_turn_0": "I prefer another restaurant with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Shining Gate", "user_turn_1": "What is the address of this restaurant", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "15692", "datum_id": {"dialogue_id": "178530ad-34b5-40d7-baa5-a03be6ec6689", "turn_index": 6}}
{"user_turn_0": "What is the address of this restaurant", "agent_turn_0": "Root system inform restaurant find focus equals address equals 54 Duncan Street", "user_turn_1": "That 's fine . Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Acacia Saint \"))))))", "idx": "15693", "datum_id": {"dialogue_id": "178530ad-34b5-40d7-baa5-a03be6ec6689", "turn_index": 7}}
{"user_turn_0": "Is it a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "That 's fine , book it pleae", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "15701", "datum_id": {"dialogue_id": "eb276350-ffab-4a56-91d7-5bbb3cf1420c", "turn_index": 4}}
{"user_turn_0": "What is the cabin class ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "Ok cool . I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "15715", "datum_id": {"dialogue_id": "ea617fa5-9931-4381-923b-b7232207b889", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , book me a place to eat in Hillingdon with three stars or more .", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.location_? (?= \" Hillingdon \")) (Restaurant.rating_? (?>= (someSalient (?= 3)))))))", "idx": "15720", "datum_id": {"dialogue_id": "7d034409-da0a-4f6a-8147-542af643f761", "turn_index": 0}}
{"user_turn_0": "I 'll head back on Saturday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM", "user_turn_1": "I like the sound of that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "15730", "datum_id": {"dialogue_id": "6e2d8953-67b4-4198-81e3-59c66e31c9f8", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , i 'd like to book a restaurant for today in Northwood . It should have four stars and not be too expensive", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Northwood \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Today)))))) (Restaurant.priceRange_? (?= (PriceRange.Low)))) (Restaurant.rating_? (?= 4)))))", "idx": "15732", "datum_id": {"dialogue_id": "f2944078-66fc-43a6-ab28-0fff2016bfb3", "turn_index": 0}}
{"user_turn_0": "Yes rere please send it", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Tomorrow I need you to send it to Simon as well ,", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))))))) (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Simon \"))))))))", "idx": "15742", "datum_id": {"dialogue_id": "06bac4c2-6593-4704-932d-05c122657813", "turn_index": 4}}
{"user_turn_0": "I do not like any of those . Search for American restaurants", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Beef Easy", "user_turn_1": "Does that one have outdoor seating ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "15749", "datum_id": {"dialogue_id": "f1ef0468-6298-457d-9624-9e2498e2b6fe", "turn_index": 6}}
{"user_turn_0": "Does that one have outdoor seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "That 's fine . Go ahead and do that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Bandits \"))))))", "idx": "15750", "datum_id": {"dialogue_id": "f1ef0468-6298-457d-9624-9e2498e2b6fe", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i need a taxi from Comptom Arms to my next event venue .", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" Compton Arms \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))))))", "idx": "15753", "datum_id": {"dialogue_id": "28b38a48-5b09-424c-95be-47071819a335", "turn_index": 0}}
{"user_turn_0": "I want to come back on Saturday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM", "user_turn_1": "That will be fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "15761", "datum_id": {"dialogue_id": "71c86716-6953-40da-a857-81c0d2abd57a", "turn_index": 3}}
{"user_turn_0": "Hi my assistant , please set a reminder for the Do Great Things on my calendar .", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Please set a reminder for the event on Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object.atDateTime \") (lambda (^(Constraint CalendarEvent) x0) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday)))))))))", "idx": "15764", "datum_id": {"dialogue_id": "b4ecd98d-03d0-4436-9c72-69c3cebc745a", "turn_index": 1}}
{"user_turn_0": "Make me a reservation there from tomorrow to Monday . I want a queen bed", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "OK , what if I check in on Tuesday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "15770", "datum_id": {"dialogue_id": "5f95485e-bde5-41dc-ac0b-3ee84e52604e", "turn_index": 2}}
{"user_turn_0": "Two , please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "15772", "datum_id": {"dialogue_id": "5f95485e-bde5-41dc-ac0b-3ee84e52604e", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , ok here it is , should I send it ?", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Hotel.rating_? (?!= (someSalient (?= 0)))))))", "idx": "15779", "datum_id": {"dialogue_id": "a9fb67cd-7687-4d77-b391-5c424ef3c1ee", "turn_index": 0}}
{"user_turn_0": "Hey , ok here it is , should I send it ?", "agent_turn_0": "Root system prompt hotel book object equals priceRange", "user_turn_1": "Yes book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.priceRange_? (?= (PriceRange.Low)))) (Hotel.hasParking_? (?= true))))))", "idx": "15780", "datum_id": {"dialogue_id": "a9fb67cd-7687-4d77-b391-5c424ef3c1ee", "turn_index": 1}}
{"user_turn_0": "Yes book it", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Etiquette Suites price equals 210", "user_turn_1": "Just a single room", "tgt": "(plan (^(Navigation) Find :object (Navigation.destination_? (?= (^(Place Hotel) reference (^(Hotel) always))))))", "idx": "15781", "datum_id": {"dialogue_id": "a9fb67cd-7687-4d77-b391-5c424ef3c1ee", "turn_index": 2}}
{"user_turn_0": "Just a single room", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "What kind of room", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15782", "datum_id": {"dialogue_id": "a9fb67cd-7687-4d77-b391-5c424ef3c1ee", "turn_index": 3}}
{"user_turn_0": "What kind of room", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (?= (Tomorrow))))))))))", "idx": "15783", "datum_id": {"dialogue_id": "a9fb67cd-7687-4d77-b391-5c424ef3c1ee", "turn_index": 4}}
{"user_turn_0": "What are the directions there", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "How expensive do you want it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.rooms_? (?= 2))))))", "idx": "15785", "datum_id": {"dialogue_id": "a9fb67cd-7687-4d77-b391-5c424ef3c1ee", "turn_index": 6}}
{"user_turn_0": "How expensive do you want it", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Look at the Etiquette Suites The price is 210 pounds per night", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "15786", "datum_id": {"dialogue_id": "a9fb67cd-7687-4d77-b391-5c424ef3c1ee", "turn_index": 7}}
{"user_turn_0": "Does it have a private bath room ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15805", "datum_id": {"dialogue_id": "7cc694bb-6546-49f6-b4de-bc9a602f2d4a", "turn_index": 3}}
{"user_turn_0": "it is 3", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually change it to be a Sunday check out", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Sunday))))))", "idx": "15808", "datum_id": {"dialogue_id": "7cc694bb-6546-49f6-b4de-bc9a602f2d4a", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i need a reservation at a hotel that 's not expensive and is near my event .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))))))", "idx": "15810", "datum_id": {"dialogue_id": "deb03152-fd80-405a-a77b-f6b497319ac4", "turn_index": 0}}
{"user_turn_0": "Can you get me directions there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Make a reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Grand Hyatt \"))))))", "idx": "15814", "datum_id": {"dialogue_id": "deb03152-fd80-405a-a77b-f6b497319ac4", "turn_index": 4}}
{"user_turn_0": "I want one queen size bed", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is payment beforehand required ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "15818", "datum_id": {"dialogue_id": "deb03152-fd80-405a-a77b-f6b497319ac4", "turn_index": 8}}
{"user_turn_0": "Make sure it fits five passengers", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals Starline Cabs", "user_turn_1": "Modify the destination to 234 University Street", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Place)) Path.apply \" object.destination \") (lambda (^(Constraint Place) x0) (Place.location_? (?= \" 234 University Street \")))))", "idx": "15827", "datum_id": {"dialogue_id": "3f126b9e-98b6-4ae8-9ff4-199442968681", "turn_index": 2}}
{"user_turn_0": "In Bond Street", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Parallel Tower price equals 135", "user_turn_1": "I prefer another hotel with three stars", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.rating_? (?= 3))))))", "idx": "15832", "datum_id": {"dialogue_id": "be63632c-94f9-406c-b1b7-68691fe3c058", "turn_index": 2}}
{"user_turn_0": "I prefer another hotel with three stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Etiquette Suites price equals 170", "user_turn_1": "What 's the rating ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.rating_? (^(Number) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "15833", "datum_id": {"dialogue_id": "be63632c-94f9-406c-b1b7-68691fe3c058", "turn_index": 3}}
{"user_turn_0": "What 's the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Parallel Tower \"))))))", "idx": "15834", "datum_id": {"dialogue_id": "be63632c-94f9-406c-b1b7-68691fe3c058", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , when is my train traveling to Brighton get in ?", "tgt": "(plan (^(Train) Find :focus (Train.arrivalDateTime_? (^(DateTime) always)) :object (Train.destination_? (Place.location_? (?= \" Brighton \")))))", "idx": "15841", "datum_id": {"dialogue_id": "d6ae1b6a-c096-4739-9cec-fd5aff718681", "turn_index": 0}}
{"user_turn_0": "I 'd rather a different hotel that 's priced low", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Sheraton price equals 130", "user_turn_1": "Is breakfast offered ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "15845", "datum_id": {"dialogue_id": "d6ae1b6a-c096-4739-9cec-fd5aff718681", "turn_index": 4}}
{"user_turn_0": "Is breakfast offered ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Make a reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Westin \"))))))", "idx": "15846", "datum_id": {"dialogue_id": "d6ae1b6a-c096-4739-9cec-fd5aff718681", "turn_index": 5}}
{"user_turn_0": "Something moderate please", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flip Out", "user_turn_1": "Okay that seems fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "15868", "datum_id": {"dialogue_id": "c39b0c16-3bca-44bb-9a99-e7dfab41e84f", "turn_index": 3}}
{"user_turn_0": "Is it a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "I 'd actually like to go with the one that leaves at 3:20 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "15880", "datum_id": {"dialogue_id": "d300d354-edc7-4fb1-83ad-8645258df127", "turn_index": 3}}
{"user_turn_0": "Hey assistant , what is the rating of the Hambone restaurant", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 4", "user_turn_1": "Book it for 5:30 PM", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.restaurantName_? (^((Constraint String)) refer)) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 5L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "15889", "datum_id": {"dialogue_id": "ae51a00a-8d25-4e38-aec3-99066e886cc4", "turn_index": 1}}
{"user_turn_0": "Friday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 11 minute equals 55 meridiem equals AM price equals 125", "user_turn_1": "That works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "15896", "datum_id": {"dialogue_id": "67237d22-f512-4db9-85d1-cb94518fab66", "turn_index": 3}}
{"user_turn_0": "Yep", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Thanks so much . Book me a train to reding", "tgt": "(plan (^(Train) Book :object (Train.destination_? (Place.location_? (?= \" Reading \")))))", "idx": "15907", "datum_id": {"dialogue_id": "4109fb99-c471-4dca-bd81-04c1637a0e2b", "turn_index": 4}}
{"user_turn_0": "No , the next stop is Roma on Sunday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 4 object equals nextDepartureDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM price equals 145", "user_turn_1": "That looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "15923", "datum_id": {"dialogue_id": "c32874a5-01e7-4d62-9c01-7f850b29d5e5", "turn_index": 5}}
{"user_turn_0": "I 'd rather go somewhere with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Acacia Saint", "user_turn_1": "What 's is their address ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "15935", "datum_id": {"dialogue_id": "cb7d3efc-fef7-4dba-8c73-bc8582547784", "turn_index": 5}}
{"user_turn_0": "What 's is their address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals Camden Passage", "user_turn_1": "Let 's go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Capers \"))))))", "idx": "15936", "datum_id": {"dialogue_id": "cb7d3efc-fef7-4dba-8c73-bc8582547784", "turn_index": 6}}
{"user_turn_0": "OK , is that one a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Book me the flight that departs at 4:20 PM instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "15959", "datum_id": {"dialogue_id": "fbebb501-860a-40e8-a8c6-e86bd8016dd2", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i need my next event to be sent to my love .", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Love))))))))", "idx": "15969", "datum_id": {"dialogue_id": "d9a21eb4-8ec4-4a9d-9698-62e8fa294249", "turn_index": 0}}
{"user_turn_0": "No , from Bradford", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM", "user_turn_1": "Yeah , sure , that looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "15979", "datum_id": {"dialogue_id": "1c986749-203c-46c4-918c-71d90793f7be", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , grab me a train from Oxford station to Brighton station coming before 8 PM .", "tgt": "(plan (^(Train) Book :object (& (& (Train.source_? (Place.location_? (?= \" Oxford station \"))) (Train.destination_? (Place.location_? (?= \" Brighton station \")))) (Train.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (Time.hour_? (?= (Hour.apply 8L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "15980", "datum_id": {"dialogue_id": "b5dcc440-7d7c-4d25-aac1-df4f3baa6e15", "turn_index": 0}}
{"user_turn_0": "I 'm coming back Sunday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 4 minute equals 20 meridiem equals PM", "user_turn_1": "Good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "15983", "datum_id": {"dialogue_id": "b5dcc440-7d7c-4d25-aac1-df4f3baa6e15", "turn_index": 3}}
{"user_turn_0": "Sunday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM price equals 124", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "15993", "datum_id": {"dialogue_id": "a4c7b167-e3b9-4dac-ad32-44a08ecf60b5", "turn_index": 3}}
{"user_turn_0": "What about their rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "Ok , book it", "tgt": "(plan (^(Hotel) Book :object (Hotel.hotelName_? (^((Constraint String)) refer))))", "idx": "16003", "datum_id": {"dialogue_id": "6febd8b9-344c-41df-abcd-ec4923a9b4b7", "turn_index": 2}}
{"user_turn_0": "I need two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I need to make a prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "16007", "datum_id": {"dialogue_id": "6febd8b9-344c-41df-abcd-ec4923a9b4b7", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i want to book a single room in a hotel which offer a car park to its customers .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.roomType_? (List.exists_? (?= (RoomType.Single)))) (Hotel.hasParking_? (?= true)))))", "idx": "16009", "datum_id": {"dialogue_id": "2ad31838-430c-41e4-8aea-756a4ec1610c", "turn_index": 0}}
{"user_turn_0": "Do they offer breakfast in that price ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "OK that 's fine , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "16012", "datum_id": {"dialogue_id": "2ad31838-430c-41e4-8aea-756a4ec1610c", "turn_index": 3}}
{"user_turn_0": "Can you reserve 3 rooms for me ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Hmmmm can you change the check - out date to Thursday please ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Thursday))))))", "idx": "16015", "datum_id": {"dialogue_id": "2ad31838-430c-41e4-8aea-756a4ec1610c", "turn_index": 6}}
{"user_turn_0": "Hmmmm can you change the check - out date to Thursday please ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to make a prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "16016", "datum_id": {"dialogue_id": "2ad31838-430c-41e4-8aea-756a4ec1610c", "turn_index": 7}}
{"user_turn_0": "Yes , that 's right", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 11 minute equals 40 meridiem equals AM", "user_turn_1": "Sounds good . Book that flight for two people , please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.destination_? (Place.location_? (?= \" Paris \")))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (^((Constraint (List DateTime))) refer)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 2))))))", "idx": "16025", "datum_id": {"dialogue_id": "373097f1-a76b-492c-a42c-ea889d88cae9", "turn_index": 2}}
{"user_turn_0": "I would like Chinese hotpot at a place that is n't too expensive", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "Tell me what the average cost per person would be", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "16031", "datum_id": {"dialogue_id": "1f07dcc6-6c1e-46ac-adec-9b3c9906589a", "turn_index": 3}}
{"user_turn_0": "I do n't think I would like any of those . Which of those places serve Chinese hotpot ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Maple", "user_turn_1": "Does that place take credit card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "16034", "datum_id": {"dialogue_id": "1f07dcc6-6c1e-46ac-adec-9b3c9906589a", "turn_index": 6}}
{"user_turn_0": "I would like another restaurant that offers parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Encino", "user_turn_1": "Please tell me what the address of the restaurant is", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "16036", "datum_id": {"dialogue_id": "1f07dcc6-6c1e-46ac-adec-9b3c9906589a", "turn_index": 8}}
{"user_turn_0": "Please tell me what the address of the restaurant is", "agent_turn_0": "Root system inform restaurant find focus equals address equals Tie the Knot", "user_turn_1": "Sounds good . Make a booking there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Inheat \"))))))", "idx": "16037", "datum_id": {"dialogue_id": "1f07dcc6-6c1e-46ac-adec-9b3c9906589a", "turn_index": 9}}
{"user_turn_0": "Display the directions to the calendar event that is on the 7th", "agent_turn_0": "Root system inform navigation find object equals destination equals location equals 6 John Street", "user_turn_1": "Tell me what the weather there is like", "tgt": "(plan (^(WeatherReport) Find :object (WeatherReport.location_? (^((Constraint String)) refer))))", "idx": "16042", "datum_id": {"dialogue_id": "6ab36fae-9b0a-413d-a60d-2b0f75b7ab24", "turn_index": 2}}
{"user_turn_0": "It will be over on May 27th at 6:30pm", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "I want to book a cheap German restaurant in Baker Street on Wednesday at 10:30", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Baker Street \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L))))))))) (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Restaurant.foodType_? (?= (FoodType.German))))))", "idx": "16047", "datum_id": {"dialogue_id": "17731af8-7d13-47a5-b332-d0777305ca24", "turn_index": 2}}
{"user_turn_0": "Give me another one with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Joint", "user_turn_1": "Do they have outdoors seats", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "16050", "datum_id": {"dialogue_id": "17731af8-7d13-47a5-b332-d0777305ca24", "turn_index": 5}}
{"user_turn_0": "Actually help me get another hotel with low price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Fairmont price equals 127", "user_turn_1": "What is it rated ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "16055", "datum_id": {"dialogue_id": "49e5d1e5-8e1b-4af0-87b9-3e55b062e32a", "turn_index": 4}}
{"user_turn_0": "What is it rated ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Farmhouse Inn \"))))))", "idx": "16056", "datum_id": {"dialogue_id": "49e5d1e5-8e1b-4af0-87b9-3e55b062e32a", "turn_index": 5}}
{"user_turn_0": "Brighton", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM", "user_turn_1": "That one is fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "16061", "datum_id": {"dialogue_id": "030d76b0-8a9f-4ec9-b7af-b3e17e1482a1", "turn_index": 2}}
{"user_turn_0": "Yes book it", "agent_turn_0": "Root system inform train book Completed", "user_turn_1": "Do me another favor . Book it on the 11th", "tgt": "(plan (^(Restaurant) Book :object (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 11L))))))))", "idx": "16063", "datum_id": {"dialogue_id": "030d76b0-8a9f-4ec9-b7af-b3e17e1482a1", "turn_index": 4}}
{"user_turn_0": "What 's the average cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 36", "user_turn_1": "That 's cool . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (^((Constraint String)) refer))))))", "idx": "16068", "datum_id": {"dialogue_id": "5ccda675-1e83-4681-870f-e4b5a47da783", "turn_index": 4}}
{"user_turn_0": "East Croydon", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM", "user_turn_1": "I prefer the 3:45 PM one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "16078", "datum_id": {"dialogue_id": "1a38caa7-b444-42a5-8eac-dbcda2758268", "turn_index": 6}}
{"user_turn_0": "Which airline is it ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "I prefer the one which departs 3:20 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "16083", "datum_id": {"dialogue_id": "6fdd7d81-01d3-473f-9595-577e2cb10604", "turn_index": 3}}
{"user_turn_0": "Which restaurants have three stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kiwi Sea", "user_turn_1": "Does it have outdoor seating ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "16091", "datum_id": {"dialogue_id": "9fb51459-7f65-4e74-94a2-b4bd80fdf884", "turn_index": 6}}
{"user_turn_0": "Does it have outdoor seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "Okay , book it anyway", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flavoroso \"))))))", "idx": "16092", "datum_id": {"dialogue_id": "9fb51459-7f65-4e74-94a2-b4bd80fdf884", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , make and event that is every seek", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.recurrenceUnit_? (RecurrenceUnit.Week_? (^(Number) always)))))", "idx": "16095", "datum_id": {"dialogue_id": "1c20c15e-d5d1-419a-8b1f-9deecae87e0f", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , where are you headed ?", "tgt": "(plan (^(Taxi) Book))", "idx": "16100", "datum_id": {"dialogue_id": "121206c7-0fd1-40f5-97e3-fd10e9773172", "turn_index": 0}}
{"user_turn_0": "Hey assistant , where are you headed ?", "agent_turn_0": "Root system prompt taxi book object equals destination", "user_turn_1": "I 'm headed to 21 Parkfield Street", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint Taxi))) Path.apply \" object \") (lambda (^(Option (Constraint Taxi)) x0) (Some (Taxi.destination_? (Place.location_? (?= \" 21 Parkfield Street \")))))))", "idx": "16101", "datum_id": {"dialogue_id": "121206c7-0fd1-40f5-97e3-fd10e9773172", "turn_index": 1}}
{"user_turn_0": "Is that a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "That 's ok . I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "16125", "datum_id": {"dialogue_id": "17268074-d009-430c-a609-1acad4b46b48", "turn_index": 4}}
{"user_turn_0": "Hey assistant , i want to book air tickets from London to Amsterdam for three passengers", "agent_turn_0": "Root system prompt flight book object equals departureDateTime", "user_turn_1": "I will leave tomorrow after 9:30 o'clock and book an economy class for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& x0 (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (?>= (someSalient (& (Time.hour_? (?= (Hour.apply 9L))) (Time.minute_? (?= (Minute.apply 30L))))))))))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "16135", "datum_id": {"dialogue_id": "a8328fc3-c033-477b-9cd8-4a04229aa8e8", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , can you please update my 4 o'clock reminder to 6:30 PM ?", "tgt": "(plan (^(Reminder) Update :focus (Reminder.atDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))) :object (Reminder.atDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 4L)))))))", "idx": "16154", "datum_id": {"dialogue_id": "2950db0c-4ff6-4fe4-aedb-e9bef8c0afd6", "turn_index": 0}}
{"user_turn_0": "Yes , book it", "agent_turn_0": "Root system inform train book Completed", "user_turn_1": "How far is the commute from The African Waistcoat to 36 Albert Road by car ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (& (& (Navigation.source_? (Place.location_? (?= \" The African Waistcoat \"))) (Navigation.destination_? (Place.location_? (?= \" 36 Albert Road \")))) (Navigation.transportationMode_? (?= (TransportationMode.Driving))))))", "idx": "16172", "datum_id": {"dialogue_id": "6b702eb6-4d01-40ad-b08a-8764e6102b51", "turn_index": 4}}
{"user_turn_0": "Yes , it should be average", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Beef Easy", "user_turn_1": "cool , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "16186", "datum_id": {"dialogue_id": "509c1843-a44e-4c6a-ab4d-ed96bde76bd9", "turn_index": 3}}
{"user_turn_0": "I 'm coming back on Sunday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM", "user_turn_1": "Ok , yes", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "16193", "datum_id": {"dialogue_id": "f9163010-e726-47fd-9c01-475c6621b9cf", "turn_index": 3}}
{"user_turn_0": "Hey assistant , can you help me book a high price restaurant on April 10th in Northwood ?", "agent_turn_0": "Root system prompt restaurant book object equals foodType", "user_turn_1": "I do n't care as long as it has three stars rating", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.rating_? (?= 3))) (Restaurant.foodType_? (?= (FoodType.Any)))))))", "idx": "16196", "datum_id": {"dialogue_id": "d1f8d4da-a78f-4e1d-bdc1-c551100ea46f", "turn_index": 1}}
{"user_turn_0": "Let me go with another one that has outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dim Summit", "user_turn_1": "Can you tell me the cost per person ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "16199", "datum_id": {"dialogue_id": "d1f8d4da-a78f-4e1d-bdc1-c551100ea46f", "turn_index": 4}}
{"user_turn_0": "Let me go with another restaurant with parking please", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Gogol", "user_turn_1": "Let me see the cost per person please", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "16201", "datum_id": {"dialogue_id": "d1f8d4da-a78f-4e1d-bdc1-c551100ea46f", "turn_index": 6}}
{"user_turn_0": "Let me see the cost per person please", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 42", "user_turn_1": "Okay , then book that one for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Shining Gate \"))))))", "idx": "16202", "datum_id": {"dialogue_id": "d1f8d4da-a78f-4e1d-bdc1-c551100ea46f", "turn_index": 7}}
{"user_turn_0": "But what airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals British", "user_turn_1": "Um . No . I want to do the 3:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "16210", "datum_id": {"dialogue_id": "eeca0854-2dd2-43b9-8727-a5e55de79dfe", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , i want to book hotel in London Bridge . I will check in tomorrow for one night . I am looking for hotel with 3 star rating .", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" London Bridge \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))) (DateTimeRange.duration_? (AppleDuration.day_? (?= 1)))))) (Hotel.rating_? (?= 3)))))", "idx": "16213", "datum_id": {"dialogue_id": "aae8743e-76a7-4f0f-9852-ed8ef4902219", "turn_index": 0}}
{"user_turn_0": "Does the hotel have laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "16215", "datum_id": {"dialogue_id": "aae8743e-76a7-4f0f-9852-ed8ef4902219", "turn_index": 2}}
{"user_turn_0": "Three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait . Do I need to prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "16218", "datum_id": {"dialogue_id": "aae8743e-76a7-4f0f-9852-ed8ef4902219", "turn_index": 5}}
{"user_turn_0": "I will depart tomorrow and arrive by 9 PM", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 meridiem equals PM", "user_turn_1": "It looks fine to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "16228", "datum_id": {"dialogue_id": "a0242da9-b86b-4d3b-8098-1caebfdcb851", "turn_index": 3}}
{"user_turn_0": "How 's the weather there ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cloudy", "user_turn_1": "What is the weather at Leicester today ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint WeatherReport)) Path.apply \" object \") (lambda (^(Constraint WeatherReport) x0) (& (WeatherReport.location_? (?= \" Leicester \")) (WeatherReport.atDateTime_? (DateTime.date_? (?= (Today))))))))", "idx": "16232", "datum_id": {"dialogue_id": "5aa438dd-9a46-479d-97dd-bbb4c5ef5245", "turn_index": 2}}
{"user_turn_0": "I 'd like some Japanese food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floq", "user_turn_1": "How much is it there per person ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "16248", "datum_id": {"dialogue_id": "7ec6f748-bda8-4bed-b481-39103a4a6be5", "turn_index": 3}}
{"user_turn_0": "How much is it there per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 42", "user_turn_1": "That works . Book that one for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (^((Constraint String)) refer))))))", "idx": "16249", "datum_id": {"dialogue_id": "7ec6f748-bda8-4bed-b481-39103a4a6be5", "turn_index": 4}}
{"user_turn_0": "11:30 AM", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals endDateTime", "user_turn_1": "The event will end at 12:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.duration_? (AppleDuration.hour_? (?= 1)))))))", "idx": "16269", "datum_id": {"dialogue_id": "c054cc68-bda2-41d8-9086-ffa187a83d48", "turn_index": 2}}
{"user_turn_0": "The event will end at 12:30 PM", "agent_turn_0": "Root system offer calendarEvent create inform calendarEvent find Conflicted object equals eventName equals Gaming Summit", "user_turn_1": "No , Can you change the start time to 10:30 o'clock ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Time)) Path.apply \" object.dateTimeRange.startDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))))))", "idx": "16270", "datum_id": {"dialogue_id": "c054cc68-bda2-41d8-9086-ffa187a83d48", "turn_index": 3}}
{"user_turn_0": "Leeds", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "The 3:45 PM one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "16287", "datum_id": {"dialogue_id": "f5af741f-00df-4bbc-a58c-b89ff2be8fdc", "turn_index": 4}}
{"user_turn_0": "Can you check if it has laundry service ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "That sounds great , please book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "16292", "datum_id": {"dialogue_id": "aeea8328-1c49-4adb-9682-13f7e4966e75", "turn_index": 3}}
{"user_turn_0": "One", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Here is your booking information . Should I submit ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "16312", "datum_id": {"dialogue_id": "4c8b1c60-1f79-4ee3-aba7-f679e62a4268", "turn_index": 6}}
{"user_turn_0": "I want to come back on 23rd", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM", "user_turn_1": "Looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "16317", "datum_id": {"dialogue_id": "2b6220a9-eb29-4fde-8436-3f121caee07e", "turn_index": 4}}
{"user_turn_0": "How do I get to that hotel ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Okay , I 'll stay there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "16332", "datum_id": {"dialogue_id": "1519ce4b-fde6-4fce-96ce-2ba770fd1387", "turn_index": 3}}
{"user_turn_0": "On Sunday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM", "user_turn_1": "Sure , sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "16367", "datum_id": {"dialogue_id": "2ebad358-ba44-4cd5-88cf-1240e55d2616", "turn_index": 5}}
{"user_turn_0": "Can you make it 2 rooms , please ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Change it first ; I 'll stay until Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Thursday)))))", "idx": "16388", "datum_id": {"dialogue_id": "ae4ca5dd-5423-4c8a-aaa2-5c62f8765e11", "turn_index": 4}}
{"user_turn_0": "Change it first ; I 'll stay until Thursday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to prepay for the rooms ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "16389", "datum_id": {"dialogue_id": "ae4ca5dd-5423-4c8a-aaa2-5c62f8765e11", "turn_index": 5}}
{"user_turn_0": "Actually can you alter the check in date to tomorrow", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to make a prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "16398", "datum_id": {"dialogue_id": "38f99c4d-f3ea-4c11-928b-fee9e63b5296", "turn_index": 7}}
{"user_turn_0": "Does the hotel have fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Okay , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "16424", "datum_id": {"dialogue_id": "736ddb8e-5e91-4a78-b2ba-3d80f4a5284d", "turn_index": 3}}
{"user_turn_0": "I need three rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you change the check out date to the 23rd", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 23L))))))", "idx": "16427", "datum_id": {"dialogue_id": "736ddb8e-5e91-4a78-b2ba-3d80f4a5284d", "turn_index": 6}}
{"user_turn_0": "Can you change the check out date to the 23rd", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "16428", "datum_id": {"dialogue_id": "736ddb8e-5e91-4a78-b2ba-3d80f4a5284d", "turn_index": 7}}
{"user_turn_0": "On the 25th at 11 AM please", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Please modify the booking to the 20th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Day)) Path.apply \" object.atDateTime.date.day \") (lambda (^(Constraint Day) x0) (?= (Day.apply 20L)))))", "idx": "16440", "datum_id": {"dialogue_id": "9eb584c9-7266-41ef-bb78-c1d9eb1ea5f0", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , hey can you book me a hotel that is inexpensive and has a car park ? I need to check in today and check out tomorrow", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.priceRange_? (?= (PriceRange.Low))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (?= (Tomorrow))))))) (Hotel.hasParking_? (?= true)))))", "idx": "16442", "datum_id": {"dialogue_id": "c4093c3d-faca-45b5-ad07-06dd9ec9bcff", "turn_index": 0}}
{"user_turn_0": "No , hold on . I need to change the check in date to Monday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait ... does this booking have free cancellation ? just in case ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "16447", "datum_id": {"dialogue_id": "c4093c3d-faca-45b5-ad07-06dd9ec9bcff", "turn_index": 5}}
{"user_turn_0": "Hello , i want to book a flight ticket from London Heathrow to Dublin that leaves on the 13th", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM price equals 166", "user_turn_1": "I prefer the 3:40 PM flight and I would like to have economy class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.source_? (Place.location_? (?= \" London Heathrow \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (^((Constraint (List DateTime))) refer) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "16450", "datum_id": {"dialogue_id": "3a8fd6b2-c3fc-4b11-9caf-84ccf01e9060", "turn_index": 1}}
{"user_turn_0": "Could I have 2 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Could you change the check out day to be on Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Friday)))))", "idx": "16464", "datum_id": {"dialogue_id": "341a2210-9e77-463f-b979-da1071db0406", "turn_index": 5}}
{"user_turn_0": "It does n't matter , as long as it has at least one star", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Juniper Cloud", "user_turn_1": "Does the restaurant take credit card ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "16469", "datum_id": {"dialogue_id": "28990043-2288-4922-b6fe-27b33e1041f7", "turn_index": 3}}
{"user_turn_0": "Does the restaurant take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "That 's fine . Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "16470", "datum_id": {"dialogue_id": "28990043-2288-4922-b6fe-27b33e1041f7", "turn_index": 4}}
{"user_turn_0": "Does the restaurant have outdoor seats ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "That 's fine . Book it anyway please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "16485", "datum_id": {"dialogue_id": "3b0aa2d0-2ba4-4972-9644-e34a81c8c4aa", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , what kind of food do you want", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Greenford \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow)))))) (Restaurant.priceRange_? (?= (PriceRange.Moderate)))) (Restaurant.rating_? (?!= (someSalient (?= 0)))))))", "idx": "16500", "datum_id": {"dialogue_id": "f17a652c-a56b-4f26-87f4-286a1aae4228", "turn_index": 0}}
{"user_turn_0": "Hi there , what kind of food do you want", "agent_turn_0": "Root system prompt restaurant book object equals foodType", "user_turn_1": "Floq looks like a good option", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.foodType_? (?= (FoodType.Chinese)))))))", "idx": "16501", "datum_id": {"dialogue_id": "f17a652c-a56b-4f26-87f4-286a1aae4228", "turn_index": 1}}
{"user_turn_0": "Floq looks like a good option", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floq", "user_turn_1": "Yes please", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "16502", "datum_id": {"dialogue_id": "f17a652c-a56b-4f26-87f4-286a1aae4228", "turn_index": 2}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "The Lakeside Demon looks like a good option", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.hasOutdoorSeats_? (?= true))))))", "idx": "16503", "datum_id": {"dialogue_id": "f17a652c-a56b-4f26-87f4-286a1aae4228", "turn_index": 3}}
{"user_turn_0": "The Lakeside Demon looks like a good option", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Lakeside Demon", "user_turn_1": "About 35 pounds", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "16504", "datum_id": {"dialogue_id": "f17a652c-a56b-4f26-87f4-286a1aae4228", "turn_index": 4}}
{"user_turn_0": "About 35 pounds", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 35", "user_turn_1": "Fro what time", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Floq \"))))))", "idx": "16505", "datum_id": {"dialogue_id": "f17a652c-a56b-4f26-87f4-286a1aae4228", "turn_index": 5}}
{"user_turn_0": "Fro what time", "agent_turn_0": "Root system prompt restaurant book object equals atDateTime equals time", "user_turn_1": "For how many people", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 7L))) (Time.minute_? (?= (Minute.apply 30L))))))))))", "idx": "16506", "datum_id": {"dialogue_id": "f17a652c-a56b-4f26-87f4-286a1aae4228", "turn_index": 6}}
{"user_turn_0": "For how many people", "agent_turn_0": "Root system prompt restaurant book object equals tableSize", "user_turn_1": "There is nothing avialable", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.tableSize_? (?= 6))))))", "idx": "16507", "datum_id": {"dialogue_id": "f17a652c-a56b-4f26-87f4-286a1aae4228", "turn_index": 7}}
{"user_turn_0": "I 'm leaving from Waverley", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM", "user_turn_1": "Sounds alright", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "16516", "datum_id": {"dialogue_id": "748926a5-f554-4427-95bc-e7cc2f84cb54", "turn_index": 2}}
{"user_turn_0": "Sounds alright", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM", "user_turn_1": "Sounds alright", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "16517", "datum_id": {"dialogue_id": "748926a5-f554-4427-95bc-e7cc2f84cb54", "turn_index": 3}}
{"user_turn_0": "Hello assistant , is there an event every Monday on my calendar", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Create one", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Now)))) (DateTimeRange.endDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 7L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "16520", "datum_id": {"dialogue_id": "f6fdc99d-ef6e-4905-94d7-4ec1a9540b28", "turn_index": 1}}
{"user_turn_0": "Hello assistant , what is the rating of Vitale hotel in Hammersmith", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Can you make me a booking there . I want to check in today and check out on 12 , and I will need a queen size bed", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.hotelName_? (?= \" Vitale \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (& (Date.day_? (?= (Day.apply 12L))) (Date.month_? (?= (April))))))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Queen)))))))", "idx": "16530", "datum_id": {"dialogue_id": "bea2e26b-b55a-4acd-8af5-812213089b5f", "turn_index": 1}}
{"user_turn_0": "Bradford", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 35 meridiem equals PM", "user_turn_1": "I would rather have the one that leaves at 2 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (Train.departureDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "16546", "datum_id": {"dialogue_id": "e9f46ccc-ee2d-456d-aea3-9ca23a1e5b3a", "turn_index": 2}}
{"user_turn_0": "Table for 4 please", "agent_turn_0": "Root system offer restaurant book inform calendarEvent find Conflicted", "user_turn_1": "No . Why do n't we change the time for my Hambone Martian reservation to 10:00", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (Time.hour_? (?= (Hour.apply 10L))))))", "idx": "16557", "datum_id": {"dialogue_id": "63bb911e-8869-4b5f-8621-3318a04b71a3", "turn_index": 3}}
{"user_turn_0": "It 's Friday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 4 object equals nextDepartureDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM price equals 127", "user_turn_1": "That looks fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "16571", "datum_id": {"dialogue_id": "ac0886c6-8528-4fa0-a94f-36cf93dc24d0", "turn_index": 7}}
{"user_turn_0": "Do I have an event held in Mayfair on the calendar", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Create one", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.eventName_? (?= \" networking event \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "16578", "datum_id": {"dialogue_id": "7e2c11c6-3a9f-4543-bd07-30d3b31867a7", "turn_index": 3}}
{"user_turn_0": "I do n't really have a preference as long as it fits my one luggage", "agent_turn_0": "Root system offer taxi book", "user_turn_1": "Will you change up the destination so that it takes me to West Plumb Branch Lane instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" West Plumb Branch Lane \"))))", "idx": "16593", "datum_id": {"dialogue_id": "cf87f2f5-ef0c-41d9-aab8-789a41c7de17", "turn_index": 3}}
{"user_turn_0": "The location should be Victoria", "agent_turn_0": "Root system prompt restaurant book object equals foodType", "user_turn_1": "A three star Mexican eatery", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.foodType_? (?= (FoodType.Mexican)))) (Restaurant.rating_? (?= 3))))))", "idx": "16603", "datum_id": {"dialogue_id": "b680cee2-c45b-4577-9868-ccd8646b1f17", "turn_index": 2}}
{"user_turn_0": "A three star Mexican eatery", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Box", "user_turn_1": "Give me an outdoors one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.hasOutdoorSeats_? (?= true))))))", "idx": "16604", "datum_id": {"dialogue_id": "b680cee2-c45b-4577-9868-ccd8646b1f17", "turn_index": 3}}
{"user_turn_0": "Give me an outdoors one", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Box", "user_turn_1": "What is the address", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "16605", "datum_id": {"dialogue_id": "b680cee2-c45b-4577-9868-ccd8646b1f17", "turn_index": 4}}
{"user_turn_0": "What is the address", "agent_turn_0": "Root system inform restaurant find focus equals address equals The Bull Islington", "user_turn_1": "Book it for me at January 18th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Jute Box \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (& (Date.month_? (?= (January))) (Date.day_? (?= (Day.apply 18L)))))))))))", "idx": "16606", "datum_id": {"dialogue_id": "b680cee2-c45b-4577-9868-ccd8646b1f17", "turn_index": 5}}
{"user_turn_0": "I 'd like another hotel , one that has three stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Hilton price equals 170", "user_turn_1": "Does the hotel have laundry service", "tgt": "(plan (^(Hotel) Find :focus (Hotel.laundry_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "16614", "datum_id": {"dialogue_id": "42d0e72f-f798-4d06-a401-f54815d1fc6e", "turn_index": 4}}
{"user_turn_0": "Does the hotel have laundry service", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" River Park \"))))))", "idx": "16615", "datum_id": {"dialogue_id": "42d0e72f-f798-4d06-a401-f54815d1fc6e", "turn_index": 5}}
{"user_turn_0": "Book it for me", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "from February 11th until the 14th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 11L)))) (month_? (Date.month_? (?= (February)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 14L)))))))))))", "idx": "16616", "datum_id": {"dialogue_id": "42d0e72f-f798-4d06-a401-f54815d1fc6e", "turn_index": 6}}
{"user_turn_0": "I need two rooms , please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually can you change the check in date to Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.startDateTime \") (lambda (^(Constraint DateTime) x0) (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday)))))))", "idx": "16618", "datum_id": {"dialogue_id": "42d0e72f-f798-4d06-a401-f54815d1fc6e", "turn_index": 8}}
{"user_turn_0": "Actually can you change the check in date to Tuesday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel the booking for free ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "16619", "datum_id": {"dialogue_id": "42d0e72f-f798-4d06-a401-f54815d1fc6e", "turn_index": 9}}
{"user_turn_0": "No , I 'm leaving from London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM price equals 166", "user_turn_1": "Sure , let 's do that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "16623", "datum_id": {"dialogue_id": "e467dc2e-d55c-4ee0-b800-56cba79bebc6", "turn_index": 2}}
{"user_turn_0": "On Friday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 5 object equals nextDepartureDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM price equals 127", "user_turn_1": "Yeah , book this one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "16632", "datum_id": {"dialogue_id": "621bcc82-6141-403d-b9e8-66d829b931f7", "turn_index": 6}}
{"user_turn_0": "Yes I want a restaurant that does n't have a high price range but has a rating of three stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Cityroom", "user_turn_1": "Is credit card accepted at the restaurant ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "16637", "datum_id": {"dialogue_id": "16f641e5-494e-4450-80be-c8a6328ba8e8", "turn_index": 3}}
{"user_turn_0": "Give me a different restaurant that provides outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dim Summit", "user_turn_1": "Is outdoor seating provided at the restaurant ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "16639", "datum_id": {"dialogue_id": "16f641e5-494e-4450-80be-c8a6328ba8e8", "turn_index": 5}}
{"user_turn_0": "Is outdoor seating provided at the restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "Book it for 11 o'clock tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Cityroom \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 11L)))))))))))", "idx": "16640", "datum_id": {"dialogue_id": "16f641e5-494e-4450-80be-c8a6328ba8e8", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , please send the the 10th event to Olive", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Oliver \")))) (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 10L))))))))))))", "idx": "16644", "datum_id": {"dialogue_id": "faafd259-1964-4b90-a462-bcc770c9ba6f", "turn_index": 0}}
{"user_turn_0": "Do they have private bathrooms ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Ok . I 'll take it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "16652", "datum_id": {"dialogue_id": "6ce5b157-0782-426e-a472-4e217c4da4d5", "turn_index": 3}}
{"user_turn_0": "Just one single", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they charge a cancellation fee ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "16655", "datum_id": {"dialogue_id": "6ce5b157-0782-426e-a472-4e217c4da4d5", "turn_index": 6}}
{"user_turn_0": "Does it have private bath room ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "16660", "datum_id": {"dialogue_id": "c3b5d9ff-ced1-4bfc-8c4c-b8e59c44f06c", "turn_index": 3}}
{"user_turn_0": "Price does n't matter , but it should serve Grill food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Spago", "user_turn_1": "That 's fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flew Z \"))))))", "idx": "16669", "datum_id": {"dialogue_id": "97c31f7e-d102-413a-9727-b72853da91f1", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , i 'd like to book a low priced hotel from November 19th to the 25th , and please make sure it has a car park .", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 19L)))) (month_? (Date.month_? (?= (November)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 25L)))))))) (Hotel.hasParking_? (?= true)))))", "idx": "16672", "datum_id": {"dialogue_id": "424c0540-5ec8-4798-b4be-c07f6816fb72", "turn_index": 0}}
{"user_turn_0": "I 'd prefer a place with a three star rating or better", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals The Blackstone price equals 124", "user_turn_1": "Do they have free wifi ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasWifi_? (^(Boolean) always)))))", "idx": "16676", "datum_id": {"dialogue_id": "424c0540-5ec8-4798-b4be-c07f6816fb72", "turn_index": 4}}
{"user_turn_0": "Do they have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" The Fresco \"))))))", "idx": "16677", "datum_id": {"dialogue_id": "424c0540-5ec8-4798-b4be-c07f6816fb72", "turn_index": 5}}
{"user_turn_0": "I 'd like one room please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Please modify the check out date to Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Sunday))))))", "idx": "16679", "datum_id": {"dialogue_id": "424c0540-5ec8-4798-b4be-c07f6816fb72", "turn_index": 7}}
{"user_turn_0": "Is there a car park there ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "16684", "datum_id": {"dialogue_id": "55793239-00cb-4468-ac53-777cc26261a3", "turn_index": 3}}
{"user_turn_0": "Book it", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "I 'm checking in on May 20th and checking out on May 25th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 20L))))) (DateTimeRange.endDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 25L)))) (month_? (Date.month_? (?= (May))))))))))))", "idx": "16685", "datum_id": {"dialogue_id": "55793239-00cb-4468-ac53-777cc26261a3", "turn_index": 4}}
{"user_turn_0": "Departing from Leicester", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM", "user_turn_1": "Sure that one works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "16690", "datum_id": {"dialogue_id": "9af54eb4-ec2b-4c29-9649-de4ce0776728", "turn_index": 2}}
{"user_turn_0": "Actually , can I have 2 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does it offer free cancellation", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "16703", "datum_id": {"dialogue_id": "43ae3cdc-d504-4e0a-ba88-c362b0dc8f08", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , i want to get a round - trip air ticket from Manchester to EdInburgh . I will be leaving on Tuesday and returning on Saturday .", "tgt": "(plan (^(Flight) Book :object (& (& (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" Manchester \")))) (Flight.destination_? (Place.location_? (?= \" Edinburgh \")))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))))) (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday))))))))", "idx": "16705", "datum_id": {"dialogue_id": "fc971355-eb16-4f08-9127-0a381eb8b366", "turn_index": 0}}
{"user_turn_0": "Hi my assistant , i want to get a round - trip air ticket from Manchester to EdInburgh . I will be leaving on Tuesday and returning on Saturday .", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "Check on the 9th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 9L))))))", "idx": "16706", "datum_id": {"dialogue_id": "fc971355-eb16-4f08-9127-0a381eb8b366", "turn_index": 1}}
{"user_turn_0": "Book me for that flight", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM price equals 199", "user_turn_1": "I 'll go on that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "16708", "datum_id": {"dialogue_id": "fc971355-eb16-4f08-9127-0a381eb8b366", "turn_index": 3}}
{"user_turn_0": "can you show mw how to get there", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "About how long does it take , why is it going in circles", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Option (Constraint Navigation))) Path.apply \" focus \") (lambda (^(Option (Constraint Navigation)) x0) (Some (Navigation.travelTime_? (^(AppleDuration) always))))))", "idx": "16732", "datum_id": {"dialogue_id": "b78e4eeb-ba98-418d-9ad8-53154832f930", "turn_index": 2}}
{"user_turn_0": "No . I want to have Japanese", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Interknack", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "16740", "datum_id": {"dialogue_id": "bc8ace01-203a-483b-9e1d-8b724e8a8cb9", "turn_index": 3}}
{"user_turn_0": "Wimbledon", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "16746", "datum_id": {"dialogue_id": "84408b7b-1bdd-4d00-ad9b-2e690035bbf5", "turn_index": 2}}
{"user_turn_0": "Looks good", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "16747", "datum_id": {"dialogue_id": "84408b7b-1bdd-4d00-ad9b-2e690035bbf5", "turn_index": 3}}
{"user_turn_0": "Is that one business or economy ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "Ok , let 's book that one then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "16758", "datum_id": {"dialogue_id": "50a59c03-1cb5-4b3b-b3e1-866ecbbc5f78", "turn_index": 4}}
{"user_turn_0": "Does the hotel have laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "16768", "datum_id": {"dialogue_id": "0355f6ed-d7d4-497f-8a74-525a47589755", "turn_index": 2}}
{"user_turn_0": "I just need one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "16772", "datum_id": {"dialogue_id": "0355f6ed-d7d4-497f-8a74-525a47589755", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , book it", "tgt": "(plan (^(Flight) Book :object (& (& (& (Flight.destination_? (Place.location_? (?= \" Edinburgh \"))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 11L))))))) (Flight.tripType_? (?= (TripType.oneWay)))) (Flight.passengers_? (?= 3)))))", "idx": "16784", "datum_id": {"dialogue_id": "4727bc6a-fb6e-4190-b4a2-3a42dfdf4a14", "turn_index": 0}}
{"user_turn_0": "Hi my assistant , book it", "agent_turn_0": "Root system prompt flight book object equals source", "user_turn_1": "Should I book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.source_? (Place.location_? (?= \" Liverpool \")))))))", "idx": "16785", "datum_id": {"dialogue_id": "4727bc6a-fb6e-4190-b4a2-3a42dfdf4a14", "turn_index": 1}}
{"user_turn_0": "Should I book it", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM price equals 124", "user_turn_1": "on Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Edinburgh \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.tripType_? (?= (TripType.oneWay)))) (Flight.passengers_? (?= 3))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "16786", "datum_id": {"dialogue_id": "4727bc6a-fb6e-4190-b4a2-3a42dfdf4a14", "turn_index": 2}}
{"user_turn_0": "There are five flights", "agent_turn_0": "Root system prompt flight book object equals returnDateTime", "user_turn_1": "Ok it has been booked , submit it now ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday)))))))))", "idx": "16788", "datum_id": {"dialogue_id": "4727bc6a-fb6e-4190-b4a2-3a42dfdf4a14", "turn_index": 4}}
{"user_turn_0": "Ok it has been booked , submit it now ?", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM price equals 178", "user_turn_1": "Liverpool", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "16789", "datum_id": {"dialogue_id": "4727bc6a-fb6e-4190-b4a2-3a42dfdf4a14", "turn_index": 5}}
{"user_turn_0": "Liverpool", "agent_turn_0": "Root system offer flight book", "user_turn_1": "When do you leave ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "16790", "datum_id": {"dialogue_id": "4727bc6a-fb6e-4190-b4a2-3a42dfdf4a14", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "OK assistant , please help me schedule an event at 1:30 PM on September 14th .", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (& (Date.month_? (?= (September))) (Date.day_? (?= (Day.apply 14L))))) (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "16791", "datum_id": {"dialogue_id": "03ecc5b2-b8d8-4c2c-86d2-806f38878284", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , add to my calendar Configuration Management Summit with Mr Metcalfe from 3 to 4 o'clock", "tgt": "(plan (^(CalendarEvent) Create :object (& (& (CalendarEvent.eventName_? (?= \" Configuration Management Summit \")) (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 3L))))) (DateTimeRange.endDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 4L)))))))) (CalendarEvent.attendees_? (Contact.person_? (& (Person.name_? (?= \" Metcalfe \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "16801", "datum_id": {"dialogue_id": "4e95f702-4613-400c-920b-c2d3b367eaef", "turn_index": 0}}
{"user_turn_0": "What kind of food does it serve ?", "agent_turn_0": "Root system inform restaurant find focus equals foodType equals Chinese food", "user_turn_1": "Go ahead and book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "16824", "datum_id": {"dialogue_id": "9e4d9415-2b2e-40c7-9f18-acc00393d3dd", "turn_index": 3}}
{"user_turn_0": "What kind of food does it have ?", "agent_turn_0": "Root system inform restaurant find focus equals foodType equals American Food", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "16835", "datum_id": {"dialogue_id": "55f8b990-2882-4ec4-936d-9aa5143357c6", "turn_index": 2}}
{"user_turn_0": "Hi my assistant , can you tell me when my next event starts ?", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals startDateTime equals time equals hour equals 10 minute equals 30", "user_turn_1": "Thanks for the help . Can you add a reminder for it as well ?", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (^((Constraint DateTime)) refer))))", "idx": "16840", "datum_id": {"dialogue_id": "563a3906-86f6-4cc5-976c-091e55b3910d", "turn_index": 1}}
{"user_turn_0": "I will return on Thursday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM", "user_turn_1": "Yes please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "16849", "datum_id": {"dialogue_id": "18fa3953-7cd6-44bd-baf3-4188eee052f3", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , book a hotel from January 7th to 12th", "tgt": "(plan (^(Hotel) Book :object (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 7L)))) (month_? (Date.month_? (?= (January)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 12L)))))))))", "idx": "16851", "datum_id": {"dialogue_id": "0bc0dec3-2bfb-44ce-993b-9d47a390fcd9", "turn_index": 0}}
{"user_turn_0": "I prefer another hotel that does n't have zero stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals The Watson price equals 170", "user_turn_1": "What 's the rating ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "16855", "datum_id": {"dialogue_id": "0bc0dec3-2bfb-44ce-993b-9d47a390fcd9", "turn_index": 4}}
{"user_turn_0": "What 's the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Rose \"))))))", "idx": "16856", "datum_id": {"dialogue_id": "0bc0dec3-2bfb-44ce-993b-9d47a390fcd9", "turn_index": 5}}
{"user_turn_0": "One single room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you change the check out date to Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Sunday))))))", "idx": "16859", "datum_id": {"dialogue_id": "0bc0dec3-2bfb-44ce-993b-9d47a390fcd9", "turn_index": 8}}
{"user_turn_0": "Can you change the check out date to Sunday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "16860", "datum_id": {"dialogue_id": "0bc0dec3-2bfb-44ce-993b-9d47a390fcd9", "turn_index": 9}}
{"user_turn_0": "Do they have wifi", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "16864", "datum_id": {"dialogue_id": "38a7a873-09a5-467a-860d-ef669a9f4541", "turn_index": 2}}
{"user_turn_0": "Two", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Ok it has been booked", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.hotelName \") (lambda (^(Constraint String) x0) (?= \" Astro Resort \"))))", "idx": "16867", "datum_id": {"dialogue_id": "38a7a873-09a5-467a-860d-ef669a9f4541", "turn_index": 5}}
{"user_turn_0": "Ok it has been booked", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "How about the Astro Resort hot", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "16868", "datum_id": {"dialogue_id": "38a7a873-09a5-467a-860d-ef669a9f4541", "turn_index": 6}}
{"user_turn_0": "Hi assistant , i need Build Your Base added to my calendar and sent to Stewart .", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange", "user_turn_1": "2:30 until 3:30", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object \") (lambda (^(Constraint CalendarEvent) x0) (& x0 (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))))) (DateTimeRange.endDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L))))))))))))", "idx": "16870", "datum_id": {"dialogue_id": "44c834f5-bd4b-40ab-adfc-d754a2a61570", "turn_index": 1}}
{"user_turn_0": "It 's in the morning", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals endDateTime", "user_turn_1": "It 'll last until 7:00 this evening", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.endDateTime_? (& (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 7L))) (meridiem_? (?= (Meridiem.PM))))) (DateTime.date_? (?= (Today)))))))))", "idx": "16876", "datum_id": {"dialogue_id": "997cdad6-4ec2-4829-a931-c8fcfa12ff47", "turn_index": 2}}
{"user_turn_0": "MPV is fine", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals 8063 Lake View", "user_turn_1": "Ok , I have created a taxi order for you . The pick up point will be your current location 8063 Lake View . Should I submit the order now ?", "tgt": "(plan (^(Taxi) Find :focus (Taxi.travelTime_? (^(AppleDuration) always)) :object (?= (^(Taxi Dynamic) reference (^(Dynamic) always)))))", "idx": "16884", "datum_id": {"dialogue_id": "37ec9dc6-897c-43ba-9285-c66a26ced5b3", "turn_index": 5}}
{"user_turn_0": "Is it a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Can you do the one at 1:20 PM instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "16895", "datum_id": {"dialogue_id": "5b7eb387-c3bd-4476-807d-5240e3fb0a04", "turn_index": 3}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "16909", "datum_id": {"dialogue_id": "c38b0523-d99f-4961-bcb9-fa41607f3b7a", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , would you throw Counseling Service on my calendar ?", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.eventName_? (?= \" Counseling Service \"))))", "idx": "16940", "datum_id": {"dialogue_id": "100c6db9-21ab-4ca7-a188-9371a15ac22d", "turn_index": 0}}
{"user_turn_0": "Meh , none of them look good to me . How about restaurants that serve Seafood", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Chipotle Grill", "user_turn_1": "Do you know if it takes card ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "16970", "datum_id": {"dialogue_id": "9659a585-88f0-4c81-bcb2-9f4b4bba7f32", "turn_index": 5}}
{"user_turn_0": "Then give me another place that has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Bandits", "user_turn_1": "Did you check to see if it has parking", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "16972", "datum_id": {"dialogue_id": "9659a585-88f0-4c81-bcb2-9f4b4bba7f32", "turn_index": 7}}
{"user_turn_0": "Did you check to see if it has parking", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Sounds good to me , please book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Dimple's \"))))))", "idx": "16973", "datum_id": {"dialogue_id": "9659a585-88f0-4c81-bcb2-9f4b4bba7f32", "turn_index": 8}}
{"user_turn_0": "What is the average cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 35", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (^((Constraint String)) refer))))))", "idx": "16980", "datum_id": {"dialogue_id": "6c11bbee-1be7-4b09-9dc3-00f14d376d91", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , when will the Bradford train arrive here ?", "tgt": "(plan (^(Train) Find :focus (Train.arrivalDateTime_? (^(DateTime) always)) :object (Train.destination_? (Place.location_? (?= \" Bradford \")))))", "idx": "16985", "datum_id": {"dialogue_id": "599c4d81-179e-4212-8b1e-c0c0774d81e2", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i want to get a round - trip ticket for a flight from Manchester to Edinburg .", "tgt": "(plan (^(Flight) Book :object (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" Manchester \")))) (Flight.destination_? (Place.location_? (?= \" Edinburgh \"))))))", "idx": "16997", "datum_id": {"dialogue_id": "89991139-86ae-4c19-b57a-1379f98785ea", "turn_index": 0}}
{"user_turn_0": "Price range should be low price and rating at least two stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Acacia Saint", "user_turn_1": "Book it !", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "17036", "datum_id": {"dialogue_id": "2fade809-394e-4303-95b5-8c68ce8bf67b", "turn_index": 3}}
{"user_turn_0": "Do they have a fitness center there ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "OK , let 's book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17048", "datum_id": {"dialogue_id": "05139385-c522-4fbf-855d-a4876cb33a80", "turn_index": 3}}
{"user_turn_0": "Hello assistant , can you book me a taxi to 1 Islington Green for three passengers", "agent_turn_0": "Root system prompt taxi book object equals serviceType inform taxi find object equals serviceType equals listElementOne Saloon listElementTwo MPV listElementThree Executive", "user_turn_1": "As long as it can fit two luggage is I do n't care which type", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Taxi)) Path.apply \" object \") (lambda (^(Constraint Taxi) x0) (& (& x0 (Taxi.serviceType_? (List.exists_? (?= (ServiceType.Any))))) (Taxi.luggages_? (?= 2))))))", "idx": "17054", "datum_id": {"dialogue_id": "663e1122-30ba-41ab-8142-8ad567bdc458", "turn_index": 1}}
{"user_turn_0": "On Saturday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 meridiem equals PM", "user_turn_1": "Yes please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "17076", "datum_id": {"dialogue_id": "03646002-74c9-4582-af99-a50de98158ab", "turn_index": 7}}
{"user_turn_0": "Hello , i want to see low riced hotels .", "agent_turn_0": "Root system inform hotel find", "user_turn_1": "Is there hang out every Saturday for me ?", "tgt": "(plan (^(CalendarEvent) CheckExistence :object (& (CalendarEvent.eventName_? (?= \" hang out \")) (CalendarEvent.recurrenceUnit_? (RecurrenceUnit.dayOfWeek_? (?= (Saturday)))))))", "idx": "17079", "datum_id": {"dialogue_id": "681a8116-fbbc-48de-ad20-c14fac632ba0", "turn_index": 1}}
{"user_turn_0": "Is there hang out every Saturday for me ?", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Set one up please", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.recurrenceUnit_? (RecurrenceUnit.dayOfWeek_? (?= (Thursday))))))", "idx": "17080", "datum_id": {"dialogue_id": "681a8116-fbbc-48de-ad20-c14fac632ba0", "turn_index": 2}}
{"user_turn_0": "Hello assistant , can you tell me what the rating for the Hambone Martian restaurant is ?", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 2", "user_turn_1": "OK , book it for me please", "tgt": "(plan (^(Restaurant) Book :object (^((Constraint Restaurant)) refer)))", "idx": "17084", "datum_id": {"dialogue_id": "635c3295-68a2-4a53-9edd-8d9a81bf57bd", "turn_index": 1}}
{"user_turn_0": "Do they have a laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17097", "datum_id": {"dialogue_id": "5ec97bd0-ba50-43cf-be53-af5c998fcfd7", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , ok book it", "tgt": "(plan (^(Restaurant) Book :object (Restaurant.foodType_? (?= (FoodType.Sushi)))))", "idx": "17106", "datum_id": {"dialogue_id": "d15ff0cd-2fbb-4bbb-ac67-4c66c3710fe2", "turn_index": 0}}
{"user_turn_0": "Hi my assistant , ok book it", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName location", "user_turn_1": "Ok should I book it now ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.location_? (?= \" Oxford Circus \"))) (Restaurant.rating_? (?= 4))))))", "idx": "17107", "datum_id": {"dialogue_id": "d15ff0cd-2fbb-4bbb-ac67-4c66c3710fe2", "turn_index": 1}}
{"user_turn_0": "Ok should I book it now ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kitty City", "user_turn_1": "For how many people do you need it for ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (& (Date.month_? (?= (March))) (Date.day_? (?= (Day.apply 27L)))))))))))", "idx": "17108", "datum_id": {"dialogue_id": "d15ff0cd-2fbb-4bbb-ac67-4c66c3710fe2", "turn_index": 2}}
{"user_turn_0": "For how many people do you need it for ?", "agent_turn_0": "Root system prompt restaurant book object equals atDateTime equals time inform restaurant find object equals atDateTime equals listElementOne time equals hour equals 5 minute equals 30 meridiem equals PM listElementTwo time equals hour equals 8 meridiem equals PM listElementThree time equals hour equals 11 minute equals 30 meridiem equals AM", "user_turn_1": "There are three open times , 5:30 PM or 8 PM or 11:30 AM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM))))))))))", "idx": "17109", "datum_id": {"dialogue_id": "d15ff0cd-2fbb-4bbb-ac67-4c66c3710fe2", "turn_index": 3}}
{"user_turn_0": "There are three open times , 5:30 PM or 8 PM or 11:30 AM", "agent_turn_0": "Root system prompt restaurant book object equals tableSize", "user_turn_1": "Book me a Sushi restaurant", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.tableSize_? (?= 5))))))", "idx": "17110", "datum_id": {"dialogue_id": "d15ff0cd-2fbb-4bbb-ac67-4c66c3710fe2", "turn_index": 4}}
{"user_turn_0": "I want to know what 's the rating", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17115", "datum_id": {"dialogue_id": "bbdd0ee5-731e-4142-96c3-87ef95cb8a51", "turn_index": 3}}
{"user_turn_0": "Do they have laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Okay , make the reservation there , please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17127", "datum_id": {"dialogue_id": "1340eddd-a7f6-4514-afa7-b6f98cfde484", "turn_index": 2}}
{"user_turn_0": "Okay , make the reservation there , please", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "February 6th and 7th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 6L)))) (month_? (Date.month_? (?= (February)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 7L)))))))))))", "idx": "17128", "datum_id": {"dialogue_id": "1340eddd-a7f6-4514-afa7-b6f98cfde484", "turn_index": 3}}
{"user_turn_0": "Actually , I want to check in on the 9th of May instead", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to prepay for the rooms ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "17131", "datum_id": {"dialogue_id": "1340eddd-a7f6-4514-afa7-b6f98cfde484", "turn_index": 6}}
{"user_turn_0": "Is breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17140", "datum_id": {"dialogue_id": "57c39219-463d-4b7c-9c68-d48c6aa94e74", "turn_index": 2}}
{"user_turn_0": "I 'll be departing from Vauxhall", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "17154", "datum_id": {"dialogue_id": "c13c0d2c-6150-497f-a63b-e7c3934bbcbf", "turn_index": 4}}
{"user_turn_0": "London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I 'd like the one leaving at 1:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "17168", "datum_id": {"dialogue_id": "31818cbc-60ca-48e8-a54f-cef64f3a7ba4", "turn_index": 2}}
{"user_turn_0": "Is it a direct flight there ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "I would rather leave on the 1:45 PM flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "17174", "datum_id": {"dialogue_id": "255b3812-2891-4d80-a8f7-a654ad97685b", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , book a taxi for me from 8063 Lake View to the venue of my calendar event", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" 8063 Lake View \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))))))))))", "idx": "17177", "datum_id": {"dialogue_id": "4f0b710f-56d5-4e39-92f2-587fa879e017", "turn_index": 0}}
{"user_turn_0": "Hey assistant , book me a flight to Belfast City", "agent_turn_0": "Root system prompt flight book object equals source departureDateTime", "user_turn_1": "When are you leaving and where are you going ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))))))))", "idx": "17183", "datum_id": {"dialogue_id": "d80d991f-da91-4efd-b750-2d558d08cb4d", "turn_index": 1}}
{"user_turn_0": "London Heathrow", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 3 meridiem equals PM price equals 134", "user_turn_1": "Yes please", "tgt": "(plan (^(Flight) Find :focus (Flight.stops_? (^(Number) always)) :object (?= (^(Flight Dynamic) reference (^(Dynamic) always)))))", "idx": "17185", "datum_id": {"dialogue_id": "d80d991f-da91-4efd-b750-2d558d08cb4d", "turn_index": 3}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "do you need a return trip ticket", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "17186", "datum_id": {"dialogue_id": "d80d991f-da91-4efd-b750-2d558d08cb4d", "turn_index": 4}}
{"user_turn_0": "No thanks", "agent_turn_0": "Root system offer flight book", "user_turn_1": "Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint TripType)) Path.apply \" object.tripType \") (lambda (^(Constraint TripType) x0) (?= (TripType.roundTrip)))))", "idx": "17188", "datum_id": {"dialogue_id": "d80d991f-da91-4efd-b750-2d558d08cb4d", "turn_index": 6}}
{"user_turn_0": "Swansea", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM", "user_turn_1": "Yeah that one is fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "17194", "datum_id": {"dialogue_id": "d8636133-433a-46d4-9f4f-59460dc409b4", "turn_index": 2}}
{"user_turn_0": "Yeah that one is fine", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM", "user_turn_1": "Yeah that one is good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "17195", "datum_id": {"dialogue_id": "d8636133-433a-46d4-9f4f-59460dc409b4", "turn_index": 3}}
{"user_turn_0": "I would prefer a different restaurant that has outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone", "user_turn_1": "Does this restaurant take credit cards ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "17205", "datum_id": {"dialogue_id": "cf9dfd72-ab83-44c7-96be-163a86c7d260", "turn_index": 8}}
{"user_turn_0": "Does this restaurant take credit cards ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Okay , book it for me for the 28th at 3:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 28L))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "17206", "datum_id": {"dialogue_id": "cf9dfd72-ab83-44c7-96be-163a86c7d260", "turn_index": 9}}
{"user_turn_0": "Okay , book it for me for the 28th at 3:30 PM", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Could I set the reservation for Thursday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Thursday))))))", "idx": "17207", "datum_id": {"dialogue_id": "cf9dfd72-ab83-44c7-96be-163a86c7d260", "turn_index": 10}}
{"user_turn_0": "Which airline is it ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "Book this flight !", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "17214", "datum_id": {"dialogue_id": "60318b26-64b8-4c37-95bf-30f922bbd4bc", "turn_index": 4}}
{"user_turn_0": "Is it a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Go ahead and book that one for me then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "17225", "datum_id": {"dialogue_id": "e83c4ead-c66c-4810-adde-26f6ae82281e", "turn_index": 4}}
{"user_turn_0": "What is the forecast in Leicester", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cold", "user_turn_1": "Get me directions from 61 Richmond Avenue to 97 Church Road", "tgt": "(plan (^(Navigation) Find :object (& (Navigation.source_? (Place.location_? (?= \" 61 Richmond Avenue \"))) (Navigation.destination_? (Place.location_? (?= \" 97 Church Road \"))))))", "idx": "17235", "datum_id": {"dialogue_id": "8130cbbd-a9b3-4272-b901-a32b799f5d0b", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , schedule an event from 2 to 3:30 .", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 2L))))) (DateTimeRange.endDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L))))))))))", "idx": "17237", "datum_id": {"dialogue_id": "dc55e527-7086-4325-b2a8-10e1d97da9cc", "turn_index": 0}}
{"user_turn_0": "Ideally something that has a four star rating but not a high price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Odysse Suites price equals 199", "user_turn_1": "Okay , make the reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17245", "datum_id": {"dialogue_id": "b230343a-8b5f-4733-a1b2-6c689ee34061", "turn_index": 3}}
{"user_turn_0": "Is it possible for me to get 3 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is free cancellation an option ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "17260", "datum_id": {"dialogue_id": "22d0712e-6a8b-47f9-8e6c-4bf1d9191bdb", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , request a restaurant reservation at an inexpensive Thai restaurant for me .", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High))))) (Restaurant.foodType_? (?= (FoodType.Thai))))))", "idx": "17262", "datum_id": {"dialogue_id": "d09d75ca-5b3e-4ceb-a571-2bb784dcf20a", "turn_index": 0}}
{"user_turn_0": "Which restaurant has three stars ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Encino", "user_turn_1": "Is there outdoor seating ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "17267", "datum_id": {"dialogue_id": "d09d75ca-5b3e-4ceb-a571-2bb784dcf20a", "turn_index": 5}}
{"user_turn_0": "Is there outdoor seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "Perfect ! I would love to book it then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Boiling Fence \"))))))", "idx": "17268", "datum_id": {"dialogue_id": "d09d75ca-5b3e-4ceb-a571-2bb784dcf20a", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , 4 PM .", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.endDateTime_? (^(DateTime) always))) :object (& (CalendarEvent.eventName_? (?= \" Dry-Cleaning Pick-Up \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today))))))))", "idx": "17272", "datum_id": {"dialogue_id": "644dda1a-dffa-4a16-8223-aad3a30ab5a7", "turn_index": 0}}
{"user_turn_0": "Hello assistant , include my flight schedule on Tuesday please", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Include Mr Murray", "tgt": "(plan (^(PhoneCall) Create :object (PhoneCall.recipients_? (Contact.person_? (& (Person.name_? (?= \" Murray \")) (Person.namePrefix_? (?= \" Mr \")))))))", "idx": "17278", "datum_id": {"dialogue_id": "4fef8d41-2234-4ae2-80ad-b8b318d22670", "turn_index": 1}}
{"user_turn_0": "I want a hotel with four stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Fairmont price equals 138", "user_turn_1": "Does it have private bath rooms ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.privateBath_? (^(Boolean) always)))))", "idx": "17286", "datum_id": {"dialogue_id": "ac4a0684-fa8f-4af9-829c-901613a60ccb", "turn_index": 4}}
{"user_turn_0": "Does it have private bath rooms ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Westin \"))))))", "idx": "17287", "datum_id": {"dialogue_id": "ac4a0684-fa8f-4af9-829c-901613a60ccb", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , book a cheap three star hotel .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?= (PriceRange.Low))) (Hotel.rating_? (?>= (someSalient (?= 3)))))))", "idx": "17291", "datum_id": {"dialogue_id": "86909e66-45fd-4f04-b9c6-2c77a20708e8", "turn_index": 0}}
{"user_turn_0": "Does the hotel have private bath room ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17294", "datum_id": {"dialogue_id": "86909e66-45fd-4f04-b9c6-2c77a20708e8", "turn_index": 3}}
{"user_turn_0": "I need two", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you change the check out date to Sunday please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "17298", "datum_id": {"dialogue_id": "86909e66-45fd-4f04-b9c6-2c77a20708e8", "turn_index": 7}}
{"user_turn_0": "Hi there , tell me how long does it take to get to 12 Hydean Way by bike", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 20", "user_turn_1": "Please send my next event to Mr Dyer", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))) (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Dyer \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "17301", "datum_id": {"dialogue_id": "c624f6ce-ba88-4774-9b92-00906338618e", "turn_index": 1}}
{"user_turn_0": "Correct", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 55 meridiem equals PM", "user_turn_1": "This one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (^((Constraint Train)) refer)))))", "idx": "17313", "datum_id": {"dialogue_id": "d61ff41b-c174-4594-905b-396401bb492b", "turn_index": 2}}
{"user_turn_0": "Hello , create a calendar event tomorrow at 11:30 AM and add a reminder .", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals endDateTime", "user_turn_1": "12:15 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.duration_? (AppleDuration.minute_? (?= 45)))))))", "idx": "17332", "datum_id": {"dialogue_id": "79833ce2-be87-4fa3-af78-46089c0338ac", "turn_index": 1}}
{"user_turn_0": "It is 2", "agent_turn_0": "Root system offer restaurant book inform calendarEvent find Conflicted", "user_turn_1": "As part of the final checking of your order , I found that you have a conflicting calendar event at the reservation time", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "17344", "datum_id": {"dialogue_id": "d9a5f9f4-912e-4e45-9dd6-2cb476a264c8", "turn_index": 3}}
{"user_turn_0": "Can you check if it has free Wi - Fi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "I want to book that hotel", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17354", "datum_id": {"dialogue_id": "8eff7bb6-a985-46ea-b2ee-9ed5f1bf3dd3", "turn_index": 3}}
{"user_turn_0": "I want to book a king - sized bed", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Can I change it to the 14th instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 14L))))))", "idx": "17357", "datum_id": {"dialogue_id": "8eff7bb6-a985-46ea-b2ee-9ed5f1bf3dd3", "turn_index": 6}}
{"user_turn_0": "Yes I will", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I would like to be on the 4 PM flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "17362", "datum_id": {"dialogue_id": "b5e836df-8ad8-4f38-bcd9-90390abf0565", "turn_index": 2}}
{"user_turn_0": "No after that I will be going to Frankfurt on Friday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 3 object equals nextDepartureDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM price equals 134", "user_turn_1": "That 's good get me tickets for that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (^((Constraint Hour)) refer)) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "17365", "datum_id": {"dialogue_id": "b5e836df-8ad8-4f38-bcd9-90390abf0565", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , share city tour with my daughter", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Daughter))))) (Message.textContent_? (?= (^(String CalendarEvent) reference (& (CalendarEvent.eventName_? (?= \" city tour \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today))))))))))))", "idx": "17367", "datum_id": {"dialogue_id": "a66ab954-f44a-4864-b020-e0ae7001831b", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , I need your help to book a cab ride to the location of the Dry - Cleaning Delivery I have scheduled .", "tgt": "(plan (^(Taxi) Book :object (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.eventName_? (?= \" Dry-Cleaning Delivery \")))))))", "idx": "17372", "datum_id": {"dialogue_id": "2cce1f7f-0dd2-4a56-9ec6-0e762f7cff64", "turn_index": 0}}
{"user_turn_0": "Does the hotel have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17391", "datum_id": {"dialogue_id": "98020867-78d4-44b5-91c6-2816e5d825d1", "turn_index": 2}}
{"user_turn_0": "What rating does it have", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "Go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17404", "datum_id": {"dialogue_id": "d9b6a555-27f5-4c7b-96a9-d0bf4ce797ef", "turn_index": 3}}
{"user_turn_0": "I also want to change the check in date to tomorrow", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "17408", "datum_id": {"dialogue_id": "d9b6a555-27f5-4c7b-96a9-d0bf4ce797ef", "turn_index": 7}}
{"user_turn_0": "Yes , that 's correct rere", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM", "user_turn_1": "Not really , but what about that 4:50 PM , its looking pretty good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "17428", "datum_id": {"dialogue_id": "5894ab38-87ae-4cbe-9d79-2e9666b9963b", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , i need a taxi to get me to get me to mountain tour from 61 Hill Street .", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" 61 Hill Street \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (& (CalendarEvent.eventName_? (?= \" mountain tour \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today))))))))))))", "idx": "17432", "datum_id": {"dialogue_id": "5c912b77-98d6-4bfb-a3aa-53e98a6e0c73", "turn_index": 0}}
{"user_turn_0": "What airline is it", "agent_turn_0": "Root system inform flight find focus equals airLine equals EasyJet", "user_turn_1": "Actually what about the one at 2:40 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "17441", "datum_id": {"dialogue_id": "25090e5b-8122-408d-b13c-b484fd1833d7", "turn_index": 4}}
{"user_turn_0": "Which serve Chinese hotpot ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Boiling Fence", "user_turn_1": "How much does it cost per person ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "17459", "datum_id": {"dialogue_id": "4aee43d5-0d6d-486a-9bfa-ac9fd8692487", "turn_index": 2}}
{"user_turn_0": "How much does it cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 36", "user_turn_1": "Okay , make the reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Inheat \"))))))", "idx": "17460", "datum_id": {"dialogue_id": "4aee43d5-0d6d-486a-9bfa-ac9fd8692487", "turn_index": 3}}
{"user_turn_0": "Do any of these serve Seafood ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Bandits", "user_turn_1": "Do they have parking there ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "17469", "datum_id": {"dialogue_id": "c26d5ffe-931c-4124-9340-dd9265d62070", "turn_index": 5}}
{"user_turn_0": "Do they have parking there ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "OK , let 's book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Jute Box \"))))))", "idx": "17470", "datum_id": {"dialogue_id": "c26d5ffe-931c-4124-9340-dd9265d62070", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , create football game on Friday and add it to my calendar", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.eventName_? (?= \" football game \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday)))))))))", "idx": "17474", "datum_id": {"dialogue_id": "c79027bf-d096-4732-8d87-ae5a94ffa6ad", "turn_index": 0}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system inform calendarEvent create Completed restaurant book Completed", "user_turn_1": "Do me another favor . I also need to book a cheap hotel for one night with a single room", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.priceRange_? (?= (PriceRange.Low))) (Hotel.dateTimeRange_? (DateTimeRange.duration_? (AppleDuration.day_? (?= 1))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Single)))))))", "idx": "17482", "datum_id": {"dialogue_id": "f314e627-e56d-48f6-af79-d4875bd81a74", "turn_index": 3}}
{"user_turn_0": "I want another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Acacia Saint", "user_turn_1": "What is its address ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "17488", "datum_id": {"dialogue_id": "bec221d4-ae3c-42b0-849b-e5a710dc15d7", "turn_index": 3}}
{"user_turn_0": "What is its address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals Compton Arms", "user_turn_1": "OK . Book that one please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flip Out \"))))))", "idx": "17489", "datum_id": {"dialogue_id": "bec221d4-ae3c-42b0-849b-e5a710dc15d7", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , book a cheap hotel with a car park .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?= (PriceRange.Low))) (Hotel.hasParking_? (?= true)))))", "idx": "17502", "datum_id": {"dialogue_id": "1fd0c28e-4601-4698-b956-4eeb6e4b6663", "turn_index": 0}}
{"user_turn_0": "Do they have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17505", "datum_id": {"dialogue_id": "1fd0c28e-4601-4698-b956-4eeb6e4b6663", "turn_index": 3}}
{"user_turn_0": "Is there breakfast", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17511", "datum_id": {"dialogue_id": "142c63ef-01cb-43de-8aef-07de473c5b17", "turn_index": 2}}
{"user_turn_0": "Three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "DO they have free cancellation", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "17514", "datum_id": {"dialogue_id": "142c63ef-01cb-43de-8aef-07de473c5b17", "turn_index": 5}}
{"user_turn_0": "DO they have free cancellation", "agent_turn_0": "Root system inform hotel find focus equals freeCancellation equals False", "user_turn_1": "Change the checkout date to Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Saturday)))))", "idx": "17515", "datum_id": {"dialogue_id": "142c63ef-01cb-43de-8aef-07de473c5b17", "turn_index": 6}}
{"user_turn_0": "Change the checkout date to Saturday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to pay now ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "17516", "datum_id": {"dialogue_id": "142c63ef-01cb-43de-8aef-07de473c5b17", "turn_index": 7}}
{"user_turn_0": "Do I need to pay now ?", "agent_turn_0": "Root system inform hotel find focus equals prePayment equals True", "user_turn_1": "Wait change the check out date to Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "17517", "datum_id": {"dialogue_id": "142c63ef-01cb-43de-8aef-07de473c5b17", "turn_index": 8}}
{"user_turn_0": "Wait change the check out date to Saturday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Sit there free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "17518", "datum_id": {"dialogue_id": "142c63ef-01cb-43de-8aef-07de473c5b17", "turn_index": 9}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , add Mr Ferguson to the we together outdoors event with Mr Mackay", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.attendees_? (Contact.person_? (& (Person.name_? (?= \" Ferguson \")) (Person.namePrefix_? (?= \" Mr \"))))) :object (& (CalendarEvent.eventName_? (?= \" we together outdoors \")) (CalendarEvent.attendees_? (Contact.person_? (& (Person.name_? (?= \" Mackay \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "17520", "datum_id": {"dialogue_id": "c5bf59af-ef46-454e-b7da-92ce29b8e4e3", "turn_index": 0}}
{"user_turn_0": "Which airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "Get the one departing at 1 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "17528", "datum_id": {"dialogue_id": "fa749bfc-cc1e-4f75-8981-87243f8a05b9", "turn_index": 3}}
{"user_turn_0": "The 27th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM price equals 210", "user_turn_1": "Cool", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "17531", "datum_id": {"dialogue_id": "fa749bfc-cc1e-4f75-8981-87243f8a05b9", "turn_index": 6}}
{"user_turn_0": "Do I have any calls from my brother ?", "agent_turn_0": "Root system inform phoneCall checkExistence NotExisted", "user_turn_1": "Text him coming for you", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Brother))))) (Message.textContent_? (?= \" coming for you \")))))", "idx": "17549", "datum_id": {"dialogue_id": "a18280f1-927e-43b0-aa6f-6f08d3d51a5b", "turn_index": 4}}
{"user_turn_0": "Also where is the calendar event called business talk with Una ?", "agent_turn_0": "Root system inform calendarEvent find focus equals location equals FAME Venue", "user_turn_1": "Oh yeah , okay . About how long will it be to get there ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (Place.location_? (^((Constraint String)) refer)))))", "idx": "17554", "datum_id": {"dialogue_id": "ac87986b-8e84-423c-9134-0c23bc0a8491", "turn_index": 4}}
{"user_turn_0": "No , after that I 'm going to Zurich on the 26th", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 5 object equals nextDepartureDateTime equals time equals hour equals 1 meridiem equals PM price equals 178", "user_turn_1": "That looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (^((Constraint Time)) refer))))))", "idx": "17560", "datum_id": {"dialogue_id": "2f187796-c7e5-4d29-98f1-0bebc2d2b47e", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , when does my event Away we golf start on my calendar", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (^(DateTime) always))) :object (CalendarEvent.eventName_? (?= \" Away we golf \"))))", "idx": "17562", "datum_id": {"dialogue_id": "bac44e19-6475-497a-8f62-a14e0425feab", "turn_index": 0}}
{"user_turn_0": "It will end 6 PM tomorrow", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "I need another favor . Create a reminder", "tgt": "(plan (^(Reminder) Create))", "idx": "17569", "datum_id": {"dialogue_id": "0eaea5d7-241e-4d2b-b75d-b9cdf4ecbc78", "turn_index": 2}}
{"user_turn_0": "Try today", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 11 minute equals 45 meridiem equals AM", "user_turn_1": "Okay , book it for one person", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.source_? (Place.location_? (?= \" London Heathrow \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 1))))))", "idx": "17575", "datum_id": {"dialogue_id": "61edc41b-8f57-4b1c-96da-fe3af9f06d7b", "turn_index": 3}}
{"user_turn_0": "Get me directions from 1 Islington Green to The African Waistcoat", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Make a 6 PM reminder", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (meridiem_? (?= (Meridiem.PM))))))))", "idx": "17580", "datum_id": {"dialogue_id": "6e006792-0e14-4bfb-8565-99541a95386c", "turn_index": 3}}
{"user_turn_0": "Go ahead", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Look up when my Conference on Domain - Specific Languages attended by mom is scheduled on my calendar", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (^(DateTime) always))) :object (& (CalendarEvent.eventName_? (?= \" Conference on Domain-Specific Languages \")) (CalendarEvent.attendees_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Mother))))))))", "idx": "17585", "datum_id": {"dialogue_id": "069e03a4-3852-4220-bb13-e99b409ac89b", "turn_index": 3}}
{"user_turn_0": "Nope . But they should serve American food please", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Encino", "user_turn_1": "How much does it cost on average a head ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "17590", "datum_id": {"dialogue_id": "bffce86f-ba69-49ff-8c63-30819814fe93", "turn_index": 3}}
{"user_turn_0": "How much does it cost on average a head ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 39", "user_turn_1": "Cool . Let 's do it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (^((Constraint String)) refer))))))", "idx": "17591", "datum_id": {"dialogue_id": "bffce86f-ba69-49ff-8c63-30819814fe93", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i would like to book a hotel with at least a three star rating and a double room", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.rating_? (?>= (someSalient (?= 3)))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Double)))))))", "idx": "17601", "datum_id": {"dialogue_id": "8b9d74a6-0f38-4dd4-ad19-9730309bbc9d", "turn_index": 0}}
{"user_turn_0": "Does the hotel have private bathrooms ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17604", "datum_id": {"dialogue_id": "8b9d74a6-0f38-4dd4-ad19-9730309bbc9d", "turn_index": 3}}
{"user_turn_0": "Display directions to the next event", "agent_turn_0": "Root system inform navigation find object equals destination equals location equals Dexion House", "user_turn_1": "What 's the weather like there ?", "tgt": "(plan (^(WeatherReport) Find :object (WeatherReport.location_? (^((Constraint String)) refer))))", "idx": "17611", "datum_id": {"dialogue_id": "1c7d8c91-d356-40bf-a6a5-7db595f1f484", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , i really want to book a place at Grahame Park from Tuesday to Saturday .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= \" Grahame Park \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday))))))))))", "idx": "17613", "datum_id": {"dialogue_id": "c6b23e55-6be8-44e5-ae20-ca3000038654", "turn_index": 0}}
{"user_turn_0": "What 's the rating looking like ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Let 's book that one , I guess", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17615", "datum_id": {"dialogue_id": "c6b23e55-6be8-44e5-ae20-ca3000038654", "turn_index": 2}}
{"user_turn_0": "I want a hotel without a zero star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Hyatt price equals 178", "user_turn_1": "Is there parking at this hotel ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasParking_? (^(Boolean) always)))))", "idx": "17623", "datum_id": {"dialogue_id": "dffc1d69-097a-4a8e-9313-8d02b8d02ce7", "turn_index": 4}}
{"user_turn_0": "Is there parking at this hotel ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" The Hot Springs \"))))))", "idx": "17624", "datum_id": {"dialogue_id": "dffc1d69-097a-4a8e-9313-8d02b8d02ce7", "turn_index": 5}}
{"user_turn_0": "I would like one room and the room type does n't matter", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does this booking have free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "17627", "datum_id": {"dialogue_id": "dffc1d69-097a-4a8e-9313-8d02b8d02ce7", "turn_index": 8}}
{"user_turn_0": "Does this booking have free cancellation ?", "agent_turn_0": "Root system inform hotel find focus equals freeCancellation equals False", "user_turn_1": "Actually can you alter the check out date to Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Saturday))))))", "idx": "17628", "datum_id": {"dialogue_id": "dffc1d69-097a-4a8e-9313-8d02b8d02ce7", "turn_index": 9}}
{"user_turn_0": "Actually can you alter the check out date to Saturday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you switch the check out date to be on Saturday instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "17629", "datum_id": {"dialogue_id": "dffc1d69-097a-4a8e-9313-8d02b8d02ce7", "turn_index": 10}}
{"user_turn_0": "Can you switch the check out date to be on Saturday instead", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does this booking have free cancelling ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "17630", "datum_id": {"dialogue_id": "dffc1d69-097a-4a8e-9313-8d02b8d02ce7", "turn_index": 11}}
{"user_turn_0": "I prefer another hotel with not zero star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Palm Bliss price equals 130", "user_turn_1": "Does the hotel have car park ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "17635", "datum_id": {"dialogue_id": "b0e25166-f439-4d9b-93e7-818d32ab6554", "turn_index": 3}}
{"user_turn_0": "Does the hotel have car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Can you book it for me ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Green Acres \"))))))", "idx": "17636", "datum_id": {"dialogue_id": "b0e25166-f439-4d9b-93e7-818d32ab6554", "turn_index": 4}}
{"user_turn_0": "Can you change the check in date to February 8th ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking support free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "17639", "datum_id": {"dialogue_id": "b0e25166-f439-4d9b-93e7-818d32ab6554", "turn_index": 7}}
{"user_turn_0": "Set a reminder for me at the time", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Thanks , also i would like to book a restaurant with a car park and I would like it to be Chinese hotpot", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.foodType_? (?= (FoodType.ChineseHotPot))) (Restaurant.hasParking_? (?= true)))))", "idx": "17649", "datum_id": {"dialogue_id": "01c841b0-b3f0-45da-b5f2-f2b6cfe41e3b", "turn_index": 2}}
{"user_turn_0": "I want it to be in Canary Wharf", "agent_turn_0": "Root system prompt restaurant book object equals priceRange", "user_turn_1": "At least four stars", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.priceRange_? (?= (PriceRange.Any)))) (Restaurant.rating_? (?= 4))))))", "idx": "17651", "datum_id": {"dialogue_id": "01c841b0-b3f0-45da-b5f2-f2b6cfe41e3b", "turn_index": 4}}
{"user_turn_0": "At least four stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Empirica", "user_turn_1": "What is the average cost per person ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "17652", "datum_id": {"dialogue_id": "01c841b0-b3f0-45da-b5f2-f2b6cfe41e3b", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , send today 's event to my son .", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))))))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Son))))))))", "idx": "17653", "datum_id": {"dialogue_id": "0d32c3bc-7b53-4049-8b73-ea21a27ebf85", "turn_index": 0}}
{"user_turn_0": "What is the weather like today ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cold", "user_turn_1": "Do me another favor . Book a train from London St. Pancras to Liverpool Central . I wanna leave tomorrow and come back on April 16th", "tgt": "(plan (^(Train) Book :object (& (& (& (Train.source_? (Place.location_? (?= \" London St Pancras \"))) (Train.destination_? (Place.location_? (?= \" Liverpool Central \")))) (Train.departureDateTime_? (DateTime.date_? (?= (Tomorrow))))) (Train.returnDateTime_? (DateTime.date_? (& (Date.day_? (?= (Day.apply 16L))) (Date.month_? (?= (April)))))))))", "idx": "17656", "datum_id": {"dialogue_id": "0d32c3bc-7b53-4049-8b73-ea21a27ebf85", "turn_index": 3}}
{"user_turn_0": "Looks fine to me", "agent_turn_0": "Root system prompt train book object equals tripType", "user_turn_1": "OK , here are the trains on the day of your return . What about going at 1 PM ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (Train.returnDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 20L)))))))))", "idx": "17661", "datum_id": {"dialogue_id": "44473526-6a5c-404c-9220-8ce10b42c07d", "turn_index": 3}}
{"user_turn_0": "OK , here are the trains on the day of your return . What about going at 1 PM ?", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 meridiem equals PM", "user_turn_1": "Looks fine to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (^((Constraint Time)) refer))))))", "idx": "17662", "datum_id": {"dialogue_id": "44473526-6a5c-404c-9220-8ce10b42c07d", "turn_index": 4}}
{"user_turn_0": "Check to see if I have any missed calls", "agent_turn_0": "Root system inform phoneCall checkExistence NotExisted", "user_turn_1": "Book me a train that gets to Leeds before 11 at night", "tgt": "(plan (^(Train) Book :object (& (Train.destination_? (Place.location_? (?= \" Leeds \"))) (Train.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (Time.hour_? (?= (Hour.apply 11L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "17667", "datum_id": {"dialogue_id": "b4686768-5747-4508-aec8-fc12883fd733", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , book me a single room", "tgt": "(plan (^(Hotel) Book :object (Hotel.roomType_? (List.exists_? (?= (RoomType.Single))))))", "idx": "17669", "datum_id": {"dialogue_id": "df7b2e82-3f25-4f21-a9ff-1a9f10a4949a", "turn_index": 0}}
{"user_turn_0": "Does it have free wifi", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Go ahead book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17673", "datum_id": {"dialogue_id": "df7b2e82-3f25-4f21-a9ff-1a9f10a4949a", "turn_index": 4}}
{"user_turn_0": "Just the one", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Would I need to pay at booking", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "17677", "datum_id": {"dialogue_id": "df7b2e82-3f25-4f21-a9ff-1a9f10a4949a", "turn_index": 8}}
{"user_turn_0": "I 'm ready . Send it off", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Thanks , also now phone Mr Thompson", "tgt": "(plan (^(PhoneCall) Create :object (PhoneCall.recipients_? (Contact.person_? (& (Person.name_? (?= \" Thomson \")) (Person.namePrefix_? (?= \" Mr \")))))))", "idx": "17682", "datum_id": {"dialogue_id": "aed37e1a-b46c-4a0c-808c-ab4a14ebc54f", "turn_index": 3}}
{"user_turn_0": "What 's the weather in Manchester today", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Rainy", "user_turn_1": "Send my next event to my parents", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Parents))))))))", "idx": "17687", "datum_id": {"dialogue_id": "73310453-d75d-4f6e-b7b7-be77e6184813", "turn_index": 3}}
{"user_turn_0": "I 'd like a different hotel that does n't have a high price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Candlewood Suites price equals 119", "user_turn_1": "Cool . Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Bourbon Bliss \"))))))", "idx": "17707", "datum_id": {"dialogue_id": "3a43e732-9db2-48ff-abf3-f19984719226", "turn_index": 3}}
{"user_turn_0": "I 'd like two king sized beds", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually , can you change the check out date to Saturday >", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Saturday))))))", "idx": "17710", "datum_id": {"dialogue_id": "3a43e732-9db2-48ff-abf3-f19984719226", "turn_index": 6}}
{"user_turn_0": "Actually , can you change the check out date to Saturday >", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they have free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "17711", "datum_id": {"dialogue_id": "3a43e732-9db2-48ff-abf3-f19984719226", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , hey dude , schedule a team building with Dorothy on April 17th to be held in Waldrop \u2019s Well", "tgt": "(plan (^(CalendarEvent) Create :object (& (& (& (CalendarEvent.eventName_? (?= \" team building \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (& (Date.month_? (?= (April))) (Date.day_? (?= (Day.apply 17L)))))))) (CalendarEvent.attendees_? (Contact.person_? (Person.name_? (?= \" Dorothy \"))))) (CalendarEvent.location_? (?= \" Waldrop's Well \")))))", "idx": "17713", "datum_id": {"dialogue_id": "07b60166-44d6-489d-ad00-3838f640e05b", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , my event that 's at The Globe has been moved to Tuesday , please update my calendar", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday)))))) :object (CalendarEvent.location_? (?= \" The Globe \"))))", "idx": "17723", "datum_id": {"dialogue_id": "d9d33c1c-92c0-4dd5-bd1d-0d7a09148ff7", "turn_index": 0}}
{"user_turn_0": "Does it have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17737", "datum_id": {"dialogue_id": "702b8ba6-eae2-4bfc-b099-7d128671b8cc", "turn_index": 3}}
{"user_turn_0": "Three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Edit my check in to today ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Today)))))", "idx": "17740", "datum_id": {"dialogue_id": "702b8ba6-eae2-4bfc-b099-7d128671b8cc", "turn_index": 6}}
{"user_turn_0": "Edit my check in to today ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to pay ahead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "17741", "datum_id": {"dialogue_id": "702b8ba6-eae2-4bfc-b099-7d128671b8cc", "turn_index": 7}}
{"user_turn_0": "Is there wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17745", "datum_id": {"dialogue_id": "bdd16db3-9550-48f2-9a06-3125ac45a2a3", "turn_index": 2}}
{"user_turn_0": "Just one room room type does n't matter", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Prepayment needed ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "17748", "datum_id": {"dialogue_id": "bdd16db3-9550-48f2-9a06-3125ac45a2a3", "turn_index": 5}}
{"user_turn_0": "Pick a different restaurant which has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flew Z", "user_turn_1": "Alright , book the 13th for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Acacia Saint \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 13L))))))))))", "idx": "17754", "datum_id": {"dialogue_id": "ca334a77-eff1-4729-8cdb-5c0e661a4487", "turn_index": 4}}
{"user_turn_0": "Hey assistant , please check . Do I have an event held in Quartyard on the calendar ?", "agent_turn_0": "Root system inform calendarEvent find Existed", "user_turn_1": "Ok , how long does it take to get there", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (Place.location_? (^((Constraint String)) refer)))))", "idx": "17763", "datum_id": {"dialogue_id": "d0d5a422-bebd-439e-9737-bb38b1b94322", "turn_index": 1}}
{"user_turn_0": "Ok , how long does it take to get there", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 50", "user_turn_1": "So tell me when the train arrives . You know the one for Monday coming from Windermere", "tgt": "(plan (^(Train) Find :focus (Train.arrivalDateTime_? (^(DateTime) always)) :object (& (Train.destination_? (Place.location_? (?= \" Windermere \"))) (Train.departureDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))))))", "idx": "17764", "datum_id": {"dialogue_id": "d0d5a422-bebd-439e-9737-bb38b1b94322", "turn_index": 2}}
{"user_turn_0": "So tell me when the train arrives . You know the one for Monday coming from Windermere", "agent_turn_0": "Root system inform train find focus equals arrivalDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM", "user_turn_1": "Book a three star or more restaurant", "tgt": "(plan (^(Restaurant) Book :object (Restaurant.rating_? (?>= (someSalient (?= 3))))))", "idx": "17765", "datum_id": {"dialogue_id": "d0d5a422-bebd-439e-9737-bb38b1b94322", "turn_index": 3}}
{"user_turn_0": "It lasts for two hours", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "Also put my restaurant appointment on my calendar , too , the one for today", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (?= (^(DateTimeRange Restaurant) reference (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Today))))))))))", "idx": "17796", "datum_id": {"dialogue_id": "11e82a7d-37c1-4ffe-94b8-4eeb74004bbd", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , send my January 8th event to my daughter", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (& (Date.day_? (?= (Day.apply 8L))) (Date.month_? (?= (January)))))))))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Daughter))))))))", "idx": "17798", "datum_id": {"dialogue_id": "05d1da66-8732-4f3b-a565-66790fa3a72e", "turn_index": 0}}
{"user_turn_0": "Actually , I think I 'd rather stay somewhere with a 2 star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Rose price equals 138", "user_turn_1": "Do they have laundry on site ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.laundry_? (^(Boolean) always)))))", "idx": "17807", "datum_id": {"dialogue_id": "471dae6b-df99-4630-b20f-e99fe0589327", "turn_index": 4}}
{"user_turn_0": "Do they have laundry on site ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Go ahead and make the reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Parallel Tower \"))))))", "idx": "17808", "datum_id": {"dialogue_id": "471dae6b-df99-4630-b20f-e99fe0589327", "turn_index": 5}}
{"user_turn_0": "I would like another hotel that would offer a three star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Peninsula price equals 170", "user_turn_1": "Does that include breakfast ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "17815", "datum_id": {"dialogue_id": "e4920565-5eb8-4b4a-8abe-6b94d0294a66", "turn_index": 4}}
{"user_turn_0": "Does that include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Please make that booking for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Green Lushy Resorts \"))))))", "idx": "17816", "datum_id": {"dialogue_id": "e4920565-5eb8-4b4a-8abe-6b94d0294a66", "turn_index": 5}}
{"user_turn_0": "I need three rooms . Any room type will do", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "I need to know if that booking supports free cancellation", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "17819", "datum_id": {"dialogue_id": "e4920565-5eb8-4b4a-8abe-6b94d0294a66", "turn_index": 8}}
{"user_turn_0": "Hello assistant , how can I get from The Orion Suite to 397 Tallwood Court by bike", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "What is the forecast in Leeds", "tgt": "(plan (^(WeatherReport) Find :object (WeatherReport.location_? (?= \" Leeds \"))))", "idx": "17822", "datum_id": {"dialogue_id": "d0ae3168-a063-4bf4-9fc2-0b995468c142", "turn_index": 1}}
{"user_turn_0": "What is the forecast in Leeds", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Rainy", "user_turn_1": "Here it is should I submit it", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.restaurantName_? (?= \" Bard's Bench \")) (Restaurant.location_? (?= \" London Bridge \"))) (Restaurant.tableSize_? (?= 3))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "17823", "datum_id": {"dialogue_id": "d0ae3168-a063-4bf4-9fc2-0b995468c142", "turn_index": 2}}
{"user_turn_0": "Book it", "agent_turn_0": "Root systen inform restaurant book Completed", "user_turn_1": "For how many people", "tgt": "(plan (do (^(Restaurant) Book :object (& (Restaurant.restaurantName_? (?= \" Cityroom \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (meridiem_? (?= (Meridiem.PM))))))))) (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (?= (^(DateTimeRange Restaurant) reference (^(Restaurant) always)))))))", "idx": "17825", "datum_id": {"dialogue_id": "d0ae3168-a063-4bf4-9fc2-0b995468c142", "turn_index": 4}}
{"user_turn_0": "What 's the weather like over there ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Rainy", "user_turn_1": "Alright , well , how far away is it from 7 Upper Street to Tie the Knot by car", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (& (& (Navigation.source_? (Place.location_? (?= \" 7 Upper Street \"))) (Navigation.destination_? (Place.location_? (?= \" Tie the Knot \")))) (Navigation.transportationMode_? (?= (TransportationMode.Driving))))))", "idx": "17839", "datum_id": {"dialogue_id": "64d09af8-b4bf-4999-bc45-a0c9c5dae5b6", "turn_index": 2}}
{"user_turn_0": "Only one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "17846", "datum_id": {"dialogue_id": "6b7a720d-ef76-4916-9efb-84f5ca5e6433", "turn_index": 3}}
{"user_turn_0": "Saturday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM", "user_turn_1": "Sure , that is fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "17874", "datum_id": {"dialogue_id": "0d6876f8-944f-4988-8291-525292281f4f", "turn_index": 6}}
{"user_turn_0": "I prefer another 4 star hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Hilton Garden price equals 142", "user_turn_1": "Does the hotel have laundry service available", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.laundry_? (^(Boolean) always)))))", "idx": "17889", "datum_id": {"dialogue_id": "09870398-63c6-473e-910c-3c00c1fa9bb1", "turn_index": 3}}
{"user_turn_0": "Does the hotel have laundry service available", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Sheraton \"))))))", "idx": "17890", "datum_id": {"dialogue_id": "09870398-63c6-473e-910c-3c00c1fa9bb1", "turn_index": 4}}
{"user_turn_0": "Well how about the The Fresco hotel then ? Is that available ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does this require a prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "17894", "datum_id": {"dialogue_id": "09870398-63c6-473e-910c-3c00c1fa9bb1", "turn_index": 8}}
{"user_turn_0": "Yes , send it now , please", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "I need to update my 11 AM to 2 PM event ; it has a new time", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (^(Time) always)))) :object (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (meridiem_? (?= (Meridiem.AM)))))) (DateTimeRange.endDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "17900", "datum_id": {"dialogue_id": "bb4d1432-2b81-488c-8d98-653e7ecc0bba", "turn_index": 4}}
{"user_turn_0": "Book it for me", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "I want to book a table at Hambone for two people at 10 o'clock", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.restaurantName_? (?= \" Hambone \")) (Restaurant.tableSize_? (?= 2))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 10L)))))))))", "idx": "17904", "datum_id": {"dialogue_id": "58f4f66f-18a5-49dc-8eb4-5437587c803c", "turn_index": 3}}
{"user_turn_0": "Is it a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Book the flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "17916", "datum_id": {"dialogue_id": "c934f211-d670-4aed-a430-c9c451fb03ad", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , book me a cheap hotel", "tgt": "(plan (^(Hotel) Book :object (Hotel.priceRange_? (?= (PriceRange.Low)))))", "idx": "17918", "datum_id": {"dialogue_id": "0f968567-9db0-40e5-863f-7406001d1831", "turn_index": 0}}
{"user_turn_0": "Is there a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17921", "datum_id": {"dialogue_id": "0f968567-9db0-40e5-863f-7406001d1831", "turn_index": 3}}
{"user_turn_0": "give me two rooms of any type", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they have free cancellations", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "17925", "datum_id": {"dialogue_id": "0f968567-9db0-40e5-863f-7406001d1831", "turn_index": 7}}
{"user_turn_0": "OK it has been book", "agent_turn_0": "Root system prompt flight book object equals returnDateTime", "user_turn_1": "Yes book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))))))", "idx": "17947", "datum_id": {"dialogue_id": "85eddb1c-7e93-4110-a61f-77490655edf8", "turn_index": 6}}
{"user_turn_0": "Yes book it", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 1 meridiem equals PM price equals 119", "user_turn_1": "Do u need a round trip ticket", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "17948", "datum_id": {"dialogue_id": "85eddb1c-7e93-4110-a61f-77490655edf8", "turn_index": 7}}
{"user_turn_0": "I will return on Sunday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM", "user_turn_1": "Sure", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (^((Constraint Hour)) refer)) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "17960", "datum_id": {"dialogue_id": "f04410cd-d902-4236-90e4-4f19c4a62c11", "turn_index": 4}}
{"user_turn_0": "I prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone", "user_turn_1": "What 's the address ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "17966", "datum_id": {"dialogue_id": "ae1e9b3d-b832-4aeb-af2a-9617251b9c9b", "turn_index": 4}}
{"user_turn_0": "I prefer another restaurant with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flew Z", "user_turn_1": "That 's fine . Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Spago \"))))))", "idx": "17968", "datum_id": {"dialogue_id": "ae1e9b3d-b832-4aeb-af2a-9617251b9c9b", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , send tomorrow 's event to Amy .", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))))))) (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Amy \")))))))", "idx": "17982", "datum_id": {"dialogue_id": "95fa0f51-3af8-48ce-bdac-1cab190336ad", "turn_index": 0}}
{"user_turn_0": "What is the weather going to be like in Birmingham tomorrow ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cloudy", "user_turn_1": "What is it like in Aberdeen today ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint WeatherReport)) Path.apply \" object \") (lambda (^(Constraint WeatherReport) x0) (& (WeatherReport.location_? (?= \" Aberdeen \")) (WeatherReport.atDateTime_? (DateTime.date_? (?= (Today))))))))", "idx": "17986", "datum_id": {"dialogue_id": "95fa0f51-3af8-48ce-bdac-1cab190336ad", "turn_index": 4}}
{"user_turn_0": "Hello , please include my appointment for the Kitty City restaurant to my calendar .", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Revise the date of every calendar event on Tuesday to be on the 11th instead", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 11L)))))) :object (CalendarEvent.recurrenceUnit_? (RecurrenceUnit.dayOfWeek_? (?= (Tuesday))))))", "idx": "17993", "datum_id": {"dialogue_id": "725a34b3-994c-4c9e-8cdd-42daae532a70", "turn_index": 1}}
{"user_turn_0": "Revise the date of every calendar event on Tuesday to be on the 11th instead", "agent_turn_0": "Root system inform calendarEvent update Completed", "user_turn_1": "Set up a formula one event on my calendar with Mr Hardcare", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object \") (lambda (^(Constraint CalendarEvent) x0) (& (& (CalendarEvent.eventName_? (?= \" formula one \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (& (Date.month_? (?= (June))) (Date.day_? (?= (Day.apply 23L)))))))) (CalendarEvent.attendees_? (Contact.person_? (& (Person.name_? (?= \" Hardacre \")) (Person.namePrefix_? (?= \" Mr \")))))))))", "idx": "17994", "datum_id": {"dialogue_id": "725a34b3-994c-4c9e-8cdd-42daae532a70", "turn_index": 2}}
{"user_turn_0": "Set up a formula one event on my calendar with Mr Hardcare", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals startDateTime equals time", "user_turn_1": "That event will begin at 9:30 AM and end at 7:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& (DateTimeRange.startDateTime_? (& (^((Constraint DateTime)) refer) (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 9L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM))))))) (DateTimeRange.endDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 7L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "17995", "datum_id": {"dialogue_id": "725a34b3-994c-4c9e-8cdd-42daae532a70", "turn_index": 3}}
{"user_turn_0": "Chinese food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Stazione restaurant", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "18011", "datum_id": {"dialogue_id": "384d0fd6-179d-4b9f-8d03-2686eac70b32", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , can you book me a hotel in Notting Hill on the 11th for one night ? Make sure it has a rating of at least three stars .", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" Notting Hill \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 11L))))) (DateTimeRange.duration_? (AppleDuration.day_? (?= 1)))))) (Hotel.rating_? (?>= (someSalient (?= 3)))))))", "idx": "18020", "datum_id": {"dialogue_id": "2293cce8-da61-4b65-a61d-7fc4f998d705", "turn_index": 0}}
{"user_turn_0": "How many stars does it have ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Ok , book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "18022", "datum_id": {"dialogue_id": "2293cce8-da61-4b65-a61d-7fc4f998d705", "turn_index": 2}}
{"user_turn_0": "Just one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to pay for it right now ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "18025", "datum_id": {"dialogue_id": "2293cce8-da61-4b65-a61d-7fc4f998d705", "turn_index": 5}}
{"user_turn_0": "How can I get there", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "18031", "datum_id": {"dialogue_id": "67dc79ef-be1e-4242-8879-fa6da344f569", "turn_index": 4}}
{"user_turn_0": "Can I have 2 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "18034", "datum_id": {"dialogue_id": "67dc79ef-be1e-4242-8879-fa6da344f569", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , change the 7:30 reminder", "tgt": "(plan (^(Reminder) Update :object (Reminder.atDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 7L))) (Time.minute_? (?= (Minute.apply 30L))))))))", "idx": "18041", "datum_id": {"dialogue_id": "c3143b1b-2159-4284-a123-2fbce9dc3b43", "turn_index": 0}}
{"user_turn_0": "Hi assistant , change the 7:30 reminder", "agent_turn_0": "Root system prompt reminder update focus", "user_turn_1": "cancel it", "tgt": "(plan (revise (^(Unit) Path.apply \" Update \") (^((Option (Constraint Reminder))) Path.apply \" focus \") (lambda (^(Option (Constraint Reminder)) x0) (Some (Reminder.enabledStatus_? (?= (EnabledStatus.Disabled)))))))", "idx": "18042", "datum_id": {"dialogue_id": "c3143b1b-2159-4284-a123-2fbce9dc3b43", "turn_index": 1}}
{"user_turn_0": "I want this hotel to be moderately priced", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Ace Hotel price equals 135", "user_turn_1": "Does this hotel have a car - park ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasParking_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "18048", "datum_id": {"dialogue_id": "6bf4f5a1-d83b-4347-a16b-db41e7ac6488", "turn_index": 2}}
{"user_turn_0": "Does this hotel have a car - park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "18049", "datum_id": {"dialogue_id": "6bf4f5a1-d83b-4347-a16b-db41e7ac6488", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i want to book hotel in Preston from October 6th to 11th with low price and with car park .", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" Preston \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 6L)))) (month_? (Date.month_? (?= (October)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 11L)))))))) (Hotel.priceRange_? (?= (PriceRange.Low)))) (Hotel.hasParking_? (?= true)))))", "idx": "18066", "datum_id": {"dialogue_id": "59b4c561-99c0-483c-8bcf-86956c37881c", "turn_index": 0}}
{"user_turn_0": "Is breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Book it for me then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "18068", "datum_id": {"dialogue_id": "59b4c561-99c0-483c-8bcf-86956c37881c", "turn_index": 2}}
{"user_turn_0": "Wait . Can you change the check in date to Wednesday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "18073", "datum_id": {"dialogue_id": "59b4c561-99c0-483c-8bcf-86956c37881c", "turn_index": 7}}
{"user_turn_0": "Show me the restaurants serving Indian food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Chipotle Grill", "user_turn_1": "About how much does it cost per person ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "18078", "datum_id": {"dialogue_id": "5f4a6316-321e-4d2c-a4fe-03d4fa840261", "turn_index": 3}}
{"user_turn_0": "Let me have a different restaurant that has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Encino", "user_turn_1": "What is the address there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "18080", "datum_id": {"dialogue_id": "5f4a6316-321e-4d2c-a4fe-03d4fa840261", "turn_index": 5}}
{"user_turn_0": "What is the address there ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 97 Church Road", "user_turn_1": "Ok that 's fine . Make a reservation for me tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" La Zilla \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow)))))))))", "idx": "18081", "datum_id": {"dialogue_id": "5f4a6316-321e-4d2c-a4fe-03d4fa840261", "turn_index": 6}}
{"user_turn_0": "That one is fine", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 4 minute equals 20 meridiem equals PM", "user_turn_1": "That one is fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "18087", "datum_id": {"dialogue_id": "51d600d5-3704-45f6-bf94-74845434af2b", "turn_index": 2}}
{"user_turn_0": "Thanks for the help . Set a reminder for my next event", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Next , i 'd like to book a cheap hotel with at least a two star rating", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))) (Hotel.rating_? (?>= (someSalient (?= 2)))))))", "idx": "18099", "datum_id": {"dialogue_id": "b16d154b-562e-4203-a61e-7ab182ede303", "turn_index": 4}}
{"user_turn_0": "Hello , check for calls from my daughter", "agent_turn_0": "Root system inform phoneCall checkExistence Existed object equals atDateTime equals date definedValue equals Today", "user_turn_1": "Also text her and say cute", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Daughter))))) (Message.textContent_? (?= \" cute \")))))", "idx": "18106", "datum_id": {"dialogue_id": "f56e185b-70d9-48b5-bcb0-41f18222f1e1", "turn_index": 1}}
{"user_turn_0": "Is there a meal event on the calendar", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Make one", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.eventName_? (?= \" ExoParty \")) (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))) (DateTimeRange.endDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 7L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "18130", "datum_id": {"dialogue_id": "1bc78bf9-d327-4bb4-9f20-08045c352a29", "turn_index": 4}}
{"user_turn_0": "I want three please", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Could check in on the 10th instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 10L))))))", "idx": "18163", "datum_id": {"dialogue_id": "77213e57-f592-4c92-a8aa-c66aabeda69b", "turn_index": 4}}
{"user_turn_0": "Hi assistant , i want to book a flight ticket from London to Amsterdam leaving on December 6th", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 11 minute equals 40 meridiem equals AM", "user_turn_1": "That 's fine . Book this flight for three passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.source_? (Place.location_? (?= \" London \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 3))))))", "idx": "18166", "datum_id": {"dialogue_id": "1b91959b-0c37-4a82-b51b-0e1d4134e61e", "turn_index": 1}}
{"user_turn_0": "Hi there , add my flight to Coventry to my calendar", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Create event calling team building with Mr Dyer", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object \") (lambda (^(Constraint CalendarEvent) x0) (& (CalendarEvent.eventName_? (?= \" team building \")) (CalendarEvent.attendees_? (Contact.person_? (& (Person.name_? (?= \" Dyer \")) (Person.namePrefix_? (?= \" Mr \")))))))))", "idx": "18176", "datum_id": {"dialogue_id": "5e7e44d6-fbb2-4f3c-836b-4f14a661456f", "turn_index": 1}}
{"user_turn_0": "How long is the plane ride ?", "agent_turn_0": "Root system inform flight find focus equals duration equals hour equals 1 minute equals 15", "user_turn_1": "Great ! Get two tickets", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" London \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))) (Flight.passengers_? (?= 2))))))", "idx": "18183", "datum_id": {"dialogue_id": "a94d2b94-b71b-4162-bfaf-50c4a564d7c5", "turn_index": 2}}
{"user_turn_0": "Remind me to go shopping at 11 o'clock today", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Schedule an event at 11 AM", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (meridiem_? (?= (Meridiem.AM)))))))))", "idx": "18194", "datum_id": {"dialogue_id": "c6de9e06-0642-4a0d-85dc-36c5b3d2ac43", "turn_index": 3}}
{"user_turn_0": "Which serve Indian food ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Canton Silk \"))))))", "idx": "18200", "datum_id": {"dialogue_id": "d116c3a9-a409-4f38-8c31-27ce907fc565", "turn_index": 4}}
{"user_turn_0": "Which airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals British", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "18213", "datum_id": {"dialogue_id": "03bb739f-0c4a-41ef-96bd-acf23296761d", "turn_index": 3}}
{"user_turn_0": "Get a train ticket that will get me from Newcastle to Waterloo getting there before 11 in the afternoon", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 55 meridiem equals PM", "user_turn_1": "Oh yeah get me on that train", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (^((Constraint Train)) refer)))))", "idx": "18220", "datum_id": {"dialogue_id": "0358eb0c-3aa8-4589-8802-989f68160d94", "turn_index": 3}}
{"user_turn_0": "Is there a missed call from my sister", "agent_turn_0": "Root system inform phoneCall checkExistence Existed", "user_turn_1": "Text her", "tgt": "(plan (^(Message) Create :object (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Sister)))))))", "idx": "18226", "datum_id": {"dialogue_id": "7efc6c54-4b69-4c62-9c97-97754838f50d", "turn_index": 4}}
{"user_turn_0": "Hello assistant , make a Challenge Yourself with Diana on Wednesday 10:30 AM held in Tin Roof", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals endDateTime", "user_turn_1": "it is 12:30", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.duration_? (AppleDuration.hour_? (?= 2)))))))", "idx": "18228", "datum_id": {"dialogue_id": "9c71de30-d3dd-4452-bfa9-eae580088776", "turn_index": 1}}
{"user_turn_0": "it is 12:30", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Share it with Mr Nolan", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Nolan \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "18229", "datum_id": {"dialogue_id": "9c71de30-d3dd-4452-bfa9-eae580088776", "turn_index": 2}}
{"user_turn_0": "This looks good", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM", "user_turn_1": "That is fine . Go ahead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "18240", "datum_id": {"dialogue_id": "e3cb3743-0560-4f73-b96d-74f65490bd1e", "turn_index": 3}}
{"user_turn_0": "today at 2 o'clock", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Check on June 6th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (& (Date.month_? (?= (June))) (Date.day_? (?= (Day.apply 6L)))))))", "idx": "18246", "datum_id": {"dialogue_id": "f507db84-8940-4f2c-9b5e-232f36e20693", "turn_index": 4}}
{"user_turn_0": "Yes , get the taxi for me", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "Thanks , also send today 's event to my parents", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Parents))))) (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))))))))))", "idx": "18253", "datum_id": {"dialogue_id": "093adf4f-0ab8-47de-ac01-3287d7db99a6", "turn_index": 4}}
{"user_turn_0": "Are there private bathrooms in the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "18257", "datum_id": {"dialogue_id": "1fdbd77d-833f-4554-beac-08e1f6544ed9", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , book me a decently prices hotpot Chinese spot today at 7:30", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.priceRange_? (?= (PriceRange.Moderate))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 7L))) (Time.minute_? (?= (Minute.apply 30L))))))))) (Restaurant.foodType_? (?= (FoodType.ChineseHotPot))))))", "idx": "18262", "datum_id": {"dialogue_id": "658aa738-f84b-4c59-9fe7-5162feca90c5", "turn_index": 0}}
{"user_turn_0": "Do they accept credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "18265", "datum_id": {"dialogue_id": "658aa738-f84b-4c59-9fe7-5162feca90c5", "turn_index": 3}}
{"user_turn_0": "how can I get there by walking", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Next task , book a decent Sushi restaurant at 2 pm", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.priceRange_? (?= (PriceRange.Moderate))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))) (Restaurant.foodType_? (?= (FoodType.Sushi))))))", "idx": "18270", "datum_id": {"dialogue_id": "8f54c87e-df39-405f-a32d-c1ef76047cee", "turn_index": 2}}
{"user_turn_0": "Give me something with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals La Zilla", "user_turn_1": "What is the address", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "18274", "datum_id": {"dialogue_id": "8f54c87e-df39-405f-a32d-c1ef76047cee", "turn_index": 6}}
{"user_turn_0": "I prefer another with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals La Zilla", "user_turn_1": "How about restaurants that serve Spanish food", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint FoodType)) Path.apply \" object.foodType \") (lambda (^(Constraint FoodType) x0) (?= (FoodType.Spanish)))))", "idx": "18276", "datum_id": {"dialogue_id": "8f54c87e-df39-405f-a32d-c1ef76047cee", "turn_index": 8}}
{"user_turn_0": "How about restaurants that serve Spanish food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Empirica", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "18277", "datum_id": {"dialogue_id": "8f54c87e-df39-405f-a32d-c1ef76047cee", "turn_index": 9}}
{"user_turn_0": "Book it", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "Yes please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Interknack \"))))))", "idx": "18278", "datum_id": {"dialogue_id": "8f54c87e-df39-405f-a32d-c1ef76047cee", "turn_index": 10}}
{"user_turn_0": "What 's the address of the restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 54 Islington Park Road", "user_turn_1": "This looks good , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Godka \"))))))", "idx": "18284", "datum_id": {"dialogue_id": "3bcb98d2-9947-43a3-bc0f-20858d5053e1", "turn_index": 3}}
{"user_turn_0": "This looks good , book it", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Can you change the appointment time to 10 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hour)) Path.apply \" object.atDateTime.time.hour \") (lambda (^(Constraint Hour) x0) (?= (Hour.apply 10L)))))", "idx": "18285", "datum_id": {"dialogue_id": "3bcb98d2-9947-43a3-bc0f-20858d5053e1", "turn_index": 4}}
{"user_turn_0": "London Heathrow", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM price equals 156", "user_turn_1": "That 's fine . Book this flight for one passenger", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.destination_? (Place.location_? (?= \" Glasgow \")))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (^((Constraint (List DateTime))) refer)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 1))))))", "idx": "18290", "datum_id": {"dialogue_id": "b3f762ae-b7d0-45f2-af86-395f20b073e3", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , book restaurant with moderate price at 2 PM .", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.priceRange_? (?= (PriceRange.Moderate))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "18298", "datum_id": {"dialogue_id": "cf4c11ec-dfa6-4b5b-8a72-8d291654c426", "turn_index": 0}}
{"user_turn_0": "I prefer Indian food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "What is the average cost per person", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "18301", "datum_id": {"dialogue_id": "cf4c11ec-dfa6-4b5b-8a72-8d291654c426", "turn_index": 3}}
{"user_turn_0": "What is the average cost per person", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 39", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (^((Constraint String)) refer))))))", "idx": "18302", "datum_id": {"dialogue_id": "cf4c11ec-dfa6-4b5b-8a72-8d291654c426", "turn_index": 4}}
{"user_turn_0": "I want to know which of the restaurants have a rating of three stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jurassic Pork", "user_turn_1": "Can you book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Floq \"))))))", "idx": "18338", "datum_id": {"dialogue_id": "73f36e62-f196-4dec-b980-a44e3e689e94", "turn_index": 3}}
{"user_turn_0": "What are they rated ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Make a reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "18351", "datum_id": {"dialogue_id": "014f3b10-8db3-483b-83e2-530c9ecae5fb", "turn_index": 3}}
{"user_turn_0": "I 'll need two rooms and I do n't care what type", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "It 's free cancellation accepted ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "18355", "datum_id": {"dialogue_id": "014f3b10-8db3-483b-83e2-530c9ecae5fb", "turn_index": 7}}
{"user_turn_0": "It 's free cancellation accepted ?", "agent_turn_0": "Root system inform hotel find focus equals freeCancellation equals False", "user_turn_1": "I need to change when I leave to Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Friday))))))", "idx": "18356", "datum_id": {"dialogue_id": "014f3b10-8db3-483b-83e2-530c9ecae5fb", "turn_index": 8}}
{"user_turn_0": "I need to change when I leave to Friday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Change when I leave to be on Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Saturday)))))", "idx": "18357", "datum_id": {"dialogue_id": "014f3b10-8db3-483b-83e2-530c9ecae5fb", "turn_index": 9}}
{"user_turn_0": "Sheffield", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM", "user_turn_1": "Give me the 2:20 pm flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (Train.departureDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "18362", "datum_id": {"dialogue_id": "dff17a41-c8be-41ac-8f97-5747d0417581", "turn_index": 3}}
{"user_turn_0": "Book it for me", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "from October 12th to the 13th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 12L)))) (month_? (Date.month_? (?= (October)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 13L)))))))))))", "idx": "18372", "datum_id": {"dialogue_id": "276846a4-d6ba-438e-9f53-9de3a14a02e8", "turn_index": 3}}
{"user_turn_0": "it is 2", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait , I need to changeWait , I need to change my check in date to Monday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.startDateTime \") (lambda (^(Constraint DateTime) x0) (DateTime.date_? (Date.dayOfWeek_? (?= (Monday)))))))", "idx": "18376", "datum_id": {"dialogue_id": "276846a4-d6ba-438e-9f53-9de3a14a02e8", "turn_index": 7}}
{"user_turn_0": "Let me see the message that was sent to 07871174602", "agent_turn_0": "Root system inform message find", "user_turn_1": "Thanks , also get me a cheap hotel room that has car parking from Thursday to Friday", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.priceRange_? (?= (PriceRange.Low))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday)))))))) (Hotel.hasParking_? (?= true)))))", "idx": "18392", "datum_id": {"dialogue_id": "5e347ead-0311-4486-80ba-7e7fa0570af9", "turn_index": 4}}
{"user_turn_0": "I need three rooms , but I do n't care what kind", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I need prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "18401", "datum_id": {"dialogue_id": "8ed91a40-bfbf-4fd4-9bfd-05aef0c11432", "turn_index": 2}}
{"user_turn_0": "How long is the trip going to be ?", "agent_turn_0": "Root system inform flight find focus equals duration equals hour equals 1 minute equals 5", "user_turn_1": "That 's cool . Book it for 2 passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.destination_? (Place.location_? (?= \" Amsterdam \"))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 2))))))", "idx": "18407", "datum_id": {"dialogue_id": "2074f761-0918-4a41-a8be-4aeac3d5771f", "turn_index": 3}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 12 minute equals 25 meridiem equals PM price equals 173", "user_turn_1": "Sound good to me . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "18411", "datum_id": {"dialogue_id": "2074f761-0918-4a41-a8be-4aeac3d5771f", "turn_index": 7}}
{"user_turn_0": "It does n't matter but make sure the price range is expensive", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone", "user_turn_1": "Does the restaurant take credit card ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "18415", "datum_id": {"dialogue_id": "37670750-4541-4693-aa12-9962291d4b16", "turn_index": 2}}
{"user_turn_0": "I prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dingo", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Hambone \"))))))", "idx": "18417", "datum_id": {"dialogue_id": "37670750-4541-4693-aa12-9962291d4b16", "turn_index": 4}}
{"user_turn_0": "11:30 AM", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Ok , can you change the appointment date to Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday)))))))))", "idx": "18423", "datum_id": {"dialogue_id": "34599ec4-d51b-4fe3-907b-cd6f95e99de8", "turn_index": 3}}
{"user_turn_0": "Hi there , when does my flight on the 7th arrive ?", "agent_turn_0": "Root system inform flight find focus equals arrivalDateTime equals time equals hour equals 6 minute equals 30", "user_turn_1": "I need another favor . Book a cheap hotel with at least a one star rating", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?= (PriceRange.Low))) (Hotel.rating_? (?>= (someSalient (?= 1)))))))", "idx": "18460", "datum_id": {"dialogue_id": "12e3915a-277b-4a3a-b4ed-894b42a6574f", "turn_index": 1}}
{"user_turn_0": "How do I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "18463", "datum_id": {"dialogue_id": "12e3915a-277b-4a3a-b4ed-894b42a6574f", "turn_index": 4}}
{"user_turn_0": "Just one", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to pay now ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "18469", "datum_id": {"dialogue_id": "12e3915a-277b-4a3a-b4ed-894b42a6574f", "turn_index": 10}}
{"user_turn_0": "Change the venue to The Great Highway", "agent_turn_0": "Root system inform calendarEvent update Completed", "user_turn_1": "Give me directions", "tgt": "(plan (^(Navigation) Find :object (Navigation.destination_? (Place.location_? (^((Constraint String)) refer)))))", "idx": "18474", "datum_id": {"dialogue_id": "1a39b5ec-08e1-4cd0-9edd-30f9ef179717", "turn_index": 3}}
{"user_turn_0": "I want another hotel that is moderately - priced", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Renaissance price equals 138", "user_turn_1": "Does breakfast come included ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "18483", "datum_id": {"dialogue_id": "269a4bca-319e-4873-a4ac-48480803eeb3", "turn_index": 2}}
{"user_turn_0": "Does breakfast come included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Book this hotel for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Ace Hotel \"))))))", "idx": "18484", "datum_id": {"dialogue_id": "269a4bca-319e-4873-a4ac-48480803eeb3", "turn_index": 3}}
{"user_turn_0": "The price should not be high", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capricorn", "user_turn_1": "What 's the address of the restaurant ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "18511", "datum_id": {"dialogue_id": "aaf99948-aaef-480f-a9ed-092249a6ae59", "turn_index": 4}}
{"user_turn_0": "I prefer another restaurant that has outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Shining Gate", "user_turn_1": "Does the restaurant take credit cards ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "18514", "datum_id": {"dialogue_id": "aaf99948-aaef-480f-a9ed-092249a6ae59", "turn_index": 7}}
{"user_turn_0": "Does the restaurant take credit cards ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "That \u2019s good , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Goat and Guru \"))))))", "idx": "18515", "datum_id": {"dialogue_id": "aaf99948-aaef-480f-a9ed-092249a6ae59", "turn_index": 8}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , how fare is the venue or this morning 's event .", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (Navigation.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Morning))))))))))", "idx": "18536", "datum_id": {"dialogue_id": "89e0de12-32f4-4b9f-8be0-8204b32226bd", "turn_index": 0}}
{"user_turn_0": "To Belfast", "agent_turn_0": "Root system prompt flight book object equals departureDateTime", "user_turn_1": "December 5th and I need to leave before 5:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (December))) (Date.day_? (?= (Day.apply 5L)))))) (List.exists_? (DateTime.time_? (?<= (someSalient (& (& (Time.hour_? (?= (Hour.apply 5L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))))))", "idx": "18547", "datum_id": {"dialogue_id": "f953d62a-811b-4f17-bf94-ee669d140b23", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , show me three star hotels .", "tgt": "(plan (^(Hotel) Find :object (Hotel.rating_? (?>= (someSalient (?= 3))))))", "idx": "18551", "datum_id": {"dialogue_id": "c122a816-71d7-49c5-9fdc-fb8a7c099884", "turn_index": 0}}
{"user_turn_0": "Tomorrow", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM price equals 130", "user_turn_1": "Book it for two passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.class_? (?= (FlightClass.Economy))) (Flight.source_? (Place.location_? (?= \" London Heathrow \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 2))))))", "idx": "18576", "datum_id": {"dialogue_id": "6e5104d5-d9bd-43ed-a794-f8e32e800206", "turn_index": 3}}
{"user_turn_0": "Hey assistant , i want to book hotel room with a king size bed and a car park", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "A low priced place in Leicester Square", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.location_? (?= \" Leicester Square \"))) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))))))", "idx": "18580", "datum_id": {"dialogue_id": "66fcc856-cbd2-4143-98a6-33c49d6922d5", "turn_index": 1}}
{"user_turn_0": "Does the hotel have laundry", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Cool , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "18582", "datum_id": {"dialogue_id": "66fcc856-cbd2-4143-98a6-33c49d6922d5", "turn_index": 3}}
{"user_turn_0": "The start time", "agent_turn_0": "Root system prompt calendarEvent update focus equals dateTimeRange equals startDateTime equals time", "user_turn_1": "it is 10:00", "tgt": "(plan (revise (^(Unit) Path.apply \" Update \") (^((Constraint Time)) Path.apply \" focus.dateTimeRange.startDateTime.time \") (lambda (^(Constraint Time) x0) (Time.hour_? (?= (Hour.apply 10L))))))", "idx": "18595", "datum_id": {"dialogue_id": "5ee77543-4bea-450e-ba78-ea3e292c6b24", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , can you make me a reservation at a moderately priced hotel with onsite parking from May 13th to the 14th ?", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.priceRange_? (?= (PriceRange.Moderate))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 13L))))) (DateTimeRange.endDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 14L)))) (month_? (Date.month_? (?= (May))))))))) (Hotel.hasParking_? (?= true)))))", "idx": "18603", "datum_id": {"dialogue_id": "2f8371fc-f99c-43c9-9a58-e5f5ab246dc8", "turn_index": 0}}
{"user_turn_0": "Does it have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "OK , cool . Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "18606", "datum_id": {"dialogue_id": "2f8371fc-f99c-43c9-9a58-e5f5ab246dc8", "turn_index": 3}}
{"user_turn_0": "Two", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Eh , you know what , change the check - in date to today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Today)))))", "idx": "18609", "datum_id": {"dialogue_id": "2f8371fc-f99c-43c9-9a58-e5f5ab246dc8", "turn_index": 6}}
{"user_turn_0": "Eh , you know what , change the check - in date to today", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "18610", "datum_id": {"dialogue_id": "2f8371fc-f99c-43c9-9a58-e5f5ab246dc8", "turn_index": 7}}
{"user_turn_0": "I do n't care as long as they do n't have zero stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Box", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Floq \"))))))", "idx": "18620", "datum_id": {"dialogue_id": "a316cf77-1f11-47c0-bb6f-42667f742eb7", "turn_index": 3}}
{"user_turn_0": "Send it", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Thanks , next book me a cheap one star or higher eatery", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.priceRange_? (?= (PriceRange.Low))) (Restaurant.rating_? (?!= (someSalient (?= 0)))))))", "idx": "18631", "datum_id": {"dialogue_id": "d8053735-cb13-4c1a-9c03-fc6575074601", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , 4 miles .", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (& (& (Navigation.source_? (Place.location_? (?= \" Upper Tything \"))) (Navigation.destination_? (Place.location_? (?= \" Tie the Knot \")))) (Navigation.transportationMode_? (?= (TransportationMode.PublicTransportation))))))", "idx": "18633", "datum_id": {"dialogue_id": "f5aa2818-9709-429a-8a9a-8b8b4ddd6d0f", "turn_index": 0}}
{"user_turn_0": "What 's the departure time of my train to Paddington ?", "agent_turn_0": "Root system inform train find focus equals departureDateTime equals time equals hour equals 4", "user_turn_1": "How do I travel by bike from 8665 Fairway Avenue to 9028 Woodsman Lake ?", "tgt": "(plan (^(Navigation) Find :object (& (& (Navigation.source_? (Place.location_? (?= \" 8665 Fairway Avenue \"))) (Navigation.destination_? (Place.location_? (?= \" 9028 Woodsman Lane \")))) (Navigation.transportationMode_? (?= (TransportationMode.Biking))))))", "idx": "18635", "datum_id": {"dialogue_id": "f5aa2818-9709-429a-8a9a-8b8b4ddd6d0f", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , i need to reserve a restaurant for 10:30 AM , with three stars , in New Cross , and not too expensive .", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" New Cross \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM)))))))) (Restaurant.priceRange_? (?= (PriceRange.High)))) (Restaurant.rating_? (?= 3)))))", "idx": "18642", "datum_id": {"dialogue_id": "4079d84b-8dcd-46f8-acfd-6d5fbffb2d67", "turn_index": 0}}
{"user_turn_0": "I want a different restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Gogol", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Encino \"))))))", "idx": "18644", "datum_id": {"dialogue_id": "4079d84b-8dcd-46f8-acfd-6d5fbffb2d67", "turn_index": 2}}
{"user_turn_0": "Do n't care but it needs room for luggage", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals 397 Tallwood Court", "user_turn_1": "Change the drop off to 67 North Street", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" 67 North Street \"))))", "idx": "18651", "datum_id": {"dialogue_id": "061dd372-7142-42e8-afe2-ddadb6e37f83", "turn_index": 4}}
{"user_turn_0": "Clapham Junction", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM", "user_turn_1": "Let 's do it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "18662", "datum_id": {"dialogue_id": "9b941143-1a73-4d20-bd06-5fcb41a0ab65", "turn_index": 4}}
{"user_turn_0": "Thanks so much . Can you place a call to my son", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Call Mr. Burgess please", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Person)) Path.apply \" object.recipients.person \") (lambda (^(Constraint Person) x0) (& (Person.name_? (?= \" Burgess \")) (Person.namePrefix_? (?= \" Mr \"))))))", "idx": "18667", "datum_id": {"dialogue_id": "341e8c02-7db3-4bdf-96b8-ba125beff540", "turn_index": 3}}
{"user_turn_0": "Yea it should be moderately priced", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Gogol", "user_turn_1": "Do you know if it has outdoor seating", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "18673", "datum_id": {"dialogue_id": "f2298c1c-ed57-4049-a272-32f5878d8997", "turn_index": 4}}
{"user_turn_0": "Do you know if it has outdoor seating", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "Sounds good . Please book it for me at 3", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Dingo \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 3L))))))))))", "idx": "18674", "datum_id": {"dialogue_id": "f2298c1c-ed57-4049-a272-32f5878d8997", "turn_index": 5}}
{"user_turn_0": "Hi assistant , when is my Piers event", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals startDateTime equals time equals hour equals 6 minute equals 30 meridiem equals PM", "user_turn_1": "Share it with Mr Black", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Black \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "18678", "datum_id": {"dialogue_id": "1205041c-52ca-4996-b63c-ed807d066075", "turn_index": 1}}
{"user_turn_0": "Are there any missed calls from Edward", "agent_turn_0": "Root system inform phoneCall checkExistence Existed", "user_turn_1": "Text him saying where you at", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (& (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Piers \")))) (Message.textContent_? (?= \" where you at \"))))))", "idx": "18681", "datum_id": {"dialogue_id": "1205041c-52ca-4996-b63c-ed807d066075", "turn_index": 4}}
{"user_turn_0": "Hi my assistant , schedule a calendar event on Friday and make it a reminder as well .", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals startDateTime equals time", "user_turn_1": "It will start at 11:00 and end at 5 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.dayOfWeek_? (?= (Friday)))) (DateTime.time_? (Time.hour_? (?= (Hour.apply 11L)))))) (DateTimeRange.endDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 5L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "18683", "datum_id": {"dialogue_id": "5e40a048-d5a1-413b-9aa7-617ffbb540c8", "turn_index": 1}}
{"user_turn_0": "Yes book it", "agent_turn_0": "Root system offer flight book", "user_turn_1": "Here is your ticket info , should I submit it now ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "18700", "datum_id": {"dialogue_id": "101758c0-7675-498b-886f-b4ff3e4c4e1c", "turn_index": 7}}
{"user_turn_0": "Can you tell me whether it 's a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "I think I 'd rather go with the one which departs at 2:40 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "18709", "datum_id": {"dialogue_id": "a5bf5859-5d65-45a8-8ee6-14597dfb4bf8", "turn_index": 3}}
{"user_turn_0": "Is there a new call from Mr. Allan ?", "agent_turn_0": "Root system inform phoneCall checkExistence Existed object equals atDateTime equals date definedValue equals Today", "user_turn_1": "I need another favor . Text him let 's go", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Luke \")))) (Message.textContent_? (?= \" let's go \")))))", "idx": "18717", "datum_id": {"dialogue_id": "cc2fdd9e-028e-4e33-8313-a2aed4b72f2b", "turn_index": 4}}
{"user_turn_0": "I need three and the type does n't matter to me", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Hmm , hold on . Do they include breakfast in the price ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "18723", "datum_id": {"dialogue_id": "13403186-c097-4e64-a820-486996e7496a", "turn_index": 5}}
{"user_turn_0": "My son", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Show me decently priced hotels", "tgt": "(plan (^(Hotel) Find :object (Hotel.priceRange_? (?= (PriceRange.Moderate)))))", "idx": "18727", "datum_id": {"dialogue_id": "d3b16322-04a2-4cdb-b7fb-cda523f23bde", "turn_index": 2}}
{"user_turn_0": "Book a hotel near my next event", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Astro Resort price equals 65", "user_turn_1": "Give me a cheap hotel", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "18729", "datum_id": {"dialogue_id": "d3b16322-04a2-4cdb-b7fb-cda523f23bde", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , i found the following trains . How does the 2 PM train sound to you ?", "tgt": "(plan (^(Train) Book :object (& (& (& (Train.source_? (Place.location_? (?= \" Waverley \"))) (Train.destination_? (Place.location_? (?= \" Peterborough \")))) (Train.departureDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 8L)))))) (Train.returnDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 13L))))))))", "idx": "18752", "datum_id": {"dialogue_id": "900df772-4f8b-47fd-8beb-d6adb2c3beb4", "turn_index": 0}}
{"user_turn_0": "Hi assistant , i found the following trains . How does the 2 PM train sound to you ?", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 meridiem equals PM", "user_turn_1": "Book me a train from Waverley to Peterborough that leaves on the 8th and returns on the 13th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "18753", "datum_id": {"dialogue_id": "900df772-4f8b-47fd-8beb-d6adb2c3beb4", "turn_index": 1}}
{"user_turn_0": "Book me a train from Waverley to Peterborough that leaves on the 8th and returns on the 13th", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "18754", "datum_id": {"dialogue_id": "900df772-4f8b-47fd-8beb-d6adb2c3beb4", "turn_index": 2}}
{"user_turn_0": "Yes , I want you to submit it now", "agent_turn_0": "Root system inform train book Completed", "user_turn_1": "Book me a round trip train to Newcastle", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& (Train.destination_? (Place.location_? (?= \" Newcastle \"))) (Train.tripType_? (?= (TripType.roundTrip)))))))", "idx": "18756", "datum_id": {"dialogue_id": "900df772-4f8b-47fd-8beb-d6adb2c3beb4", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , what 's the La Zilla 's rating in Stamford Hill", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.rating_? (^(Number) always)) :object (& (Restaurant.restaurantName_? (?= \" La Zilla \")) (Restaurant.location_? (?= \" Stamford Hill \")))))", "idx": "18763", "datum_id": {"dialogue_id": "c5466c79-fe80-45c0-b59b-d6937e24bac0", "turn_index": 0}}
{"user_turn_0": "Yes go ahead", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Thanks , next get me a taxi to A Gathering of Hunters", "tgt": "(plan (^(Taxi) Book :object (Taxi.destination_? (?= (^(Place CalendarEvent) reference (& (CalendarEvent.eventName_? (?= \" A Gathering of Hunters \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))))))))))", "idx": "18772", "datum_id": {"dialogue_id": "3a51f619-8420-4124-bdb8-35a075fdff4a", "turn_index": 3}}
{"user_turn_0": "Schedule event at 5:30 PM and create a reminder for it", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals endDateTime", "user_turn_1": "At 5 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.endDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 5L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "18778", "datum_id": {"dialogue_id": "11a07095-cf08-429d-aa5c-ec5d21b5d76c", "turn_index": 4}}
{"user_turn_0": "Holborn", "agent_turn_0": "Root system inform calendarEvent update Completed", "user_turn_1": "Could you tell me how to get there ?", "tgt": "(plan (^(Navigation) Find :object (Navigation.destination_? (Place.location_? (?= \" Holborn \")))))", "idx": "18782", "datum_id": {"dialogue_id": "49557785-8fea-4c81-872a-bafbe967b8ac", "turn_index": 3}}
{"user_turn_0": "Hello , how can I get from 67 North Street to 207 Upper Street ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Thanks , also i prefer to reserve a restaurant in Chelsea . The booking time is at 5 PM . The restaurant rating is five stars", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.location_? (?= \" Chelsea \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 5L))) (meridiem_? (?= (Meridiem.PM)))))))) (Restaurant.rating_? (?= 5)))))", "idx": "18795", "datum_id": {"dialogue_id": "899a41b6-5dfb-4990-ae2d-877a79b3038e", "turn_index": 1}}
{"user_turn_0": "I prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Spago", "user_turn_1": "Are credit cards accepted ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "18800", "datum_id": {"dialogue_id": "899a41b6-5dfb-4990-ae2d-877a79b3038e", "turn_index": 6}}
{"user_turn_0": "Are credit cards accepted ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Gogol \"))))))", "idx": "18801", "datum_id": {"dialogue_id": "899a41b6-5dfb-4990-ae2d-877a79b3038e", "turn_index": 7}}
{"user_turn_0": "That 's fine . Book it", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Okay , can you change the appointment time to 4PM ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hour)) Path.apply \" object.atDateTime.time.hour \") (lambda (^(Constraint Hour) x0) (?= (Hour.apply 4L)))))", "idx": "18802", "datum_id": {"dialogue_id": "899a41b6-5dfb-4990-ae2d-877a79b3038e", "turn_index": 8}}
{"user_turn_0": "What 's the airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "I want the one at 4:45 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "18819", "datum_id": {"dialogue_id": "1c7a981a-b68e-4efb-9517-162129fea331", "turn_index": 4}}
{"user_turn_0": "That would be Thursday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM", "user_turn_1": "That sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "18828", "datum_id": {"dialogue_id": "8fac454d-859d-45d2-aa7a-b8c8e04710b8", "turn_index": 3}}
{"user_turn_0": "Add a restaurant appointment from this morning to my calendar", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Do me another favor . Message my parents saying I 'm lost", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Parents))))) (Message.textContent_? (?= \" I'm lost \")))))", "idx": "18833", "datum_id": {"dialogue_id": "d5ac7fae-2cb5-4eb3-9f39-8091231ee7f0", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , book a oneway flight from Leeds to Brussel for tomorrow", "tgt": "(plan (^(Flight) Book :object (& (& (& (Flight.source_? (Place.location_? (?= \" Leeds \"))) (Flight.destination_? (Place.location_? (?= \" Brussel \")))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow)))))) (Flight.tripType_? (?= (TripType.oneWay))))))", "idx": "18835", "datum_id": {"dialogue_id": "dba00244-c8ad-4563-94a0-ce9c1926b895", "turn_index": 0}}
{"user_turn_0": "Hey , book a oneway flight from Leeds to Brussel for tomorrow", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "What about tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "18836", "datum_id": {"dialogue_id": "dba00244-c8ad-4563-94a0-ce9c1926b895", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , schedule a reminder regarding my calendar event .", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (^(CalendarEvent) always))))))", "idx": "18845", "datum_id": {"dialogue_id": "fce8fa5f-ab98-4a16-bbaf-bdb3ddebbc69", "turn_index": 0}}
{"user_turn_0": "Tell me how to bike to 66 Park Avenue", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "How much time will it take to get to my next event ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1)))))))", "idx": "18847", "datum_id": {"dialogue_id": "fce8fa5f-ab98-4a16-bbaf-bdb3ddebbc69", "turn_index": 2}}
{"user_turn_0": "To Cardiff Central", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 meridiem equals PM", "user_turn_1": "I 'd prefer the one that leaves at 1:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "18860", "datum_id": {"dialogue_id": "d7c46fea-823f-4d75-bc51-e4629160b63f", "turn_index": 3}}
{"user_turn_0": "How about today >", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM price equals 150", "user_turn_1": "That works . Get me tickets for 2 passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Amsterdam \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (^((Constraint (List DateTime))) refer)))) (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday)))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 2))))))", "idx": "18867", "datum_id": {"dialogue_id": "cfde3866-a443-48f2-9c59-777119a3caae", "turn_index": 3}}
{"user_turn_0": "Thanks , also hey rere , dial me up somebody", "agent_turn_0": "Root system prompt phoneCall create object equals recipients", "user_turn_1": "Mr. Dyer , he has a swimming pool cleaning business and well its summer , put it together", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Option (Constraint PhoneCall))) Path.apply \" object \") (lambda (^(Option (Constraint PhoneCall)) x0) (Some (PhoneCall.recipients_? (Contact.person_? (& (Person.name_? (?= \" Dyer \")) (Person.namePrefix_? (?= \" Mr \")))))))))", "idx": "18873", "datum_id": {"dialogue_id": "99dc8199-faae-4248-9a08-b4752f14c0e8", "turn_index": 3}}
{"user_turn_0": "On which airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "That works . I 'd like to book it , then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "18888", "datum_id": {"dialogue_id": "cfbb4c2a-61d3-4b94-b7e7-5e37b7f0f075", "turn_index": 3}}
{"user_turn_0": "Show me directions there", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "18903", "datum_id": {"dialogue_id": "9e7e02ba-37f9-4350-a018-a6dfa57044eb", "turn_index": 5}}
{"user_turn_0": "Is it economy or business class ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "Ok . I 'd like this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "18970", "datum_id": {"dialogue_id": "a1e3a3cc-0eef-4453-8bc6-c6a002212da1", "turn_index": 4}}
{"user_turn_0": "Hi my assistant , how long is the journey to my event this afternoon", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 20 object equals destination equals location equals 29 Alexander Road", "user_turn_1": "Next , send this event to my love", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Love))))) (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Morning)))))))))))", "idx": "18980", "datum_id": {"dialogue_id": "e1f9cffb-a7ff-4e28-a035-97612da60074", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , i 'd like to send today 's event to Mr Underwood .", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))))))) (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Underwood \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "18984", "datum_id": {"dialogue_id": "a0171c53-9313-4497-8b12-50f40c493a46", "turn_index": 0}}
{"user_turn_0": "Yes please send it", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "May I see three star hotels", "tgt": "(plan (^(Hotel) Find :object (Hotel.rating_? (?= 3))))", "idx": "18986", "datum_id": {"dialogue_id": "a0171c53-9313-4497-8b12-50f40c493a46", "turn_index": 2}}
{"user_turn_0": "How far is the venue of my afternoon event ?", "agent_turn_0": "Root system inform navigation find focus equals distance equals number equals 7", "user_turn_1": "What will the weather be like tomorrow in Birmingham ?", "tgt": "(plan (^(WeatherReport) Find :object (& (WeatherReport.location_? (?= \" Birmingham \")) (WeatherReport.atdateTime_? (DateTime.date_? (?= (Tomorrow)))))))", "idx": "18988", "datum_id": {"dialogue_id": "a0171c53-9313-4497-8b12-50f40c493a46", "turn_index": 4}}
{"user_turn_0": "it is 07800070692", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Thanks for the help . I need to book a three star hotel with an average cost", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))) (Hotel.rating_? (?= 3)))))", "idx": "18992", "datum_id": {"dialogue_id": "e35f4983-6b54-44bb-b2ac-bb537de937d8", "turn_index": 3}}
{"user_turn_0": "Hello assistant , i need to book a train to Jersey that leaves on Monday", "agent_turn_0": "Root system prompt train book object equals source", "user_turn_1": "Waverly", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (Train.source_? (Place.location_? (?= \" Waverley \")))))))", "idx": "19001", "datum_id": {"dialogue_id": "ed60a4a9-2a8a-48b3-8a9b-b4b767cc03a1", "turn_index": 1}}
{"user_turn_0": "Waverly", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM", "user_turn_1": "I want the one at 4 PM instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "19002", "datum_id": {"dialogue_id": "ed60a4a9-2a8a-48b3-8a9b-b4b767cc03a1", "turn_index": 2}}
{"user_turn_0": "I want to return on Friday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 4 minute equals 20 meridiem equals PM", "user_turn_1": "That works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "19004", "datum_id": {"dialogue_id": "ed60a4a9-2a8a-48b3-8a9b-b4b767cc03a1", "turn_index": 4}}
{"user_turn_0": "On what airline", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "I prefer the one leaving at 3:40 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "19014", "datum_id": {"dialogue_id": "c434b961-04af-449d-91e7-3d94c262d235", "turn_index": 3}}
{"user_turn_0": "Yes please go ahead with the booking", "agent_turn_0": "Root system inform train book Completed", "user_turn_1": "Thanks so much . Can you add the event to my calendar", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (?= (^(DateTimeRange Train) reference (^(Train) always))))))", "idx": "19024", "datum_id": {"dialogue_id": "f52da909-9835-4dd1-afdb-486c830a2cd8", "turn_index": 4}}
{"user_turn_0": "I wonder which of the restaurants serve Chinese hotpot", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Joint", "user_turn_1": "Does the restaurant have outdoor seating ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "19028", "datum_id": {"dialogue_id": "af202481-4b27-4e8f-8740-f440d5a5cbef", "turn_index": 3}}
{"user_turn_0": "Does the restaurant have outdoor seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "That 's fine . Book it anyway", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Boiling Fence \"))))))", "idx": "19029", "datum_id": {"dialogue_id": "af202481-4b27-4e8f-8740-f440d5a5cbef", "turn_index": 4}}
{"user_turn_0": "Set a reminder for the event tomorrow", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Also i 'd like to book a cheap hotel in Oakwood", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= \" Oakwood \")) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))))))", "idx": "19036", "datum_id": {"dialogue_id": "7073adb8-694b-48e1-a421-1b249af8d37b", "turn_index": 3}}
{"user_turn_0": "Yes ! please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 1 meridiem equals PM price equals 199", "user_turn_1": "Book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "19041", "datum_id": {"dialogue_id": "b2b6b162-455f-42c5-babb-d552b098da47", "turn_index": 3}}
{"user_turn_0": "Hi my assistant , can you check if I have a boat race scheduled on my calendar for 9 o'clock on May 21st ?", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Add it", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.recurrenceUnit_? (RecurrenceUnit.Week_? (^(Number) always)))))", "idx": "19045", "datum_id": {"dialogue_id": "e9f268bf-e39f-4c52-ad92-301e96e60fcf", "turn_index": 1}}
{"user_turn_0": "Do they have wifi", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "19069", "datum_id": {"dialogue_id": "13c8a00c-03a2-481e-9233-d825d2af9d91", "turn_index": 4}}
{"user_turn_0": "Can I get two rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there are cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "19074", "datum_id": {"dialogue_id": "13c8a00c-03a2-481e-9233-d825d2af9d91", "turn_index": 9}}
{"user_turn_0": "Hi there , book a saloon taxi for me to pick me up at 415 Park Lane", "agent_turn_0": "Root system prompt taxi book object equals destination", "user_turn_1": "I am going to Starline Carbs", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Taxi)) Path.apply \" object \") (lambda (^(Constraint Taxi) x0) (& x0 (Taxi.destination_? (Place.location_? (?= \" Starline Cabs \")))))))", "idx": "19077", "datum_id": {"dialogue_id": "de0b35ab-a6ae-4dda-ac1b-e7bf057eca61", "turn_index": 1}}
{"user_turn_0": "Book the taxi for me", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "Thanks for the help . I would like to book a train to Manchester airport that will leave tomorrow and return on the 18th", "tgt": "(plan (^(Train) Book :object (& (& (Train.destination_? (Place.location_? (?= \" Manchester Airport \"))) (Train.departureDateTime_? (DateTime.date_? (?= (Tomorrow))))) (Train.returnDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 18L))))))))", "idx": "19080", "datum_id": {"dialogue_id": "de0b35ab-a6ae-4dda-ac1b-e7bf057eca61", "turn_index": 4}}
{"user_turn_0": "Is this a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "I would like the one departing at 4 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "19083", "datum_id": {"dialogue_id": "e68372af-ddba-497d-90a8-f76021781322", "turn_index": 2}}
{"user_turn_0": "Can you change the departure day of my second trip to the 26th ?", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 3 object equals nextDepartureDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM price equals 65", "user_turn_1": "This looks great", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (^((Constraint Hour)) refer)) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "19087", "datum_id": {"dialogue_id": "e68372af-ddba-497d-90a8-f76021781322", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i need a hotel close to my event , find one for a fair price", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))) (Hotel.priceRange_? (?= (PriceRange.Moderate))))))", "idx": "19100", "datum_id": {"dialogue_id": "032d270f-ced9-4db7-9d01-9ae7a29f3954", "turn_index": 0}}
{"user_turn_0": "No , no , no . Find one with five stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Fairmont price equals 166", "user_turn_1": "Breakfast ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "19103", "datum_id": {"dialogue_id": "032d270f-ced9-4db7-9d01-9ae7a29f3954", "turn_index": 3}}
{"user_turn_0": "Breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "book it anyway", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Peninsula \"))))))", "idx": "19104", "datum_id": {"dialogue_id": "032d270f-ced9-4db7-9d01-9ae7a29f3954", "turn_index": 4}}
{"user_turn_0": "Do you know if it takes card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Okay , sounds good . Please book it for me tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow)))))))))", "idx": "19128", "datum_id": {"dialogue_id": "7c3e4ca5-d322-4616-ad09-876ded727e83", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , i 'd like to book a flight to Brussels", "tgt": "(plan (^(Flight) Book :object (Flight.destination_? (Place.location_? (?= \" Brussel \")))))", "idx": "19132", "datum_id": {"dialogue_id": "31f0ec35-eb28-44c2-a7be-292b26b4a5f7", "turn_index": 0}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 12 minute equals 25 meridiem equals PM price equals 201", "user_turn_1": "Okay , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "19138", "datum_id": {"dialogue_id": "31f0ec35-eb28-44c2-a7be-292b26b4a5f7", "turn_index": 6}}
{"user_turn_0": "High price", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floss and Joes", "user_turn_1": "book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Goat and Guru \"))))))", "idx": "19154", "datum_id": {"dialogue_id": "14f78bbc-7826-4ae2-9ea6-a7fa5dd182c0", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , oK it has been booked", "tgt": "(plan (^(Hotel) Find :focus (Hotel.rating_? (^(Number) always)) :object (& (Hotel.hotelName_? (?= \" Vitale \")) (Hotel.location_? (?= \" Camden Town \")))))", "idx": "19162", "datum_id": {"dialogue_id": "383e25e8-c9e3-4367-90a4-3b42dfb1e20c", "turn_index": 0}}
{"user_turn_0": "Hey assistant , oK it has been booked", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "They do n't have breakfast", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.hotelName_? (?= \" Vitale \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (DateTimeRange.duration_? (AppleDuration.day_? (?= 3)))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Double)))))))", "idx": "19163", "datum_id": {"dialogue_id": "383e25e8-c9e3-4367-90a4-3b42dfb1e20c", "turn_index": 1}}
{"user_turn_0": "Two", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Hoe many rooms do you need ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "19165", "datum_id": {"dialogue_id": "383e25e8-c9e3-4367-90a4-3b42dfb1e20c", "turn_index": 3}}
{"user_turn_0": "Hoe many rooms do you need ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "It 's rated five stares", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "19166", "datum_id": {"dialogue_id": "383e25e8-c9e3-4367-90a4-3b42dfb1e20c", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i want to get a ticket on a flight to Amsterdam with eastern airways", "tgt": "(plan (^(Flight) Book :object (& (Flight.destination_? (Place.location_? (?= \" Amsterdam \"))) (Flight.airLine_? (?= \" Eastern \")))))", "idx": "19167", "datum_id": {"dialogue_id": "6a9d663a-3f24-422d-ae75-f3d98f3f1bdb", "turn_index": 0}}
{"user_turn_0": "Yes , I will be flying to Amsterdam today", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "I want to depart on the 6th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 6L))))))", "idx": "19175", "datum_id": {"dialogue_id": "3f06842d-c9e2-4699-a9fb-6a07fc880bc6", "turn_index": 2}}
{"user_turn_0": "Thanks , next book a taxi from The Daily Grind to the venue of the wash my car on calendar", "agent_turn_0": "Root system prompt taxi book object equals destination inform calendarEvent find notExisted", "user_turn_1": "it should be at 36 Albert Roada", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Place)) Path.apply \" object.destination \") (lambda (^(Constraint Place) x0) (Place.location_? (?= \" 36 Albert Road \")))))", "idx": "19186", "datum_id": {"dialogue_id": "ed6e8820-27e9-4928-af8d-6eb2c036ef93", "turn_index": 3}}
{"user_turn_0": "At 3:30 pm", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals endDateTime", "user_turn_1": "it is 4:15Pm", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.duration_? (AppleDuration.minute_? (?= 45)))))))", "idx": "19190", "datum_id": {"dialogue_id": "cdc60265-a00b-4e7d-aaee-b63847247448", "turn_index": 2}}
{"user_turn_0": "it is 4:15Pm", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Thanks so much . Set a reminder", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (^(CalendarEvent) always))))))", "idx": "19191", "datum_id": {"dialogue_id": "cdc60265-a00b-4e7d-aaee-b63847247448", "turn_index": 3}}
{"user_turn_0": "Hello assistant , i would like to book a flight from Birmingham to Belfast that leaves tomorrow .", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM price equals 170", "user_turn_1": "I would prefer the flight that departs at 1:20 PM . I would like to fly in business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.source_? (Place.location_? (?= \" Birmingham \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "19194", "datum_id": {"dialogue_id": "04870d2c-7a61-4f82-8d61-942ec467498e", "turn_index": 1}}
{"user_turn_0": "I will be departing on Thursday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 4 object equals nextDepartureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM price equals 166", "user_turn_1": "That looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "19197", "datum_id": {"dialogue_id": "04870d2c-7a61-4f82-8d61-942ec467498e", "turn_index": 4}}
{"user_turn_0": "Do any of the restaurants on your list serve Italian food ?", "agent_turn_0": "Root system prompt restaurant book object equals priceRange", "user_turn_1": "Yes , I 'd rather it be inexpensive and affordable", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))))))", "idx": "19235", "datum_id": {"dialogue_id": "d11537ba-8f79-4f1a-ac03-b47b602a1d17", "turn_index": 3}}
{"user_turn_0": "Could you get me another place with parking ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Lakeside Demon", "user_turn_1": "What 's the average cost per person there ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "19237", "datum_id": {"dialogue_id": "d11537ba-8f79-4f1a-ac03-b47b602a1d17", "turn_index": 5}}
{"user_turn_0": "What 's the average cost per person there ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 65", "user_turn_1": "Okay , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Hambone Martian \"))))))", "idx": "19238", "datum_id": {"dialogue_id": "d11537ba-8f79-4f1a-ac03-b47b602a1d17", "turn_index": 6}}
{"user_turn_0": "Which of them are rated at least two stars ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Beef Easy", "user_turn_1": "What is the address ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "19251", "datum_id": {"dialogue_id": "a00f461c-b803-4e81-b95d-d650790976d1", "turn_index": 4}}
{"user_turn_0": "What is the address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals The Orion Suite", "user_turn_1": "Okay book that please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Lakeside Demon \"))))))", "idx": "19252", "datum_id": {"dialogue_id": "a00f461c-b803-4e81-b95d-d650790976d1", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Book my flight to Glasgow", "tgt": "(plan (^(Flight) Book :object (Flight.destination_? (Place.location_? (?= \" Glasgow \")))))", "idx": "19260", "datum_id": {"dialogue_id": "6cf69da2-fcaa-11ea-8cb8-acde48001122", "turn_index": 0}}
{"user_turn_0": "Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM price equals 134", "user_turn_1": "I 'd much rather the one leaving at 4:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "19268", "datum_id": {"dialogue_id": "648cc0f8-4adc-4204-b62e-544289e3493b", "turn_index": 2}}
{"user_turn_0": "On the 25th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM price equals 130", "user_turn_1": "Looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "19279", "datum_id": {"dialogue_id": "2b6de7d0-fccd-45a7-ad48-0f5612c15e27", "turn_index": 7}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I like the one at 1:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "19288", "datum_id": {"dialogue_id": "d012d0e4-19e3-4046-8678-391e96c57282", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Book my flight from Leeds to Edinburgh", "tgt": "(plan (^(Flight) Book :object (& (Flight.source_? (Place.location_? (?= \" Leeds \"))) (Flight.destination_? (Place.location_? (?= \" Edinburgh \"))))))", "idx": "19296", "datum_id": {"dialogue_id": "6cfb7b1a-fcaa-11ea-99f5-acde48001122", "turn_index": 0}}
{"user_turn_0": "Can you check for me if I have any event on Wednesday", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Good book my flight on that day", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))))))))", "idx": "19298", "datum_id": {"dialogue_id": "6cfb7b1a-fcaa-11ea-99f5-acde48001122", "turn_index": 2}}
{"user_turn_0": "Good book my flight on that day", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I would like to choose the 5 PM flight please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 5L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "19299", "datum_id": {"dialogue_id": "6cfb7b1a-fcaa-11ea-99f5-acde48001122", "turn_index": 3}}
{"user_turn_0": "Hello assistant , i need to book a hotel with a four star rating . I want a queen size bed .", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "I 'm staying in Queensbury . I need something inexpensive", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.location_? (?= \" Queensbury \"))) (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "19302", "datum_id": {"dialogue_id": "45f3a2ac-8039-47d4-abea-07418fac1731", "turn_index": 1}}
{"user_turn_0": "What rating does that one have ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Okay book me that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "19304", "datum_id": {"dialogue_id": "45f3a2ac-8039-47d4-abea-07418fac1731", "turn_index": 3}}
{"user_turn_0": "What is the weather in Exeter on today ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cold", "user_turn_1": "Display my trains", "tgt": "(plan (^(Train) Find))", "idx": "19314", "datum_id": {"dialogue_id": "9b9fbf44-ffea-4c38-9707-d97524695208", "turn_index": 4}}
{"user_turn_0": "I want a different hotel with a low price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Harborview price equals 160", "user_turn_1": "Does this places have a private bathroom ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.privateBath_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "19322", "datum_id": {"dialogue_id": "e298018e-3cf8-4400-a6ac-d47606ebc2d4", "turn_index": 2}}
{"user_turn_0": "Does this places have a private bathroom ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Fresh Wave Resort \"))))))", "idx": "19323", "datum_id": {"dialogue_id": "e298018e-3cf8-4400-a6ac-d47606ebc2d4", "turn_index": 3}}
{"user_turn_0": "I would like another restaurant with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Spago", "user_turn_1": "Does this restaurant have outdoor seats ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "19330", "datum_id": {"dialogue_id": "1ec558be-51a5-434c-b0ba-7cc4bd28846a", "turn_index": 3}}
{"user_turn_0": "I need another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Bard\u2019s Bench", "user_turn_1": "What type of food is served ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.foodType_? (^(FoodType) always)))))", "idx": "19332", "datum_id": {"dialogue_id": "1ec558be-51a5-434c-b0ba-7cc4bd28846a", "turn_index": 5}}
{"user_turn_0": "Yes , there should be a high price range with a rating of four stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floq", "user_turn_1": "This is fine , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Juniper Cloud \"))))))", "idx": "19335", "datum_id": {"dialogue_id": "1ec558be-51a5-434c-b0ba-7cc4bd28846a", "turn_index": 8}}
{"user_turn_0": "I need a flight from Leeds to Belfast", "agent_turn_0": "Root system prompt flight book object equals departureDateTime", "user_turn_1": "Do I have any other event at 2 PM on that day ?", "tgt": "(plan (^(CalendarEvent) Find :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday)))) (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "19344", "datum_id": {"dialogue_id": "6cffe664-fcaa-11ea-8794-acde48001122", "turn_index": 1}}
{"user_turn_0": "Do I have any other event at 2 PM on that day ?", "agent_turn_0": "Root system inform calendarEvent find object equals eventName equals forest tour", "user_turn_1": "Book my flight after 2 PM on Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday))))) (List.exists_? (DateTime.time_? (?>= (someSalient (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))))))", "idx": "19345", "datum_id": {"dialogue_id": "6cffe664-fcaa-11ea-8794-acde48001122", "turn_index": 2}}
{"user_turn_0": "three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "19359", "datum_id": {"dialogue_id": "888a4ff9-9e62-4ad0-85a2-95ed7afb5dce", "turn_index": 4}}
{"user_turn_0": "I would rather have a different hotel with a five star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Ballyfin price equals 178", "user_turn_1": "Does the hotel have a car park ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasParking_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "19375", "datum_id": {"dialogue_id": "a8cfbebb-16a9-456f-8875-d3997d6420c5", "turn_index": 3}}
{"user_turn_0": "Does the hotel have a car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Dream Connect \"))))))", "idx": "19376", "datum_id": {"dialogue_id": "a8cfbebb-16a9-456f-8875-d3997d6420c5", "turn_index": 4}}
{"user_turn_0": "One", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "19379", "datum_id": {"dialogue_id": "a8cfbebb-16a9-456f-8875-d3997d6420c5", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , say where should we meet to 07923166661", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.phoneNumber_? (?= \" 07923166661 \"))) (Message.textContent_? (?= \" where should we meet \")))))", "idx": "19381", "datum_id": {"dialogue_id": "4c4fafff-fad9-40ae-825a-852fad8c576d", "turn_index": 0}}
{"user_turn_0": "Is there any event on Monday on my calendar", "agent_turn_0": "Root system inform calendarEvent find object equals eventName equals ice hockey dateTimeRange equals startDateTime equals date equals dayOfWeek equals Monday time equals hour equals 3 meridiem equals PM", "user_turn_1": "Book my flight after 3 PM on Monday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (List.exists_? (DateTime.time_? (?>= (someSalient (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM))))))))))))))", "idx": "19398", "datum_id": {"dialogue_id": "6d041068-fcaa-11ea-ba5b-acde48001122", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , call me a taxi to take me from The Body Shop in Upper Street to the spring outing .", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" The Body Shop in Upper Street \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.eventName_? (?= \" spring outing \"))))))))", "idx": "19401", "datum_id": {"dialogue_id": "3bb5e603-78be-4245-8a06-0a906fa6601b", "turn_index": 0}}
{"user_turn_0": "Do I have any other event at 4 PM on that day ?", "agent_turn_0": "Root system inform calendarEvent find object equals eventName equals formula one", "user_turn_1": "Schedule my new event at 6 PM then", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.startDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "19408", "datum_id": {"dialogue_id": "6d06e7e8-fcaa-11ea-a5da-acde48001122", "turn_index": 2}}
{"user_turn_0": "Yes low price", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capricorn", "user_turn_1": "None of them look good . How about places that will serve Chinese hotpot instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint FoodType)) Path.apply \" object.foodType \") (lambda (^(Constraint FoodType) x0) (?= (FoodType.ChineseHotPot)))))", "idx": "19412", "datum_id": {"dialogue_id": "ba45b8a6-d68f-4021-b3be-0ffb81991470", "turn_index": 3}}
{"user_turn_0": "None of them look good . How about places that will serve Chinese hotpot instead ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dingo", "user_turn_1": "Does the restaurant have parking ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "19413", "datum_id": {"dialogue_id": "ba45b8a6-d68f-4021-b3be-0ffb81991470", "turn_index": 4}}
{"user_turn_0": "I would rather have a different restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Acacia Saint", "user_turn_1": "What is the average cost per person ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "19416", "datum_id": {"dialogue_id": "ba45b8a6-d68f-4021-b3be-0ffb81991470", "turn_index": 7}}
{"user_turn_0": "What is the average cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 39", "user_turn_1": "Book it for me at 4 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Capricorn \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "19417", "datum_id": {"dialogue_id": "ba45b8a6-d68f-4021-b3be-0ffb81991470", "turn_index": 8}}
{"user_turn_0": "Hello assistant , book a restaurant in Stamford Hill with a car park", "agent_turn_0": "Root system prompt restaurant book object equals foodType", "user_turn_1": "I do n't care as long as the rating is three stars", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.rating_? (?= 3))) (Restaurant.foodType_? (?= (FoodType.Any)))))))", "idx": "19440", "datum_id": {"dialogue_id": "9ece74ec-4868-42b0-8830-e03bc9a0a007", "turn_index": 1}}
{"user_turn_0": "I 'd still prefer a different restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kiwi Sea", "user_turn_1": "Tell me the average cost per person", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "19444", "datum_id": {"dialogue_id": "9ece74ec-4868-42b0-8830-e03bc9a0a007", "turn_index": 5}}
{"user_turn_0": "Tell me the average cost per person", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 32", "user_turn_1": "Ok fine , book that for tomorrow at 4:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Cityroom \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "19445", "datum_id": {"dialogue_id": "9ece74ec-4868-42b0-8830-e03bc9a0a007", "turn_index": 6}}
{"user_turn_0": "Find one for 2 people please", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Ok , make a change to the booking to Wednesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Wednesday))))))", "idx": "19447", "datum_id": {"dialogue_id": "9ece74ec-4868-42b0-8830-e03bc9a0a007", "turn_index": 8}}
{"user_turn_0": "Please book Ritz - Carlton for me", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "When does my calendar event Challenge Yourself happen ?", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (^(DateTime) always))) :object (CalendarEvent.eventName_? (?= \" Challenge Yourself \"))))", "idx": "19451", "datum_id": {"dialogue_id": "6d0a749e-fcaa-11ea-bb30-acde48001122", "turn_index": 2}}
{"user_turn_0": "I 'm interested in dining in a high - priced restaurant", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kiwi Sea", "user_turn_1": "Does the restaurant accept credit cards ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "19458", "datum_id": {"dialogue_id": "1ea40ab0-6624-4382-ae24-7aa6e53acc2a", "turn_index": 3}}
{"user_turn_0": "I think I 'd prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capricorn", "user_turn_1": "Does it have parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "19460", "datum_id": {"dialogue_id": "1ea40ab0-6624-4382-ae24-7aa6e53acc2a", "turn_index": 5}}
{"user_turn_0": "I prefer another restaurant which offers outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Bandits", "user_turn_1": "That looks fine . Go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Kiwi Sea \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (meridiem_? (?= (Meridiem.AM)))))))))))", "idx": "19462", "datum_id": {"dialogue_id": "1ea40ab0-6624-4382-ae24-7aa6e53acc2a", "turn_index": 7}}
{"user_turn_0": "I need a table that seats 6 people", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "OK . Can you push the booking to tomorrow ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (?= (Tomorrow))))))))", "idx": "19464", "datum_id": {"dialogue_id": "1ea40ab0-6624-4382-ae24-7aa6e53acc2a", "turn_index": 9}}
{"user_turn_0": "Go ahead and book it", "agent_turn_0": "Root system prompt restaurant book object equals atDateTime tableSize", "user_turn_1": "For 6", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.tableSize_? (?= 6))))))", "idx": "19474", "datum_id": {"dialogue_id": "bf1e19e7-c19d-4097-8862-9b5192d51a79", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , please order a taxi to take me to the location of my event starting from Tie the Knot", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" Tie the Knot \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))))))))))", "idx": "19478", "datum_id": {"dialogue_id": "13cfcb57-416e-4fba-9ed1-79fe3ae69c08", "turn_index": 0}}
{"user_turn_0": "Can you please check for me if I have any event 3 PM on Saturday", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "That sounds good and please schedule that time for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.startDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (^((Constraint Time)) refer))))))", "idx": "19494", "datum_id": {"dialogue_id": "6d0d4b74-fcaa-11ea-a449-acde48001122", "turn_index": 2}}
{"user_turn_0": "Schedule formula one at Tuesday on my calendar", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals startDateTime equals time", "user_turn_1": "Are there any event which has been schedule at 4 PM on that day ?", "tgt": "(plan (^(CalendarEvent) Find :object (& (CalendarEvent.eventName_? (^((Constraint String)) refer)) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday)))) (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "19496", "datum_id": {"dialogue_id": "6d0fe9d8-fcaa-11ea-bca8-acde48001122", "turn_index": 1}}
{"user_turn_0": "Are there any event which has been schedule at 4 PM on that day ?", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Schedule my new event at 4 PM on Tuesday please", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.startDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "19497", "datum_id": {"dialogue_id": "6d0fe9d8-fcaa-11ea-bca8-acde48001122", "turn_index": 2}}
{"user_turn_0": "I need three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually , I need the check in date to be on the 9th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 9L))))))", "idx": "19501", "datum_id": {"dialogue_id": "7bf9dabe-ec92-4a0e-8fbf-29664c8c101b", "turn_index": 3}}
{"user_turn_0": "None of them look good . How about restaurants that serve Indian food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone Martian", "user_turn_1": "What is the address of the restaurant ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "19508", "datum_id": {"dialogue_id": "7a1fe936-5be0-41c6-8ca2-3c17771adea6", "turn_index": 5}}
{"user_turn_0": "What is the address of the restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 67 North Street", "user_turn_1": "That 's fine . Book it for me on the 25th at 6 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Kiwi Sea \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 25L))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 6L)))))))))))", "idx": "19509", "datum_id": {"dialogue_id": "7a1fe936-5be0-41c6-8ca2-3c17771adea6", "turn_index": 6}}
{"user_turn_0": "I 'd like a different hotel and make sure it does not have zero stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Club Quarters price equals 156", "user_turn_1": "Do they have laundry", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.laundry_? (^(Boolean) always)))))", "idx": "19520", "datum_id": {"dialogue_id": "cfac8469-284d-4976-be5d-8c6750e6bd25", "turn_index": 3}}
{"user_turn_0": "Do they have laundry", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Rose \"))))))", "idx": "19521", "datum_id": {"dialogue_id": "cfac8469-284d-4976-be5d-8c6750e6bd25", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "I need to create an event on Thursday", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday))))))))", "idx": "19524", "datum_id": {"dialogue_id": "6d12de36-fcaa-11ea-9f8b-acde48001122", "turn_index": 0}}
{"user_turn_0": "Do I have any other event at 4 PM on that day ?", "agent_turn_0": "Root system inform calendarEvent find object equals eventName equals Animals party", "user_turn_1": "move Animals party to Sunday", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))) :object (CalendarEvent.eventName_? (?= \" Animals party \"))))", "idx": "19526", "datum_id": {"dialogue_id": "6d12de36-fcaa-11ea-9f8b-acde48001122", "turn_index": 2}}
{"user_turn_0": "move Animals party to Sunday", "agent_turn_0": "Root system inform calendarEvent update Completed", "user_turn_1": "Then schedule the new event at 4 PM Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.startDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "19527", "datum_id": {"dialogue_id": "6d12de36-fcaa-11ea-9f8b-acde48001122", "turn_index": 3}}
{"user_turn_0": "Hi there , can you tell me where to find Harborview hotel ?", "agent_turn_0": "Root system inform hotel find focus equals location equals Old Ford", "user_turn_1": "Can you make me a reservation for February 10th to the 15th ?", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.hotelName_? (?= \" Harborview \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 10L)))) (month_? (Date.month_? (?= (February)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 15L))))))))))", "idx": "19529", "datum_id": {"dialogue_id": "836e287f-eb06-4975-8bcb-b3058bd181ad", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , send the details of my event to Adrian", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Adrian \")))))))", "idx": "19535", "datum_id": {"dialogue_id": "e4f0aaf3-b719-4133-9610-fc70cc83d68f", "turn_index": 0}}
{"user_turn_0": "No , I 'm leaving from London Heathrow", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 2 meridiem equals PM price equals 145", "user_turn_1": "Actually , I prefer the flight at 1:45 PM and make sure its economy class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.destination_? (Place.location_? (?= \" Glasgow \"))) (Flight.departureDateTime_? (& (^((Constraint (List DateTime))) refer) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "19548", "datum_id": {"dialogue_id": "4be78ca6-2280-4cd4-a88f-68bed701c770", "turn_index": 3}}
{"user_turn_0": "Sure , book it on Friday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 4 meridiem equals PM price equals 155", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "19550", "datum_id": {"dialogue_id": "4be78ca6-2280-4cd4-a88f-68bed701c770", "turn_index": 5}}
{"user_turn_0": "Hi my assistant , what is the Acacia Saint restaurant rated at", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 4", "user_turn_1": "Can you book it for Sunday", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.restaurantName_? (^((Constraint String)) refer)) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))))))", "idx": "19553", "datum_id": {"dialogue_id": "372683cc-a297-46a7-bfd3-d8bc4d482d5c", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , it is 11:30 .", "tgt": "(plan (do (^(CalendarEvent) Create :object (CalendarEvent.eventLocation_? (?= \" Pink Hob \"))) (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Young \")) (Person.namePrefix_? (?= \" Mr \"))))) (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always))))))))", "idx": "19562", "datum_id": {"dialogue_id": "3a978b4d-3b50-4277-9b8c-72fb4333f18f", "turn_index": 0}}
{"user_turn_0": "Hi assistant , it is 11:30 .", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange", "user_turn_1": "What time is the event ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object \") (lambda (^(Constraint CalendarEvent) x0) (& x0 (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L)))))))))))", "idx": "19563", "datum_id": {"dialogue_id": "3a978b4d-3b50-4277-9b8c-72fb4333f18f", "turn_index": 1}}
{"user_turn_0": "Sue", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Yes I do . Create a calendar event for August 10th and add it to reminders", "tgt": "(plan (do (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (& (Date.month_? (?= (August))) (Date.day_? (?= (Day.apply 10L)))))))) (^(Reminder) Create :object (Reminder.reminderContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))))))", "idx": "19570", "datum_id": {"dialogue_id": "1433d1c6-daca-481e-9a79-494ec317d6dd", "turn_index": 3}}
{"user_turn_0": "Is it a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Ok , I want to take that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "19599", "datum_id": {"dialogue_id": "b45e473b-7d47-44fa-9770-5b69964b9084", "turn_index": 2}}
{"user_turn_0": "Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM price equals 201", "user_turn_1": "That works for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "19603", "datum_id": {"dialogue_id": "b45e473b-7d47-44fa-9770-5b69964b9084", "turn_index": 6}}
{"user_turn_0": "Hi there , yo buddy , I need a hook up on a one way flight from Leeds to Amsterdam for a departure on March 6th", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 3 meridiem equals PM price equals 142", "user_turn_1": "I think I 'd like the flight that leaves at 1:30 PM and can you make sure it is economy class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.source_? (Place.location_? (?= \" Leeds \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (^((Constraint (List DateTime))) refer) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.tripType_? (?= (TripType.oneWay)))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "19628", "datum_id": {"dialogue_id": "cf9d59bb-6026-4731-a4ae-1627c7f25cc4", "turn_index": 1}}
{"user_turn_0": "Yes . please", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "How s Monday sound ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "19641", "datum_id": {"dialogue_id": "0cabc6ea-5a28-47a9-abe7-5baafe026ff4", "turn_index": 2}}
{"user_turn_0": "What cabin class ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "That s fine , book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "19643", "datum_id": {"dialogue_id": "0cabc6ea-5a28-47a9-abe7-5baafe026ff4", "turn_index": 4}}
{"user_turn_0": "What 's the average price per head ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 39", "user_turn_1": "Ok , book the table", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (^((Constraint String)) refer))))))", "idx": "19664", "datum_id": {"dialogue_id": "e63d06e7-f711-4f85-a88a-2e46f4d5f860", "turn_index": 3}}
{"user_turn_0": "The location will be Belfast", "agent_turn_0": "Root system prompt flight book object equals departureDateTime", "user_turn_1": "I am leaving at August 7th before 7 PM ; and book business class for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& x0 (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (August))) (Date.day_? (?= (Day.apply 7L)))))) (List.exists_? (DateTime.time_? (?<= (someSalient (& (Time.hour_? (?= (Hour.apply 7L))) (meridiem_? (?= (Meridiem.PM))))))))))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "19670", "datum_id": {"dialogue_id": "3e4efa34-d7dd-49bb-90ff-548b6849f6bc", "turn_index": 2}}
{"user_turn_0": "Will you have a direct flight", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Fine . I need flights for two passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.source_? (Place.location_? (?= \" London \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.class_? (?= (FlightClass.Business)))) (Flight.passengers_? (?= 2))))))", "idx": "19672", "datum_id": {"dialogue_id": "3e4efa34-d7dd-49bb-90ff-548b6849f6bc", "turn_index": 4}}
{"user_turn_0": "How long does it usually take to get there ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 45", "user_turn_1": "Next task , i want to make a booking at a hotel , and I will need a single room", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.rating_? (?!= (someSalient (?= 0)))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Single)))))))", "idx": "19687", "datum_id": {"dialogue_id": "4a2770ca-dc57-4d81-a4da-d6eea2b1e56b", "turn_index": 3}}
{"user_turn_0": "What 's their rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "19690", "datum_id": {"dialogue_id": "4a2770ca-dc57-4d81-a4da-d6eea2b1e56b", "turn_index": 6}}
{"user_turn_0": "Yeah book it for me", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "Thanks so much . Can you send the event for tomorrow to my son", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))))))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Son))))))))", "idx": "19704", "datum_id": {"dialogue_id": "adc7791d-eb51-4090-b411-a32d426d070d", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , can you get me a taxi to my event that 's meeting at 2:30 PM ?", "tgt": "(plan (^(Taxi) Book :object (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "19710", "datum_id": {"dialogue_id": "945f3664-96e0-4fc3-a728-fc3f8e833453", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , book a cheap four star hotel", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))) (Hotel.rating_? (?= 4)))))", "idx": "19720", "datum_id": {"dialogue_id": "5547788c-33c9-45f2-abf5-facd3f3c0936", "turn_index": 0}}
{"user_turn_0": "Does the hotel have private bathrooms ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "I 'll take it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "19723", "datum_id": {"dialogue_id": "5547788c-33c9-45f2-abf5-facd3f3c0936", "turn_index": 3}}
{"user_turn_0": "I 'll take it", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "May 13th to 15th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 13L)))) (month_? (Date.month_? (?= (May)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 15L)))))))))))", "idx": "19724", "datum_id": {"dialogue_id": "5547788c-33c9-45f2-abf5-facd3f3c0936", "turn_index": 4}}
{"user_turn_0": "Hi there , how long will it take to get to my event this afternoon", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 50", "user_turn_1": "Thanks so much . Book me a hotel and I want a queen sized bed", "tgt": "(plan (^(Hotel) Book :object (Hotel.roomType_? (List.exists_? (?= (RoomType.Queen))))))", "idx": "19740", "datum_id": {"dialogue_id": "6421b368-4e00-420d-8762-13a4912988de", "turn_index": 1}}
{"user_turn_0": "I 'd like a different hotel with low price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Etiquette Suites price equals 173", "user_turn_1": "Does that include breakfast ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "19743", "datum_id": {"dialogue_id": "6421b368-4e00-420d-8762-13a4912988de", "turn_index": 4}}
{"user_turn_0": "Does that include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Dream Connect \"))))))", "idx": "19744", "datum_id": {"dialogue_id": "6421b368-4e00-420d-8762-13a4912988de", "turn_index": 5}}
{"user_turn_0": "Three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is breakfast included ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "19748", "datum_id": {"dialogue_id": "6421b368-4e00-420d-8762-13a4912988de", "turn_index": 9}}
{"user_turn_0": "Is breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "19749", "datum_id": {"dialogue_id": "6421b368-4e00-420d-8762-13a4912988de", "turn_index": 10}}
{"user_turn_0": "London Heathrow", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM price equals 145", "user_turn_1": "That \u2019s fine , I \u2019d like to book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "19757", "datum_id": {"dialogue_id": "08f08bb4-a505-42d6-a56a-cf29becde08c", "turn_index": 2}}
{"user_turn_0": "Jersey", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 40 meridiem equals PM", "user_turn_1": "Ok , sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (^((Constraint Train)) refer)))))", "idx": "19767", "datum_id": {"dialogue_id": "7ee9bddb-e504-4fbe-91e1-f9605197dc8c", "turn_index": 2}}
{"user_turn_0": "I want the flight that leaves at 1:50 PM", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM price equals 145", "user_turn_1": "This one seems like a good idea", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "19779", "datum_id": {"dialogue_id": "b753d5d2-23ca-4902-9bce-c19e3c19d718", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , book me a hotel near my event . I want to check in on Tuesday .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Hotel.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday)))))))))", "idx": "19781", "datum_id": {"dialogue_id": "db76e794-4d65-4563-ba90-23885c13ee72", "turn_index": 0}}
{"user_turn_0": "Give me another hotel that has a low price range", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Sheraton price equals 173", "user_turn_1": "Are there private bathrooms in the hotel ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "19784", "datum_id": {"dialogue_id": "db76e794-4d65-4563-ba90-23885c13ee72", "turn_index": 3}}
{"user_turn_0": "Are there private bathrooms in the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Fairmont \"))))))", "idx": "19785", "datum_id": {"dialogue_id": "db76e794-4d65-4563-ba90-23885c13ee72", "turn_index": 4}}
{"user_turn_0": "I do n't care about the room type . Just book me one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is free cancellation supported ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "19789", "datum_id": {"dialogue_id": "db76e794-4d65-4563-ba90-23885c13ee72", "turn_index": 8}}
{"user_turn_0": "Hi there , i would like to book a one way train going to Victorial .", "agent_turn_0": "Root system prompt train book object equals source", "user_turn_1": "Southhampton", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (Train.source_? (Place.location_? (?= \" Southampton \")))))))", "idx": "19792", "datum_id": {"dialogue_id": "6ee69452-b508-4b79-b06a-575a6517b473", "turn_index": 1}}
{"user_turn_0": "What about Dreamy Desert Suites Hotel ? Is it available ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to pay ahead ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "19811", "datum_id": {"dialogue_id": "e03660d7-01b1-4e85-8209-2b22910c6b06", "turn_index": 5}}
{"user_turn_0": "Hey assistant , i want to book a hotel which has wifi", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "The Hillingdon area with a low price would be ideal", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.location_? (?= \" Hillingdon \"))) (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "19814", "datum_id": {"dialogue_id": "f74f21b2-a293-4fd6-b387-b72f6bee9fec", "turn_index": 1}}
{"user_turn_0": "I prefer another hotel with at least a two stars rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Marriott price equals 201", "user_turn_1": "Does the hotel have a car park ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasParking_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "19816", "datum_id": {"dialogue_id": "f74f21b2-a293-4fd6-b387-b72f6bee9fec", "turn_index": 3}}
{"user_turn_0": "Does the hotel have a car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it for me would you", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Green Lushy Resorts \"))))))", "idx": "19817", "datum_id": {"dialogue_id": "f74f21b2-a293-4fd6-b387-b72f6bee9fec", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , mPV .", "tgt": "(plan (^(Taxi) Book :object (& (& (Taxi.source_? (Place.location_? (?= \" 7615 Eagle Lane \"))) (Taxi.destination_? (Place.location_? (?= \" 9 Constitution Drive \")))) (Taxi.passengers_? (?= 3)))))", "idx": "19852", "datum_id": {"dialogue_id": "310399b0-9c31-4f50-8941-0b1e9bf7514d", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , add my son to the event in my calendar .", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.attendees_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Son)))))))", "idx": "19862", "datum_id": {"dialogue_id": "fc035785-afad-4e2f-a6b7-c5a8cf529ec2", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , what 's the distance to Haywood Way ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (Navigation.destination_? (Place.location_? (?= \" Haywood Way \")))))", "idx": "19872", "datum_id": {"dialogue_id": "0661dda7-6002-4eac-89ff-4a404840e885", "turn_index": 0}}
{"user_turn_0": "Liverpool", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 11 minute equals 40 meridiem equals AM", "user_turn_1": "I want the 1:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "19892", "datum_id": {"dialogue_id": "fd46dbbf-1686-42e1-8d38-1f5da7cdef1b", "turn_index": 3}}
{"user_turn_0": "Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM price equals 173", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "19895", "datum_id": {"dialogue_id": "fd46dbbf-1686-42e1-8d38-1f5da7cdef1b", "turn_index": 6}}
{"user_turn_0": "Hello , what time tomorrow is my train to Jersey set to arrive ?", "agent_turn_0": "Root system inform train find focus equals arrivalDateTime equals time equals hour equals 3 meridiem equals PM", "user_turn_1": "What do I have as the start time for my next calendar event ?", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (^(DateTime) always))) :object (CalendarEvent.listOffset_? (?= 1))))", "idx": "19903", "datum_id": {"dialogue_id": "fa698a5c-6647-4220-995a-c0b6ec377fab", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , show me hotels that are n't expensive .", "tgt": "(plan (^(Hotel) Find :object (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))))", "idx": "19907", "datum_id": {"dialogue_id": "d48dba6d-cc9b-4ce6-a933-4bc479b1aa96", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , inform me how I get from 29 Highgate Lane by car .", "tgt": "(plan (^(Navigation) Find :object (& (Navigation.destination_? (Place.location_? (?= \" 29 Highgate Lane \"))) (Navigation.transportationMode_? (?= (TransportationMode.Driving))))))", "idx": "19912", "datum_id": {"dialogue_id": "159aeb13-b15e-4999-b234-aa2e4e9076d0", "turn_index": 0}}
{"user_turn_0": "How do I find my way there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Alright , book me a room there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "19915", "datum_id": {"dialogue_id": "159aeb13-b15e-4999-b234-aa2e4e9076d0", "turn_index": 3}}
{"user_turn_0": "Do they have car parking ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Great ! Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "19922", "datum_id": {"dialogue_id": "aaa175ca-169c-474f-8401-a30fe490d618", "turn_index": 3}}
{"user_turn_0": "None of them looks good . How about restaurants that serve Chinese food ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone", "user_turn_1": "Does the restaurant have parking", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "19936", "datum_id": {"dialogue_id": "fd1ae5af-0573-4b26-b296-b6520be25857", "turn_index": 4}}
{"user_turn_0": "I prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Spago", "user_turn_1": "Does the restaurant take credit card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "19938", "datum_id": {"dialogue_id": "fd1ae5af-0573-4b26-b296-b6520be25857", "turn_index": 6}}
{"user_turn_0": "Does the restaurant take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "That 's fine . Book it for today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Chipotle Grill \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Today)))))))))", "idx": "19939", "datum_id": {"dialogue_id": "fd1ae5af-0573-4b26-b296-b6520be25857", "turn_index": 7}}
{"user_turn_0": "I 'd like to have two rooms with queen - sized beds", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to pay for it ahead of time ? Like now ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "19963", "datum_id": {"dialogue_id": "2dd8e666-50a4-45f1-9cbb-e889d9fab95b", "turn_index": 5}}
{"user_turn_0": "What is the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "19973", "datum_id": {"dialogue_id": "98a3828b-d478-4c8f-adb4-adff9bec460f", "turn_index": 3}}
{"user_turn_0": "Book it for me", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "I want to stay from June the 17th to the 23rd", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 17L)))) (month_? (Date.month_? (?= (June)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 23L)))))))))))", "idx": "19974", "datum_id": {"dialogue_id": "98a3828b-d478-4c8f-adb4-adff9bec460f", "turn_index": 4}}
{"user_turn_0": "I need two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "19978", "datum_id": {"dialogue_id": "98a3828b-d478-4c8f-adb4-adff9bec460f", "turn_index": 8}}
{"user_turn_0": "Tuesday", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "Wednesday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.departureDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Wednesday)))))", "idx": "19983", "datum_id": {"dialogue_id": "fe3172c8-57dd-4ba1-9c5d-481ad655e7f1", "turn_index": 3}}
{"user_turn_0": "Will it be a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "That 's ok . I want to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "19994", "datum_id": {"dialogue_id": "8efa7df2-f6c1-4597-a3c2-2cbf173fd51d", "turn_index": 3}}
{"user_turn_0": "show me a reminder at 4:30 PM today", "agent_turn_0": "Root system inform reminder find", "user_turn_1": "create reminder at 6 PM", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (meridiem_? (?= (Meridiem.PM))))))))", "idx": "20000", "datum_id": {"dialogue_id": "0c2f9198-6354-4ce4-bea6-6f9f5fa705ca", "turn_index": 4}}
{"user_turn_0": "Hey assistant , tell me the location of the Blossomwell Resorts hotel .", "agent_turn_0": "Root system inform hotel find focus equals location equals Victoria", "user_turn_1": "Cool , can you book a room checking in tomorrow and out on the 14th . I want a king bed as well", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.hotelName_? (?= \" Blossomwell Resorts \")) (Hotel.roomType_? (List.exists_? (?= (RoomType.King))))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 14L))))))))))", "idx": "20002", "datum_id": {"dialogue_id": "87b8622b-c7f1-4ef4-a1bc-ec7ed9ab7242", "turn_index": 1}}
{"user_turn_0": "Hi my assistant , hey do you know if I have a Feedback session every Saturday", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Okay then make one", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.location_? (?= \" The Temple House \"))))", "idx": "20007", "datum_id": {"dialogue_id": "5b1d152c-cf38-4c56-a022-590f4aa7cbab", "turn_index": 1}}
{"user_turn_0": "What airline is it", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "I prefer the one that departs at 2:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "20021", "datum_id": {"dialogue_id": "deb48fc9-b2e2-40a5-9b05-18c4caee6996", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i 'd like to book a train for today to St. Pancras from Paddington to return on November 27th .", "tgt": "(plan (^(Train) Book :object (& (& (& (Train.source_? (Place.location_? (?= \" Paddington \"))) (Train.destination_? (Place.location_? (?= \" St Pancras \")))) (Train.departureDateTime_? (DateTime.date_? (?= (Today))))) (Train.returnDateTime_? (DateTime.date_? (& (Date.day_? (?= (Day.apply 27L))) (Date.month_? (?= (November)))))))))", "idx": "20029", "datum_id": {"dialogue_id": "1c076fcc-e3c9-4eb2-8184-34de67719fa3", "turn_index": 0}}
{"user_turn_0": "Yes . please", "agent_turn_0": "Root system inform train book Completed", "user_turn_1": "Tell me how far 54 Islington Park Road from 61 Richmond Avenue", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (& (Navigation.source_? (Place.location_? (?= \" 61 Richmond Avenue \"))) (Navigation.destination_? (Place.location_? (?= \" 54 Islington Park Road \"))))))", "idx": "20033", "datum_id": {"dialogue_id": "1c076fcc-e3c9-4eb2-8184-34de67719fa3", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , how much is Empirica ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.priceRange_? (^(PriceRange) always)) :object (Restaurant.restaurantName_? (?= \" Empirica \"))))", "idx": "20039", "datum_id": {"dialogue_id": "8a7afdbf-1c01-4407-bb1e-06e8241043e4", "turn_index": 0}}
{"user_turn_0": "Hey , how long will it take to get to 100 Upper Street by bike ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 20", "user_turn_1": "How can I get there from Tumacacori Rectory Road to Camden passage by bus ?", "tgt": "(plan (^(Navigation) Find :object (& (& (Navigation.source_? (Place.location_? (?= \" Tumacacori Rectory Road \"))) (Navigation.destination_? (Place.location_? (?= \" Camden Passage \")))) (Navigation.transportationMode_? (?= (TransportationMode.PublicTransportation))))))", "idx": "20045", "datum_id": {"dialogue_id": "2d77aba5-2b43-4a83-917a-d277b904aced", "turn_index": 1}}
{"user_turn_0": "I prefer a restaurant with onsite parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kitty City", "user_turn_1": "Okay book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Inheat \"))))))", "idx": "20055", "datum_id": {"dialogue_id": "017edbe8-579f-4b93-9af7-ba6eb600e171", "turn_index": 5}}
{"user_turn_0": "Hi my assistant , can you book me a restaurant in Paddington at 4", "agent_turn_0": "Root system prompt restaurant book object equals foodType", "user_turn_1": "Give me something expensive", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.foodType_? (?= (FoodType.Any)))) (Restaurant.priceRange_? (?= (PriceRange.High)))))))", "idx": "20060", "datum_id": {"dialogue_id": "eb2701e7-f352-4390-92d9-7756a933101b", "turn_index": 1}}
{"user_turn_0": "Give me something expensive", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Emptia", "user_turn_1": "How much is it", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "20061", "datum_id": {"dialogue_id": "eb2701e7-f352-4390-92d9-7756a933101b", "turn_index": 2}}
{"user_turn_0": "Which ones are rated higher than zero stars ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Stazione restaurant", "user_turn_1": "How much is that one ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "20063", "datum_id": {"dialogue_id": "eb2701e7-f352-4390-92d9-7756a933101b", "turn_index": 4}}
{"user_turn_0": "How much is that one ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 63", "user_turn_1": "Ok book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Emptia \"))))))", "idx": "20064", "datum_id": {"dialogue_id": "eb2701e7-f352-4390-92d9-7756a933101b", "turn_index": 5}}
{"user_turn_0": "I would rather have a different hotel with a three star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Ballyfin price equals 178", "user_turn_1": "Does the hotel provide free wifi ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasWifi_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "20077", "datum_id": {"dialogue_id": "9719aed8-db43-4dbf-a4ef-8c70655c585d", "turn_index": 4}}
{"user_turn_0": "Does the hotel provide free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "20078", "datum_id": {"dialogue_id": "9719aed8-db43-4dbf-a4ef-8c70655c585d", "turn_index": 5}}
{"user_turn_0": "Yes book it", "agent_turn_0": "Root system inform hotel book Completed", "user_turn_1": "Make a calendar event on February 35 at 2 and set a reminder", "tgt": "(plan (do (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (& (Date.month_? (?= (February))) (Date.day_? (?= (Day.apply 25L))))) (DateTime.time_? (Time.hour_? (?= (Hour.apply 2L)))))))) (^(Reminder) Create :object (Reminder.reminderContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))))))", "idx": "20101", "datum_id": {"dialogue_id": "4454a6d8-40d1-4b3a-b0d6-06fa3ad897e9", "turn_index": 2}}
{"user_turn_0": "it will be over in two hours", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "Thanks , next set an event called Scholar \u2019s Conference from 2 - 3pm", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))) (DateTimeRange.duration_? (AppleDuration.hour_? (?= 1))))) (CalendarEvent.eventName_? (?= \" Scholar's Conference \")))))", "idx": "20103", "datum_id": {"dialogue_id": "4454a6d8-40d1-4b3a-b0d6-06fa3ad897e9", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , book a train to Manchester Piccadilly from Edinburgh Waverly .", "tgt": "(plan (^(Train) Book :object (& (Train.source_? (Place.location_? (?= \" Edinburgh Waverley \"))) (Train.destination_? (Place.location_? (?= \" Manchester Piccadilly \"))))))", "idx": "20104", "datum_id": {"dialogue_id": "c35c6e3d-292e-4ea5-8664-a98f19d16e68", "turn_index": 0}}
{"user_turn_0": "I want a different hotel with a 3 star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Grand Hyatt price equals 166", "user_turn_1": "Does it have laundry service ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.laundry_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "20141", "datum_id": {"dialogue_id": "2d9feba4-6173-4a1b-af67-eae203931cad", "turn_index": 5}}
{"user_turn_0": "Does it have laundry service ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Harborview \"))))))", "idx": "20142", "datum_id": {"dialogue_id": "2d9feba4-6173-4a1b-af67-eae203931cad", "turn_index": 6}}
{"user_turn_0": "Does the hotel come with a private bathroom ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "20159", "datum_id": {"dialogue_id": "603f826e-a815-4b93-9aee-888f6f99a835", "turn_index": 2}}
{"user_turn_0": "And what class is it ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "Perfect . Let 's book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "20171", "datum_id": {"dialogue_id": "36bbbbd7-3239-4e93-8a0b-4d2e9c7afd67", "turn_index": 3}}
{"user_turn_0": "Book me a double room", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "I 'll check in today for two points", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.duration_? (AppleDuration.day_? (?= 2)))))))))", "idx": "20175", "datum_id": {"dialogue_id": "4dd57b2f-7ffc-466f-a7cc-7db183289ca4", "turn_index": 2}}
{"user_turn_0": "I need two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does it support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "20178", "datum_id": {"dialogue_id": "4dd57b2f-7ffc-466f-a7cc-7db183289ca4", "turn_index": 5}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM price equals 125", "user_turn_1": "That one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "20211", "datum_id": {"dialogue_id": "ac12b61b-2f38-4ce1-a053-781ef9cecaa9", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , please book a restaurant in Hillingdon for 4:30 PM . The restaurant should have have a car park and be at an average price .", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Hillingdon \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))) (Restaurant.priceRange_? (?= (PriceRange.Moderate)))) (Restaurant.hasParking_? (?= true)))))", "idx": "20223", "datum_id": {"dialogue_id": "d650b4a5-f055-4c8a-9d3d-740f9eca17c5", "turn_index": 0}}
{"user_turn_0": "Well , I 'd prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dimple\u2019s", "user_turn_1": "Do they take credit cards", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "20229", "datum_id": {"dialogue_id": "d650b4a5-f055-4c8a-9d3d-740f9eca17c5", "turn_index": 6}}
{"user_turn_0": "Do they take credit cards", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Awesome . Please book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Emptia \"))))))", "idx": "20230", "datum_id": {"dialogue_id": "d650b4a5-f055-4c8a-9d3d-740f9eca17c5", "turn_index": 7}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "Next , can you get me a room at a hotel in Oakwood ? Nothing expensive", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= \" Oakwood \")) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))))))", "idx": "20245", "datum_id": {"dialogue_id": "5504b7bd-eb8a-4e12-a3e5-56c6ed26b919", "turn_index": 2}}
{"user_turn_0": "That looks fine", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM", "user_turn_1": "It looks fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "20250", "datum_id": {"dialogue_id": "1a0295dc-0687-4d6a-964a-dec5ffba0fca", "turn_index": 2}}
{"user_turn_0": "It will last for 45 minutes", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Ok , send this event to Mr Thompson", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Thomson \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "20267", "datum_id": {"dialogue_id": "bc7c4226-4cff-4f94-ade3-1207ae99266e", "turn_index": 4}}
{"user_turn_0": "Find me another hotel with a price that 's moderate", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Ballyfin price equals 138", "user_turn_1": "Tell me how to get there", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "20271", "datum_id": {"dialogue_id": "495e145c-9278-4c60-9d31-549d598d7ad7", "turn_index": 3}}
{"user_turn_0": "Tell me how to get there", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Go ahead and book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Westin \"))))))", "idx": "20272", "datum_id": {"dialogue_id": "495e145c-9278-4c60-9d31-549d598d7ad7", "turn_index": 4}}
{"user_turn_0": "Can I get two rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait up , can you make the check in date be on the 11th instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 11L))))))", "idx": "20277", "datum_id": {"dialogue_id": "495e145c-9278-4c60-9d31-549d598d7ad7", "turn_index": 9}}
{"user_turn_0": "Wait up , can you make the check in date be on the 11th instead ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is free cancellation part of the booking ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "20278", "datum_id": {"dialogue_id": "495e145c-9278-4c60-9d31-549d598d7ad7", "turn_index": 10}}
{"user_turn_0": "Give me a different hotel that does n't have a high price range", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Bourbon Bliss price equals 178", "user_turn_1": "Does the cost include breakfast ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "20284", "datum_id": {"dialogue_id": "71559278-6ca1-4668-812a-52077d2f718a", "turn_index": 4}}
{"user_turn_0": "Does the cost include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" The Watson \"))))))", "idx": "20285", "datum_id": {"dialogue_id": "71559278-6ca1-4668-812a-52077d2f718a", "turn_index": 5}}
{"user_turn_0": "Tell me my options", "agent_turn_0": "Root system inform hotel find focus equals roomType equals listElementOne Double listElementTwo Single listElementThree King listElementFour Queen", "user_turn_1": "I need a queen sized bed", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.roomType_? (List.exists_? (?= (RoomType.Queen))))))))", "idx": "20288", "datum_id": {"dialogue_id": "71559278-6ca1-4668-812a-52077d2f718a", "turn_index": 8}}
{"user_turn_0": "I need 3 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Switch the check out date to Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Saturday))))))", "idx": "20290", "datum_id": {"dialogue_id": "71559278-6ca1-4668-812a-52077d2f718a", "turn_index": 10}}
{"user_turn_0": "What 's their address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals Upper Tything", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Juniper Cloud \"))))))", "idx": "20295", "datum_id": {"dialogue_id": "bb6dec05-1971-4ebc-806f-967bc50a3607", "turn_index": 3}}
{"user_turn_0": "At 5:30 PM", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Ok , change it to today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Today)))))", "idx": "20297", "datum_id": {"dialogue_id": "bb6dec05-1971-4ebc-806f-967bc50a3607", "turn_index": 5}}
{"user_turn_0": "From Exeter", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM", "user_turn_1": "That will be good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (^((Constraint Train)) refer)))))", "idx": "20317", "datum_id": {"dialogue_id": "9fd82329-a163-4945-bf28-3f7c1a6ad5a0", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , need to know how long it takes to get from the body shop in upper Street 21 Islington green", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (& (Navigation.source_? (Place.location_? (?= \" The Body Shop in Upper Street \"))) (Navigation.destination_? (Place.location_? (?= \" 1 Islington Green \"))))))", "idx": "20325", "datum_id": {"dialogue_id": "ed04b513-330a-4d3a-86d3-a75d822576ef", "turn_index": 0}}
{"user_turn_0": "Next , book a hotel with at least one star", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "It will be in ealing and inexpensive", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.location_? (?= \" Ealing \"))) (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "20327", "datum_id": {"dialogue_id": "ed04b513-330a-4d3a-86d3-a75d822576ef", "turn_index": 2}}
{"user_turn_0": "Do they have breakfast included", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "20329", "datum_id": {"dialogue_id": "ed04b513-330a-4d3a-86d3-a75d822576ef", "turn_index": 4}}
{"user_turn_0": "Go ahead and book it", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "The 12th to 15 November", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 12L))))) (DateTimeRange.endDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 15L)))) (month_? (Date.month_? (?= (November))))))))))))", "idx": "20330", "datum_id": {"dialogue_id": "ed04b513-330a-4d3a-86d3-a75d822576ef", "turn_index": 5}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Can you tell me if Emma called me ?", "tgt": "(plan (^(PhoneCall) CheckExistence :object (& (PhoneCall.answerStatus_? (?= (AnswerStatus.CallMissed))) (PhoneCall.sender_? (Contact.person_? (Person.name_? (?= \" Emma \")))))))", "idx": "20337", "datum_id": {"dialogue_id": "fb47b42e-7f33-418e-82bb-547282e428f9", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , what 's the rating of Liverpool Street The Fresco hotel", "tgt": "(plan (^(Hotel) Find :focus (Hotel.rating_? (^(Number) always)) :object (& (Hotel.hotelName_? (?= \" The Fresco \")) (Hotel.location_? (?= \" Liverpool Street \")))))", "idx": "20339", "datum_id": {"dialogue_id": "9e47eba0-eddb-490c-aba3-f4e77f4b9965", "turn_index": 0}}
{"user_turn_0": "Hi there , what 's the rating of Liverpool Street The Fresco hotel", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Please book that for me . I 'd like a queen - sized bed", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.hotelName_? (?= \" The Fresco \")) (Hotel.roomType_? (List.exists_? (?= (RoomType.Queen)))))))", "idx": "20340", "datum_id": {"dialogue_id": "9e47eba0-eddb-490c-aba3-f4e77f4b9965", "turn_index": 1}}
{"user_turn_0": "Does the hotel have a car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "20347", "datum_id": {"dialogue_id": "19a10e72-f596-4c2b-a75f-3529528b9088", "turn_index": 3}}
{"user_turn_0": "I need three rooms and the type does n't matter", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "I would like to change my check in date to tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Tomorrow)))))", "idx": "20351", "datum_id": {"dialogue_id": "19a10e72-f596-4c2b-a75f-3529528b9088", "turn_index": 7}}
{"user_turn_0": "I would like to change my check in date to tomorrow", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "20352", "datum_id": {"dialogue_id": "19a10e72-f596-4c2b-a75f-3529528b9088", "turn_index": 8}}
{"user_turn_0": "Is this a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "I want the 2:50 PM flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "20368", "datum_id": {"dialogue_id": "2fea0fe5-f122-42ec-8a4e-8c36035c4cbf", "turn_index": 4}}
{"user_turn_0": "Hey , i 'd like to book a train from Norwich to Glasgow central please", "agent_turn_0": "Root system prompt train book object equals departureDateTime", "user_turn_1": "Tomorrow please . And make sure I return by at least 9:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& (& x0 (Train.departureDateTime_? (DateTime.date_? (?= (Tomorrow))))) (Train.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (& (Time.hour_? (?= (Hour.apply 9L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "20381", "datum_id": {"dialogue_id": "2c02d5c0-be15-4574-9702-53ab18179727", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , book me from East Croydon to Liverpool Central", "tgt": "(plan (^(Flight) Book :object (& (Flight.destination_? (Place.location_? (?= \" Belfast City \"))) (Flight.passengers_? (?= 3)))))", "idx": "20396", "datum_id": {"dialogue_id": "b693dbfa-89cd-4ae4-b423-2c6e994a1eb4", "turn_index": 0}}
{"user_turn_0": "Yeah that 's right", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM price equals 160", "user_turn_1": "I 'd rather have the one that leaves at 3:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "20399", "datum_id": {"dialogue_id": "b693dbfa-89cd-4ae4-b423-2c6e994a1eb4", "turn_index": 3}}
{"user_turn_0": "Can you actually make a change to the departure day of my second trip to be on Thursday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 3 object equals nextDepartureDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM price equals 134", "user_turn_1": "This looks great to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "20404", "datum_id": {"dialogue_id": "b693dbfa-89cd-4ae4-b423-2c6e994a1eb4", "turn_index": 8}}
{"user_turn_0": "Hello , tell me when flight BA350 is scheduled to arrive .", "agent_turn_0": "Root system inform flight find focus equals arrivalDateTime equals time equals hour equals 5 minute equals 30 meridiem equals PM", "user_turn_1": "I need to see a message sent to 07805624777", "tgt": "(plan (^(Message) Find :object (Message.recipients_? (Contact.phoneNumber_? (?= \" 07805624777 \")))))", "idx": "20407", "datum_id": {"dialogue_id": "a8d789d6-8fed-473e-ac84-b26b89a26f86", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , one star .", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.rating_? (^(Number) always)) :object (& (Restaurant.restaurantName_? (?= \" Goat and Guru \")) (Restaurant.location_? (?= \" Canary Wharf \")))))", "idx": "20418", "datum_id": {"dialogue_id": "016133ad-0771-42cc-b197-591c151ff536", "turn_index": 0}}
{"user_turn_0": "Hi there , one star .", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 1", "user_turn_1": "For when and for how many people would you like to book the restaurant ?", "tgt": "(plan (^(Restaurant) Book :object (Restaurant.restaurantName_? (?= \" Goat and Guru \"))))", "idx": "20419", "datum_id": {"dialogue_id": "016133ad-0771-42cc-b197-591c151ff536", "turn_index": 1}}
{"user_turn_0": "I 'm leaving from Birmingham", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 2 meridiem equals PM price equals 125", "user_turn_1": "I prefer the one leaving at 1:45 PM and I 'd like economy class please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast \"))) (Flight.arrivalDateTime_? (^((Constraint DateTime)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "20427", "datum_id": {"dialogue_id": "d7d5e70b-c09a-4cf6-b81c-84d3ce75a1c0", "turn_index": 3}}
{"user_turn_0": "Yes , returning Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM price equals 145", "user_turn_1": "I like that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "20430", "datum_id": {"dialogue_id": "d7d5e70b-c09a-4cf6-b81c-84d3ce75a1c0", "turn_index": 6}}
{"user_turn_0": "Create a reminder at 3 PM to get my dry cleanings", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Thanks , next pleas send a message that says how are you to 07871174602", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.phoneNumber_? (?= \" 07871174602 \"))) (Message.textContent_? (?= \" how are you \")))))", "idx": "20462", "datum_id": {"dialogue_id": "9640b69c-e738-4ee6-971d-0e55474d42f7", "turn_index": 4}}
{"user_turn_0": "I leave Monday", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM price equals 210", "user_turn_1": "Okay , book it for one person", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.class_? (?= (FlightClass.Economy))) (Flight.source_? (Place.location_? (?= \" London \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 1))))))", "idx": "20472", "datum_id": {"dialogue_id": "9eeac222-3423-40bf-9a67-0ec359706a50", "turn_index": 2}}
{"user_turn_0": "I will return on the 17th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 4 meridiem equals PM price equals 142", "user_turn_1": "Okay , that one is fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "20476", "datum_id": {"dialogue_id": "9eeac222-3423-40bf-9a67-0ec359706a50", "turn_index": 6}}
{"user_turn_0": "What rating does it have ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "20481", "datum_id": {"dialogue_id": "92767e32-ea4e-44ab-a6f6-783ed4cf8a1a", "turn_index": 3}}
{"user_turn_0": "Book two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is a cancellation free of charge ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "20484", "datum_id": {"dialogue_id": "92767e32-ea4e-44ab-a6f6-783ed4cf8a1a", "turn_index": 6}}
{"user_turn_0": "Is there a car park in the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "20493", "datum_id": {"dialogue_id": "d01825b3-ec46-4cc4-b294-69978f3ee0ba", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , can you send my next event to 07015347473 .", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))) (Message.recipients_? (Contact.phoneNumber_? (?= \" 07015347473 \"))))))", "idx": "20528", "datum_id": {"dialogue_id": "3899f3fb-2110-4f7f-8a5c-28fbc2ae11df", "turn_index": 0}}
{"user_turn_0": "Yes , go ahead", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Can you send the Saturday event to Wendy please ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (& (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Wendy \")))) (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday)))))))))))))", "idx": "20530", "datum_id": {"dialogue_id": "3899f3fb-2110-4f7f-8a5c-28fbc2ae11df", "turn_index": 2}}
{"user_turn_0": "Glasgow", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 40 meridiem equals PM", "user_turn_1": "That 's good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (^((Constraint Train)) refer)))))", "idx": "20553", "datum_id": {"dialogue_id": "34d7cc88-9227-418e-a0cd-fbe23da34593", "turn_index": 3}}
{"user_turn_0": "Curious which have Spanish cuisine", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floss and Joes", "user_turn_1": "Is there outdoor seating at the restaurant ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "20571", "datum_id": {"dialogue_id": "bb83ae07-c466-446d-8f79-7a25bf2e4d66", "turn_index": 3}}
{"user_turn_0": "I want a different restaurant that has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals La Zilla", "user_turn_1": "Where are they located ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "20573", "datum_id": {"dialogue_id": "bb83ae07-c466-446d-8f79-7a25bf2e4d66", "turn_index": 5}}
{"user_turn_0": "I 'd rather a different restaurant that has outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Chipotle Grill", "user_turn_1": "That works , make a reservation for 11:30 AM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Floq \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM)))))))))))", "idx": "20575", "datum_id": {"dialogue_id": "bb83ae07-c466-446d-8f79-7a25bf2e4d66", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , what is the Triton hotel", "tgt": "(plan (^(Hotel) Find :focus (Hotel.rating_? (^(Number) always)) :object (Hotel.hotelName_? (?= \" Triton \"))))", "idx": "20578", "datum_id": {"dialogue_id": "2fe29aa1-6cfe-4909-a281-6ade20d77cbf", "turn_index": 0}}
{"user_turn_0": "Give me three queen sized bed rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there a free cancelation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "20581", "datum_id": {"dialogue_id": "2fe29aa1-6cfe-4909-a281-6ade20d77cbf", "turn_index": 3}}
{"user_turn_0": "I rather have another hotel with four star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals The Blackstone price equals 134", "user_turn_1": "Give me the rating", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.rating_? (^(Number) always)))))", "idx": "20587", "datum_id": {"dialogue_id": "a8a6b823-61b0-4331-b32e-b1f9cdd47efc", "turn_index": 4}}
{"user_turn_0": "Give me the rating", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Ace Hotel \"))))))", "idx": "20588", "datum_id": {"dialogue_id": "a8a6b823-61b0-4331-b32e-b1f9cdd47efc", "turn_index": 5}}
{"user_turn_0": "I do nt care just make sure it has wifi", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Update the check in date to Tuesday then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.startDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Tuesday)))))", "idx": "20592", "datum_id": {"dialogue_id": "a8a6b823-61b0-4331-b32e-b1f9cdd47efc", "turn_index": 9}}
{"user_turn_0": "I want one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they allow free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "20594", "datum_id": {"dialogue_id": "a8a6b823-61b0-4331-b32e-b1f9cdd47efc", "turn_index": 11}}
{"user_turn_0": "Hmm . I 'd like a different restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floq", "user_turn_1": "What does it cost per person ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "20600", "datum_id": {"dialogue_id": "8c59a1f3-508a-4122-85cf-ff9ce5b4d1f6", "turn_index": 4}}
{"user_turn_0": "Which ones do n't have a rating of zero stars ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dim Summit", "user_turn_1": "Do they have parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "20602", "datum_id": {"dialogue_id": "8c59a1f3-508a-4122-85cf-ff9ce5b4d1f6", "turn_index": 6}}
{"user_turn_0": "Do they have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Cool . Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Lakeside Demon \"))))))", "idx": "20603", "datum_id": {"dialogue_id": "8c59a1f3-508a-4122-85cf-ff9ce5b4d1f6", "turn_index": 7}}
{"user_turn_0": "Hello assistant , let me know how to get to Haywood Way by bus .", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Can you book me a taxi ?", "tgt": "(plan (^(Taxi) Book))", "idx": "20607", "datum_id": {"dialogue_id": "fe7ba423-1436-4d9f-b1bd-2052daabc9d9", "turn_index": 1}}
{"user_turn_0": "I think an MPV would be good", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals 76 Windsor Road", "user_turn_1": "Can you change my destination to be at 61 Hill Street instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" 61 Hill Street \"))))", "idx": "20610", "datum_id": {"dialogue_id": "fe7ba423-1436-4d9f-b1bd-2052daabc9d9", "turn_index": 4}}
{"user_turn_0": "Let 's try to get something with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Maple", "user_turn_1": "Do they have outdoor seating ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "20619", "datum_id": {"dialogue_id": "68f5db42-a319-48e1-901a-7130aeba3759", "turn_index": 6}}
{"user_turn_0": "Do they have outdoor seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "Sounds good . Make that reservation for the 18th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Kiwi Sea \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 18L))))))))))", "idx": "20620", "datum_id": {"dialogue_id": "68f5db42-a319-48e1-901a-7130aeba3759", "turn_index": 7}}
{"user_turn_0": "I would like to see another option with at least a three star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals The Hot Springs price equals 156", "user_turn_1": "Is there parking available here ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasParking_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "20677", "datum_id": {"dialogue_id": "94681057-e9ec-4492-80dc-f119665df737", "turn_index": 3}}
{"user_turn_0": "Is there parking available here ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Dreamy Desert Suites \"))))))", "idx": "20678", "datum_id": {"dialogue_id": "94681057-e9ec-4492-80dc-f119665df737", "turn_index": 4}}
{"user_turn_0": "Book it for me please", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "It will be from May 18th to the 21st", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 18L))))) (DateTimeRange.endDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 21L)))) (month_? (Date.month_? (?= (May))))))))))))", "idx": "20679", "datum_id": {"dialogue_id": "94681057-e9ec-4492-80dc-f119665df737", "turn_index": 5}}
{"user_turn_0": "Of course I do", "agent_turn_0": "Root system inform message delete Completed", "user_turn_1": "Thanks so much . I would like to book a restaurant on the 23rd with American Food in North wick Park", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.location_? (?= \" Northwick Park \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 23L))))))) (Restaurant.foodType_? (?= (FoodType.American))))))", "idx": "20683", "datum_id": {"dialogue_id": "4f01c813-076b-4c67-8116-09ca0b0e6e65", "turn_index": 2}}
{"user_turn_0": "Never mind , I prefer another hotel with at least two stars rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Candlewood Suites price equals 155", "user_turn_1": "What 's the rating ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.rating_? (^(Number) always)))))", "idx": "20690", "datum_id": {"dialogue_id": "f1526c20-9977-4aab-a86d-cc32d7c7a300", "turn_index": 4}}
{"user_turn_0": "What 's the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" The Blackstone \"))))))", "idx": "20691", "datum_id": {"dialogue_id": "f1526c20-9977-4aab-a86d-cc32d7c7a300", "turn_index": 5}}
{"user_turn_0": "I need 3 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually can you change the check out date to Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "20694", "datum_id": {"dialogue_id": "f1526c20-9977-4aab-a86d-cc32d7c7a300", "turn_index": 8}}
{"user_turn_0": "Actually can you change the check out date to Sunday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking support free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "20695", "datum_id": {"dialogue_id": "f1526c20-9977-4aab-a86d-cc32d7c7a300", "turn_index": 9}}
{"user_turn_0": "How do I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Palm Bliss \"))))))", "idx": "20701", "datum_id": {"dialogue_id": "12aa1c84-2e0b-43e1-8bb5-145093180c85", "turn_index": 4}}
{"user_turn_0": "Book it", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "I 'm checking in on October 14th and checking out on October 16th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 14L))))) (DateTimeRange.endDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 16L)))) (month_? (Date.month_? (?= (October))))))))))))", "idx": "20702", "datum_id": {"dialogue_id": "12aa1c84-2e0b-43e1-8bb5-145093180c85", "turn_index": 5}}
{"user_turn_0": "I 'd like two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Would I be able to cancel for free ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "20704", "datum_id": {"dialogue_id": "12aa1c84-2e0b-43e1-8bb5-145093180c85", "turn_index": 7}}
{"user_turn_0": "I 'd like to check in on Monday instead", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "I 'd like to check in on Monday instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "20706", "datum_id": {"dialogue_id": "12aa1c84-2e0b-43e1-8bb5-145093180c85", "turn_index": 9}}
{"user_turn_0": "Which of these restaurants are rated at five stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Gogol", "user_turn_1": "What is the average cost per person there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "20712", "datum_id": {"dialogue_id": "2082ad5b-73dd-45bc-b692-2ae9e9b88ccf", "turn_index": 4}}
{"user_turn_0": "I would rather go to another restaurant that has outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floss and Joes", "user_turn_1": "What is their address ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "20714", "datum_id": {"dialogue_id": "2082ad5b-73dd-45bc-b692-2ae9e9b88ccf", "turn_index": 6}}
{"user_turn_0": "What is their address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals Upper Tything", "user_turn_1": "Make my reservation there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Stazione restaurant \"))))))", "idx": "20715", "datum_id": {"dialogue_id": "2082ad5b-73dd-45bc-b692-2ae9e9b88ccf", "turn_index": 7}}
{"user_turn_0": "I will be departing from Brighton station", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 meridiem equals PM", "user_turn_1": "Looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "20721", "datum_id": {"dialogue_id": "411b3024-0cbb-496e-9d18-84d6422bec48", "turn_index": 2}}
{"user_turn_0": "I will be returning on Thursday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM", "user_turn_1": "Sounds good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (^((Constraint Hour)) refer)) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "20723", "datum_id": {"dialogue_id": "411b3024-0cbb-496e-9d18-84d6422bec48", "turn_index": 4}}
{"user_turn_0": "Hello , can you get me a business class flight for today to Glasgow ? I need to leave before 7 PM .", "agent_turn_0": "Root system prompt flight book object equals source inform flight find object equals source equals location equals Birmingham", "user_turn_1": "No . Heathrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.source_? (Place.location_? (?= \" London Heathrow \")))))))", "idx": "20746", "datum_id": {"dialogue_id": "817b86cc-6fea-4f49-9c43-8f0701daa528", "turn_index": 1}}
{"user_turn_0": "I would like a place that is highly priced", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floss and Joes", "user_turn_1": "Does that place take credit card ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "20753", "datum_id": {"dialogue_id": "366d2049-4864-4681-ab71-555e652de728", "turn_index": 3}}
{"user_turn_0": "I would like another restaurant that offers outdoor eating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capers", "user_turn_1": "Tell me the address of that place", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "20755", "datum_id": {"dialogue_id": "366d2049-4864-4681-ab71-555e652de728", "turn_index": 5}}
{"user_turn_0": "Tell me the address of that place", "agent_turn_0": "Root system inform restaurant find focus equals address equals 21 Parkfield Street", "user_turn_1": "Sounds good . Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Floss and Joes \"))))))", "idx": "20756", "datum_id": {"dialogue_id": "366d2049-4864-4681-ab71-555e652de728", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , can you put an event on my calendar for 5:30 and send the details to a friend ?", "tgt": "(plan (do (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 5L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))) (^(Message) Create :object (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))))))", "idx": "20760", "datum_id": {"dialogue_id": "f11cb8e5-9047-4689-a132-b831b23c582e", "turn_index": 0}}
{"user_turn_0": "Something low price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Fairmont price equals 178", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "20768", "datum_id": {"dialogue_id": "1a58b3d5-ff5d-462f-a9b1-c883ae007cc5", "turn_index": 3}}
{"user_turn_0": "Three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "20773", "datum_id": {"dialogue_id": "1a58b3d5-ff5d-462f-a9b1-c883ae007cc5", "turn_index": 8}}
{"user_turn_0": "Do they have a car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "20779", "datum_id": {"dialogue_id": "567362ce-2736-4768-a4e0-5cd33fef6a3f", "turn_index": 4}}
{"user_turn_0": "I want three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait , update the check in date to Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "20782", "datum_id": {"dialogue_id": "567362ce-2736-4768-a4e0-5cd33fef6a3f", "turn_index": 7}}
{"user_turn_0": "Wait , update the check in date to Tuesday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "20783", "datum_id": {"dialogue_id": "567362ce-2736-4768-a4e0-5cd33fef6a3f", "turn_index": 8}}
{"user_turn_0": "On Saturday", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Book the Empirica restaurant on my behalf on the 9th at 10AM and add it to my calendar", "tgt": "(plan (do (^(Restaurant) Book :object (& (Restaurant.restaurantName_? (?= \" Empirica \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 9L))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (meridiem_? (?= (Meridiem.AM)))))))))) (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (?= (^(DateTimeRange Restaurant) reference (^(Restaurant) always)))))))", "idx": "20793", "datum_id": {"dialogue_id": "27769f94-80a5-4689-90f3-8204899cf01e", "turn_index": 3}}
{"user_turn_0": "Ok , which of these has a five star rating ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flew Z", "user_turn_1": "What kind of food does it serve ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.foodType_? (^(FoodType) always)))))", "idx": "20798", "datum_id": {"dialogue_id": "70211765-8d9e-45d7-ad37-7966f19c0420", "turn_index": 3}}
{"user_turn_0": "What kind of food does it serve ?", "agent_turn_0": "Root system inform restaurant find focus equals foodType equals Indian food", "user_turn_1": "Ok , book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Maple \"))))))", "idx": "20799", "datum_id": {"dialogue_id": "70211765-8d9e-45d7-ad37-7966f19c0420", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , i want to book a nice German restaurant .", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.priceRange_? (?= (PriceRange.High))) (Restaurant.foodType_? (?= (FoodType.German))))))", "idx": "20804", "datum_id": {"dialogue_id": "76fb4bba-7af4-4503-8262-44b98b3449e5", "turn_index": 0}}
{"user_turn_0": "which airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals British", "user_turn_1": "I prefer the one leaving at 1:20 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "20819", "datum_id": {"dialogue_id": "9b2b2c40-1058-426d-9eba-545afb03112f", "turn_index": 4}}
{"user_turn_0": "Next task , call 07984014665", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Call 07764716039", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint String)) Path.apply \" object.recipients.phoneNumber \") (lambda (^(Constraint String) x0) (?= \" 07764716039 \"))))", "idx": "20848", "datum_id": {"dialogue_id": "c071d1e6-5923-4214-9697-14440d0c6015", "turn_index": 3}}
{"user_turn_0": "I 'm leaving from Leeds", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM price equals 142", "user_turn_1": "That 's cool . I wanna book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "20863", "datum_id": {"dialogue_id": "7bee689f-74c8-42bb-9218-75f2b1176266", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant remind me of the time the forest tour is starting on the 10th .", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (^(DateTime) always))) :object (& (CalendarEvent.eventName_? (?= \" forest tour \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 10L)))))))))", "idx": "20871", "datum_id": {"dialogue_id": "f8efc125-81af-46fb-991c-0464cacd90d9", "turn_index": 0}}
{"user_turn_0": "No , I 'm going to Roma on Friday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 3 object equals nextDepartureDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM price equals 130", "user_turn_1": "Ok , sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "20907", "datum_id": {"dialogue_id": "66d8075d-94da-461d-8b4f-672ac24c59c5", "turn_index": 5}}
{"user_turn_0": "Hi assistant , book me a flight leaving May 12th from London to Belfast", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "20921", "datum_id": {"dialogue_id": "c81e1de5-7d77-4e85-b39f-7da945833ddd", "turn_index": 1}}
{"user_turn_0": "Tuesday", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM price equals 130", "user_turn_1": "Ok , book it for three people", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.source_? (Place.location_? (?= \" London \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 3))))))", "idx": "20922", "datum_id": {"dialogue_id": "c81e1de5-7d77-4e85-b39f-7da945833ddd", "turn_index": 2}}
{"user_turn_0": "What airline is it through ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "Okay , I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "20933", "datum_id": {"dialogue_id": "89ab86a2-2299-430e-8f20-0c5f547a931c", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , for the dates of July 13th to 15th , I need a hotel in Paddington that 's got parking .", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" Paddington \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 13L)))) (month_? (Date.month_? (?= (July)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 15L)))))))) (Hotel.hasParking_? (?= true)))))", "idx": "20939", "datum_id": {"dialogue_id": "93a950c9-9176-4f82-bf4b-c6ab6b17e4d9", "turn_index": 0}}
{"user_turn_0": "I 'd still rather have a three star hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Vitale price equals 166", "user_turn_1": "Is there free wifi there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "20942", "datum_id": {"dialogue_id": "93a950c9-9176-4f82-bf4b-c6ab6b17e4d9", "turn_index": 3}}
{"user_turn_0": "Is there free wifi there ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "I 'd still prefer a cheaper one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "20943", "datum_id": {"dialogue_id": "93a950c9-9176-4f82-bf4b-c6ab6b17e4d9", "turn_index": 4}}
{"user_turn_0": "I 'd still prefer a cheaper one", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Lucia price equals 156", "user_turn_1": "OK , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Chestnut Tree \"))))))", "idx": "20944", "datum_id": {"dialogue_id": "93a950c9-9176-4f82-bf4b-c6ab6b17e4d9", "turn_index": 5}}
{"user_turn_0": "I 'd like a pizza place with a high price range", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Goat and Guru", "user_turn_1": "Can you tell me the average cost per person", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "20964", "datum_id": {"dialogue_id": "578cdd9f-d6c9-4425-b5ea-529fdc0fb05c", "turn_index": 2}}
{"user_turn_0": "I 'd still prefer a different restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Bandits", "user_turn_1": "Tell me the average price per person", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "20966", "datum_id": {"dialogue_id": "578cdd9f-d6c9-4425-b5ea-529fdc0fb05c", "turn_index": 4}}
{"user_turn_0": "Tell me which of these restaurants have a three star rating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Bard\u2019s Bench", "user_turn_1": "Give me the average cost per person", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "20968", "datum_id": {"dialogue_id": "578cdd9f-d6c9-4425-b5ea-529fdc0fb05c", "turn_index": 6}}
{"user_turn_0": "I 'd still want a different restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Empirica", "user_turn_1": "Ok fine , book this for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Goat and Guru \"))))))", "idx": "20970", "datum_id": {"dialogue_id": "578cdd9f-d6c9-4425-b5ea-529fdc0fb05c", "turn_index": 8}}
{"user_turn_0": "Yes send it", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Do me another favor . Can you make me a hotel booking at a moderately priced place in Old Ford from the 14th to 15 March . I want a singe room", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" Old Ford \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 14L))))) (DateTimeRange.endDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 15L)))) (month_? (Date.month_? (?= (March))))))))) (Hotel.priceRange_? (?= (PriceRange.Moderate)))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Single)))))))", "idx": "20983", "datum_id": {"dialogue_id": "b2b54b08-c815-4107-a9c6-6d5a79c42396", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , please send a message that states let me know if you want to go .", "tgt": "(plan (^(Message) Create :object (Message.textContent_? (?= \" let me know if you want to go \"))))", "idx": "20995", "datum_id": {"dialogue_id": "12159cff-1af9-4360-b635-a9206e6bf07a", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , do you know how long it takes to get to Book Trials on my calendar ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.eventName_? (?= \" Book Trials \")))))))", "idx": "21000", "datum_id": {"dialogue_id": "45614d67-4085-4601-a2c4-3b66b75e630a", "turn_index": 0}}
{"user_turn_0": "It is 4", "agent_turn_0": "Root system offer restaurant book inform calendarEvent find Conflicted", "user_turn_1": "No can you update the reservation time to 6:30 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (?= (Minute.apply 30L)))))))", "idx": "21016", "datum_id": {"dialogue_id": "9ae4069c-bb20-453b-9c83-9fd73b5f3c23", "turn_index": 3}}
{"user_turn_0": "I want a different one with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dingo", "user_turn_1": "Does it have parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "21022", "datum_id": {"dialogue_id": "317e6d13-b33a-4b72-b316-9299a4589eaa", "turn_index": 4}}
{"user_turn_0": "Does it have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Ok , book it for Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Jurassic Pork \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday))))))))))", "idx": "21023", "datum_id": {"dialogue_id": "317e6d13-b33a-4b72-b316-9299a4589eaa", "turn_index": 5}}
{"user_turn_0": "Which airline is that ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals EasyJet", "user_turn_1": "Get me the one at 4:50 pm", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "21031", "datum_id": {"dialogue_id": "278c76e7-ff87-47a6-86f3-a31d66f9eb8b", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i need a train ticket from Paddington , departing some time after 8:30 in the morning", "tgt": "(plan (^(Train) Book :object (& (Train.destination_? (Place.location_? (?= \" Paddington \"))) (Train.departureDateTime_? (DateTime.time_? (?>= (someSalient (& (& (Time.hour_? (?= (Hour.apply 8L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM)))))))))))", "idx": "21041", "datum_id": {"dialogue_id": "f4562bdd-ecf6-470d-a81f-d5a9aa0d06dd", "turn_index": 0}}
{"user_turn_0": "From Aberdeen", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM", "user_turn_1": "That sounds good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "21043", "datum_id": {"dialogue_id": "f4562bdd-ecf6-470d-a81f-d5a9aa0d06dd", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , book a hotel with a five - star rating that is inexpensive .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?= (PriceRange.Low))) (Hotel.rating_? (?= 5)))))", "idx": "21046", "datum_id": {"dialogue_id": "9d1b87ad-4ac3-4a49-beb2-1fbe0e6e4b84", "turn_index": 0}}
{"user_turn_0": "Does it have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Okay , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "21049", "datum_id": {"dialogue_id": "9d1b87ad-4ac3-4a49-beb2-1fbe0e6e4b84", "turn_index": 3}}
{"user_turn_0": "Which restaurants serve pizza", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floq", "user_turn_1": "OK , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Juniper Cloud \"))))))", "idx": "21058", "datum_id": {"dialogue_id": "a3760183-fc89-4b5f-bfe3-408cd0ce2c17", "turn_index": 4}}
{"user_turn_0": "London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 4 meridiem equals PM price equals 199", "user_turn_1": "Okay , book this flight for one passenger", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Brussel \"))) (Flight.airLine_? (?= \" Eastern \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (^((Constraint (List DateTime))) refer)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 1))))))", "idx": "21065", "datum_id": {"dialogue_id": "f85d066a-97a3-4d52-81de-f631ec470c1f", "turn_index": 3}}
{"user_turn_0": "I 'm coming back Saturday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "21072", "datum_id": {"dialogue_id": "34d91071-89f1-418c-8c76-0937efc97d03", "turn_index": 5}}
{"user_turn_0": "Are there private bathrooms at the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "21078", "datum_id": {"dialogue_id": "b7851a1d-9fa5-420b-97dd-812ad8cf9f4f", "turn_index": 4}}
{"user_turn_0": "Book it", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "August 18th until the 22nd", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 18L)))) (month_? (Date.month_? (?= (August)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 22L)))))))))))", "idx": "21079", "datum_id": {"dialogue_id": "b7851a1d-9fa5-420b-97dd-812ad8cf9f4f", "turn_index": 5}}
{"user_turn_0": "I need one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "I want to switch my check out date to Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Thursday))))))", "idx": "21081", "datum_id": {"dialogue_id": "b7851a1d-9fa5-420b-97dd-812ad8cf9f4f", "turn_index": 7}}
{"user_turn_0": "Is that a nonstop flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "I 'd rather take the 4:30 PM departure", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "21085", "datum_id": {"dialogue_id": "8a123aa0-bc31-40ce-8176-e70750ef7acb", "turn_index": 2}}
{"user_turn_0": "I actually will be leaving from Sheffield", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM", "user_turn_1": "Looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "21095", "datum_id": {"dialogue_id": "649e5bc5-584a-4fed-856e-36e5a15dacaf", "turn_index": 2}}
{"user_turn_0": "I 'd like to return Friday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 meridiem equals PM", "user_turn_1": "That 's perfect", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "21108", "datum_id": {"dialogue_id": "929dcbba-36de-4185-92dc-64a8d404b0ab", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , I need you to send my May 8th train schedule over to Gabrielle .", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Gabrielle \")))) (Message.textContent_? (?= (^(String Train) reference (Train.departureDateTime_? (DateTime.date_? (& (Date.month_? (?= (May))) (Date.day_? (?= (Day.apply 8L))))))))))))", "idx": "21118", "datum_id": {"dialogue_id": "6704e163-647d-484b-988d-08ee74e44e24", "turn_index": 0}}
{"user_turn_0": "Yes , please", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "And how far is the scheduled basketball game venue ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (Navigation.destination_? (?= (^(Place CalendarEvent) reference (& (CalendarEvent.eventName_? (?= \" basketball game \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))))))))))", "idx": "21121", "datum_id": {"dialogue_id": "6704e163-647d-484b-988d-08ee74e44e24", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i need a calendar event reminder created please .", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (^(CalendarEvent) always))))))", "idx": "21123", "datum_id": {"dialogue_id": "5621ff83-4b11-4a95-9d27-f048af859f37", "turn_index": 0}}
{"user_turn_0": "Hello assistant , i need a calendar event reminder created please .", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "I need another reminder set for this afternoon please", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object.atDateTime \") (lambda (^(Constraint CalendarEvent) x0) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Afternoon))))))))", "idx": "21124", "datum_id": {"dialogue_id": "5621ff83-4b11-4a95-9d27-f048af859f37", "turn_index": 1}}
{"user_turn_0": "How do I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "21132", "datum_id": {"dialogue_id": "c7d83146-c644-480b-ba9b-3488ec83cb8b", "turn_index": 4}}
{"user_turn_0": "I need three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "I actually would like to make the check out date Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Friday)))))", "idx": "21136", "datum_id": {"dialogue_id": "c7d83146-c644-480b-ba9b-3488ec83cb8b", "turn_index": 8}}
{"user_turn_0": "I actually would like to make the check out date Friday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel for free ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "21137", "datum_id": {"dialogue_id": "c7d83146-c644-480b-ba9b-3488ec83cb8b", "turn_index": 9}}
{"user_turn_0": "I would rather go to one that has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "What 's the address there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "21144", "datum_id": {"dialogue_id": "f6fb6ee7-c823-4736-9453-2e02d2c4cb07", "turn_index": 5}}
{"user_turn_0": "What 's the address there ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 9028 Woodsman Lane", "user_turn_1": "Okay , make me a 1 PM reservation , please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Inheat \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "21145", "datum_id": {"dialogue_id": "f6fb6ee7-c823-4736-9453-2e02d2c4cb07", "turn_index": 6}}
{"user_turn_0": "Reserve a table for 5 , please", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Okay , change it to Friday , then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday)))))))))", "idx": "21147", "datum_id": {"dialogue_id": "f6fb6ee7-c823-4736-9453-2e02d2c4cb07", "turn_index": 8}}
{"user_turn_0": "Is that a direct flight", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Book that flight for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "21153", "datum_id": {"dialogue_id": "387a94f5-b8e5-47d5-b18a-db2ca39e7b80", "turn_index": 4}}
{"user_turn_0": "Hi my assistant , is there a two hour event on my calendar ?", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Make one", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.eventName_? (?= \" Dog Walking \"))))", "idx": "21156", "datum_id": {"dialogue_id": "65a71b93-2544-4360-99b0-93e605b9b0b9", "turn_index": 1}}
{"user_turn_0": "Hi my assistant , give me directions to Dexion House by public transportation", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "What time tomorrow 's meeting over ?", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.endDateTime_? (^(DateTime) always))) :object (& (CalendarEvent.eventName_? (?= \" meeting \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow))))))))", "idx": "21166", "datum_id": {"dialogue_id": "11c77d84-7233-4c09-b2ce-446a138befbe", "turn_index": 1}}
{"user_turn_0": "Thanks so much . Set a reminder for me", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Thanks for the help . I want to reserve a cheap eatery in Wembley", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.location_? (?= \" Wembley \")) (Restaurant.priceRange_? (?= (PriceRange.Low))))))", "idx": "21168", "datum_id": {"dialogue_id": "11c77d84-7233-4c09-b2ce-446a138befbe", "turn_index": 3}}
{"user_turn_0": "Make sure its not too high", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floq", "user_turn_1": "Give me the address of the restaurant", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "21191", "datum_id": {"dialogue_id": "26569931-f6aa-4ce2-843f-d748433fa2d1", "turn_index": 5}}
{"user_turn_0": "Give me the address of the restaurant", "agent_turn_0": "Root system inform restaurant find focus equals address equals 54 Islington Park Road", "user_turn_1": "Great , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Empirica \"))))))", "idx": "21192", "datum_id": {"dialogue_id": "26569931-f6aa-4ce2-843f-d748433fa2d1", "turn_index": 6}}
{"user_turn_0": "Hey assistant , send a message to 07712350877", "agent_turn_0": "Root system prompt message create object equals textContent", "user_turn_1": "Say : Coming", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (& x0 (Message.textContent_? (?= \" Coming \"))))))", "idx": "21196", "datum_id": {"dialogue_id": "647d20e9-ae88-43ba-9680-84be1ea547bc", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , at what time does Sam \u2019s Big Birthday Bash end tomorrow on my calendar", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.endDateTime_? (^(DateTime) always))) :object (& (CalendarEvent.eventName_? (?= \" Sam's Big Birthday Bash \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow))))))))", "idx": "21214", "datum_id": {"dialogue_id": "9cbe6a4e-a434-4bdc-b586-427cd86a844c", "turn_index": 0}}
{"user_turn_0": "Call 07086798286", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Deliver my next event to Mr Springer", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))) (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Springer \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "21228", "datum_id": {"dialogue_id": "60cd53e2-f9e3-448b-bc1e-a279dab4fbd7", "turn_index": 4}}
{"user_turn_0": "A table for 6", "agent_turn_0": "Root system offer restaurant book inform calendarEvent find Conflicted", "user_turn_1": "Then go ahead and book it for 6:30", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (?= (Minute.apply 30L)))))))", "idx": "21231", "datum_id": {"dialogue_id": "b8e4ad81-b3e6-45f1-8192-9c701dac638d", "turn_index": 2}}
{"user_turn_0": "I want a moderately - priced hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Blue Moon price equals 145", "user_turn_1": "Does the hotel offer free wifi ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasWifi_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "21236", "datum_id": {"dialogue_id": "6e8ae9c2-7b19-4f4f-ad37-941677563e00", "turn_index": 2}}
{"user_turn_0": "Does the hotel offer free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Great . OK , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "21237", "datum_id": {"dialogue_id": "6e8ae9c2-7b19-4f4f-ad37-941677563e00", "turn_index": 3}}
{"user_turn_0": "Hey , set up a reminder for the event I have on the 12th .", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Schedule and event at The Puzzalarium . Send the event to my father", "tgt": "(plan (do (^(CalendarEvent) Create :object (CalendarEvent.eventLocation_? (?= \" The Puzzalarium \"))) (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Father))))) (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always))))))))", "idx": "21243", "datum_id": {"dialogue_id": "c0b50722-e11f-4fce-a555-3544b4b2de9e", "turn_index": 1}}
{"user_turn_0": "11th of December please", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals startDateTime equals time", "user_turn_1": "The event will start at 11 am and last only an hour", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (& (Date.month_? (?= (December))) (Date.day_? (?= (Day.apply 11L))))) (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (meridiem_? (?= (Meridiem.AM))))))) (DateTimeRange.duration_? (AppleDuration.hour_? (?= 1)))))))", "idx": "21245", "datum_id": {"dialogue_id": "c0b50722-e11f-4fce-a555-3544b4b2de9e", "turn_index": 3}}
{"user_turn_0": "Spanish", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Lakeside Demon", "user_turn_1": "What is the address of the restaurant ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "21256", "datum_id": {"dialogue_id": "98f759e8-5227-4809-a200-e71b5ab9fad9", "turn_index": 4}}
{"user_turn_0": "No , I do n't like any of those . How about a German restaurant ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Boiling Fence", "user_turn_1": "Do they have parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "21259", "datum_id": {"dialogue_id": "98f759e8-5227-4809-a200-e71b5ab9fad9", "turn_index": 7}}
{"user_turn_0": "Do they have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Book it at 3 on the 23rd", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" The Lakeside Demon \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 23L))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 3L)))))))))))", "idx": "21260", "datum_id": {"dialogue_id": "98f759e8-5227-4809-a200-e71b5ab9fad9", "turn_index": 8}}
{"user_turn_0": "I do n't care as long as it is a four star restaurant", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Stazione restaurant", "user_turn_1": "Great . Book it for today at 3 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 3L)))))))))))", "idx": "21271", "datum_id": {"dialogue_id": "8fe35d1b-5552-492b-85a5-9c184fb46227", "turn_index": 3}}
{"user_turn_0": "Does it have private bath rooms ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "21283", "datum_id": {"dialogue_id": "3b597fb6-c48c-4289-97e1-c802b82df164", "turn_index": 4}}
{"user_turn_0": "I need two", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Move the check out to Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Saturday))))))", "idx": "21287", "datum_id": {"dialogue_id": "3b597fb6-c48c-4289-97e1-c802b82df164", "turn_index": 8}}
{"user_turn_0": "Move the check out to Saturday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "21288", "datum_id": {"dialogue_id": "3b597fb6-c48c-4289-97e1-c802b82df164", "turn_index": 9}}
{"user_turn_0": "I 'll leave from Liverpool", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "The one leaving at 3:20 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "21292", "datum_id": {"dialogue_id": "24340265-0540-47a9-8ab9-3b7e6a721d1b", "turn_index": 2}}
{"user_turn_0": "Cheap", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Moody Moon price equals 170", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Crescent Resort \"))))))", "idx": "21307", "datum_id": {"dialogue_id": "9ca1cccd-ccae-4dc1-b27d-b33729cc25d4", "turn_index": 5}}
{"user_turn_0": "One room and the room type does n't matter", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you change the check out date to Saturday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Saturday)))))", "idx": "21309", "datum_id": {"dialogue_id": "9ca1cccd-ccae-4dc1-b27d-b33729cc25d4", "turn_index": 7}}
{"user_turn_0": "Can you change the check out date to Saturday ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "21310", "datum_id": {"dialogue_id": "9ca1cccd-ccae-4dc1-b27d-b33729cc25d4", "turn_index": 8}}
{"user_turn_0": "It starts at 2:30 PM , and lasts 45 minutes", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "I need to reserve a restaurant with at least three stars , not too expensive , in Tower Hill on June 18th", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Tower Hill \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (& (Date.month_? (?= (June))) (Date.day_? (?= (Day.apply 18L)))))))) (Restaurant.priceRange_? (?= (PriceRange.High)))) (Restaurant.rating_? (?>= (someSalient (?= 3)))))))", "idx": "21319", "datum_id": {"dialogue_id": "f2d3002f-fdd0-406e-814f-e6fb334de84a", "turn_index": 2}}
{"user_turn_0": "Hello assistant , book me a queen sized bed at a hotel in Leicester Square from the 18th until November 24th .", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Parallel Tower price equals 138", "user_turn_1": "Give me a different hotel that has a low price range", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "21323", "datum_id": {"dialogue_id": "ee7304fd-1777-4aa5-ae7b-f3da31781d09", "turn_index": 1}}
{"user_turn_0": "Give me a different hotel that has a low price range", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Parallel Tower price equals 142", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "21324", "datum_id": {"dialogue_id": "ee7304fd-1777-4aa5-ae7b-f3da31781d09", "turn_index": 2}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 meridiem equals PM", "user_turn_1": "I want the one at 1:20 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "21349", "datum_id": {"dialogue_id": "65b1629a-dc37-4073-a490-071af9334c94", "turn_index": 2}}
{"user_turn_0": "I want the one at 1:20 PM", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "21350", "datum_id": {"dialogue_id": "65b1629a-dc37-4073-a490-071af9334c94", "turn_index": 3}}
{"user_turn_0": "No , I want to leave from Liverpool instead", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 meridiem equals PM", "user_turn_1": "Yeah that looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "21369", "datum_id": {"dialogue_id": "2e1ea558-fa21-4d45-bd4b-14c8f134e404", "turn_index": 2}}
{"user_turn_0": "Yeah that looks good", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 meridiem equals PM", "user_turn_1": "Sure", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "21370", "datum_id": {"dialogue_id": "2e1ea558-fa21-4d45-bd4b-14c8f134e404", "turn_index": 3}}
{"user_turn_0": "I prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Spago", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Interknack \"))))))", "idx": "21376", "datum_id": {"dialogue_id": "89178e2d-fc2a-4a16-a858-445ce12ec774", "turn_index": 4}}
{"user_turn_0": "Does the hotel have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "21394", "datum_id": {"dialogue_id": "8ddadf24-e30e-444c-a83d-c9e22541b669", "turn_index": 3}}
{"user_turn_0": "Which airline is that on ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "I 'd rather take the one departing at 2:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "21408", "datum_id": {"dialogue_id": "7e00d234-16bf-4e5f-ace7-457ef35aefb8", "turn_index": 4}}
{"user_turn_0": "I also need a flight to Frankfurt on the 21st , please", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 4 object equals nextDepartureDateTime equals time equals hour equals 2 meridiem equals PM price equals 124", "user_turn_1": "Okay , that works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "21410", "datum_id": {"dialogue_id": "7e00d234-16bf-4e5f-ace7-457ef35aefb8", "turn_index": 6}}
{"user_turn_0": "Tomorrow", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Next task , i need a round trip plane ticket from Chelmsford to Gatwick Airport for tomorrow", "tgt": "(plan (^(Train) Book :object (& (& (& (Train.source_? (Place.location_? (?= \" Chelmsford \"))) (Train.destination_? (Place.location_? (?= \" Gatwick Airport \")))) (Train.departureDateTime_? (DateTime.date_? (?= (Tomorrow))))) (Train.tripType_? (?= (TripType.roundTrip))))))", "idx": "21417", "datum_id": {"dialogue_id": "35a96669-65a8-4f68-b920-d3cbbf6a47d1", "turn_index": 3}}
{"user_turn_0": "Hello , book restaurant with not high price at Saturday .", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName location", "user_turn_1": "It should have 3 stars and be located in Abbey Wood", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.location_? (?= \" Abbey Wood \"))) (Restaurant.rating_? (?= 3))))))", "idx": "21435", "datum_id": {"dialogue_id": "0d7748f3-4827-4719-a281-d4043c58c4cd", "turn_index": 1}}
{"user_turn_0": "I wonder which of the restaurants serve Korean food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dingo", "user_turn_1": "Does the restaurant take credit card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "21438", "datum_id": {"dialogue_id": "0d7748f3-4827-4719-a281-d4043c58c4cd", "turn_index": 4}}
{"user_turn_0": "I prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Box", "user_turn_1": "What is the address of the restaurant", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "21440", "datum_id": {"dialogue_id": "0d7748f3-4827-4719-a281-d4043c58c4cd", "turn_index": 6}}
{"user_turn_0": "What is the address of the restaurant", "agent_turn_0": "Root system inform restaurant find focus equals address equals 97 Church Road", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Cityroom \"))))))", "idx": "21441", "datum_id": {"dialogue_id": "0d7748f3-4827-4719-a281-d4043c58c4cd", "turn_index": 7}}
{"user_turn_0": "What airline is it ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals British", "user_turn_1": "Book this flight !", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "21453", "datum_id": {"dialogue_id": "68701aba-0895-4549-9933-7817e43b7e95", "turn_index": 3}}
{"user_turn_0": "8:30 PM on July 11th", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "Thanks , also send my mother tomorrow 's event", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))))))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Mother))))))))", "idx": "21460", "datum_id": {"dialogue_id": "73b0594e-945e-4577-be48-701ca66c302c", "turn_index": 3}}
{"user_turn_0": "I want another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Lakeside Demon", "user_turn_1": "Does it take credit card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "21472", "datum_id": {"dialogue_id": "bf6d74f5-b335-4442-8d29-ae798585eb78", "turn_index": 5}}
{"user_turn_0": "Does it take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "Book it for me today at 4 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Spago \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "21473", "datum_id": {"dialogue_id": "bf6d74f5-b335-4442-8d29-ae798585eb78", "turn_index": 6}}
{"user_turn_0": "It 's not . I 'm headed to Frankfurt on Friday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 2 object equals nextDepartureDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM price equals 201", "user_turn_1": "That works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (^((Constraint Hour)) refer)) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "21481", "datum_id": {"dialogue_id": "bbe96e5c-6d43-4428-be3f-c3ca6fbd4fdd", "turn_index": 5}}
{"user_turn_0": "October 24th", "agent_turn_0": "Root system prompt restaurant book object equals atDateTime equals time inform restaurant find object equals atDateTime equals time equals hour equals 11", "user_turn_1": "That 's fine , book it for me at that 11 slot", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 11L)))))))))", "idx": "21493", "datum_id": {"dialogue_id": "cffc37f0-1315-486e-ac4e-7dfa1cb62aaa", "turn_index": 3}}
{"user_turn_0": "Do you think it has a laundry service available ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Please go ahead and book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "21498", "datum_id": {"dialogue_id": "d21b030c-69f2-4745-b41c-cf6134906c5c", "turn_index": 2}}
{"user_turn_0": "Please go ahead and book it for me", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "It should be from January 20 - 24", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 20L)))) (month_? (Date.month_? (?= (January)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 24L)))))))))))", "idx": "21499", "datum_id": {"dialogue_id": "d21b030c-69f2-4745-b41c-cf6134906c5c", "turn_index": 3}}
{"user_turn_0": "Can I change my check in date to tomorrow ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Before you do that , can you check if it has free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "21502", "datum_id": {"dialogue_id": "d21b030c-69f2-4745-b41c-cf6134906c5c", "turn_index": 6}}
{"user_turn_0": "I need to know if the hotel has laundry", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Please reserve it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "21516", "datum_id": {"dialogue_id": "2994f71c-000a-4afb-b77b-1b2b0b518f91", "turn_index": 2}}
{"user_turn_0": "Does the hotel have a car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "21543", "datum_id": {"dialogue_id": "4dd33815-e902-4094-a0eb-20b57fcd9259", "turn_index": 2}}
{"user_turn_0": "Three queen sized beds", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does this support free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "21546", "datum_id": {"dialogue_id": "4dd33815-e902-4094-a0eb-20b57fcd9259", "turn_index": 5}}
{"user_turn_0": "Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM price equals 134", "user_turn_1": "No , I want the one at 2:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "21550", "datum_id": {"dialogue_id": "6cf8d8c4-546d-4384-b4d7-aa19fa0df33a", "turn_index": 2}}
{"user_turn_0": "Yes , please put it in", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "Your order has been submitted . Please let me know if you need other help", "tgt": "(plan (^(PhoneCall) Create :object (PhoneCall.recipients_? (Contact.phoneNumber_? (?= \" 07989137811 \")))))", "idx": "21572", "datum_id": {"dialogue_id": "93b5650f-4c9b-43f5-828b-dc59473f0ea4", "turn_index": 3}}
{"user_turn_0": "Your order has been submitted . Please let me know if you need other help", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Now call 07800070692", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint String)) Path.apply \" object.recipients.phoneNumber \") (lambda (^(Constraint String) x0) (?= \" 07800070692 \"))))", "idx": "21573", "datum_id": {"dialogue_id": "93b5650f-4c9b-43f5-828b-dc59473f0ea4", "turn_index": 4}}
{"user_turn_0": "Please tell me what the weather in Leicester is like", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cold", "user_turn_1": "Revise the date of Sam 's Big Birthday Bash with Liam that is on my calendar", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (^(Date) always)))) :object (& (CalendarEvent.eventName_? (?= \" Sam's Big Birthday Bash \")) (CalendarEvent.attendees_? (Contact.person_? (Person.name_? (?= \" Liam \")))))))", "idx": "21582", "datum_id": {"dialogue_id": "916d9902-61ae-425b-b106-a87604727c81", "turn_index": 3}}
{"user_turn_0": "My son is coming", "agent_turn_0": "Root system inform calendarEvent update Completed", "user_turn_1": "Also deliver a text to him saying I 'm lost", "tgt": "(plan (^(Message) Create :object (Message.recipients_? (& (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Son)))) (Contact.textContent_? (?= \" I'm lost \"))))))", "idx": "21587", "datum_id": {"dialogue_id": "6a9117ff-e39a-4aea-8118-251ff671a7d8", "turn_index": 3}}
{"user_turn_0": "I 'm departing from Bradford", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 20 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "21596", "datum_id": {"dialogue_id": "420ecf23-f697-4446-bd43-4efb12f155ce", "turn_index": 2}}
{"user_turn_0": "2:30 PM looks good", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM price equals 155", "user_turn_1": "That one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "21602", "datum_id": {"dialogue_id": "f4d69880-45a6-421a-8a51-fe24c385a769", "turn_index": 3}}
{"user_turn_0": "I need to leave after 10:00 on the 7th and it needs to be an economy flight", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM price equals 199", "user_turn_1": "That seems good . Book it for four people , please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.tripType_? (?= (TripType.oneWay))) (Flight.source_? (Place.location_? (?= \" London \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.class_? (?= (FlightClass.Economy)))) (Flight.passengers_? (?= 4))))))", "idx": "21606", "datum_id": {"dialogue_id": "59860f7b-7194-436d-a66e-6a57b2ee1397", "turn_index": 2}}
{"user_turn_0": "Hey , check to see if I have town visit with Hannah on the calendar", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Please create one", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.eventName_? (?= \" routine checkup \")) (CalendarEvent.attendees_? (Contact.person_? (& (Person.name_? (?= \" Dowd \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "21612", "datum_id": {"dialogue_id": "67361a93-0869-4f0b-bba6-6967c18b4edc", "turn_index": 1}}
{"user_turn_0": "I do n't care as long as it is rated at least two stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Beef Easy", "user_turn_1": "That is fine . Get me a table there for today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Today)))))))))", "idx": "21629", "datum_id": {"dialogue_id": "ceefbe81-46b5-42ad-8820-cd47458f2f7c", "turn_index": 2}}
{"user_turn_0": "In the morning", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "At 3 PM remind me to was clothes", "tgt": "(plan (^(Reminder) Create :object (& (Reminder.reminderContent_? (?= \" wash clothes \")) (Reminder.atDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "21636", "datum_id": {"dialogue_id": "4e10a7b8-776c-4adb-8cbe-4dbda02d716e", "turn_index": 3}}
{"user_turn_0": "I need three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "I need to know if that booking supports free cancellation", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "21641", "datum_id": {"dialogue_id": "da067c00-3fd8-47c5-8423-b294c64b26b2", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , i want to book a hotel in Temple check in tomorrow with moderate price and I want a single room", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" Temple \")) (Hotel.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))))) (Hotel.priceRange_? (?= (PriceRange.Moderate)))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Single)))))))", "idx": "21648", "datum_id": {"dialogue_id": "e4b59821-18b3-4cee-8314-1e4b068ee747", "turn_index": 0}}
{"user_turn_0": "Does the hotel have free wifi", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "21650", "datum_id": {"dialogue_id": "e4b59821-18b3-4cee-8314-1e4b068ee747", "turn_index": 2}}
{"user_turn_0": "Yes , I will", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM price equals 155", "user_turn_1": "Okay , put me on that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "21663", "datum_id": {"dialogue_id": "50876489-955b-409b-9814-0f0171d123be", "turn_index": 2}}
{"user_turn_0": "December 11th", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "What about Tuesday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "21686", "datum_id": {"dialogue_id": "158a16c5-a82b-461a-91fc-e271c3593837", "turn_index": 3}}
{"user_turn_0": "Hello , add Alan to my calendar event", "agent_turn_0": "Root system prompt calendarEvent update object", "user_turn_1": "Pet sitting", "tgt": "(plan (revise (^(Unit) Path.apply \" Update \") (^((Option (Constraint CalendarEvent))) Path.apply \" object \") (lambda (^(Option (Constraint CalendarEvent)) x0) (Some (CalendarEvent.eventName_? (?= \" Pet sitting \"))))))", "idx": "21690", "datum_id": {"dialogue_id": "7c112a3a-8331-43f9-9a11-23cc984b5678", "turn_index": 1}}
{"user_turn_0": "Pet sitting", "agent_turn_0": "Root system inform calendarEvent update Completed", "user_turn_1": "Next , text him", "tgt": "(plan (^(Message) Create :object (Message.recipients_? (^((Constraint Contact)) refer))))", "idx": "21691", "datum_id": {"dialogue_id": "7c112a3a-8331-43f9-9a11-23cc984b5678", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , the reminder has been created for you .", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (CalendarEvent.eventName_? (?= \" Business Insider \")))))))", "idx": "21694", "datum_id": {"dialogue_id": "bb455ef7-ffeb-47b9-95c4-f5afeeb188c6", "turn_index": 0}}
{"user_turn_0": "Is there free wifi at the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "21698", "datum_id": {"dialogue_id": "bb455ef7-ffeb-47b9-95c4-f5afeeb188c6", "turn_index": 4}}
{"user_turn_0": "Which one has four stars ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Juniper Cloud", "user_turn_1": "Do they take credit card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "21723", "datum_id": {"dialogue_id": "49420cb4-1018-4334-92f4-b6077ae08daf", "turn_index": 4}}
{"user_turn_0": "Do they take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "Book it !", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Kitty City \"))))))", "idx": "21724", "datum_id": {"dialogue_id": "49420cb4-1018-4334-92f4-b6077ae08daf", "turn_index": 5}}
{"user_turn_0": "Give me a different restaurant that offers parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals La Zilla", "user_turn_1": "Tell me the average cost per person at this restaurant", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "21733", "datum_id": {"dialogue_id": "7999f1b8-8d93-4cbf-bc39-c71ba7a30992", "turn_index": 5}}
{"user_turn_0": "Tell me the average cost per person at this restaurant", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 36", "user_turn_1": "Book it for 6:30 PM on October 26th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Canton Silk \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (October))) (Date.day_? (?= (Day.apply 26L)))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "21734", "datum_id": {"dialogue_id": "7999f1b8-8d93-4cbf-bc39-c71ba7a30992", "turn_index": 6}}
{"user_turn_0": "Yes , you are right", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 1 meridiem equals PM price equals 201", "user_turn_1": "I prefer the 2:50PM flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "21748", "datum_id": {"dialogue_id": "899ef7b2-95c3-47aa-8bad-c8d6b1463afc", "turn_index": 5}}
{"user_turn_0": "On Sunday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM price equals 170", "user_turn_1": "This one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "21750", "datum_id": {"dialogue_id": "899ef7b2-95c3-47aa-8bad-c8d6b1463afc", "turn_index": 7}}
{"user_turn_0": "Can you give me the cabin class for the flight ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "It 's fine , please book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "21762", "datum_id": {"dialogue_id": "6b0b21b5-8b9a-4090-ac77-d0bbe6e13e1b", "turn_index": 4}}
{"user_turn_0": "I would rather stay in a hotel that 's cheaper", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Fairmont price equals 124", "user_turn_1": "Is there free wifi in the rooms ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasWifi_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "21773", "datum_id": {"dialogue_id": "fa18e814-3555-4b5e-9497-9b358e1b2cf9", "turn_index": 2}}
{"user_turn_0": "Is there free wifi in the rooms ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Ok , reserve me a room", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" InterContinental \"))))))", "idx": "21774", "datum_id": {"dialogue_id": "fa18e814-3555-4b5e-9497-9b358e1b2cf9", "turn_index": 3}}
{"user_turn_0": "I only need one room , but I do n't care what type it is", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you change my check in day to be today instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "21777", "datum_id": {"dialogue_id": "fa18e814-3555-4b5e-9497-9b358e1b2cf9", "turn_index": 6}}
{"user_turn_0": "I 'd rather have another hotel with at least two stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Four Seasons price equals 156", "user_turn_1": "Do they have a private bath room ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.privateBath_? (^(Boolean) always)))))", "idx": "21794", "datum_id": {"dialogue_id": "2afd9bda-e0c3-4fe4-bb82-264ffc0b42cc", "turn_index": 5}}
{"user_turn_0": "Do they have a private bath room ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Vitale \"))))))", "idx": "21795", "datum_id": {"dialogue_id": "2afd9bda-e0c3-4fe4-bb82-264ffc0b42cc", "turn_index": 6}}
{"user_turn_0": "Make it for three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually , adjust the check out date to Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Friday))))))", "idx": "21799", "datum_id": {"dialogue_id": "2afd9bda-e0c3-4fe4-bb82-264ffc0b42cc", "turn_index": 10}}
{"user_turn_0": "That 's correct", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I want the one that 's leaving at 1:45 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "21803", "datum_id": {"dialogue_id": "68b8cfec-4e49-4645-902d-81e144a19caf", "turn_index": 2}}
{"user_turn_0": "I want a cheap hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Four Seasons price equals 145", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "21809", "datum_id": {"dialogue_id": "d7c54ba9-7480-4de7-8e1d-c0b5de934231", "turn_index": 2}}
{"user_turn_0": "I do n't care , I just need wifi", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "What if I check in on Tuesday instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.startDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Tuesday)))))", "idx": "21813", "datum_id": {"dialogue_id": "d7c54ba9-7480-4de7-8e1d-c0b5de934231", "turn_index": 6}}
{"user_turn_0": "Does the hotel have any fitness centers", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "21819", "datum_id": {"dialogue_id": "bd875c46-0325-494a-b6ca-9ca94620fc67", "turn_index": 3}}
{"user_turn_0": "Make it a queen sized bed", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Can I check in on Monday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Monday))))))", "idx": "21821", "datum_id": {"dialogue_id": "bd875c46-0325-494a-b6ca-9ca94620fc67", "turn_index": 5}}
{"user_turn_0": "Can you give me directions ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Can you book it for me ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Bluebird Guesthouse \"))))))", "idx": "21828", "datum_id": {"dialogue_id": "eadd775e-cbd4-498e-a75c-559d05cddb72", "turn_index": 5}}
{"user_turn_0": "Just one", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "No , can you change my check out date to be on Friday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Friday)))))", "idx": "21831", "datum_id": {"dialogue_id": "eadd775e-cbd4-498e-a75c-559d05cddb72", "turn_index": 8}}
{"user_turn_0": "No , can you change my check out date to be on Friday ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there a cancellation fee if I change my mind ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "21832", "datum_id": {"dialogue_id": "eadd775e-cbd4-498e-a75c-559d05cddb72", "turn_index": 9}}
{"user_turn_0": "Is it a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Actually , I like the one that leaves at 1:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "21843", "datum_id": {"dialogue_id": "dcb3093d-f5fd-4584-a26b-e1cd55aba2f5", "turn_index": 3}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 4 object equals nextDepartureDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM price equals 156", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "21847", "datum_id": {"dialogue_id": "dcb3093d-f5fd-4584-a26b-e1cd55aba2f5", "turn_index": 7}}
{"user_turn_0": "Hi there , book a hotel near my event from tomorrow to the 27th .", "agent_turn_0": "Root system prompt hotel book object equals priceRange", "user_turn_1": "A moderate price range", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.priceRange_? (?= (PriceRange.Moderate)))))))", "idx": "21850", "datum_id": {"dialogue_id": "d6ebba92-f07a-4309-b217-2c5a45e07567", "turn_index": 1}}
{"user_turn_0": "Does it have laundry service ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "I want a different hotel with a star - rating", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.rating_? (?!= (someSalient (?= 0))))))))", "idx": "21852", "datum_id": {"dialogue_id": "d6ebba92-f07a-4309-b217-2c5a45e07567", "turn_index": 3}}
{"user_turn_0": "I want a different hotel with a star - rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Lucia price equals 156", "user_turn_1": "Does it have a fitness center ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasFitness_? (^(Boolean) always)))))", "idx": "21853", "datum_id": {"dialogue_id": "d6ebba92-f07a-4309-b217-2c5a45e07567", "turn_index": 4}}
{"user_turn_0": "Does it have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" InterContinental \"))))))", "idx": "21854", "datum_id": {"dialogue_id": "d6ebba92-f07a-4309-b217-2c5a45e07567", "turn_index": 5}}
{"user_turn_0": "Let me know which of these serve grilled food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Juniper Cloud", "user_turn_1": "Hmm , what 's the cost per person , on average ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "21860", "datum_id": {"dialogue_id": "de4d1a3c-f33c-4fe5-9ec6-3c9a26ae9f51", "turn_index": 2}}
{"user_turn_0": "Yeah , I do n't want it to be high , and I need a place with at least two stars on the rating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kiwi Sea", "user_turn_1": "But do they have parking available ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "21864", "datum_id": {"dialogue_id": "de4d1a3c-f33c-4fe5-9ec6-3c9a26ae9f51", "turn_index": 6}}
{"user_turn_0": "But do they have parking available ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Great , let 's go with that , then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Godka \"))))))", "idx": "21865", "datum_id": {"dialogue_id": "de4d1a3c-f33c-4fe5-9ec6-3c9a26ae9f51", "turn_index": 7}}
{"user_turn_0": "Hello assistant , is there an event lasting one hour on my calendar ?", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Create it", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.eventName_? (?= \" project discussion \"))))", "idx": "21870", "datum_id": {"dialogue_id": "0e6ac444-2ce7-4e2f-91df-a7e6f191c84f", "turn_index": 1}}
{"user_turn_0": "Is there free wifi there ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Okay , book me that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "21882", "datum_id": {"dialogue_id": "2a78a327-7652-405f-8e0f-c2248cea9b59", "turn_index": 3}}
{"user_turn_0": "Book a taxi from 60 Cross Street to the venue of my calendar event this afternoon", "agent_turn_0": "Root system prompt taxi book object equals destination inform calendarEvent find notExisted", "user_turn_1": "The destination should be 6John Street", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Place)) Path.apply \" object.destination \") (lambda (^(Constraint Place) x0) (Place.location_? (?= \" 6 John Street \")))))", "idx": "21895", "datum_id": {"dialogue_id": "57e8ede9-8eab-421d-a70c-6a0ad7af6592", "turn_index": 3}}
{"user_turn_0": "What class is it in ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "I would rather have the flight that leaves at 1:49 PM and have a business class seat", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Brussel \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.tripType_? (?= (TripType.oneWay)))) (Flight.passengers_? (?= 2))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "21907", "datum_id": {"dialogue_id": "73edf03a-1ef3-4efe-b7df-592b7478a532", "turn_index": 4}}
{"user_turn_0": "Can I get 3 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Hey can you change the check - out day to be on Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Friday))))))", "idx": "21928", "datum_id": {"dialogue_id": "37a590b0-1f38-468a-9538-456e2b79802c", "turn_index": 3}}
{"user_turn_0": "Hey can you change the check - out day to be on Friday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to pay ahead of time ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "21929", "datum_id": {"dialogue_id": "37a590b0-1f38-468a-9538-456e2b79802c", "turn_index": 4}}
{"user_turn_0": "Friday ?", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM price equals 65", "user_turn_1": "That one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "21947", "datum_id": {"dialogue_id": "a8118365-64fa-489e-bae7-53c256592159", "turn_index": 5}}
{"user_turn_0": "How long will this journey take ?", "agent_turn_0": "Root system inform flight find focus equals duration equals hour equals 1 minute equals 5", "user_turn_1": "That 's cool . Book it for four passengers please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" London \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (^((Constraint (List DateTime))) refer)))) (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday)))))) (Flight.passengers_? (?= 4))))))", "idx": "21956", "datum_id": {"dialogue_id": "4330fed7-1e30-40cd-b57e-cfd7ceaa2cd9", "turn_index": 2}}
{"user_turn_0": "Hi assistant , add the schedule for my flight to the calendar", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "I need another favor . I 'd like to book a train from Newcastle tomorrow . I 'll be returning on Sunday", "tgt": "(plan (^(Train) Book :object (& (& (& (Train.source_? (Place.location_? (?= \" Newcastle \"))) (Train.destination_? (Place.location_? (?= \" Newcastle \")))) (Train.departureDateTime_? (DateTime.date_? (?= (Tomorrow))))) (Train.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday))))))))", "idx": "21960", "datum_id": {"dialogue_id": "9e4cae5f-ec19-46c0-8b8c-cda47e65c5ef", "turn_index": 1}}
{"user_turn_0": "Let me get the 3:20 PM train", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM", "user_turn_1": "Sounds fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "21962", "datum_id": {"dialogue_id": "9e4cae5f-ec19-46c0-8b8c-cda47e65c5ef", "turn_index": 3}}
{"user_turn_0": "I want another hotel with a moderate price range", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Grand Hyatt price equals 130", "user_turn_1": "Do they serve breakfast ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "21968", "datum_id": {"dialogue_id": "47a61174-644f-41c8-a846-bc439e3188fb", "turn_index": 4}}
{"user_turn_0": "Do they serve breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" River Park \"))))))", "idx": "21969", "datum_id": {"dialogue_id": "47a61174-644f-41c8-a846-bc439e3188fb", "turn_index": 5}}
{"user_turn_0": "Just one", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel for free if I change my mind ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "21985", "datum_id": {"dialogue_id": "fa8e5c0f-1b99-4bd7-9e2b-f2cd961d6bee", "turn_index": 3}}
{"user_turn_0": "Hi there , i want to book a one way flight to Dublin", "agent_turn_0": "Root system prompt flight book object equals source departureDateTime", "user_turn_1": "1:40 PM looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& x0 (Flight.source_? (Place.location_? (?= \" Liverpool \")))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))))))))", "idx": "22032", "datum_id": {"dialogue_id": "144ffb7e-4088-4443-90e6-3799ae923f36", "turn_index": 1}}
{"user_turn_0": "1:40 PM looks good", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "22033", "datum_id": {"dialogue_id": "144ffb7e-4088-4443-90e6-3799ae923f36", "turn_index": 2}}
{"user_turn_0": "Go ahead", "agent_turn_0": "Root system prompt flight book object equals returnDateTime", "user_turn_1": "I found these flights on your departure date . What time do you like ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday)))))))))", "idx": "22035", "datum_id": {"dialogue_id": "144ffb7e-4088-4443-90e6-3799ae923f36", "turn_index": 4}}
{"user_turn_0": "I found these flights on your departure date . What time do you like ?", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM price equals 156", "user_turn_1": "Sure , what is your return date ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "22036", "datum_id": {"dialogue_id": "144ffb7e-4088-4443-90e6-3799ae923f36", "turn_index": 5}}
{"user_turn_0": "Can you show me which airline it is ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals British", "user_turn_1": "It 's fine , please book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "22041", "datum_id": {"dialogue_id": "a130dd58-f0d9-4a2a-8891-3b69b9e78fa4", "turn_index": 3}}
{"user_turn_0": "I will return on Friday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM price equals 210", "user_turn_1": "OK , I want to go with this one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "22044", "datum_id": {"dialogue_id": "a130dd58-f0d9-4a2a-8891-3b69b9e78fa4", "turn_index": 6}}
{"user_turn_0": "Is there a fitness center in the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "22048", "datum_id": {"dialogue_id": "419de2ee-9094-4966-8028-7a5820c5c64e", "turn_index": 2}}
{"user_turn_0": "Reading", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 meridiem equals PM", "user_turn_1": "Let me do the 4 PM please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "22059", "datum_id": {"dialogue_id": "aba01abe-372d-4e04-a1aa-a1a4dcc5ba41", "turn_index": 2}}
{"user_turn_0": "I think I 'd prefer a moderately - priced hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Etiquette Suites price equals 125", "user_turn_1": "Does it have free wifi ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasWifi_? (^(Boolean) always)))))", "idx": "22065", "datum_id": {"dialogue_id": "62b1cfb4-8998-40c9-b25b-e82ca15a0318", "turn_index": 3}}
{"user_turn_0": "Does it have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "OK , go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Renaissance \"))))))", "idx": "22066", "datum_id": {"dialogue_id": "62b1cfb4-8998-40c9-b25b-e82ca15a0318", "turn_index": 4}}
{"user_turn_0": "Only one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you tell me if they require a prepayment >", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "22070", "datum_id": {"dialogue_id": "62b1cfb4-8998-40c9-b25b-e82ca15a0318", "turn_index": 8}}
{"user_turn_0": "Yes , that looks good", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 meridiem equals PM", "user_turn_1": "Sounds good , too", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (^((Constraint Time)) refer))))))", "idx": "22079", "datum_id": {"dialogue_id": "1de62cf4-d900-4b2e-bcd2-bb69fb24d566", "turn_index": 2}}
{"user_turn_0": "I need a table for 2 people please", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Ok , can you change the appointment to April 5th ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (& (Date.month_? (?= (April))) (Date.day_? (?= (Day.apply 5L))))))))))", "idx": "22085", "datum_id": {"dialogue_id": "b87ad63e-7e5d-43e1-8818-db144f573d22", "turn_index": 3}}
{"user_turn_0": "Sounds good to me", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 meridiem equals PM", "user_turn_1": "Good enough for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (^((Constraint Time)) refer))))))", "idx": "22089", "datum_id": {"dialogue_id": "84ebb80e-888b-462b-9569-80d17f4cc6dd", "turn_index": 2}}
{"user_turn_0": "I 'd prefer a two star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Vitale price equals 124", "user_turn_1": "Please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" River Park \"))))))", "idx": "22104", "datum_id": {"dialogue_id": "16271df4-d271-4c4e-a396-fe2d74605ee4", "turn_index": 4}}
{"user_turn_0": "Today and I need tickets for three people , if possible", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM price equals 173", "user_turn_1": "No , what I want is the 4:30 PM and it 's got to be business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.source_? (Place.location_? (?= \" Leeds \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.passengers_? (?= 3))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "22122", "datum_id": {"dialogue_id": "9db3502c-d481-4323-a2cd-bf0ae4895f7b", "turn_index": 3}}
{"user_turn_0": "What 's the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Ok , book me a room", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "22129", "datum_id": {"dialogue_id": "81c94ecd-5ec4-4f01-9ce4-6f4f9a0a3b66", "turn_index": 3}}
{"user_turn_0": "That would be on the 21st", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "22135", "datum_id": {"dialogue_id": "824ccf90-1bb1-4595-b65e-6e27eba807d8", "turn_index": 3}}
{"user_turn_0": "Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I want the one that leaves at 3:20 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "22149", "datum_id": {"dialogue_id": "131e301f-27b1-43e2-96fd-a50f1fc78005", "turn_index": 2}}
{"user_turn_0": "Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 11 minute equals 40 meridiem equals AM price equals 134", "user_turn_1": "Book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "22172", "datum_id": {"dialogue_id": "0645df04-23ca-49a5-a6b9-4e50371e9f31", "turn_index": 6}}
{"user_turn_0": "How long will it take to get to this morning 's event", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 15 object equals destination equals location equals Laurel Street", "user_turn_1": "I 'd like to book a low - costing hotel in Queen 's Park", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= \" Queen's Park \")) (Hotel.priceRange_? (?= (PriceRange.Low))))))", "idx": "22177", "datum_id": {"dialogue_id": "c2ec19d3-68d0-4e10-89c0-7498dc49155e", "turn_index": 3}}
{"user_turn_0": "Newcastle", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 meridiem equals PM", "user_turn_1": "Yes that will be good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "22181", "datum_id": {"dialogue_id": "38589a4f-8718-4dc9-a390-db74be37fba6", "turn_index": 2}}
{"user_turn_0": "Sunday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM", "user_turn_1": "Yes that will work", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (^((Constraint Hour)) refer)) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "22184", "datum_id": {"dialogue_id": "38589a4f-8718-4dc9-a390-db74be37fba6", "turn_index": 5}}
{"user_turn_0": "It 's the one at 3 PM", "agent_turn_0": "Root system inform reminder update Completed", "user_turn_1": "Let me take a look at Sam 's Big Birthday Bash on my calendar", "tgt": "(plan (^(CalendarEvent) Find :object (CalendarEvent.eventName_? (?= \" Sam's Big Birthday Bash \"))))", "idx": "22189", "datum_id": {"dialogue_id": "fbce79d4-19b3-4512-8d71-66909e6dca48", "turn_index": 3}}
{"user_turn_0": "Let me take a look at Sam 's Big Birthday Bash on my calendar", "agent_turn_0": "Root system inform calendarEvent find", "user_turn_1": "Now , I need to schedule an event for today on my calendar", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))))))", "idx": "22190", "datum_id": {"dialogue_id": "fbce79d4-19b3-4512-8d71-66909e6dca48", "turn_index": 4}}
{"user_turn_0": "Birmingham", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM price equals 210", "user_turn_1": "I 'll take the 4:50 PM flight in business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Paris \"))) (Flight.airLine_? (?= \" EasyJet \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "22204", "datum_id": {"dialogue_id": "46a5d9bc-772e-48fc-bec1-31e3b2fddc7a", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , can you book me a Little Bat to the venue of the Art Club", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" Little Bat \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.eventName_? (?= \" Art Club time \"))))))))", "idx": "22223", "datum_id": {"dialogue_id": "d5c5225d-4b4c-4993-b4df-3d58124f25e0", "turn_index": 0}}
{"user_turn_0": "Please do", "agent_turn_0": "Root system inform calendarEvent create Completed restaurant book Completed", "user_turn_1": "Did Mr Howard call me ?", "tgt": "(plan (^(PhoneCall) CheckExistence :object (PhoneCall.sender_? (Contact.person_? (& (Person.name_? (?= \" Howard \")) (Person.namePrefix_? (?= \" Mr \")))))))", "idx": "22240", "datum_id": {"dialogue_id": "e1ee0684-5c17-4cfa-9d73-672be01bda28", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , book me a restaurant for Monday at 4 PM . Make sure it has at least three stars and a moderate price .", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.priceRange_? (?= (PriceRange.Moderate))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))) (Restaurant.rating_? (?>= (someSalient (?= 3)))))))", "idx": "22242", "datum_id": {"dialogue_id": "0fce7a74-96d4-4323-aa1e-bc34c752654c", "turn_index": 0}}
{"user_turn_0": "Does it accept credit card", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "22246", "datum_id": {"dialogue_id": "0fce7a74-96d4-4323-aa1e-bc34c752654c", "turn_index": 4}}
{"user_turn_0": "Book it for 2 people", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Check for the date of October 24th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (& (Date.month_? (?= (October))) (Date.day_? (?= (Day.apply 24L)))))))", "idx": "22248", "datum_id": {"dialogue_id": "0fce7a74-96d4-4323-aa1e-bc34c752654c", "turn_index": 6}}
{"user_turn_0": "6:30 PM", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Ok , can you change the appointment time to 4 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (Time.hour_? (?= (Hour.apply 4L))))))", "idx": "22253", "datum_id": {"dialogue_id": "faf7ddfc-0d8f-4a52-831d-fae5e75d6891", "turn_index": 3}}
{"user_turn_0": "How 's the rating over there ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "How about you book a double room for me ?", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.hotelName_? (^((Constraint String)) refer)) (Hotel.roomType_? (List.exists_? (?= (RoomType.Double)))))))", "idx": "22258", "datum_id": {"dialogue_id": "b4eefd8e-048c-4872-af91-07034e4d2f94", "turn_index": 2}}
{"user_turn_0": "The destination is Paris", "agent_turn_0": "Root system prompt flight book object equals departureDateTime", "user_turn_1": "4:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (?<= (someSalient (& (Time.hour_? (?= (Hour.apply 7L))) (Time.minute_? (?= (Minute.apply 30L))))))))))))))", "idx": "22268", "datum_id": {"dialogue_id": "794f5196-fef0-4d0f-bd82-1696ec5feef9", "turn_index": 5}}
{"user_turn_0": "Is this flight a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "I prefer the 1:30 PM departure", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "22276", "datum_id": {"dialogue_id": "d211f896-5466-459e-a507-05348423bfb6", "turn_index": 4}}
{"user_turn_0": "Go ahead", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Thanks for the help . Deliver my upcoming event to my son", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Son))))))))", "idx": "22293", "datum_id": {"dialogue_id": "6fcddc5d-11ef-4876-876b-44b44083d0d9", "turn_index": 4}}
{"user_turn_0": "Correct", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "The 3 PM one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "22302", "datum_id": {"dialogue_id": "3674c280-538e-4512-b324-f7ab4fd6b16f", "turn_index": 2}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 5 object equals nextDepartureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM price equals 201", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "22305", "datum_id": {"dialogue_id": "3674c280-538e-4512-b324-f7ab4fd6b16f", "turn_index": 5}}
{"user_turn_0": "Looks good . Go with that one", "agent_turn_0": "Root system prompt restaurant book object equals atDateTime equals time inform restaurant find object equals atDateTime equals time equals hour equals 6 meridiem equals PM", "user_turn_1": "Sure , 6 works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "22309", "datum_id": {"dialogue_id": "792bbae5-a552-4e42-b85a-9eeb61ba5006", "turn_index": 2}}
{"user_turn_0": "I prefer the one at 2 PM", "agent_turn_0": "Root system prompt train book object equals tripType", "user_turn_1": "Yes . please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (Train.tripType_? (?= (TripType.roundTrip)))))))", "idx": "22314", "datum_id": {"dialogue_id": "f766868d-650d-4b38-ac6d-7545c965dd63", "turn_index": 2}}
{"user_turn_0": "Friday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 meridiem equals PM", "user_turn_1": "OK", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "22316", "datum_id": {"dialogue_id": "f766868d-650d-4b38-ac6d-7545c965dd63", "turn_index": 4}}
{"user_turn_0": "It should be expensive", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Boiling Fence", "user_turn_1": "Ok , book it for me on July 16th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" La Zilla \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (& (Date.month_? (?= (July))) (Date.day_? (?= (Day.apply 16L)))))))))))", "idx": "22338", "datum_id": {"dialogue_id": "b236c18a-d1b0-42b9-8538-16b9296bdec3", "turn_index": 4}}
{"user_turn_0": "I 'd like a different place , one that 's moderately priced", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Farmhouse Inn price equals 160", "user_turn_1": "Does it have a private bath room ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.privateBath_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "22347", "datum_id": {"dialogue_id": "45b560c2-97eb-4f54-9018-b867e6f03066", "turn_index": 5}}
{"user_turn_0": "Let me know the weather in Jersey", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cold", "user_turn_1": "Thanks , next i would like to book a flight for a trip to Amsterdam that leaves today and returns Saturday", "tgt": "(plan (^(Flight) Book :object (& (& (& (Flight.destination_? (Place.location_? (?= \" Amsterdam \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (?= (Today)))))) (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday))))))))", "idx": "22351", "datum_id": {"dialogue_id": "50fcacfa-4b42-4197-981b-ae3170e1ad23", "turn_index": 3}}
{"user_turn_0": "Actually , I prefer a different hotel with at least two stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Grand Hyatt price equals 166", "user_turn_1": "But does it have a gym ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasFitness_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "22356", "datum_id": {"dialogue_id": "1f899b0f-e0c1-435e-9f19-8a9e2a9523b0", "turn_index": 3}}
{"user_turn_0": "But does it have a gym ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Ok . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Hilton \"))))))", "idx": "22357", "datum_id": {"dialogue_id": "1f899b0f-e0c1-435e-9f19-8a9e2a9523b0", "turn_index": 4}}
{"user_turn_0": "I 'd like a different restaurant with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Acacia Saint", "user_turn_1": "Alright , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Hambone \"))))))", "idx": "22369", "datum_id": {"dialogue_id": "7e0af236-5186-44ad-8f38-32aba55964cf", "turn_index": 6}}
{"user_turn_0": "I prefer another hotel with moderate price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Rose price equals 166", "user_turn_1": "what 's the rating", "tgt": "(plan (^(Hotel) Find :focus (Hotel.rating_? (^(Number) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "22383", "datum_id": {"dialogue_id": "c9564d89-53f0-4c31-9763-f7007e7884a5", "turn_index": 5}}
{"user_turn_0": "Hey assistant , I need you to add the Thursday train schedule to York onto the calendar .", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Awesome . And now I need you to set up a salon appointment from 10:00 AM to 3:00 PM with my sister . It 's going to be at Swingers City", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object \") (lambda (^(Constraint CalendarEvent) x0) (& (& (& (CalendarEvent.eventName_? (?= \" salon \")) (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (meridiem_? (?= (Meridiem.AM)))))) (DateTimeRange.endDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM))))))))) (CalendarEvent.attendees_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Sister)))))) (CalendarEvent.location_? (?= \" Swingers City \"))))))", "idx": "22385", "datum_id": {"dialogue_id": "f830ec3a-5469-48d6-919c-a8e4d884a119", "turn_index": 1}}
{"user_turn_0": "Awesome . And now I need you to set up a salon appointment from 10:00 AM to 3:00 PM with my sister . It 's going to be at Swingers City", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Also yeah , actually . I need to book a from going from London to Brussel , and it needs to be a one way", "tgt": "(plan (^(Flight) Book :object (& (& (Flight.tripType_? (?= (TripType.oneWay))) (Flight.source_? (Place.location_? (?= \" London \")))) (Flight.destination_? (Place.location_? (?= \" Brussel \"))))))", "idx": "22386", "datum_id": {"dialogue_id": "f830ec3a-5469-48d6-919c-a8e4d884a119", "turn_index": 2}}
{"user_turn_0": "Do they have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Cool . Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Fairmont \"))))))", "idx": "22405", "datum_id": {"dialogue_id": "8c946cb1-cebb-4a5a-9f12-ebe10f3aeb14", "turn_index": 6}}
{"user_turn_0": "Is it a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "That 's fine . Book this flight for four passengers please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.source_? (Place.location_? (?= \" London Heathrow \")))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 4))))))", "idx": "22413", "datum_id": {"dialogue_id": "d5dbd0b3-61ad-4351-abf1-6c44fca407f8", "turn_index": 4}}
{"user_turn_0": "I need one double room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there going to be a prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "22434", "datum_id": {"dialogue_id": "dbeaf445-e5b3-4cbe-9870-9bfce2b2c9b4", "turn_index": 4}}
{"user_turn_0": "Hi assistant , when will the 1:30 PM train to Paddington arrive", "agent_turn_0": "Root system inform train find focus equals arrivalDateTime equals time equals hour equals 11 minute equals 30 meridiem equals AM", "user_turn_1": "I need another favor . The location should be Stamford Hill", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.priceRange_? (?= (PriceRange.Moderate))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (February))) (Date.day_? (?= (Day.apply 17L)))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 4L))))))))))", "idx": "22442", "datum_id": {"dialogue_id": "6c31d2e6-4be8-4b47-9af5-70f747294bb7", "turn_index": 1}}
{"user_turn_0": "I need another favor . The location should be Stamford Hill", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName location", "user_turn_1": "I need a table for 4 people please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.location_? (?= \" Stamford Hill \"))))))", "idx": "22443", "datum_id": {"dialogue_id": "6c31d2e6-4be8-4b47-9af5-70f747294bb7", "turn_index": 2}}
{"user_turn_0": "I need a table for 4 people please", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dimple\u2019s", "user_turn_1": "Your train arrival is 11:30 AM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "22444", "datum_id": {"dialogue_id": "6c31d2e6-4be8-4b47-9af5-70f747294bb7", "turn_index": 3}}
{"user_turn_0": "Your train arrival is 11:30 AM", "agent_turn_0": "Root system prompt restaurant book object equals tableSize", "user_turn_1": "Here 's a list of restaurants . What about Dimple 's ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.tableSize_? (?= 4))))))", "idx": "22445", "datum_id": {"dialogue_id": "6c31d2e6-4be8-4b47-9af5-70f747294bb7", "turn_index": 4}}
{"user_turn_0": "No . I need 3 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait , change the check out day to Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Thursday))))))", "idx": "22463", "datum_id": {"dialogue_id": "c6f8ba0a-e2ba-46e8-93e8-65d4d37021cd", "turn_index": 5}}
{"user_turn_0": "Does it have outdoor seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "Ok , go ahead and book it anyway", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "22468", "datum_id": {"dialogue_id": "4e22fc40-76db-46dd-aad0-a4efa738a886", "turn_index": 3}}
{"user_turn_0": "None of that looks good to me . Show me some more , please , any kind of food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Spago", "user_turn_1": "Are there outdoor tables ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "22483", "datum_id": {"dialogue_id": "c739a316-c37b-433a-a12d-3386602d0c9e", "turn_index": 6}}
{"user_turn_0": "Which places have a five star rating ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals La Zilla", "user_turn_1": "What 's the address there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "22485", "datum_id": {"dialogue_id": "c739a316-c37b-433a-a12d-3386602d0c9e", "turn_index": 8}}
{"user_turn_0": "What 's the address there ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 234 University Street", "user_turn_1": "That will be fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flip Out \"))))))", "idx": "22486", "datum_id": {"dialogue_id": "c739a316-c37b-433a-a12d-3386602d0c9e", "turn_index": 9}}
{"user_turn_0": "Returning Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM price equals 119", "user_turn_1": "That will be fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "22501", "datum_id": {"dialogue_id": "bb60b235-ec2c-4d7d-a01b-46dfc512ff8f", "turn_index": 6}}
{"user_turn_0": "How do I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Enchanted Isle \"))))))", "idx": "22507", "datum_id": {"dialogue_id": "fb773fac-69ba-4b50-8c8e-68d9ee9eff71", "turn_index": 4}}
{"user_turn_0": "Hello assistant , can you change the date to my calendar event to Monday .", "agent_turn_0": "Root system prompt calendarEvent update object", "user_turn_1": "Do Great Things originally on December 12th", "tgt": "(plan (revise (^(Unit) Path.apply \" Update \") (^((Option (Constraint CalendarEvent))) Path.apply \" object \") (lambda (^(Option (Constraint CalendarEvent)) x0) (Some (& (CalendarEvent.eventName_? (?= \" Do Great Things \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (& (Date.month_? (?= (December))) (Date.day_? (?= (Day.apply 12L))))))))))))", "idx": "22518", "datum_id": {"dialogue_id": "84f4c325-9268-49e6-b8e0-ac9d841de437", "turn_index": 1}}
{"user_turn_0": "Can you make a reminder for me at the time", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Can you make another reminder for me at 10 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Hour)) Path.apply \" object.atDateTime.time.hour \") (lambda (^(Constraint Hour) x0) (?= (Hour.apply 10L)))))", "idx": "22521", "datum_id": {"dialogue_id": "84f4c325-9268-49e6-b8e0-ac9d841de437", "turn_index": 4}}
{"user_turn_0": "I 'll be going to Glasgow", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "How about Monday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Monday))))))", "idx": "22525", "datum_id": {"dialogue_id": "274570ce-99fe-4c41-874b-0e32d45dbfab", "turn_index": 3}}
{"user_turn_0": "Which airline is that one ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals British", "user_turn_1": "Ok that 's good , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "22527", "datum_id": {"dialogue_id": "274570ce-99fe-4c41-874b-0e32d45dbfab", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , i need to reserve a Chinese hotpot restaurant at 4 PM , with a high price range .", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.priceRange_? (?= (PriceRange.High))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM)))))))) (Restaurant.foodType_? (?= (FoodType.ChineseHotPot))))))", "idx": "22530", "datum_id": {"dialogue_id": "64f3c13e-cc92-4390-8fac-8e4434eaed01", "turn_index": 0}}
{"user_turn_0": "Which one has three stars ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capricorn", "user_turn_1": "Can I pay with credit card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "22534", "datum_id": {"dialogue_id": "64f3c13e-cc92-4390-8fac-8e4434eaed01", "turn_index": 4}}
{"user_turn_0": "I want a different one with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Gogol", "user_turn_1": "Do they accept credit card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "22536", "datum_id": {"dialogue_id": "64f3c13e-cc92-4390-8fac-8e4434eaed01", "turn_index": 6}}
{"user_turn_0": "I want a different one , with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Lakeside Demon", "user_turn_1": "What about outdoor seating ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "22538", "datum_id": {"dialogue_id": "64f3c13e-cc92-4390-8fac-8e4434eaed01", "turn_index": 8}}
{"user_turn_0": "What about outdoor seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "Looks good , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Floq \"))))))", "idx": "22539", "datum_id": {"dialogue_id": "64f3c13e-cc92-4390-8fac-8e4434eaed01", "turn_index": 9}}
{"user_turn_0": "No from St Pancras", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM", "user_turn_1": "Looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "22544", "datum_id": {"dialogue_id": "6c82e5d3-aea9-4ede-9f3c-112ca440616d", "turn_index": 2}}
{"user_turn_0": "Which one of these serves Thai Food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Empirica", "user_turn_1": "Does this place have outdoor seating ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "22587", "datum_id": {"dialogue_id": "b0659b66-0951-4dcd-867e-9a57dd4170dd", "turn_index": 2}}
{"user_turn_0": "I want a place with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Boiling Fence", "user_turn_1": "Fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Emptia \"))))))", "idx": "22589", "datum_id": {"dialogue_id": "b0659b66-0951-4dcd-867e-9a57dd4170dd", "turn_index": 4}}
{"user_turn_0": "I 'd like a table for 6", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Ok , try the 26th please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 26L))))))", "idx": "22592", "datum_id": {"dialogue_id": "b0659b66-0951-4dcd-867e-9a57dd4170dd", "turn_index": 7}}
{"user_turn_0": "Does it take credit cards ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "Okay , book it for tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow)))))))))", "idx": "22598", "datum_id": {"dialogue_id": "93609398-b722-4177-93aa-3cb3a96f47d2", "turn_index": 4}}
{"user_turn_0": "What is the carbin class ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "22605", "datum_id": {"dialogue_id": "3b86ae77-7aa2-455b-b532-99d9f93e632f", "turn_index": 3}}
{"user_turn_0": "Hi there , delete the message from my brother", "agent_turn_0": "Root system inform message find notExisted object equals sender", "user_turn_1": "I 'm going from 24 Empire Way to 6 John Street", "tgt": "(plan (^(Taxi) Book))", "idx": "22618", "datum_id": {"dialogue_id": "3ce0813e-a2f2-47f5-ad4d-b4bfa15625f0", "turn_index": 1}}
{"user_turn_0": "Change the pick up point to 24 Empire Way", "agent_turn_0": "Root system prompt taxi book object equals serviceType inform taxi find object equals serviceType equals listElementOne Saloon listElementTwo MPV listElementThree Executive", "user_turn_1": "Yes , please book the taxi for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Taxi)) Path.apply \" object \") (lambda (^(Constraint Taxi) x0) (& (& x0 (Taxi.serviceType_? (List.exists_? (?= (ServiceType.Any))))) (Taxi.passengers_? (?= 4))))))", "idx": "22620", "datum_id": {"dialogue_id": "3ce0813e-a2f2-47f5-ad4d-b4bfa15625f0", "turn_index": 3}}
{"user_turn_0": "Sure , where are you going ?", "agent_turn_0": "Root system offer taxi book", "user_turn_1": "Okay , here 's your taxi order . Do you want me to submit ?", "tgt": "(plan (^(Taxi) Find :focus (Taxi.travelTime_? (^(AppleDuration) always)) :object (?= (^(Taxi Dynamic) reference (^(Dynamic) always)))))", "idx": "22622", "datum_id": {"dialogue_id": "3ce0813e-a2f2-47f5-ad4d-b4bfa15625f0", "turn_index": 5}}
{"user_turn_0": "It will last for two hours", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "Next task , sure thing . I also need a taxi booking going from Camden Passge to 83 Upper Street", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" Camden Passage \"))) (Taxi.destination_? (Place.location_? (?= \" 83 Upper Street \"))))))", "idx": "22628", "datum_id": {"dialogue_id": "c662195d-539b-4782-afef-d6f71e706ef9", "turn_index": 4}}
{"user_turn_0": "I return on Friday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM", "user_turn_1": "That one sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "22635", "datum_id": {"dialogue_id": "a4495019-2329-439b-8602-420ae758d184", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , i 'd like to update my event so that it 's tomorrow .", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))))))", "idx": "22647", "datum_id": {"dialogue_id": "e14d6811-a94d-4b0a-890c-0a3ede0f16f3", "turn_index": 0}}
{"user_turn_0": "Ok , how about the The Watson hotel then", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I need to make a prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "22675", "datum_id": {"dialogue_id": "f4ee9128-66b0-48a3-9a7d-aa8fe5575423", "turn_index": 8}}
{"user_turn_0": "Which airline is it ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "That 's ok . I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "22717", "datum_id": {"dialogue_id": "9cac00c8-b25b-48ea-896d-69cdb7cdf034", "turn_index": 3}}
{"user_turn_0": "Can you remind me about the event", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Thanks so much . Book an inexpensive restaurant in Earls Court for 11:30", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.location_? (?= \" Earls Court \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L)))))))) (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High))))))))", "idx": "22738", "datum_id": {"dialogue_id": "386047eb-ed0d-40b6-bbbf-769e2bfc4be1", "turn_index": 4}}
{"user_turn_0": "Yep , book it", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "I wan tot book a hotel in Bloomsbury that has at least a three star rating", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= \" Bloomsbury \")) (Hotel.rating_? (?= 3)))))", "idx": "22743", "datum_id": {"dialogue_id": "5fe3be63-a1f3-4e9b-b632-db54b6846e81", "turn_index": 3}}
{"user_turn_0": "I want one with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flip Out", "user_turn_1": "What is the address", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "22752", "datum_id": {"dialogue_id": "ff6b687e-c790-40b2-a1f0-9aa3e4faa88d", "turn_index": 6}}
{"user_turn_0": "What is the address", "agent_turn_0": "Root system inform restaurant find focus equals address equals 7 Upper Street", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flew Z \"))))))", "idx": "22753", "datum_id": {"dialogue_id": "ff6b687e-c790-40b2-a1f0-9aa3e4faa88d", "turn_index": 7}}
{"user_turn_0": "About how much does it cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 35", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (^((Constraint String)) refer))))))", "idx": "22775", "datum_id": {"dialogue_id": "d46786f9-04a5-438f-a3c8-02e812414f2e", "turn_index": 3}}
{"user_turn_0": "Mr Clarkson", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Thanks for the help . Send the Sundays flight schedule to Joan", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Joan \")))) (Message.textContent_? (?= (^(String Flight) reference (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday))))))))))))", "idx": "22796", "datum_id": {"dialogue_id": "c0573267-5a8c-4cf4-8360-f692c535ee67", "turn_index": 3}}
{"user_turn_0": "Do they have private bathrooms ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "22801", "datum_id": {"dialogue_id": "d6e7edb4-9ed5-461d-b6c9-f6f674685b16", "turn_index": 3}}
{"user_turn_0": "Book it for me", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "February 19th to 25th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 19L)))) (month_? (Date.month_? (?= (February)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 25L)))))))))))", "idx": "22802", "datum_id": {"dialogue_id": "d6e7edb4-9ed5-461d-b6c9-f6f674685b16", "turn_index": 4}}
{"user_turn_0": "Also , I want 3 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can we make Wednesday the checkin day ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.startDateTime \") (lambda (^(Constraint DateTime) x0) (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday)))))))", "idx": "22804", "datum_id": {"dialogue_id": "d6e7edb4-9ed5-461d-b6c9-f6f674685b16", "turn_index": 6}}
{"user_turn_0": "Can we make Wednesday the checkin day ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I need to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "22805", "datum_id": {"dialogue_id": "d6e7edb4-9ed5-461d-b6c9-f6f674685b16", "turn_index": 7}}
{"user_turn_0": "I want to book a flight ticket from Birmingham to Belfast leaving on tomorrow", "agent_turn_0": "Root system inform navigation find focus equals distance equals number equals 3", "user_turn_1": "Thanks , next yes on Saturday", "tgt": "(plan (^(Flight) Book :object (& (& (Flight.source_? (Place.location_? (?= \" Birmingham \"))) (Flight.destination_? (Place.location_? (?= \" Belfast \")))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow))))))))", "idx": "22809", "datum_id": {"dialogue_id": "3d49d2ee-e15f-4081-a2cc-3920fcabce1e", "turn_index": 2}}
{"user_turn_0": "Yes , go ahead with the booking", "agent_turn_0": "Root system prompt flight book object equals tripType", "user_turn_1": "It 's 3 miles away", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday)))))))))", "idx": "22811", "datum_id": {"dialogue_id": "3d49d2ee-e15f-4081-a2cc-3920fcabce1e", "turn_index": 4}}
{"user_turn_0": "It 's 3 miles away", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 12 minute equals 50 meridiem equals PM price equals 130", "user_turn_1": "Do you need a return ticket ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "22812", "datum_id": {"dialogue_id": "3d49d2ee-e15f-4081-a2cc-3920fcabce1e", "turn_index": 5}}
{"user_turn_0": "I want a hotel that is cheaper", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Harborview price equals 166", "user_turn_1": "Does it have car park ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasParking_? (^(Boolean) always)))))", "idx": "22818", "datum_id": {"dialogue_id": "6f25f5cc-c698-4f93-a947-e6cd96e201a8", "turn_index": 4}}
{"user_turn_0": "Does it have car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Dream Connect \"))))))", "idx": "22819", "datum_id": {"dialogue_id": "6f25f5cc-c698-4f93-a947-e6cd96e201a8", "turn_index": 5}}
{"user_turn_0": "Three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Ok , change the check out date to Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Saturday))))))", "idx": "22823", "datum_id": {"dialogue_id": "6f25f5cc-c698-4f93-a947-e6cd96e201a8", "turn_index": 9}}
{"user_turn_0": "Ok , change the check out date to Saturday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they have free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "22824", "datum_id": {"dialogue_id": "6f25f5cc-c698-4f93-a947-e6cd96e201a8", "turn_index": 10}}
{"user_turn_0": "What hotels are nearby", "agent_turn_0": "Root system inform hotel find", "user_turn_1": "When does the 10:30 AM headed to Waverley arrive ?", "tgt": "(plan (^(Train) Find :focus (Train.arrivalDateTime_? (^(DateTime) always)) :object (& (Train.destination_? (Place.location_? (?= \" Waverley \"))) (Train.departureDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM)))))))))", "idx": "22840", "datum_id": {"dialogue_id": "5bc69064-1e3c-4910-8db1-12531f4c6f2d", "turn_index": 4}}
