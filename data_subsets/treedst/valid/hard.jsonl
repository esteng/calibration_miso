{"user_turn_0": "Hey , send a message please .", "agent_turn_0": "Root system prompt message create object equals recipients", "user_turn_1": "Text 07883795944 saying do n't wait for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Option (Constraint Message))) Path.apply \" object \") (lambda (^(Option (Constraint Message)) x0) (Some (& (Message.recipients_? (Contact.phoneNumber_? (?= \" 07883795944 \"))) (Message.textContent_? (?= \" don't wait me \")))))))", "idx": "27", "datum_id": {"dialogue_id": "5e4a88fb-a706-4c22-990a-756087f4982c", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , book a cheap restaurant", "tgt": "(plan (^(Restaurant) Book :object (Restaurant.priceRange_? (?= (PriceRange.Low)))))", "idx": "37", "datum_id": {"dialogue_id": "2bd36553-a252-4501-964a-d865dda8cb45", "turn_index": 0}}
{"user_turn_0": "I prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Chipotle Grill", "user_turn_1": "Go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Goat and Guru \"))))))", "idx": "41", "datum_id": {"dialogue_id": "2bd36553-a252-4501-964a-d865dda8cb45", "turn_index": 4}}
{"user_turn_0": "Does this hotel have free wifi", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "48", "datum_id": {"dialogue_id": "abf69884-d252-4e92-9cdf-1862b25c29f1", "turn_index": 3}}
{"user_turn_0": "Three rooms and the room type does n't matter", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "52", "datum_id": {"dialogue_id": "abf69884-d252-4e92-9cdf-1862b25c29f1", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , where are you headed ?", "tgt": "(plan (^(Taxi) Book :object (Taxi.source_? (Place.location_? (?= \" 66 Park Avenue \")))))", "idx": "54", "datum_id": {"dialogue_id": "e7d81867-a89e-418d-a918-5b0e0ec777ea", "turn_index": 0}}
{"user_turn_0": "Hello assistant , where are you headed ?", "agent_turn_0": "Root system prompt taxi book object equals destination", "user_turn_1": "Is there a car type that you prefer ? Your choices include Saloon , MPV and Executive", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Taxi)) Path.apply \" object \") (lambda (^(Constraint Taxi) x0) (& x0 (Taxi.destination_? (Place.location_? (?= \" Dexion House \")))))))", "idx": "55", "datum_id": {"dialogue_id": "e7d81867-a89e-418d-a918-5b0e0ec777ea", "turn_index": 1}}
{"user_turn_0": "Yup", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM", "user_turn_1": "Yup", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "78", "datum_id": {"dialogue_id": "630e70a8-09a0-424e-abce-337697bdd176", "turn_index": 3}}
{"user_turn_0": "It 'll be from Nottingham", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM", "user_turn_1": "I 'd rather have the one at 1:40 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "82", "datum_id": {"dialogue_id": "8c507dad-f919-4b1d-9229-16a3595df645", "turn_index": 2}}
{"user_turn_0": "How far is it to my event ?", "agent_turn_0": "Root system inform navigation find focus equals distance equals number equals 6", "user_turn_1": "What is the weather like in Liverpool ?", "tgt": "(plan (^(WeatherReport) Find :object (WeatherReport.location_? (?= \" Liverpool \"))))", "idx": "102", "datum_id": {"dialogue_id": "73aee8f0-1903-4baa-a998-22540b9e84e0", "turn_index": 4}}
{"user_turn_0": "Awesome , let 's book that", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 1 meridiem equals PM price equals 119", "user_turn_1": "That looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "105", "datum_id": {"dialogue_id": "e61856d9-9c59-407e-80d6-7e7a0e4ef445", "turn_index": 2}}
{"user_turn_0": "Out of these restaurants I 'm wondering which one serves American Food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Chipotle Grill", "user_turn_1": "Do you know if they have parking available", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "113", "datum_id": {"dialogue_id": "5f3ae2c3-43e0-4d75-aab6-07892cce6649", "turn_index": 5}}
{"user_turn_0": "2 rooms , and the type does not matter", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I need to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "118", "datum_id": {"dialogue_id": "2a88817f-bfd7-4b25-bae3-cb6ba517f049", "turn_index": 4}}
{"user_turn_0": "Am I scheduled for spring outing in Chelsea ?", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Schedule one", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.eventName_? (?= \" routine checkup \")) (CalendarEvent.location_? (?= \" The Urban \")))))", "idx": "137", "datum_id": {"dialogue_id": "57663d99-15b8-4763-b16b-75ae624e5047", "turn_index": 2}}
{"user_turn_0": "Can you please check for me if I have any event on 1 PM Tuesday", "agent_turn_0": "Root system inform calendarEvent find object equals eventName equals Private Investigation", "user_turn_1": "Book my flight after 1 PM on the same day", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (List.exists_? (DateTime.time_? (?>= (someSalient (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM))))))))))))))", "idx": "142", "datum_id": {"dialogue_id": "66378ee8-fcaa-11ea-a38d-acde48001122", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , I need you to please book a place to eat with a high price point .", "tgt": "(plan (^(Restaurant) Book :object (Restaurant.priceRange_? (?= (PriceRange.High)))))", "idx": "145", "datum_id": {"dialogue_id": "e975330e-6760-491b-b590-3c4c673f0c8b", "turn_index": 0}}
{"user_turn_0": "I want Indian food and the rating should not be zero stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Beef Easy", "user_turn_1": "Do they take credit cards there , or no ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "148", "datum_id": {"dialogue_id": "e975330e-6760-491b-b590-3c4c673f0c8b", "turn_index": 3}}
{"user_turn_0": "I think I 'd rather have a place with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Godka", "user_turn_1": "Do they have outdoor seating there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "150", "datum_id": {"dialogue_id": "e975330e-6760-491b-b590-3c4c673f0c8b", "turn_index": 5}}
{"user_turn_0": "Do they have outdoor seating there ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "Cool , book it for 2:30 PM , please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Beef Easy \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "151", "datum_id": {"dialogue_id": "e975330e-6760-491b-b590-3c4c673f0c8b", "turn_index": 6}}
{"user_turn_0": "Which of these have at least three stars though ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Lakeside Demon", "user_turn_1": "Do they have outdoor seating ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "170", "datum_id": {"dialogue_id": "56de1191-c917-4c3c-9e10-6272da3e11c0", "turn_index": 3}}
{"user_turn_0": "Do they have outdoor seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "Ok , that 's fine . Book it anyways", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Inheat \"))))))", "idx": "171", "datum_id": {"dialogue_id": "56de1191-c917-4c3c-9e10-6272da3e11c0", "turn_index": 4}}
{"user_turn_0": "I want to go to Dublin", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 12 minute equals 15 meridiem equals PM", "user_turn_1": "That works . Book it for one person", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.airLine_? (?= \" Eastern \"))) (Flight.source_? (Place.location_? (?= \" Liverpool \")))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (^((Constraint (List DateTime))) refer)))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 1))))))", "idx": "177", "datum_id": {"dialogue_id": "44cbc747-2f23-4f9f-8275-967c6ea6dac4", "turn_index": 3}}
{"user_turn_0": "Tell me the address of the restaurant", "agent_turn_0": "Root system inform restaurant find focus equals address equals Medivet Islington", "user_turn_1": "Great . Book it for me at the 11th 10 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Goat and Guru \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 11L))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 10L)))))))))))", "idx": "197", "datum_id": {"dialogue_id": "c04093b8-dc28-4ad0-aa5b-7fa58e0ff8c1", "turn_index": 4}}
{"user_turn_0": "Set it for Monday at 10:30 AM", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Also book a Spanish cuisine restaurant that is inexpensive for today at 11:30 AM", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.priceRange_? (?= (PriceRange.Low))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM))))))))) (Restaurant.foodType_? (?= (FoodType.Spanish))))))", "idx": "207", "datum_id": {"dialogue_id": "beff2f3e-49fe-4b2c-a33b-3cbfa0bbda2a", "turn_index": 2}}
{"user_turn_0": "Show me my reminders", "agent_turn_0": "Root system inform reminder find", "user_turn_1": "Remind me to take medicines", "tgt": "(plan (^(Reminder) Create :object (Reminder.reminderContent_? (?= \" take medicines \"))))", "idx": "214", "datum_id": {"dialogue_id": "94140ee8-4a81-415c-8008-635140e3aafe", "turn_index": 4}}
{"user_turn_0": "Do I have any event on Friday", "agent_turn_0": "Root system inform calendarEvent find object equals eventName equals football fun dateTimeRange equals startDateTime equals date equals dayOfWeek equals Friday time equals hour equals 1 meridiem equals PM", "user_turn_1": "Book my flight after 1 PM that day", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday))))) (List.exists_? (DateTime.time_? (?>= (someSalient (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM))))))))))))))", "idx": "218", "datum_id": {"dialogue_id": "663b45d0-fcaa-11ea-b8ba-acde48001122", "turn_index": 2}}
{"user_turn_0": "Birmingham", "agent_turn_0": "Root system prompt flight book object equals departureDateTime", "user_turn_1": "on Wednesday after 8 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (List.exists_? (DateTime.time_? (?>= (someSalient (Time.hour_? (?= (Hour.apply 8L)))))))))))))", "idx": "238", "datum_id": {"dialogue_id": "25a1050d-ceea-4ae8-9336-3fc5e3520641", "turn_index": 2}}
{"user_turn_0": "Friday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 4 object equals nextDepartureDateTime equals time equals hour equals 1 meridiem equals PM price equals 145", "user_turn_1": "ok , it looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "242", "datum_id": {"dialogue_id": "25a1050d-ceea-4ae8-9336-3fc5e3520641", "turn_index": 6}}
{"user_turn_0": "Can you give me the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "Ok . confirm this booking", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "253", "datum_id": {"dialogue_id": "00d89d5c-66d7-49c4-a302-ceaeec6b8ad3", "turn_index": 3}}
{"user_turn_0": "What options do I have ?", "agent_turn_0": "Root system inform hotel find focus equals roomType equals listElementOne Double listElementTwo Single listElementThree King listElementFour Queen", "user_turn_1": "I want double queen sized beds", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.roomType_? (List.exists_? (?= (RoomType.Queen))))) (Hotel.rooms_? (?= 2))))))", "idx": "256", "datum_id": {"dialogue_id": "00d89d5c-66d7-49c4-a302-ceaeec6b8ad3", "turn_index": 6}}
{"user_turn_0": "I want double queen sized beds", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "I actually need to check in on Monday instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Monday))))))", "idx": "257", "datum_id": {"dialogue_id": "00d89d5c-66d7-49c4-a302-ceaeec6b8ad3", "turn_index": 7}}
{"user_turn_0": "I actually need to check in on Monday instead", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel for free if I need to ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "258", "datum_id": {"dialogue_id": "00d89d5c-66d7-49c4-a302-ceaeec6b8ad3", "turn_index": 8}}
{"user_turn_0": "Tell me how far away The Daily Grind is from Tenbury Wells", "agent_turn_0": "Root system inform navigation find focus equals distance equals number equals 2", "user_turn_1": "Ok , how long will it take me to get from 61 Richmond Avenue to 415 Park Lane", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (& (Navigation.source_? (Place.location_? (?= \" 61 Richmond Avenue \"))) (Navigation.destination_? (Place.location_? (?= \" 415 Park Lane \"))))))", "idx": "262", "datum_id": {"dialogue_id": "718a319d-3118-44a3-b98f-b7c918dbb642", "turn_index": 2}}
{"user_turn_0": "Can you check for me if I have any event on 4 PM Tuesday", "agent_turn_0": "Root system inform calendarEvent find object equals eventName equals Animals party", "user_turn_1": "Got it , schedule my new event at 6 PM that day", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.startDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "268", "datum_id": {"dialogue_id": "663df500-fcaa-11ea-ad3c-acde48001122", "turn_index": 2}}
{"user_turn_0": "I will depart from Coventry", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 55 meridiem equals PM", "user_turn_1": "That works for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (^((Constraint Train)) refer)))))", "idx": "272", "datum_id": {"dialogue_id": "f2b11ed2-2da0-4bd6-9b32-c5679ea65603", "turn_index": 3}}
{"user_turn_0": "Chelmsford", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM", "user_turn_1": "I prefer the one at 1:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "279", "datum_id": {"dialogue_id": "d0ba4217-8f0d-432d-8fea-73e34d7de660", "turn_index": 2}}
{"user_turn_0": "Return on Sunday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM", "user_turn_1": "Yes ! please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "281", "datum_id": {"dialogue_id": "d0ba4217-8f0d-432d-8fea-73e34d7de660", "turn_index": 4}}
{"user_turn_0": "That sounds good", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "When does my calendar event Private Investigation happen ?", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (^(DateTime) always))) :object (CalendarEvent.eventName_? (?= \" Private Investigation \"))))", "idx": "300", "datum_id": {"dialogue_id": "6641199c-fcaa-11ea-8191-acde48001122", "turn_index": 2}}
{"user_turn_0": "Are laundry services offered at this hotel ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "306", "datum_id": {"dialogue_id": "46160c8d-3100-49b3-97ef-91381c3017f3", "turn_index": 2}}
{"user_turn_0": "I need two rooms", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "I want my check in date switched to Wednesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Wednesday))))))", "idx": "311", "datum_id": {"dialogue_id": "46160c8d-3100-49b3-97ef-91381c3017f3", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , 6:30 PM .", "tgt": "(plan (^(Flight) Find :focus (Flight.departureDateTime_? (^((List DateTime)) always)) :object (& (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (?= (Today))))) (Flight.destination_? (Place.location_? (?= \" Amsterdam \"))))))", "idx": "313", "datum_id": {"dialogue_id": "281ae5e2-3fde-4094-9282-a92d91bac6ad", "turn_index": 0}}
{"user_turn_0": "Change the departure of my first trip to tomorrow please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 11 minute equals 50 meridiem equals AM", "user_turn_1": "Ok , book this one for three people", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.airLine_? (?= \" Ryanair \"))) (Flight.source_? (Place.location_? (?= \" Liverpool \")))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (^((Constraint (List DateTime))) refer)))) (Flight.destination_? (Place.location_? (?= \" Brussel \")))) (Flight.nextDestination_? (^((Constraint Place)) refer))) (Flight.nextDepartureDateTime_? (& (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday)))) (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))) (Flight.passengers_? (?= 3))))))", "idx": "330", "datum_id": {"dialogue_id": "39324437-01f5-4075-833c-847c2cdf1f40", "turn_index": 7}}
{"user_turn_0": "Do I have any event at 2 PM on that day ?", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Schedule my new event at 2 PM on Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.startDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "334", "datum_id": {"dialogue_id": "66439dc0-fcaa-11ea-95d1-acde48001122", "turn_index": 2}}
{"user_turn_0": "What kind of food does it serve ?", "agent_turn_0": "Root system inform restaurant find focus equals foodType equals Indian food", "user_turn_1": "Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "337", "datum_id": {"dialogue_id": "90161e10-4725-467a-a6a6-53bc246000e3", "turn_index": 2}}
{"user_turn_0": "A table for 3", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Change the appointment date to today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (?= (Today))))))))", "idx": "339", "datum_id": {"dialogue_id": "90161e10-4725-467a-a6a6-53bc246000e3", "turn_index": 4}}
{"user_turn_0": "I 'm craving Indian", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "That works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "344", "datum_id": {"dialogue_id": "24b9ae0f-3200-47d3-b320-7bdcfae47d41", "turn_index": 3}}
{"user_turn_0": "London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM price equals 156", "user_turn_1": "I want the one at 1 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "358", "datum_id": {"dialogue_id": "06fd25c8-255f-4dd2-8a68-1f4ebbd2192f", "turn_index": 2}}
{"user_turn_0": "I want a different hotel that 's not rated zero stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Fresh Wave Resort price equals 134", "user_turn_1": "Is free Wi - Fi included ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasWifi_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "364", "datum_id": {"dialogue_id": "132ee73b-8b2c-4946-8eaa-b170e0b9bc05", "turn_index": 3}}
{"user_turn_0": "Is free Wi - Fi included ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Make the booking", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Crescent Resort \"))))))", "idx": "365", "datum_id": {"dialogue_id": "132ee73b-8b2c-4946-8eaa-b170e0b9bc05", "turn_index": 4}}
{"user_turn_0": "I need two king size beds", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to pre - pay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "369", "datum_id": {"dialogue_id": "132ee73b-8b2c-4946-8eaa-b170e0b9bc05", "turn_index": 8}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , schedule a calendar event on 6:30 o'clock", "tgt": "(plan (do (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (?= (Minute.apply 30L)))))))) (^(Reminder) Create :object (Reminder.reminderContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))))))", "idx": "371", "datum_id": {"dialogue_id": "1c1bbfe7-44e9-4933-9272-b5c79fb5dc6b", "turn_index": 0}}
{"user_turn_0": "it is 07086798286", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Send a message to 07984014665 that says do n't wait for me", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.phoneNumber_? (?= \" 07984014665 \"))) (Message.textContent_? (?= \" don't wait me \")))))", "idx": "375", "datum_id": {"dialogue_id": "1c1bbfe7-44e9-4933-9272-b5c79fb5dc6b", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , five stars .", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.rating_? (^(Number) always)) :object (& (Restaurant.restaurantName_? (?= \" The Lakeside Demon \")) (Restaurant.location_? (?= \" Hammersmith \")))))", "idx": "376", "datum_id": {"dialogue_id": "b42476e9-848e-4203-9e52-ec21dea81bf2", "turn_index": 0}}
{"user_turn_0": "I would like to create on my calendar the formula one at Sunday", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals startDateTime equals time", "user_turn_1": "Do I have any event at 5 PM on that day ?", "tgt": "(plan (^(CalendarEvent) Find :object (& (CalendarEvent.eventName_? (^((Constraint String)) refer)) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))) (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 5L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "383", "datum_id": {"dialogue_id": "6645c67a-fcaa-11ea-986a-acde48001122", "turn_index": 1}}
{"user_turn_0": "Do I have any event at 5 PM on that day ?", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Sounds great ! Please schedule 5 PM for me on Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.startDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 5L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "384", "datum_id": {"dialogue_id": "6645c67a-fcaa-11ea-986a-acde48001122", "turn_index": 2}}
{"user_turn_0": "Cityplace", "agent_turn_0": "Root system inform calendarEvent update Completed", "user_turn_1": "What are the walking directions ?", "tgt": "(plan (^(Navigation) Find :object (& (Navigation.destination_? (Place.location_? (?= \" Cityplace \"))) (Navigation.transportationMode_? (?= (TransportationMode.Walking))))))", "idx": "387", "datum_id": {"dialogue_id": "802c46dc-1c57-4744-8822-e22a3aa99b04", "turn_index": 2}}
{"user_turn_0": "What are the walking directions ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Give me directions to the we together outdoors on the calendar today", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Navigation)) Path.apply \" object \") (lambda (^(Constraint Navigation) x0) (Navigation.destination_? (?= (^(Place CalendarEvent) reference (& (CalendarEvent.eventName_? (?= \" we together outdoors \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today))))))))))))", "idx": "388", "datum_id": {"dialogue_id": "802c46dc-1c57-4744-8822-e22a3aa99b04", "turn_index": 3}}
{"user_turn_0": "Also can you make sure to remind me about it ?", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Can you set me a reminder for my event ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "402", "datum_id": {"dialogue_id": "66703a62-8af6-45fe-9f9a-4bccff526095", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "I would like to create a calendar event at Wednesday", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))))))", "idx": "410", "datum_id": {"dialogue_id": "66486b48-fcaa-11ea-87c1-acde48001122", "turn_index": 0}}
{"user_turn_0": "Is there any event which has been schedule at 2 PM that day ?", "agent_turn_0": "Root system inform calendarEvent find object equals eventName equals football fun", "user_turn_1": "move football fun to Sunday", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))) :object (CalendarEvent.eventName_? (?= \" football fun \"))))", "idx": "412", "datum_id": {"dialogue_id": "66486b48-fcaa-11ea-87c1-acde48001122", "turn_index": 2}}
{"user_turn_0": "move football fun to Sunday", "agent_turn_0": "Root system inform calendarEvent update Completed", "user_turn_1": "Schedule my new event at 2 PM Wednesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.startDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "413", "datum_id": {"dialogue_id": "66486b48-fcaa-11ea-87c1-acde48001122", "turn_index": 3}}
{"user_turn_0": "Is there a fitness center in the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "422", "datum_id": {"dialogue_id": "3e8c873c-dac2-4347-a9cd-ab307d6f92fd", "turn_index": 3}}
{"user_turn_0": "How much is that one ?", "agent_turn_0": "Root system inform flight find focus equals price equals 145", "user_turn_1": "Book me that flight for two people", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.source_? (Place.location_? (?= \" London Heathrow \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 2))))))", "idx": "429", "datum_id": {"dialogue_id": "5be29bc3-3806-450f-a711-82b34d5404fe", "turn_index": 2}}
{"user_turn_0": "I 'll be back Saturday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "437", "datum_id": {"dialogue_id": "2515498d-f1db-4acc-b048-c85dcdf7dbb8", "turn_index": 5}}
{"user_turn_0": "What class is that flight ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "Book that one for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "441", "datum_id": {"dialogue_id": "7905ee5b-8db1-4d95-b7e9-bf174c862e61", "turn_index": 2}}
{"user_turn_0": "On Sunday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM price equals 166", "user_turn_1": "That one works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "444", "datum_id": {"dialogue_id": "7905ee5b-8db1-4d95-b7e9-bf174c862e61", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , schedule a Configuration Management Summit for 2 o'clock that lasts for two hours on my calendar .", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 2L))))) (DateTimeRange.duration_? (AppleDuration.hour_? (?= 2))))) (CalendarEvent.eventName_? (?= \" Configuration Management Summit \")))))", "idx": "446", "datum_id": {"dialogue_id": "a37568e1-2860-4616-a6c1-800a7991effc", "turn_index": 0}}
{"user_turn_0": "I will return on Friday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "455", "datum_id": {"dialogue_id": "3be8d637-76cc-4326-ac71-5924f9eee0f0", "turn_index": 4}}
{"user_turn_0": "Yes I am looking for a low priced restaurant", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dingo", "user_turn_1": "What is the average cost per person", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "481", "datum_id": {"dialogue_id": "326f97e1-5d24-49dc-b7e6-59d9168a61ab", "turn_index": 3}}
{"user_turn_0": "What is the average cost per person", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 29", "user_turn_1": "OK . Book it for me today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (^((Constraint String)) refer))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Today)))))))))", "idx": "482", "datum_id": {"dialogue_id": "326f97e1-5d24-49dc-b7e6-59d9168a61ab", "turn_index": 4}}
{"user_turn_0": "Is this flight direct ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "That 's fine . Book this flight for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "489", "datum_id": {"dialogue_id": "71a540d6-53f0-4763-91a0-038555cf292a", "turn_index": 3}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root systen inform restaurant book Completed", "user_turn_1": "I want to book a table at a cheap Sushi restaurant", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (Restaurant.priceRange_? (?= (PriceRange.Low))) (Restaurant.foodType_? (?= (FoodType.Sushi)))))))", "idx": "501", "datum_id": {"dialogue_id": "c4494753-d624-4dd3-8d0f-9601fb442f7d", "turn_index": 3}}
{"user_turn_0": "What are the directions", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "508", "datum_id": {"dialogue_id": "3b4f48bc-b2a3-451d-a727-a22ac1acdcbb", "turn_index": 5}}
{"user_turn_0": "Three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you update the check in date to today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "513", "datum_id": {"dialogue_id": "3b4f48bc-b2a3-451d-a727-a22ac1acdcbb", "turn_index": 10}}
{"user_turn_0": "Can you update the check in date to today", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking allow for cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "514", "datum_id": {"dialogue_id": "3b4f48bc-b2a3-451d-a727-a22ac1acdcbb", "turn_index": 11}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant tell me the rating of the Green Acres", "tgt": "(plan (^(Hotel) Find :focus (Hotel.rating_? (^(Number) always)) :object (Hotel.hotelName_? (?= \" Green Acres \"))))", "idx": "516", "datum_id": {"dialogue_id": "7e53333b-1147-41f2-9e99-b8643ab7c204", "turn_index": 0}}
{"user_turn_0": "The hotel should not have a high price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals InterContinental price equals 142", "user_turn_1": "Does the hotel have free wifi ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasWifi_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "533", "datum_id": {"dialogue_id": "8064ad2e-91e4-41ff-b996-14d03ca4a674", "turn_index": 2}}
{"user_turn_0": "Does the hotel have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "534", "datum_id": {"dialogue_id": "8064ad2e-91e4-41ff-b996-14d03ca4a674", "turn_index": 3}}
{"user_turn_0": "I prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kiwi Sea", "user_turn_1": "Does the restaurant have parking", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "547", "datum_id": {"dialogue_id": "0beceebd-fff7-4e9e-b876-daa7ca3fa82e", "turn_index": 4}}
{"user_turn_0": "I prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Canton Silk", "user_turn_1": "Does the restaurant have outdoor seats", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "549", "datum_id": {"dialogue_id": "0beceebd-fff7-4e9e-b876-daa7ca3fa82e", "turn_index": 6}}
{"user_turn_0": "Does the restaurant have outdoor seats", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "Book it !", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Jurassic Pork \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L))))))))))))", "idx": "550", "datum_id": {"dialogue_id": "0beceebd-fff7-4e9e-b876-daa7ca3fa82e", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , what kind of car would you like ? You can choose from Saloon , MPV and Executive", "tgt": "(plan (^(Taxi) Book :object (Taxi.destination_? (Place.location_? (?= \" The African Waistcoat \")))))", "idx": "553", "datum_id": {"dialogue_id": "5c0227c9-179b-4b0b-80b4-d2682c50033a", "turn_index": 0}}
{"user_turn_0": "Spanish food , and not zero star", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Lakeside Demon", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "560", "datum_id": {"dialogue_id": "64f33d33-3c0c-46eb-9b09-dae3ece7829f", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , the reminder has been created for you .", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (& (Date.day_? (?= (Day.apply 25L))) (Date.month_? (?= (March))))))))))))", "idx": "565", "datum_id": {"dialogue_id": "d0cf3978-3830-4d4e-ba96-19aeb6fcac89", "turn_index": 0}}
{"user_turn_0": "Hey , the reminder has been created for you .", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Make a reminder for 6:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.atDateTime \") (lambda (^(Constraint DateTime) x0) (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))", "idx": "566", "datum_id": {"dialogue_id": "d0cf3978-3830-4d4e-ba96-19aeb6fcac89", "turn_index": 1}}
{"user_turn_0": "Does the hotel have free wifi", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "586", "datum_id": {"dialogue_id": "6356e25a-c79a-4297-9b49-b42437e72811", "turn_index": 4}}
{"user_turn_0": "Can I have 3 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you change the check out date to Friday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Friday))))))", "idx": "591", "datum_id": {"dialogue_id": "6356e25a-c79a-4297-9b49-b42437e72811", "turn_index": 9}}
{"user_turn_0": "How is the Renaissance hotel rated ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Go ahead and book it", "tgt": "(plan (^(Hotel) Book :object (Hotel.hotelName_? (^((Constraint String)) refer))))", "idx": "595", "datum_id": {"dialogue_id": "8835990e-9092-4ce5-b1d2-e0d11c6a9f2c", "turn_index": 2}}
{"user_turn_0": "Wait , I want 2 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait , move my check in date to Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "600", "datum_id": {"dialogue_id": "8835990e-9092-4ce5-b1d2-e0d11c6a9f2c", "turn_index": 7}}
{"user_turn_0": "Hey , here are the directions for how to get to my next event at 61 Richmond Avenue .", "agent_turn_0": "Root system inform navigation find object equals destination equals location equals 61 Richmond Avenue", "user_turn_1": "Thanks , also i want to see the directions for how to get to the 3 PM calendar event", "tgt": "(plan (^(Taxi) Book :object (Taxi.destination_? (^((Constraint Place)) refer))))", "idx": "603", "datum_id": {"dialogue_id": "8dcaae64-3836-4c1f-ba7f-55d063fd8869", "turn_index": 1}}
{"user_turn_0": "Just make sure the car type fits five passengers", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals 8063 Lake View", "user_turn_1": "Have my destination changed to 61 Hill Street", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" 61 Hill Street \"))))", "idx": "605", "datum_id": {"dialogue_id": "8dcaae64-3836-4c1f-ba7f-55d063fd8869", "turn_index": 3}}
{"user_turn_0": "do they have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "ok book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "611", "datum_id": {"dialogue_id": "bf6a20b5-05f8-4070-b314-2473f027da2e", "turn_index": 3}}
{"user_turn_0": "can you book it for me please", "agent_turn_0": "Root system prompt restaurant book object equals atDateTime tableSize", "user_turn_1": "Book it !", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 11L))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 5L)))))))))))", "idx": "625", "datum_id": {"dialogue_id": "c24ef55a-766c-498b-8aec-24dc30ac6444", "turn_index": 3}}
{"user_turn_0": "Any price range , but I want a three star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Moody Moon price equals 130", "user_turn_1": "Does it come with breakfast ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "641", "datum_id": {"dialogue_id": "e3670b3f-ee6d-4080-908d-288528877399", "turn_index": 2}}
{"user_turn_0": "Does it come with breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "642", "datum_id": {"dialogue_id": "e3670b3f-ee6d-4080-908d-288528877399", "turn_index": 3}}
{"user_turn_0": "3 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait , change my check out to Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Saturday))))))", "idx": "644", "datum_id": {"dialogue_id": "e3670b3f-ee6d-4080-908d-288528877399", "turn_index": 5}}
{"user_turn_0": "None of them look good . What about restaurants that serve pizza ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals La Zilla", "user_turn_1": "Does the restaurant take credit card ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "649", "datum_id": {"dialogue_id": "7a37f219-1988-4b4c-aa96-690974065080", "turn_index": 3}}
{"user_turn_0": "I prefer another restaurant with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flew Z", "user_turn_1": "Does the restaurant have parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "651", "datum_id": {"dialogue_id": "7a37f219-1988-4b4c-aa96-690974065080", "turn_index": 5}}
{"user_turn_0": "I prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Boiling Fence", "user_turn_1": "Does the restaurant take credit card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "653", "datum_id": {"dialogue_id": "7a37f219-1988-4b4c-aa96-690974065080", "turn_index": 7}}
{"user_turn_0": "Does the restaurant take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flip Out \"))))))", "idx": "654", "datum_id": {"dialogue_id": "7a37f219-1988-4b4c-aa96-690974065080", "turn_index": 8}}
{"user_turn_0": "I want to depart London on Monday", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "Try Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.departureDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Tuesday)))))", "idx": "660", "datum_id": {"dialogue_id": "a65e2c1d-9486-40ff-826b-43f636896caa", "turn_index": 2}}
{"user_turn_0": "Do any of the restaurants you found have a five star rating ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Goat and Guru", "user_turn_1": "Is parking offered at this restaurant ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "677", "datum_id": {"dialogue_id": "b1a283db-7552-41d3-9b7f-b21800fc2eac", "turn_index": 3}}
{"user_turn_0": "Is parking offered at this restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Maple \"))))))", "idx": "678", "datum_id": {"dialogue_id": "b1a283db-7552-41d3-9b7f-b21800fc2eac", "turn_index": 4}}
{"user_turn_0": "Table for 6 people", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Have the appointment date changed to January 16th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (& (Date.month_? (?= (January))) (Date.day_? (?= (Day.apply 16L))))))))))", "idx": "680", "datum_id": {"dialogue_id": "b1a283db-7552-41d3-9b7f-b21800fc2eac", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i need a plane ticket to Glasgow . I 'm leaving the 7th and coming back on the 25th .", "tgt": "(plan (^(Flight) Book :object (& (& (& (Flight.destination_? (Place.location_? (?= \" Glasgow \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 7L))))))) (Flight.returnDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 25L))))))))", "idx": "682", "datum_id": {"dialogue_id": "91effd67-2f7f-4f8c-8594-985192637073", "turn_index": 0}}
{"user_turn_0": "Yes . please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM price equals 150", "user_turn_1": "I 'll take it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Glasgow \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 7L))))) (^((Constraint (List DateTime))) refer)))) (Flight.returnDateTime_? (DateTime.date_? (^((Constraint Date)) refer)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 1))))))", "idx": "684", "datum_id": {"dialogue_id": "91effd67-2f7f-4f8c-8594-985192637073", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , book a Belfast departing before 8 PM on Monday", "tgt": "(plan (^(Flight) Book :object (& (Flight.destination_? (Place.location_? (?= \" Belfast \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (List.exists_? (DateTime.time_? (?<= (someSalient (& (Time.hour_? (?= (Hour.apply 8L))) (meridiem_? (?= (Meridiem.PM)))))))))))))", "idx": "692", "datum_id": {"dialogue_id": "bb8aebff-12bb-4694-aac5-36400d692439", "turn_index": 0}}
{"user_turn_0": "I will leave from Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I chose the one departing at 2 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "694", "datum_id": {"dialogue_id": "bb8aebff-12bb-4694-aac5-36400d692439", "turn_index": 2}}
{"user_turn_0": "Get me Chinese hotpot restaurants", "agent_turn_0": "Root system prompt restaurant book object equals priceRange", "user_turn_1": "Price range does n't matter as long as it has no less than one star", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.priceRange_? (?= (PriceRange.Any)))) (Restaurant.rating_? (?>= (someSalient (?= 1))))))))", "idx": "713", "datum_id": {"dialogue_id": "0baadbcd-62d8-4486-85f7-e87fc8d08dbf", "turn_index": 3}}
{"user_turn_0": "Price range does n't matter as long as it has no less than one star", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Empirica", "user_turn_1": "Book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Stazione restaurant \"))))))", "idx": "714", "datum_id": {"dialogue_id": "0baadbcd-62d8-4486-85f7-e87fc8d08dbf", "turn_index": 4}}
{"user_turn_0": "Next task , create a reminder for Thursday 's event", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Book a taxi from 29 Highgate Lane to the Feedback session", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" 29 Highgate Lane \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.eventName_? (?= \" Feedback session \"))))))))", "idx": "731", "datum_id": {"dialogue_id": "0e6b89ba-eb66-41b4-bc3c-03f0f8798bf1", "turn_index": 2}}
{"user_turn_0": "What 's its address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals The Dima Foundation", "user_turn_1": "Okay , that 's fine then . Please book it for me on the 16th at 5:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Capricorn \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 16L))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 5L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "738", "datum_id": {"dialogue_id": "4beb2792-f796-4207-9983-22cb8829e277", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , i 'm sending it to Mr Avery .", "tgt": "(plan (^(Message) Create :object (Message.textContent_? (?= (^(String Flight) reference (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (?= (Today))))))))))", "idx": "741", "datum_id": {"dialogue_id": "f313b7eb-508c-47c8-b33b-5647d3e4d129", "turn_index": 0}}
{"user_turn_0": "Hello , i 'm sending it to Mr Avery .", "agent_turn_0": "Root system prompt message create object equals recipients", "user_turn_1": "I need to send today 's flight schedule", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (& x0 (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Avery \")) (Person.namePrefix_? (?= \" Mr \")))))))))", "idx": "742", "datum_id": {"dialogue_id": "f313b7eb-508c-47c8-b33b-5647d3e4d129", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , I need you to please set up a cab ride going from 67 North Street , and add it to my schedule .", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" 67 North Street \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (^(CalendarEvent) always)))))))", "idx": "756", "datum_id": {"dialogue_id": "cc0161ce-db2d-48a9-b576-863eb68008f5", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , here are the directions for how to get to your destination .", "tgt": "(plan (^(Navigation) Find :object (& (& (Navigation.source_? (Place.location_? (?= \" Jackson Fish Wholesalers \"))) (Navigation.destination_? (Place.location_? (?= \" 40 Mayors Road \")))) (Navigation.transportationMode_? (?= (TransportationMode.PublicTransportation))))))", "idx": "767", "datum_id": {"dialogue_id": "b1b49c87-465f-4460-a7bf-72a8cc210d77", "turn_index": 0}}
{"user_turn_0": "Hi assistant , here are the directions for how to get to your destination .", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Will you be departing from Manchester ?", "tgt": "(plan (^(Flight) Book :object (& (Flight.class_? (?= (FlightClass.Business))) (Flight.passengers_? (?= 4)))))", "idx": "768", "datum_id": {"dialogue_id": "b1b49c87-465f-4460-a7bf-72a8cc210d77", "turn_index": 1}}
{"user_turn_0": "Hey assistant , i need directions to my event on Sunday .", "agent_turn_0": "Root system inform navigation find object equals destination equals location equals The Orion Suite", "user_turn_1": "What is the weather like there ?", "tgt": "(plan (^(WeatherReport) Find :object (WeatherReport.location_? (^((Constraint String)) refer))))", "idx": "775", "datum_id": {"dialogue_id": "575a54b5-5aaf-464d-9df2-3c29d3d17a7c", "turn_index": 1}}
{"user_turn_0": "What is the weather like there ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Sunny", "user_turn_1": "Do me another favor . I need to reserve a train before 8:30 PM to Euston", "tgt": "(plan (^(Train) Book :object (& (Train.destination_? (Place.location_? (?= \" Euston \"))) (Train.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (& (Time.hour_? (?= (Hour.apply 8L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "776", "datum_id": {"dialogue_id": "575a54b5-5aaf-464d-9df2-3c29d3d17a7c", "turn_index": 2}}
{"user_turn_0": "Leeds", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 40 meridiem equals PM", "user_turn_1": "I want the one leaving at 1:45 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (Train.departureDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "778", "datum_id": {"dialogue_id": "575a54b5-5aaf-464d-9df2-3c29d3d17a7c", "turn_index": 4}}
{"user_turn_0": "I would rather stay at a different one with at least a two star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Grand Hyatt price equals 210", "user_turn_1": "Sure , and does it have private bathroom ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.privateBath_? (^(Boolean) always)))))", "idx": "783", "datum_id": {"dialogue_id": "32f25c76-54bb-47df-aa13-cbd64f93e306", "turn_index": 3}}
{"user_turn_0": "Sure , and does it have private bathroom ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Go ahead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Lucia \"))))))", "idx": "784", "datum_id": {"dialogue_id": "32f25c76-54bb-47df-aa13-cbd64f93e306", "turn_index": 4}}
{"user_turn_0": "3 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually , update check - in for tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Tomorrow)))))", "idx": "788", "datum_id": {"dialogue_id": "32f25c76-54bb-47df-aa13-cbd64f93e306", "turn_index": 8}}
{"user_turn_0": "Is there outdoor seating at the restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "That 's ok . Make a reservation for 10:30 AM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM)))))))))))", "idx": "792", "datum_id": {"dialogue_id": "9867c4ab-c7b9-4130-ab3a-1cd3c206f8dc", "turn_index": 2}}
{"user_turn_0": "That 's ok . Make a reservation for 10:30 AM", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Change the reservation to today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (?= (Today))))))))", "idx": "793", "datum_id": {"dialogue_id": "9867c4ab-c7b9-4130-ab3a-1cd3c206f8dc", "turn_index": 3}}
{"user_turn_0": "Ok . What is the address of the restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 61 Hill Street", "user_turn_1": "That looks good , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Kiwi Sea \"))))))", "idx": "805", "datum_id": {"dialogue_id": "94df0824-0234-43da-bd3c-2c3393aaa25d", "turn_index": 4}}
{"user_turn_0": "Does it have a private bathroom ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "823", "datum_id": {"dialogue_id": "8cb9e411-6f15-49b8-ae15-96d62d74b2b6", "turn_index": 3}}
{"user_turn_0": "Hello , could you update weekly event on my calendar ?", "agent_turn_0": "Root system prompt calendarEvent update focus equals dateTimeRange equals startDateTime equals date", "user_turn_1": "Make it Wednesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Update \") (^((Constraint Date)) Path.apply \" focus.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Wednesday))))))", "idx": "836", "datum_id": {"dialogue_id": "c2f17688-d446-48d2-bbee-d319f12eb52e", "turn_index": 1}}
{"user_turn_0": "it is 6", "agent_turn_0": "Root system offer restaurant book inform calendarEvent find Conflicted", "user_turn_1": "Actually , can you change the booking time to 5:30 PM ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 5L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "843", "datum_id": {"dialogue_id": "4bd99b8e-e165-44cf-bc26-173e162b2990", "turn_index": 3}}
{"user_turn_0": "Is free wifi provided at this hotel ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "849", "datum_id": {"dialogue_id": "cebb8074-1e9a-445c-9483-c053e0a07994", "turn_index": 4}}
{"user_turn_0": "What will the weather be like in York tomorrow ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cloudy", "user_turn_1": "What 's the weather in Birmingham ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint WeatherReport)) Path.apply \" object \") (lambda (^(Constraint WeatherReport) x0) (WeatherReport.location_? (?= \" Birmingham \")))))", "idx": "860", "datum_id": {"dialogue_id": "f1225f8b-ed4b-414d-8ca1-078d63db2d59", "turn_index": 3}}
{"user_turn_0": "London Heathrow", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 2 meridiem equals PM price equals 134", "user_turn_1": "I 'd rather have the one that leaves at 1:20 PM and make it business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Amsterdam \"))) (Flight.passengers_? (?= 4))) (Flight.departureDateTime_? (& (^((Constraint (List DateTime))) refer) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "875", "datum_id": {"dialogue_id": "10284f6a-60f0-4201-8aac-678e9dcbc3c1", "turn_index": 3}}
{"user_turn_0": "Is that a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "I would actually prefer the 4 PM departure", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "885", "datum_id": {"dialogue_id": "1fb9327c-f044-4aa7-8ae1-f5165d839001", "turn_index": 3}}
{"user_turn_0": "Yes , for Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM price equals 201", "user_turn_1": "Looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "887", "datum_id": {"dialogue_id": "1fb9327c-f044-4aa7-8ae1-f5165d839001", "turn_index": 5}}
{"user_turn_0": "Do me another favor . Book me a reservation at a restaurant in London Bridge with parking", "agent_turn_0": "Root system prompt restaurant book object equals foodType", "user_turn_1": "A 3 star place that serves Chinese hotpot", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.foodType_? (?= (FoodType.ChineseHotPot)))) (Restaurant.rating_? (?= 3))))))", "idx": "891", "datum_id": {"dialogue_id": "bbe0ddc4-00b9-49a6-9a48-14582edc3429", "turn_index": 2}}
{"user_turn_0": "A 3 star place that serves Chinese hotpot", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Shining Gate", "user_turn_1": "Where is it ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "892", "datum_id": {"dialogue_id": "bbe0ddc4-00b9-49a6-9a48-14582edc3429", "turn_index": 3}}
{"user_turn_0": "Where is it ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals The Orion Suite", "user_turn_1": "Book it then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Shining Gate \"))))))", "idx": "893", "datum_id": {"dialogue_id": "bbe0ddc4-00b9-49a6-9a48-14582edc3429", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , show me moderate to low priced hotels", "tgt": "(plan (^(Hotel) Find :object (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))))", "idx": "904", "datum_id": {"dialogue_id": "7db8b6b7-1b66-4df9-81c9-8f28f95b23ca", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , i need to reserve a train ticket to Exeter before 9:30 PM .", "tgt": "(plan (^(Train) Book :object (& (Train.destination_? (Place.location_? (?= \" Exeter \"))) (Train.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (& (Time.hour_? (?= (Hour.apply 9L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "909", "datum_id": {"dialogue_id": "e6f8c615-e5a7-4f0c-a121-218cbd9656c9", "turn_index": 0}}
{"user_turn_0": "I 'm departing from Leicester", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 40 meridiem equals PM", "user_turn_1": "That looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (^((Constraint Train)) refer)))))", "idx": "911", "datum_id": {"dialogue_id": "e6f8c615-e5a7-4f0c-a121-218cbd9656c9", "turn_index": 2}}
{"user_turn_0": "I 'll be departing from London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I want the 4:30 PM departure", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "917", "datum_id": {"dialogue_id": "a570ee39-6da3-4fbe-bfa4-cb8fabef2ae3", "turn_index": 2}}
{"user_turn_0": "I 'll be back on Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM price equals 170", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "919", "datum_id": {"dialogue_id": "a570ee39-6da3-4fbe-bfa4-cb8fabef2ae3", "turn_index": 4}}
{"user_turn_0": "Schedule the taxi", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "Thanks for the help . I need a reservation at a low priced hotel near my event", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Hotel.priceRange_? (?= (PriceRange.Low))))))", "idx": "929", "datum_id": {"dialogue_id": "a72e3295-afcc-4fa1-b7f0-30fa5007f0e2", "turn_index": 3}}
{"user_turn_0": "This is fine", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM", "user_turn_1": "That 's fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "933", "datum_id": {"dialogue_id": "68592589-c1d7-4c83-9ec2-3c1248faab36", "turn_index": 2}}
{"user_turn_0": "What is the weather in Edinburgh tomorrow ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cold", "user_turn_1": "What is the weather in London ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint WeatherReport)) Path.apply \" object \") (lambda (^(Constraint WeatherReport) x0) (WeatherReport.location_? (?= \" London \")))))", "idx": "939", "datum_id": {"dialogue_id": "c4a10988-564c-4805-8c18-4e65335cfe15", "turn_index": 3}}
{"user_turn_0": "What is the weather in London ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Rainy", "user_turn_1": "Show me reminder at 1 PM", "tgt": "(plan (^(Reminder) Find :object (Reminder.atDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM))))))))", "idx": "940", "datum_id": {"dialogue_id": "c4a10988-564c-4805-8c18-4e65335cfe15", "turn_index": 4}}
{"user_turn_0": "Next task , set a reminder for the event please", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Can you remind me to get my dry cleanings please", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Reminder)) Path.apply \" object \") (lambda (^(Constraint Reminder) x0) (Reminder.reminderContent_? (?= \" get my dry cleanings \")))))", "idx": "948", "datum_id": {"dialogue_id": "a35d0f44-7700-4770-b188-9cf2e602ffeb", "turn_index": 2}}
{"user_turn_0": "When does my next event start ?", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals startDateTime equals time equals hour equals 11", "user_turn_1": "Set a reminder for that", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (^((Constraint DateTime)) refer))))", "idx": "962", "datum_id": {"dialogue_id": "b2026fb2-c36f-415d-8266-bc683ab1f72f", "turn_index": 2}}
{"user_turn_0": "Is it a direct flight", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Okay , book it for two people", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.class_? (?= (FlightClass.Economy))) (Flight.source_? (Place.location_? (?= \" London \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 2))))))", "idx": "969", "datum_id": {"dialogue_id": "e90647b4-248a-4325-a955-0ef513b6388e", "turn_index": 4}}
{"user_turn_0": "What is the average cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 39", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (^((Constraint String)) refer))))))", "idx": "977", "datum_id": {"dialogue_id": "2c350679-69e6-4357-8c87-0da25931d9a7", "turn_index": 4}}
{"user_turn_0": "Hi assistant , how about I book myself a hotel with no zero stars and car parking ?", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "I want the hotel to be in Bond street and have low prices", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.location_? (?= \" Bond Street \"))) (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "996", "datum_id": {"dialogue_id": "7a5f79f6-d78b-41a3-a7e1-d180e70e72cc", "turn_index": 1}}
{"user_turn_0": "Does that place offer private bath rooms", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Then get it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "998", "datum_id": {"dialogue_id": "7a5f79f6-d78b-41a3-a7e1-d180e70e72cc", "turn_index": 3}}
{"user_turn_0": "Two of them", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does this include breakfast ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "1004", "datum_id": {"dialogue_id": "7a5f79f6-d78b-41a3-a7e1-d180e70e72cc", "turn_index": 9}}
{"user_turn_0": "Does this include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Then I 'm ready to book", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "1005", "datum_id": {"dialogue_id": "7a5f79f6-d78b-41a3-a7e1-d180e70e72cc", "turn_index": 10}}
{"user_turn_0": "That 's absolutely correct", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I 'm planning to leave at 3:20 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "1013", "datum_id": {"dialogue_id": "be0a637f-85c2-4c7e-83de-e0dc846f2065", "turn_index": 2}}
{"user_turn_0": "I will return on the 20th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM price equals 135", "user_turn_1": "That works for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "1020", "datum_id": {"dialogue_id": "08e5402c-083d-4d40-8a94-195c16fd92e5", "turn_index": 4}}
{"user_turn_0": "Does it have parking ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it , please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "1030", "datum_id": {"dialogue_id": "5a95f591-705f-4862-ad88-22c4d1d02f41", "turn_index": 3}}
{"user_turn_0": "Two , please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does it support cancelling for free ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "1034", "datum_id": {"dialogue_id": "5a95f591-705f-4862-ad88-22c4d1d02f41", "turn_index": 7}}
{"user_turn_0": "I want to depart Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I want the one at 1:20 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "1038", "datum_id": {"dialogue_id": "b7deb4ba-6f0d-4b8c-9327-5417083eb7b0", "turn_index": 2}}
{"user_turn_0": "In Queen 's Park", "agent_turn_0": "Root system prompt hotel book object equals priceRange", "user_turn_1": "No . thanks", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.priceRange_? (?= (PriceRange.Any)))) (Hotel.hasParking_? (?= true))))))", "idx": "1048", "datum_id": {"dialogue_id": "f346f150-6df6-4c6f-bb31-f8016a3208c6", "turn_index": 2}}
{"user_turn_0": "Do they have a parking lot ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "1050", "datum_id": {"dialogue_id": "f346f150-6df6-4c6f-bb31-f8016a3208c6", "turn_index": 4}}
{"user_turn_0": "I need three rooms . I do n't care which room type", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you change the check - in to Monday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Monday))))))", "idx": "1054", "datum_id": {"dialogue_id": "f346f150-6df6-4c6f-bb31-f8016a3208c6", "turn_index": 8}}
{"user_turn_0": "That a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "I 'd rather the one at 1:40 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "1059", "datum_id": {"dialogue_id": "0fd631e9-933a-4d53-93ad-5dca79a6a568", "turn_index": 3}}
{"user_turn_0": "Nope , I 'm headed to Roma on Saturday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 2 object equals nextDepartureDateTime equals time equals hour equals 1 meridiem equals PM price equals 173", "user_turn_1": "That looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "1061", "datum_id": {"dialogue_id": "0fd631e9-933a-4d53-93ad-5dca79a6a568", "turn_index": 5}}
{"user_turn_0": "Will that be a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Ok , let 's get it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "1064", "datum_id": {"dialogue_id": "0fd631e9-933a-4d53-93ad-5dca79a6a568", "turn_index": 8}}
{"user_turn_0": "No , next I will go to Berlin on Friday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 5 object equals nextDepartureDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM price equals 119", "user_turn_1": "ok book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "1071", "datum_id": {"dialogue_id": "08c1968c-6a8f-4b3d-85d1-2201ff0b6ebf", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , book flight ticket from Leeds to Belfast City of February", "tgt": "(plan (^(Flight) Book :object (& (& (Flight.source_? (Place.location_? (?= \" Leeds \"))) (Flight.destination_? (Place.location_? (?= \" Belfast City \")))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (& (Date.month_? (?= (February))) (Date.day_? (?= (Day.apply 5L))))))))))", "idx": "1081", "datum_id": {"dialogue_id": "8c4a0f64-38eb-4858-9778-c07092ef4a21", "turn_index": 0}}
{"user_turn_0": "Hey assistant , book flight ticket from Leeds to Belfast City of February", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM price equals 155", "user_turn_1": "I prefer the 4:20 PM economic flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.source_? (Place.location_? (?= \" Leeds \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "1082", "datum_id": {"dialogue_id": "8c4a0f64-38eb-4858-9778-c07092ef4a21", "turn_index": 1}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system inform flight book Completed", "user_turn_1": "Send order info to my brother", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Brother))))) (Message.textContent_? (?= (^(String Flight) reference (^(Flight) always)))))))", "idx": "1084", "datum_id": {"dialogue_id": "8c4a0f64-38eb-4858-9778-c07092ef4a21", "turn_index": 3}}
{"user_turn_0": "No preference but make sure it fits two luggages", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals 8665 Fairway Avenue", "user_turn_1": "Change the destination to 6a Streatham Hill", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" 6a Streatham Hill \"))))", "idx": "1094", "datum_id": {"dialogue_id": "89683e28-fc78-4672-a4f3-53716f4764d0", "turn_index": 3}}
{"user_turn_0": "I need one double room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I need to prepay now ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "1112", "datum_id": {"dialogue_id": "fdb3d13c-8efd-495d-9505-fa689215fcd8", "turn_index": 5}}
{"user_turn_0": "As long as it fits four passengers", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals 22 North Ridge Park", "user_turn_1": "Change the destination to 61 Hill Street", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Place)) Path.apply \" object.destination \") (lambda (^(Constraint Place) x0) (Place.location_? (?= \" 61 Hill Street \")))))", "idx": "1116", "datum_id": {"dialogue_id": "ef437081-8dff-4ab4-96c3-a1ba1840f748", "turn_index": 2}}
{"user_turn_0": "I pick the one at 3:40 PM", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 meridiem equals PM", "user_turn_1": "That s good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "1123", "datum_id": {"dialogue_id": "df611ecc-8af9-4948-aa63-1049e4e0f911", "turn_index": 4}}
{"user_turn_0": "Are there any restaurants that serve Grill ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Beef Easy", "user_turn_1": "Do they have outdoor seating", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "1133", "datum_id": {"dialogue_id": "0cfb644a-f8e8-41b1-a5a9-bb77b862262e", "turn_index": 4}}
{"user_turn_0": "Okay , let 's look for another restaurant that has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "Where are they located", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "1135", "datum_id": {"dialogue_id": "0cfb644a-f8e8-41b1-a5a9-bb77b862262e", "turn_index": 6}}
{"user_turn_0": "Well , I would still prefer a restaurant with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flew Z", "user_turn_1": "Do they have parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "1137", "datum_id": {"dialogue_id": "0cfb644a-f8e8-41b1-a5a9-bb77b862262e", "turn_index": 8}}
{"user_turn_0": "Do they have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Perfect ! Book it !", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "1138", "datum_id": {"dialogue_id": "0cfb644a-f8e8-41b1-a5a9-bb77b862262e", "turn_index": 9}}
{"user_turn_0": "I 'm booking for a table of six", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "What if we changed the reservation to 5:30 PM ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 5L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "1140", "datum_id": {"dialogue_id": "0cfb644a-f8e8-41b1-a5a9-bb77b862262e", "turn_index": 11}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , when does Air Fair end today ?", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.endDateTime_? (^(DateTime) always))) :object (& (CalendarEvent.eventName_? (?= \" Air Fair \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today))))))))", "idx": "1152", "datum_id": {"dialogue_id": "23819e84-9ed4-443b-bfbd-3e41f5373533", "turn_index": 0}}
{"user_turn_0": "Hey assistant , when does Air Fair end today ?", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals endDateTime equals time equals hour equals 5", "user_turn_1": "Set a reminder at that time", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (^((Constraint DateTime)) refer))))", "idx": "1153", "datum_id": {"dialogue_id": "23819e84-9ed4-443b-bfbd-3e41f5373533", "turn_index": 1}}
{"user_turn_0": "The one with my parents", "agent_turn_0": "Root system prompt calendarEvent update focus equals dateTimeRange equals startDateTime equals time", "user_turn_1": "At 10:30 am", "tgt": "(plan (revise (^(Unit) Path.apply \" Update \") (^((Constraint Time)) Path.apply \" focus.dateTimeRange.startDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM)))))))", "idx": "1156", "datum_id": {"dialogue_id": "23819e84-9ed4-443b-bfbd-3e41f5373533", "turn_index": 4}}
{"user_turn_0": "Friday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM price equals 134", "user_turn_1": "This one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "1172", "datum_id": {"dialogue_id": "fa558686-31b4-404f-9de3-6f56010cb5b2", "turn_index": 5}}
{"user_turn_0": "Something moderate and not too high", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dingo", "user_turn_1": "Okay book a spot there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "1182", "datum_id": {"dialogue_id": "c6ecb3af-cba7-4a7e-8b9a-2616168f5191", "turn_index": 3}}
{"user_turn_0": "I 'd rather have a different restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Shining Gate", "user_turn_1": "Ok fine , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Capers \"))))))", "idx": "1191", "datum_id": {"dialogue_id": "871c048c-0094-46de-ac2f-9fdcdc2beaf1", "turn_index": 5}}
{"user_turn_0": "I do n't really know . I just need a restaurant with at lease a two star rating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Chipotle Grill", "user_turn_1": "What is the average cost per person ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "1198", "datum_id": {"dialogue_id": "55228193-e6eb-4c1a-b9b4-66c9db9470dd", "turn_index": 2}}
{"user_turn_0": "What is the average cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 42", "user_turn_1": "Okay , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (^((Constraint String)) refer))))))", "idx": "1199", "datum_id": {"dialogue_id": "55228193-e6eb-4c1a-b9b4-66c9db9470dd", "turn_index": 3}}
{"user_turn_0": "How do I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "I want to book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "1211", "datum_id": {"dialogue_id": "f6fb7625-0132-4a81-a25b-b1ebbf54929f", "turn_index": 4}}
{"user_turn_0": "Hello , add this mornings appointment to my calendar", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Do me another favor . Book a hotel in Notting Hill from September 18th to 22nd with double room", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" Notting Hill \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 18L)))) (month_? (Date.month_? (?= (September)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 22L)))))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Double)))))))", "idx": "1217", "datum_id": {"dialogue_id": "bd049517-021f-4b8c-963e-14c9c98647c8", "turn_index": 1}}
{"user_turn_0": "Tell me the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Okay book this one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Vitale \"))))))", "idx": "1222", "datum_id": {"dialogue_id": "bd049517-021f-4b8c-963e-14c9c98647c8", "turn_index": 6}}
{"user_turn_0": "Okay book this one", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Then I want to check in on Wednesday instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Wednesday))))))", "idx": "1223", "datum_id": {"dialogue_id": "bd049517-021f-4b8c-963e-14c9c98647c8", "turn_index": 7}}
{"user_turn_0": "Give me three rooms please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "1257", "datum_id": {"dialogue_id": "2fff5ed8-fce5-486e-a68b-db8baaaa5d5b", "turn_index": 7}}
{"user_turn_0": "Yes . I am returning on Saturday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM", "user_turn_1": "That works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "1263", "datum_id": {"dialogue_id": "69b0d99e-bc61-4a8d-885e-b3769acc5240", "turn_index": 4}}
{"user_turn_0": "What cabin class is that ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "Really , I 'd rather have business class on the flight departing at 4:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" Manchester \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday)))))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "1267", "datum_id": {"dialogue_id": "f00307e1-ebc7-436f-a463-130efffa3e87", "turn_index": 2}}
{"user_turn_0": "Really , I 'd rather have business class on the flight departing at 4:50 PM", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM price equals 145", "user_turn_1": "That sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "1268", "datum_id": {"dialogue_id": "f00307e1-ebc7-436f-a463-130efffa3e87", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "OK assistant , let me book a restaurant at 3 PM that has high price with three stars rating in Wembley .", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Wembley \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM)))))))) (Restaurant.priceRange_? (?= (PriceRange.High)))) (Restaurant.rating_? (?= 3)))))", "idx": "1275", "datum_id": {"dialogue_id": "0febaf11-186b-4cac-95bf-f6c1cd5b99db", "turn_index": 0}}
{"user_turn_0": "OK assistant , let me book a restaurant at 3 PM that has high price with three stars rating in Wembley .", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Interknack", "user_turn_1": "Look up the foot type it serves", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.foodType_? (^(FoodType) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "1276", "datum_id": {"dialogue_id": "0febaf11-186b-4cac-95bf-f6c1cd5b99db", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , what 's the price range of Stazione restaurant restaurant in Camden ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.priceRange_? (^(PriceRange) always)) :object (& (Restaurant.restaurantName_? (?= \" Stazione restaurant \")) (Restaurant.location_? (?= \" Camden Town \")))))", "idx": "1280", "datum_id": {"dialogue_id": "d0f5e842-923d-4367-97d5-30e150ef1964", "turn_index": 0}}
{"user_turn_0": "Hey assistant , what 's the price range of Stazione restaurant restaurant in Camden ?", "agent_turn_0": "Root system inform restaurant find focus equals priceRange equals Low", "user_turn_1": "What 's the rating ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.rating_? (^(Number) always)) :object (Restaurant.restaurantName_? (?= \" Stazione restaurant \"))))", "idx": "1281", "datum_id": {"dialogue_id": "d0f5e842-923d-4367-97d5-30e150ef1964", "turn_index": 1}}
{"user_turn_0": "What 's the rating ?", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 2", "user_turn_1": "I 'd like a table for 2", "tgt": "(plan (^(Restaurant) Book :object (& (^((Constraint Restaurant)) refer) (Restaurant.tableSize_? (?= 2)))))", "idx": "1282", "datum_id": {"dialogue_id": "d0f5e842-923d-4367-97d5-30e150ef1964", "turn_index": 2}}
{"user_turn_0": "Yeah , I will be", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM price equals 160", "user_turn_1": "Book that flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "1313", "datum_id": {"dialogue_id": "569fddc2-d553-4411-9a39-6cdabcc23208", "turn_index": 2}}
{"user_turn_0": "Hi assistant , my calendar event with my daughter , I need to add Christopher", "agent_turn_0": "Root system inform calendarEvent update Completed", "user_turn_1": "Thanks for the help . Text him , please", "tgt": "(plan (^(Message) Create :object (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Daughter)))))))", "idx": "1327", "datum_id": {"dialogue_id": "242ab478-b937-4564-81f7-562b98c313a3", "turn_index": 1}}
{"user_turn_0": "Does that price include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "That 's okay , we 'll stay here anyway", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "1339", "datum_id": {"dialogue_id": "2498e41c-f1d4-4394-aa06-dca2fcf3d5e5", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , i need to book a room near my next scheduled event that is n't expensive .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))))))", "idx": "1342", "datum_id": {"dialogue_id": "49a52f0a-3cbd-4296-bd95-b9a75b42edde", "turn_index": 0}}
{"user_turn_0": "Do they have a laundry room ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Ok book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "1344", "datum_id": {"dialogue_id": "49a52f0a-3cbd-4296-bd95-b9a75b42edde", "turn_index": 2}}
{"user_turn_0": "I would rather stay at a different hotel with at last a one star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Sheraton price equals 199", "user_turn_1": "Is breakfast in the price of the hotel ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "1353", "datum_id": {"dialogue_id": "452a7615-a961-40ee-a7ed-a6ae5ede28a4", "turn_index": 4}}
{"user_turn_0": "Is breakfast in the price of the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Fine , book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Fresh Wave Resort \"))))))", "idx": "1354", "datum_id": {"dialogue_id": "452a7615-a961-40ee-a7ed-a6ae5ede28a4", "turn_index": 5}}
{"user_turn_0": "is there an event on my calendar that lasts 45 minutes", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Schedule one", "tgt": "(plan (^(CalendarEvent) Create :object (^((Constraint CalendarEvent)) refer)))", "idx": "1362", "datum_id": {"dialogue_id": "c9d9ab04-8c13-4011-98ce-7b7257b02ae6", "turn_index": 4}}
{"user_turn_0": "Can you show me how to get there", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Thanks , go ahead and book the hotel for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "1366", "datum_id": {"dialogue_id": "c65614cd-1833-479f-af52-d88fbd206950", "turn_index": 3}}
{"user_turn_0": "Can you check at the Parallel Tower hotel instead", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you see if breakfast is included first", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "1370", "datum_id": {"dialogue_id": "c65614cd-1833-479f-af52-d88fbd206950", "turn_index": 7}}
{"user_turn_0": "Can you see if breakfast is included first", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "That 's OK go ahead and book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "1371", "datum_id": {"dialogue_id": "c65614cd-1833-479f-af52-d88fbd206950", "turn_index": 8}}
{"user_turn_0": "Hello , book hotel in Blackwall with car park .", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Ritz-Carlton price equals 138", "user_turn_1": "I prefer another hotel that is inexpensive", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "1378", "datum_id": {"dialogue_id": "2139e712-bd04-42a2-8420-8d24094b3a4e", "turn_index": 1}}
{"user_turn_0": "I prefer another hotel that is inexpensive", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals The Fresco price equals 201", "user_turn_1": "Does the hotel have free wifi ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasWifi_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "1379", "datum_id": {"dialogue_id": "2139e712-bd04-42a2-8420-8d24094b3a4e", "turn_index": 2}}
{"user_turn_0": "Does the hotel have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Great , book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Ritz-Carlton \"))))))", "idx": "1380", "datum_id": {"dialogue_id": "2139e712-bd04-42a2-8420-8d24094b3a4e", "turn_index": 3}}
{"user_turn_0": "Can I have 3 rooms ?", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Ok , can I check in on Tuesday instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "1384", "datum_id": {"dialogue_id": "2139e712-bd04-42a2-8420-8d24094b3a4e", "turn_index": 7}}
{"user_turn_0": "Ok , can I check in on Tuesday instead ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to make a prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "1385", "datum_id": {"dialogue_id": "2139e712-bd04-42a2-8420-8d24094b3a4e", "turn_index": 8}}
{"user_turn_0": "From Southampton", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 55 meridiem equals PM", "user_turn_1": "Sure , I 'll take it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (^((Constraint Train)) refer)))))", "idx": "1399", "datum_id": {"dialogue_id": "74d443ef-239e-42c3-981c-8ed7b4f7ccd9", "turn_index": 2}}
{"user_turn_0": "I need three rooms", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Have my check in date changed to Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.startDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Tuesday)))))", "idx": "1406", "datum_id": {"dialogue_id": "0abd70f8-cb1f-470e-896b-a9b9e456e167", "turn_index": 4}}
{"user_turn_0": "Have my check in date changed to Tuesday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I need to make a prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "1407", "datum_id": {"dialogue_id": "0abd70f8-cb1f-470e-896b-a9b9e456e167", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , i prefer the 2:20 PM departure .", "tgt": "(plan (^(Flight) Book :object (& (& (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" Birmingham \")))) (Flight.destination_? (Place.location_? (?= \" Paris \")))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))))) (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday))))))))", "idx": "1414", "datum_id": {"dialogue_id": "317a74ec-e1a2-41d3-8520-00bcd059b263", "turn_index": 0}}
{"user_turn_0": "Hello , i prefer the 2:20 PM departure .", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals listElementOne time equals hour equals 2 minute equals 20 meridiem equals PM listElementTwo time equals hour equals 4 minute equals 45 meridiem equals PM", "user_turn_1": "I found two flights on your departure date . The first departs at 2:20 PM and the second departs at 4:45 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "1415", "datum_id": {"dialogue_id": "317a74ec-e1a2-41d3-8520-00bcd059b263", "turn_index": 1}}
{"user_turn_0": "Hello assistant , i need a round trip plane ticket to Glasgow to Liverpool . I 'm leaving Monday .", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM price equals 156", "user_turn_1": "I 'd rather do the 4:30 PM flight with economy class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" Liverpool \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "1435", "datum_id": {"dialogue_id": "d8be265d-0068-4090-8053-e1a8079a6cd2", "turn_index": 1}}
{"user_turn_0": "On the 23rd", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM price equals 125", "user_turn_1": "That looks pretty good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "1437", "datum_id": {"dialogue_id": "d8be265d-0068-4090-8053-e1a8079a6cd2", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i need a taxi to my event venue .", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" 36 Albert Road \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))))))))))", "idx": "1444", "datum_id": {"dialogue_id": "4dcd7c98-87b8-4247-bbad-fac40caa9493", "turn_index": 0}}
{"user_turn_0": "Does that place have laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Get it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "1461", "datum_id": {"dialogue_id": "54d5a23b-309b-4957-ae93-f6ef06c7ca9f", "turn_index": 2}}
{"user_turn_0": "Sure , please book it for me", "agent_turn_0": "Root system inform hotel book Completed", "user_turn_1": "Send the event on Tuesday to my daughter please", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Daughter))))) (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))))))))))", "idx": "1474", "datum_id": {"dialogue_id": "2328cab1-c6f7-4c60-a8bb-22bbcbfe5d56", "turn_index": 4}}
{"user_turn_0": "it is 07905976850", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "how far away is the venue event on my calendar", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (Navigation.destination_? (?= (^(Place CalendarEvent) reference (^(CalendarEvent) always))))))", "idx": "1477", "datum_id": {"dialogue_id": "67d13e4d-51ec-4276-aec4-c6f244accb34", "turn_index": 2}}
{"user_turn_0": "Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM price equals 199", "user_turn_1": "It looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "1496", "datum_id": {"dialogue_id": "54dc8519-6f35-4972-ad5c-c829b5ded05a", "turn_index": 6}}
{"user_turn_0": "I will be going to 1 Islington Green starting from Ash Grove Industrial Park", "agent_turn_0": "Root system prompt taxi book object equals serviceType inform taxi find object equals serviceType equals listElementOne Saloon listElementTwo MPV listElementThree Executive", "user_turn_1": "It does n't matter , but it must fit two pieces of luggage", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Taxi)) Path.apply \" object \") (lambda (^(Constraint Taxi) x0) (& (& x0 (Taxi.serviceType_? (List.exists_? (?= (ServiceType.Any))))) (Taxi.luggages_? (?= 2))))))", "idx": "1500", "datum_id": {"dialogue_id": "c8c4b5bb-1162-4922-8c40-bd1e41dc73fa", "turn_index": 2}}
{"user_turn_0": "Alright then . Can you get me a table for Thursday ?", "agent_turn_0": "Root system prompt restaurant book object equals atDateTime equals time inform restaurant find object equals atDateTime equals listElementOne time equals hour equals 5 minute equals 30 meridiem equals PM listElementTwo time equals hour equals 7 meridiem equals PM listElementThree time equals hour equals 11 meridiem equals AM", "user_turn_1": "Let 's do 19:00 please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 7L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "1507", "datum_id": {"dialogue_id": "71d15a15-b350-4cf0-8a6f-1c96e624f48e", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , send a message to my brother that says Where are you", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Brother))))) (Message.textContent_? (?= \" where are you \")))))", "idx": "1515", "datum_id": {"dialogue_id": "4f933bb5-8028-4de8-957a-268da8ae1826", "turn_index": 0}}
{"user_turn_0": "Erase my calendar event now", "agent_turn_0": "Root system prompt calendarEvent delete object", "user_turn_1": "The one named Leadership skill discussion", "tgt": "(plan (revise (^(Unit) Path.apply \" Delete \") (^((Option (Constraint CalendarEvent))) Path.apply \" object \") (lambda (^(Option (Constraint CalendarEvent)) x0) (Some (CalendarEvent.eventName_? (?= \" Leadership skill discussion \"))))))", "idx": "1555", "datum_id": {"dialogue_id": "a1e02e72-61d9-41d3-96ed-4cd7e78adabe", "turn_index": 2}}
{"user_turn_0": "Which airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals British", "user_turn_1": "I want to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "1562", "datum_id": {"dialogue_id": "083ca733-cd10-479e-8d60-dee1fd9f9a71", "turn_index": 4}}
{"user_turn_0": "Which of the restaurants have rating at least three stars ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Bard\u2019s Bench", "user_turn_1": "Does the restaurant have parking ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "1581", "datum_id": {"dialogue_id": "59e5d6a9-a5af-4280-9c28-052faed216b4", "turn_index": 2}}
{"user_turn_0": "I prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Emptia", "user_turn_1": "Does the restaurant have outdoor seats ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "1583", "datum_id": {"dialogue_id": "59e5d6a9-a5af-4280-9c28-052faed216b4", "turn_index": 4}}
{"user_turn_0": "I prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals La Zilla", "user_turn_1": "What is the address of the restaurant ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "1585", "datum_id": {"dialogue_id": "59e5d6a9-a5af-4280-9c28-052faed216b4", "turn_index": 6}}
{"user_turn_0": "What is the address of the restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 7 Barrow Point Avenue", "user_turn_1": "That 's fine . Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Jute Joint \"))))))", "idx": "1586", "datum_id": {"dialogue_id": "59e5d6a9-a5af-4280-9c28-052faed216b4", "turn_index": 7}}
{"user_turn_0": "That 's fine . Book it please", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Ok , can you change the appointment time to 1:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "1587", "datum_id": {"dialogue_id": "59e5d6a9-a5af-4280-9c28-052faed216b4", "turn_index": 8}}
{"user_turn_0": "Does the hotel have free wifi", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "1598", "datum_id": {"dialogue_id": "30f3f6ea-23ff-4563-bbb4-8429d2f3b283", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , I need you to set up a restaurant booking with an affordable price point , that has parking . It needs to be at 2:30 PM on Sunday .", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High))))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Restaurant.hasParking_? (?= true)))))", "idx": "1603", "datum_id": {"dialogue_id": "53de2ecf-4bad-4ee1-8745-51a6dec9c211", "turn_index": 0}}
{"user_turn_0": "Yeah , okay . Let 's go with that", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Dang it , alright . Umm , go on and switch the date to be on tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Tomorrow)))))", "idx": "1606", "datum_id": {"dialogue_id": "53de2ecf-4bad-4ee1-8745-51a6dec9c211", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , 7 miles .", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (Navigation.destination_? (Place.location_? (?= \" 207 Upper Street \")))))", "idx": "1619", "datum_id": {"dialogue_id": "f99b33d1-1f88-447f-bec5-bcf8473c3017", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , i 'm departing from Peterborough .", "tgt": "(plan (^(Train) Book :object (& (Train.destination_? (Place.location_? (?= \" Southampton \"))) (Train.departureDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 7L))))))))", "idx": "1624", "datum_id": {"dialogue_id": "278a96cb-7e00-46b8-a29c-731b85fffd40", "turn_index": 0}}
{"user_turn_0": "Will you be departing from Waterloo ?", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM", "user_turn_1": "I prefer the 3:40 PM one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "1626", "datum_id": {"dialogue_id": "278a96cb-7e00-46b8-a29c-731b85fffd40", "turn_index": 2}}
{"user_turn_0": "I 'll be coming back on Sunday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "1628", "datum_id": {"dialogue_id": "278a96cb-7e00-46b8-a29c-731b85fffd40", "turn_index": 4}}
{"user_turn_0": "Sure . Book it now", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "Did Ava call me ?", "tgt": "(plan (^(PhoneCall) CheckExistence :object (& (PhoneCall.newness_? (?= (Newness.New))) (PhoneCall.sender_? (Contact.person_? (Person.name_? (?= \" Ava \")))))))", "idx": "1634", "datum_id": {"dialogue_id": "969dc0e5-632d-417e-812e-2a70974bfe4f", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , is there a car type that you prefer ? Your choices include Saloon , MPV and Executive .", "tgt": "(plan (^(Taxi) Book :object (& (& (Taxi.source_? (Place.location_? (?= \" Medivet Islington \"))) (Taxi.destination_? (Place.location_? (?= \" 9 School Lane \")))) (Taxi.passengers_? (?= 4)))))", "idx": "1635", "datum_id": {"dialogue_id": "cddcf86b-2c28-4f1d-b56b-a9d98e066b3e", "turn_index": 0}}
{"user_turn_0": "Hello assistant , is there a car type that you prefer ? Your choices include Saloon , MPV and Executive .", "agent_turn_0": "Root system prompt taxi book object equals serviceType inform taxi find object equals serviceType equals listElementOne Saloon listElementTwo MPV listElementThree Executive", "user_turn_1": "A taxi order has been created for you . Would you like me to submit the order now ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Taxi)) Path.apply \" object \") (lambda (^(Constraint Taxi) x0) (& (& x0 (Taxi.serviceType_? (List.exists_? (?= (ServiceType.Any))))) (Taxi.luggages_? (?= 1))))))", "idx": "1636", "datum_id": {"dialogue_id": "cddcf86b-2c28-4f1d-b56b-a9d98e066b3e", "turn_index": 1}}
{"user_turn_0": "London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 1 meridiem equals PM price equals 65", "user_turn_1": "That 's ok . I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "1642", "datum_id": {"dialogue_id": "f6fed464-d7f7-4294-9497-320509986df7", "turn_index": 2}}
{"user_turn_0": "Nope , from Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 12 minute equals 25 meridiem equals PM", "user_turn_1": "I want the flight at 4:40 PM instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "1666", "datum_id": {"dialogue_id": "93d69f57-2828-4773-bb82-c1036e8dd6fc", "turn_index": 2}}
{"user_turn_0": "I want the flight at 4:40 PM instead", "agent_turn_0": "Root system offer flight book", "user_turn_1": "On Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint TripType)) Path.apply \" object.tripType \") (lambda (^(Constraint TripType) x0) (?= (TripType.roundTrip)))))", "idx": "1667", "datum_id": {"dialogue_id": "93d69f57-2828-4773-bb82-c1036e8dd6fc", "turn_index": 3}}
{"user_turn_0": "Saturday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM", "user_turn_1": "I prefer the 2PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "1703", "datum_id": {"dialogue_id": "97b25635-e384-4f16-a309-26bc5c0c0626", "turn_index": 6}}
{"user_turn_0": "From London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM price equals 138", "user_turn_1": "Okay , put me on that flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "1707", "datum_id": {"dialogue_id": "a92d26cd-8596-4da8-829a-f0b066e2c80f", "turn_index": 2}}
{"user_turn_0": "I prefer another restaurant with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Canton Silk", "user_turn_1": "What is the average cost per person", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "1714", "datum_id": {"dialogue_id": "7708b873-4e35-4d97-8534-5d993fb0ea19", "turn_index": 4}}
{"user_turn_0": "What is the average cost per person", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 36", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Interknack \"))))))", "idx": "1715", "datum_id": {"dialogue_id": "7708b873-4e35-4d97-8534-5d993fb0ea19", "turn_index": 5}}
{"user_turn_0": "The 19th", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM", "user_turn_1": "That works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "1731", "datum_id": {"dialogue_id": "d71e3c13-3c8c-45ab-b9e1-2c78739c961d", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , book hotel in Somerstown . with at least three stars", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= \" Somerstown \")) (Hotel.rating_? (?>= (someSalient (?= 3)))))))", "idx": "1738", "datum_id": {"dialogue_id": "2f5584cf-213d-4800-82bd-3aff5337b21a", "turn_index": 0}}
{"user_turn_0": "how about another hotel with moderate price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Fresh Wave Resort price equals 160", "user_turn_1": "Is there a fitness center", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasFitness_? (^(Boolean) always)))))", "idx": "1741", "datum_id": {"dialogue_id": "2f5584cf-213d-4800-82bd-3aff5337b21a", "turn_index": 3}}
{"user_turn_0": "Is there a fitness center", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" The Watson \"))))))", "idx": "1742", "datum_id": {"dialogue_id": "2f5584cf-213d-4800-82bd-3aff5337b21a", "turn_index": 4}}
{"user_turn_0": "Hi my assistant , how long will it take to get to where my next event is", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 15", "user_turn_1": "Can you book me a taxi there at 10:30 o'clock please", "tgt": "(plan (^(Taxi) Book :object (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L))))))))))))", "idx": "1759", "datum_id": {"dialogue_id": "0d913b50-23ba-4808-8111-925f456f6cb7", "turn_index": 1}}
{"user_turn_0": "No from Aberdeen", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM", "user_turn_1": "I want 4:20 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "1770", "datum_id": {"dialogue_id": "91facd5f-bf4e-4206-96cb-af61b1433919", "turn_index": 2}}
{"user_turn_0": "I need a restaurant with parking also", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals La Zilla", "user_turn_1": "What is the cost person on average ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "1779", "datum_id": {"dialogue_id": "f7cf7816-0acd-42be-ac7b-8a3f31b2d444", "turn_index": 5}}
{"user_turn_0": "What is the cost person on average ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 36", "user_turn_1": "Book it for June the 28th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Jute Joint \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (& (Date.month_? (?= (June))) (Date.day_? (?= (Day.apply 28L)))))))))))", "idx": "1780", "datum_id": {"dialogue_id": "f7cf7816-0acd-42be-ac7b-8a3f31b2d444", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , i want to book a restaurant", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.location_? (?= \" Wembley Park \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 11L))))))))))", "idx": "1794", "datum_id": {"dialogue_id": "8dc3c79d-93e2-4c4d-8383-43024bbf2946", "turn_index": 0}}
{"user_turn_0": "What is the address of the restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals Medivet Islington", "user_turn_1": "Ok . book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Kitty City \"))))))", "idx": "1797", "datum_id": {"dialogue_id": "8dc3c79d-93e2-4c4d-8383-43024bbf2946", "turn_index": 3}}
{"user_turn_0": "Manchester", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "Try Monday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Monday))))))", "idx": "1802", "datum_id": {"dialogue_id": "ac6b3704-5e19-4fd0-b00e-dd911b10cbbd", "turn_index": 2}}
{"user_turn_0": "What kind of food do they do ?", "agent_turn_0": "Root system inform restaurant find focus equals foodType equals Spanish food", "user_turn_1": "Ok , can you make reservations there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "1817", "datum_id": {"dialogue_id": "2bd50c2e-52e4-423b-9454-b8aafbc7611e", "turn_index": 2}}
{"user_turn_0": "Any price range , as long as it has three stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jurassic Pork", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Hambone \"))))))", "idx": "1842", "datum_id": {"dialogue_id": "40f917ce-f5d1-4ec0-8c9b-dcb380d8df94", "turn_index": 5}}
{"user_turn_0": "Table for 4", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Edit the time to tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (?= (Tomorrow))))))))", "idx": "1844", "datum_id": {"dialogue_id": "40f917ce-f5d1-4ec0-8c9b-dcb380d8df94", "turn_index": 7}}
{"user_turn_0": "How long is the journey ?", "agent_turn_0": "Root system inform flight find focus equals duration equals hour equals 1", "user_turn_1": "OK . Book it for one passenger", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Dublin \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 1))))))", "idx": "1864", "datum_id": {"dialogue_id": "49592394-26bf-4931-92b5-36a3e2d605e9", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , book a chinese restaurant with rating of not zero star and car park .", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.rating_? (?!= (someSalient (?= 0)))) (Restaurant.foodType_? (?= (FoodType.Chinese)))) (Restaurant.hasParking_? (?= true)))))", "idx": "1873", "datum_id": {"dialogue_id": "e4ed0ab3-2240-48a3-9f5d-5d437c1f9835", "turn_index": 0}}
{"user_turn_0": "I want another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Goat and Guru", "user_turn_1": "What is the address ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "1878", "datum_id": {"dialogue_id": "e4ed0ab3-2240-48a3-9f5d-5d437c1f9835", "turn_index": 5}}
{"user_turn_0": "What is the address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 67 North Street", "user_turn_1": "Book it today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Dimple's \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Today)))))))))", "idx": "1879", "datum_id": {"dialogue_id": "e4ed0ab3-2240-48a3-9f5d-5d437c1f9835", "turn_index": 6}}
{"user_turn_0": "Does that place have laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book that one for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "1891", "datum_id": {"dialogue_id": "51f16292-136f-48b9-9707-c2d9a71848ff", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , i need to see when my salon event will start on my calendar .", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (^(DateTime) always))) :object (CalendarEvent.eventName_? (?= \" salon \"))))", "idx": "1901", "datum_id": {"dialogue_id": "04aa4132-51d6-4ed0-b9e5-89a2229ebf13", "turn_index": 0}}
{"user_turn_0": "I want the 1:50 PM train", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "1911", "datum_id": {"dialogue_id": "81c98461-3e18-45cb-86dd-0fabf9b0494e", "turn_index": 4}}
{"user_turn_0": "Japanese with at least three stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Goat and Guru", "user_turn_1": "Are there outdoor seats there ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "1921", "datum_id": {"dialogue_id": "5a1406ce-a481-458f-9162-9c9b7c0dde2b", "turn_index": 4}}
{"user_turn_0": "None of them looks good . Can you show me more options ? Food type does n't matter", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Gogol", "user_turn_1": "What is the address of the restaurant ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "1933", "datum_id": {"dialogue_id": "08130a30-ad47-414f-9dd1-aa6e99f15818", "turn_index": 6}}
{"user_turn_0": "What is the address of the restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals Jackson Fish Wholesalers", "user_turn_1": "That 's fine . Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Jurassic Pork \"))))))", "idx": "1934", "datum_id": {"dialogue_id": "08130a30-ad47-414f-9dd1-aa6e99f15818", "turn_index": 7}}
{"user_turn_0": "What is it rated", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "1941", "datum_id": {"dialogue_id": "e54e28ca-42aa-4970-9b9c-8e3d0378158e", "turn_index": 3}}
{"user_turn_0": "I need three doubles", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Add an extra night", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Sunday)))))", "idx": "1944", "datum_id": {"dialogue_id": "e54e28ca-42aa-4970-9b9c-8e3d0378158e", "turn_index": 6}}
{"user_turn_0": "Add an extra night", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I pay now ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "1945", "datum_id": {"dialogue_id": "e54e28ca-42aa-4970-9b9c-8e3d0378158e", "turn_index": 7}}
{"user_turn_0": "I would rather go to a hotel that has a rating of at least one stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Candlewood Suites price equals 160", "user_turn_1": "What 's the rating of that hotel ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.rating_? (^(Number) always)))))", "idx": "1960", "datum_id": {"dialogue_id": "84e18554-1a66-419b-9ca7-2402dd40e976", "turn_index": 3}}
{"user_turn_0": "What 's the rating of that hotel ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Ok , reserve me a room", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Dreamy Desert Suites \"))))))", "idx": "1961", "datum_id": {"dialogue_id": "84e18554-1a66-419b-9ca7-2402dd40e976", "turn_index": 4}}
{"user_turn_0": "Two rooms please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "If I change my mind later will I have to pay a cancellation fee ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "1967", "datum_id": {"dialogue_id": "84e18554-1a66-419b-9ca7-2402dd40e976", "turn_index": 10}}
{"user_turn_0": "Not sure , could you just show me the options with a five - star rating ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kiwi Sea", "user_turn_1": "Sounds great . Please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Shining Gate \"))))))", "idx": "1982", "datum_id": {"dialogue_id": "5b193c32-6ca2-42f2-8612-9190ca6f1efa", "turn_index": 3}}
{"user_turn_0": "Find a different hotel that has four stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Four Seasons price equals 125", "user_turn_1": "Is there a fitness center ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasFitness_? (^(Boolean) always)))))", "idx": "1993", "datum_id": {"dialogue_id": "580bcfb3-71bf-41ef-8746-b93bdc19940f", "turn_index": 3}}
{"user_turn_0": "Is there a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Okay , I 'll take that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Hyatt \"))))))", "idx": "1994", "datum_id": {"dialogue_id": "580bcfb3-71bf-41ef-8746-b93bdc19940f", "turn_index": 4}}
{"user_turn_0": "I would like another restaurant that has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Gogol", "user_turn_1": "I would like to book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Acacia Saint \"))))))", "idx": "2010", "datum_id": {"dialogue_id": "628582a3-fe0d-48e0-a52d-dd58a6c5702a", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , please get me a taxi from The Body Shop in Upper Street to my calendar event .", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" The Body Shop in Upper Street \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (^(CalendarEvent) always)))))))", "idx": "2014", "datum_id": {"dialogue_id": "bba73898-29b2-44a9-b394-313065e7313e", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , when does flight BA 350 arrive ?", "tgt": "(plan (^(Flight) Find :focus (Flight.arrivalDateTime_? (^(DateTime) always)) :object (Flight.flightNumber_? (?= \" BA350 \"))))", "idx": "2029", "datum_id": {"dialogue_id": "e40956e4-e293-4c69-9621-f608bdeb0865", "turn_index": 0}}
{"user_turn_0": "Hello assistant , how can I get from 9028 Woodsman Lane to Ash Grove Industrial Park by public transportation", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "What 's the weather like ?", "tgt": "(plan (^(WeatherReport) Find))", "idx": "2035", "datum_id": {"dialogue_id": "f9295c65-317b-43f6-a50e-a5a10cb56151", "turn_index": 1}}
{"user_turn_0": "I will be going to Brussel and will be leaving on Monday", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM price equals 138", "user_turn_1": "Not that one but the one at 3:40 PM . I need it to be an economy class ticket", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.source_? (Place.location_? (?= \" Leeds \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "2042", "datum_id": {"dialogue_id": "c5dbdccf-c3df-4b64-8a17-dbb72dac9351", "turn_index": 2}}
{"user_turn_0": "Out of Liverpool", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM price equals 199", "user_turn_1": "I would prefer the economy class leaving out at 1:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.tripType_? (?= (TripType.oneWay)))) (Flight.passengers_? (?= 1))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "2047", "datum_id": {"dialogue_id": "fdccbb0e-a898-4fc0-93a6-1a84f4033e17", "turn_index": 2}}
{"user_turn_0": "Show me the directions on how to get there", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Ok , book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "2061", "datum_id": {"dialogue_id": "9156b6e5-178e-42b5-a518-17d6ab4157e6", "turn_index": 3}}
{"user_turn_0": "Does that place provide car parking ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Please make the booking for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "2068", "datum_id": {"dialogue_id": "aa7a5483-bd90-4e9a-8061-7953f19fad99", "turn_index": 4}}
{"user_turn_0": "What can you tell me about the Peninsula hotel 's availability ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can this booking be canceled for free ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "2073", "datum_id": {"dialogue_id": "aa7a5483-bd90-4e9a-8061-7953f19fad99", "turn_index": 9}}
{"user_turn_0": "Hello , put a reminder in my phone for me .", "agent_turn_0": "Root system prompt reminder create object equals atDateTime", "user_turn_1": "At 11 on the 8th please", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Option (Constraint Reminder))) Path.apply \" object \") (lambda (^(Option (Constraint Reminder)) x0) (Some (Reminder.atDateTime_? (& (DateTime.time_? (Time.hour_? (?= (Hour.apply 11L)))) (DateTime.date_? (Date.day_? (?= (Day.apply 8L))))))))))", "idx": "2081", "datum_id": {"dialogue_id": "660b26d6-defe-4699-a7fe-550d776151c4", "turn_index": 1}}
{"user_turn_0": "I need to have a one single room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you alter the check out date to Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Thursday)))))", "idx": "2094", "datum_id": {"dialogue_id": "d95dc3c2-ec5f-432b-a800-778205087468", "turn_index": 4}}
{"user_turn_0": "Can you alter the check out date to Thursday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "2095", "datum_id": {"dialogue_id": "d95dc3c2-ec5f-432b-a800-778205087468", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , send today 's event to Lily .", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))))))) (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Lily \")))))))", "idx": "2109", "datum_id": {"dialogue_id": "8c43ae62-771f-450d-a805-47b6832f6069", "turn_index": 0}}
{"user_turn_0": "I prefer something with at least a one star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Westin price equals 124", "user_turn_1": "Does the hotel have a gym ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasFitness_? (^(Boolean) always)))))", "idx": "2139", "datum_id": {"dialogue_id": "109d1a0d-bb06-4220-9058-d686ede77008", "turn_index": 4}}
{"user_turn_0": "Does the hotel have a gym ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Triton \"))))))", "idx": "2140", "datum_id": {"dialogue_id": "109d1a0d-bb06-4220-9058-d686ede77008", "turn_index": 5}}
{"user_turn_0": "Two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking support free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "2144", "datum_id": {"dialogue_id": "109d1a0d-bb06-4220-9058-d686ede77008", "turn_index": 9}}
{"user_turn_0": "On the 16th", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "Can you check Wednesday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Wednesday))))))", "idx": "2149", "datum_id": {"dialogue_id": "724855d4-8fcf-4df2-a756-aaa46a432b46", "turn_index": 3}}
{"user_turn_0": "Hi assistant , book me a train from Stratford to Gatwick Airport coming before 8 PM .", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM", "user_turn_1": "That looks good . Alright I set up this ticket order for you . Want me to submit it ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (^((Constraint Train)) refer)))))", "idx": "2164", "datum_id": {"dialogue_id": "2074b4f0-3cf5-41f5-9cdf-2668c68d7363", "turn_index": 1}}
{"user_turn_0": "Book the taxi for me", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "Distance from 9 School Lane to 40 Mayors Road by public transportation", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (& (& (Navigation.source_? (Place.location_? (?= \" 9 School Lane \"))) (Navigation.destination_? (Place.location_? (?= \" 40 Mayors Road \")))) (Navigation.transportationMode_? (?= (TransportationMode.PublicTransportation))))))", "idx": "2171", "datum_id": {"dialogue_id": "def812b3-70f1-442d-bbea-a262dd0448da", "turn_index": 3}}
{"user_turn_0": "Tomorrow , ideally after 10 o'clock", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 1 meridiem equals PM price equals 138", "user_turn_1": "Looks good to me . Book it for one 1 passenger", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.source_? (Place.location_? (?= \" Birmingham \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.passengers_? (?= 1))))))", "idx": "2186", "datum_id": {"dialogue_id": "9328060f-9899-4445-b3cb-34bf59607ca3", "turn_index": 3}}
{"user_turn_0": "I will come back on Friday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 12 minute equals 45 meridiem equals PM price equals 135", "user_turn_1": "Go ahead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "2189", "datum_id": {"dialogue_id": "9328060f-9899-4445-b3cb-34bf59607ca3", "turn_index": 6}}
{"user_turn_0": "I prefer another one with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capricorn", "user_turn_1": "Does it have parking ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "2194", "datum_id": {"dialogue_id": "8dbeaabf-43e2-41b3-a63d-a357526feaea", "turn_index": 3}}
{"user_turn_0": "I prefer one with outdoor dining", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Encino", "user_turn_1": "Does it take credit card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "2196", "datum_id": {"dialogue_id": "8dbeaabf-43e2-41b3-a63d-a357526feaea", "turn_index": 5}}
{"user_turn_0": "Does it take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Floss and Joes \"))))))", "idx": "2197", "datum_id": {"dialogue_id": "8dbeaabf-43e2-41b3-a63d-a357526feaea", "turn_index": 6}}
{"user_turn_0": "I 'd prefer one with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dim Summit", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Encino \"))))))", "idx": "2210", "datum_id": {"dialogue_id": "e5acd58d-b28c-465a-b2f2-b07dbfc04821", "turn_index": 4}}
{"user_turn_0": "Sunday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "2221", "datum_id": {"dialogue_id": "0b7a939b-c932-4ffd-b3ef-7282c19dd48f", "turn_index": 6}}
{"user_turn_0": "Hey , i 'd like to book a one - way flight from Manchester to Glasgow departing on June 8th .", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 2 meridiem equals PM price equals 166", "user_turn_1": "No , I 'd like the economy class one at 3:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.source_? (Place.location_? (?= \" Manchester \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (^((Constraint (List DateTime))) refer) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.tripType_? (?= (TripType.oneWay)))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "2229", "datum_id": {"dialogue_id": "f4ce5604-d8db-4e23-847e-5e42de3e459b", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , where will you be departing from ?", "tgt": "(plan (^(Flight) Book :object (& (Flight.class_? (?= (FlightClass.Business))) (Flight.passengers_? (?= 4)))))", "idx": "2234", "datum_id": {"dialogue_id": "918f2721-7f5f-4ebd-92f7-9d3acd4fc1c4", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i want to make a table reservaton at a cheap Korean food restaurant in Middle Park at 2 o'clock at Middle Park .", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Middle Park \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 2L)))))))) (Restaurant.priceRange_? (?= (PriceRange.Low)))) (Restaurant.foodType_? (?= (FoodType.Korean))))))", "idx": "2240", "datum_id": {"dialogue_id": "56c8dffd-6614-498e-b769-08524e8e5405", "turn_index": 0}}
{"user_turn_0": "Let me see restaurants with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Canton Silk", "user_turn_1": "Sure let me go with that . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Bard's Bench \"))))))", "idx": "2243", "datum_id": {"dialogue_id": "56c8dffd-6614-498e-b769-08524e8e5405", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , book a business call flight from Manchster", "tgt": "(plan (^(Flight) Book :object (& (Flight.class_? (?= (FlightClass.Business))) (Flight.source_? (Place.location_? (?= \" Manchester \"))))))", "idx": "2246", "datum_id": {"dialogue_id": "72d0a7fa-b2fd-4e85-89c4-2571a23b2585", "turn_index": 0}}
{"user_turn_0": "To Paris", "agent_turn_0": "Root system prompt flight book object equals departureDateTime", "user_turn_1": "Tomorrow anytime after 8:30am", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (?>= (someSalient (& (& (Time.hour_? (?= (Hour.apply 8L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM))))))))))))))", "idx": "2248", "datum_id": {"dialogue_id": "72d0a7fa-b2fd-4e85-89c4-2571a23b2585", "turn_index": 2}}
{"user_turn_0": "Is there parking ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "I want it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "2257", "datum_id": {"dialogue_id": "154124bc-1ba0-4d0b-bad7-0650edf8a172", "turn_index": 4}}
{"user_turn_0": "Get me the one that departs at 3 pm", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 12 minute equals 40 meridiem equals PM price equals 150", "user_turn_1": "Do that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 15L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "2284", "datum_id": {"dialogue_id": "711d2a4a-a6ec-4906-b437-43d42d173c95", "turn_index": 3}}
{"user_turn_0": "Hey , help me book a taxi from 7 Barrow Point Avenue to the venue of the calendar event today", "agent_turn_0": "Root system prompt taxi book object equals serviceType inform taxi find object equals serviceType equals listElementOne Saloon listElementTwo MPV listElementThree Executive", "user_turn_1": "I have scheduled a taxi order for you . The destination will be Little Bat which is your event venue . Should I submit the order now ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Taxi)) Path.apply \" object \") (lambda (^(Constraint Taxi) x0) (& (& x0 (Taxi.serviceType_? (List.exists_? (?= (ServiceType.Any))))) (Taxi.luggages_? (?= 1))))))", "idx": "2287", "datum_id": {"dialogue_id": "603f10ed-0875-4416-b4c8-3904810528e3", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , i found three flights on your departure date . The cheapest one costs 127 pounds and is at 3:45 PM .", "tgt": "(plan (^(Flight) Book :object (& (& (Flight.source_? (Place.location_? (?= \" Manchester \"))) (Flight.destination_? (Place.location_? (?= \" Belfast City \")))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday)))))))))", "idx": "2321", "datum_id": {"dialogue_id": "69360b9d-ad58-4d3e-ae94-f038bb2b7e76", "turn_index": 0}}
{"user_turn_0": "Hi assistant , i found three flights on your departure date . The cheapest one costs 127 pounds and is at 3:45 PM .", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM price equals 127", "user_turn_1": "Will you be needing a return ticket ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "2322", "datum_id": {"dialogue_id": "69360b9d-ad58-4d3e-ae94-f038bb2b7e76", "turn_index": 1}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 meridiem equals PM", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "2351", "datum_id": {"dialogue_id": "277b3557-17ea-4ab3-a356-bd135f440c5a", "turn_index": 9}}
{"user_turn_0": "Thanks , also i also need a reminder made for it", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "I need a train ticket leaving from Brighton Station", "tgt": "(plan (^(Train) Book :object (Train.source_? (Place.location_? (?= \" Brighton station \")))))", "idx": "2374", "datum_id": {"dialogue_id": "780272b5-c494-407e-9ddd-d019a8d9b7e4", "turn_index": 3}}
{"user_turn_0": "I think I 'd like a different hotel with at least a one - star rating though", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Fresh Wave Resort price equals 138", "user_turn_1": "Yes , please book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Grand Hyatt \"))))))", "idx": "2385", "datum_id": {"dialogue_id": "5af9653f-71c5-43d5-9830-758938d88c64", "turn_index": 4}}
{"user_turn_0": "Just one room is enough", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "No , actually , change that check out day to Friday instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Friday)))))", "idx": "2389", "datum_id": {"dialogue_id": "5af9653f-71c5-43d5-9830-758938d88c64", "turn_index": 8}}
{"user_turn_0": "Hello , do I have an upcoming calendar event", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Create one please", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.eventName_? (?= \" first outdoors \")) (CalendarEvent.location_? (?= \" Rainbow Room \")))))", "idx": "2392", "datum_id": {"dialogue_id": "06629421-a29b-4ff2-89b6-b22c9a2dc7c1", "turn_index": 1}}
{"user_turn_0": "Sure , do they have private bathrooms ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "2398", "datum_id": {"dialogue_id": "cc3caba5-88cb-4c46-8bca-5810f07af56f", "turn_index": 2}}
{"user_turn_0": "Go ahead and book it", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Please change check - in time for Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "2399", "datum_id": {"dialogue_id": "cc3caba5-88cb-4c46-8bca-5810f07af56f", "turn_index": 3}}
{"user_turn_0": "Call him", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Send today 's event to Victoria", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Victoria \")))) (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))))))))))", "idx": "2409", "datum_id": {"dialogue_id": "aa67e2de-7601-4614-b73e-7eb9bfb2c3c3", "turn_index": 2}}
{"user_turn_0": "I will departure from London Heathrow on March 5th", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 11 minute equals 55 meridiem equals AM", "user_turn_1": "That 's fine . Book this flight and I need 4 tickets", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast \"))) (Flight.airLine_? (?= \" British \"))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 4))))))", "idx": "2425", "datum_id": {"dialogue_id": "7aa9e828-b433-45fe-ab85-a3faca2ef12b", "turn_index": 2}}
{"user_turn_0": "From London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM price equals 65", "user_turn_1": "Get me the one that departs at 2:30 pm instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "2458", "datum_id": {"dialogue_id": "fba41cca-c2eb-48ac-8c0f-01c82382f44b", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , make A Gathering of Hunters with Mr Bower at the 13th 2:30 PM on the calendar", "tgt": "(plan (^(CalendarEvent) Create :object (& (& (CalendarEvent.eventName_? (?= \" A Gathering of Hunters \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 13L)))) (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))) (CalendarEvent.attendees_? (Contact.person_? (& (Person.name_? (?= \" Bower \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "2460", "datum_id": {"dialogue_id": "c590d3d8-2aa6-42d8-bd16-93c8c3d926a4", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , when am I supposed to get to Aberdeen ?", "tgt": "(plan (^(Train) Find :focus (Train.arrivalDateTime_? (^(DateTime) always)) :object (Train.destination_? (Place.location_? (?= \" Aberdeen \")))))", "idx": "2476", "datum_id": {"dialogue_id": "518d1ece-44b1-4105-99fb-42f4cff9041e", "turn_index": 0}}
{"user_turn_0": "From Leicester", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM", "user_turn_1": "I 'd like the one at 3:45 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "2479", "datum_id": {"dialogue_id": "518d1ece-44b1-4105-99fb-42f4cff9041e", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , what time does my train to Exter leave ?", "tgt": "(plan (^(Train) Find :focus (Train.departureDateTime_? (^(DateTime) always)) :object (Train.destination_? (Place.location_? (?= \" Exeter \")))))", "idx": "2483", "datum_id": {"dialogue_id": "884317ff-b85b-4cd7-958b-a3619e30396a", "turn_index": 0}}
{"user_turn_0": "Hi assistant , what time will my flight at the 12th take off", "agent_turn_0": "Root system inform flight find focus equals departureDateTime equals time equals hour equals 2 meridiem equals PM", "user_turn_1": "Order me a taxi from 61 Hill Street to my next event", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" 61 Hill Street \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))))))", "idx": "2489", "datum_id": {"dialogue_id": "85a22136-4556-45fa-87f3-1e7531b50ddb", "turn_index": 1}}
{"user_turn_0": "Does the restaurant have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "That 's fine . Book it for me at 2 o'clock please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 2L))))))))))", "idx": "2496", "datum_id": {"dialogue_id": "a4d87f2a-f51c-4762-a717-dbe01bce6fe1", "turn_index": 3}}
{"user_turn_0": "I need a table for 5 people please", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Ok , can you change the appointment date to Monday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday)))))))))", "idx": "2498", "datum_id": {"dialogue_id": "a4d87f2a-f51c-4762-a717-dbe01bce6fe1", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , 5:30 PM .", "tgt": "(plan (^(Flight) Find :focus (Flight.departureDateTime_? (^((List DateTime)) always)) :object (& (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (?= (Today))))) (Flight.destination_? (Place.location_? (?= \" Dublin \"))))))", "idx": "2500", "datum_id": {"dialogue_id": "002797fa-d1b1-41b9-9ab6-8f17953fb5e7", "turn_index": 0}}
{"user_turn_0": "How much time will it take to get to today 's calendar event ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 25 object equals destination equals location equals 2a Prebend Street", "user_turn_1": "How much time will it take to bike from Compton Arms to Compton Arms ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Navigation)) Path.apply \" object \") (lambda (^(Constraint Navigation) x0) (& (& (Navigation.source_? (Place.location_? (?= \" Compton Arms \"))) (Navigation.destination_? (Place.location_? (?= \" Compton Arms \")))) (Navigation.transportationMode_? (?= (TransportationMode.Biking)))))))", "idx": "2502", "datum_id": {"dialogue_id": "002797fa-d1b1-41b9-9ab6-8f17953fb5e7", "turn_index": 2}}
{"user_turn_0": "I need one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there breakfast at the hotel ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "2507", "datum_id": {"dialogue_id": "002797fa-d1b1-41b9-9ab6-8f17953fb5e7", "turn_index": 7}}
{"user_turn_0": "Tell me how I can get there", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Thanks . Go ahead and book it there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Sheraton \"))))))", "idx": "2520", "datum_id": {"dialogue_id": "c0591f4e-1b50-422e-9056-57c22cb70fa9", "turn_index": 6}}
{"user_turn_0": "Yea please book", "agent_turn_0": "Root system inform calendarEvent create Completed restaurant book Completed", "user_turn_1": "Also , I 'd like to send my next event to my daughter", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Daughter))))))))", "idx": "2528", "datum_id": {"dialogue_id": "2accd6ad-c2bb-45c3-97eb-e7be94dad125", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , tell me when will my train arrive on September the 19th ?", "tgt": "(plan (^(Train) Find :focus (Train.arrivalDateTime_? (^(DateTime) always)) :object (& (Train.destination_? (Place.location_? (?= \" Birmingham New Street \"))) (Train.departureDateTime_? (DateTime.date_? (& (Date.month_? (?= (September))) (Date.day_? (?= (Day.apply 19L)))))))))", "idx": "2529", "datum_id": {"dialogue_id": "cb7fb4cb-9a0e-4c6b-b905-9775b4202fe9", "turn_index": 0}}
{"user_turn_0": "Hello , tell me when will my train arrive on September the 19th ?", "agent_turn_0": "Root system inform train find focus equals arrivalDateTime equals time equals hour equals 7 minute equals 30", "user_turn_1": "Okay set a reminder at that time", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (^(CalendarEvent) always))))))", "idx": "2530", "datum_id": {"dialogue_id": "cb7fb4cb-9a0e-4c6b-b905-9775b4202fe9", "turn_index": 1}}
{"user_turn_0": "Get me two double rooms please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Change the check - in date to Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "2539", "datum_id": {"dialogue_id": "a84f8d8c-e883-4d4a-a202-1ad44604350b", "turn_index": 4}}
{"user_turn_0": "I 'd rather a different place that has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flew Z", "user_turn_1": "Do they have outdoor tables there ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "2543", "datum_id": {"dialogue_id": "e3bd32da-0aa0-4632-a08d-f8c8457b4133", "turn_index": 2}}
{"user_turn_0": "Which places have three star ratings ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Shining Gate", "user_turn_1": "What 's the address there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "2545", "datum_id": {"dialogue_id": "e3bd32da-0aa0-4632-a08d-f8c8457b4133", "turn_index": 4}}
{"user_turn_0": "What 's the address there ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 7 Barrow Point Avenue", "user_turn_1": "Okay , reserve it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Canton Silk \"))))))", "idx": "2546", "datum_id": {"dialogue_id": "e3bd32da-0aa0-4632-a08d-f8c8457b4133", "turn_index": 5}}
{"user_turn_0": "Do they have free wifi", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "2558", "datum_id": {"dialogue_id": "6bf1a39a-58a1-4a02-8565-fd056e0488dd", "turn_index": 4}}
{"user_turn_0": "Just two", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is free cancellation included ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "2561", "datum_id": {"dialogue_id": "6bf1a39a-58a1-4a02-8565-fd056e0488dd", "turn_index": 7}}
{"user_turn_0": "Is that a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "ACtually , I would prefer the 1:20 PM departure", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "2574", "datum_id": {"dialogue_id": "374bb893-3dcb-4bdb-b373-2a6a8fab73ff", "turn_index": 3}}
{"user_turn_0": "London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM price equals 142", "user_turn_1": "Yes , I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "2580", "datum_id": {"dialogue_id": "da4786aa-d442-4e22-8266-e7d3327c1507", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i want to eat at the Chipotle Grill on the 4th at 4 PM , and add it to my calendar .", "tgt": "(plan (do (^(Restaurant) Book :object (& (Restaurant.restaurantName_? (?= \" Chipotle Grill \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 4L))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM)))))))))) (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (?= (^(DateTimeRange Restaurant) reference (^(Restaurant) always)))))))", "idx": "2583", "datum_id": {"dialogue_id": "68ec586b-dc70-4676-ba88-bd8a7cbab921", "turn_index": 0}}
{"user_turn_0": "From Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM price equals 145", "user_turn_1": "Sure , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "2596", "datum_id": {"dialogue_id": "7ace0c37-d8cc-47a5-954a-7c07d80aaf5e", "turn_index": 2}}
{"user_turn_0": "I would like to go back on Sunday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM price equals 145", "user_turn_1": "OK , looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "2598", "datum_id": {"dialogue_id": "7ace0c37-d8cc-47a5-954a-7c07d80aaf5e", "turn_index": 4}}
{"user_turn_0": "I would prefer another hotel with at least three stars rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Four Seasons price equals 173", "user_turn_1": "Does the hotel have a place to do laundry", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.laundry_? (^(Boolean) always)))))", "idx": "2614", "datum_id": {"dialogue_id": "3c6d9d69-46a4-457f-89f3-e559085a0585", "turn_index": 4}}
{"user_turn_0": "Does the hotel have a place to do laundry", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Blossomwell Resorts \"))))))", "idx": "2615", "datum_id": {"dialogue_id": "3c6d9d69-46a4-457f-89f3-e559085a0585", "turn_index": 5}}
{"user_turn_0": "I need 3 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Am I going to need a prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "2617", "datum_id": {"dialogue_id": "3c6d9d69-46a4-457f-89f3-e559085a0585", "turn_index": 7}}
{"user_turn_0": "I want to depart form London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM price equals 156", "user_turn_1": "I 'd rather do the 2 PM one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "2627", "datum_id": {"dialogue_id": "7ba0e17f-557d-4b9d-ac7c-d811511526f0", "turn_index": 3}}
{"user_turn_0": "I 'd prefer something with a three star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Moody Moon price equals 127", "user_turn_1": "What 's the rating ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.rating_? (^(Number) always)))))", "idx": "2641", "datum_id": {"dialogue_id": "1a25d6df-c05a-4792-97e9-567da26a7820", "turn_index": 4}}
{"user_turn_0": "What 's the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Grand Hyatt \"))))))", "idx": "2642", "datum_id": {"dialogue_id": "1a25d6df-c05a-4792-97e9-567da26a7820", "turn_index": 5}}
{"user_turn_0": "I would rather eat somewhere that has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Spago", "user_turn_1": "Is there seating outside at that restaurant ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "2657", "datum_id": {"dialogue_id": "456d0294-534f-4d6a-bd84-ddf1b79d8fa4", "turn_index": 5}}
{"user_turn_0": "Is there seating outside at that restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "Ok , I guess . Book me table for the 7th at 4", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Flip Out \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 7L))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 4L)))))))))))", "idx": "2658", "datum_id": {"dialogue_id": "456d0294-534f-4d6a-bd84-ddf1b79d8fa4", "turn_index": 6}}
{"user_turn_0": "Thanks so much . Get me a taxi there", "agent_turn_0": "Root system prompt taxi book object equals serviceType inform taxi find object equals serviceType equals listElementOne Saloon listElementTwo MPV listElementThree Executive", "user_turn_1": "Execute", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Taxi)) Path.apply \" object \") (lambda (^(Constraint Taxi) x0) (& x0 (Taxi.serviceType_? (List.exists_? (?= (ServiceType.Executive))))))))", "idx": "2663", "datum_id": {"dialogue_id": "3cf876aa-4c64-4f7c-a827-c098aab43d36", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , is there a restaurant name or a preferred location that you have in mind ?", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.priceRange_? (?= (PriceRange.High))) (Restaurant.hasParking_? (?= true)))))", "idx": "2666", "datum_id": {"dialogue_id": "a9895c4e-8f05-4550-aaac-a567975aea3c", "turn_index": 0}}
{"user_turn_0": "Hi my assistant , is there a restaurant name or a preferred location that you have in mind ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName location", "user_turn_1": "I found the following restaurants that fit your criteria . A good option appears to be Jute Box", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.location_? (?= \" Abbey Wood \"))))))", "idx": "2667", "datum_id": {"dialogue_id": "a9895c4e-8f05-4550-aaac-a567975aea3c", "turn_index": 1}}
{"user_turn_0": "I found the following restaurants that fit your criteria . A good option appears to be Jute Box", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Box", "user_turn_1": "What type of cuisine is served there ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.foodType_? (^(FoodType) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "2668", "datum_id": {"dialogue_id": "a9895c4e-8f05-4550-aaac-a567975aea3c", "turn_index": 2}}
{"user_turn_0": "Do any of the restaurants you found serve Thai food ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Bard\u2019s Bench", "user_turn_1": "What 's the address ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "2670", "datum_id": {"dialogue_id": "a9895c4e-8f05-4550-aaac-a567975aea3c", "turn_index": 4}}
{"user_turn_0": "What 's the address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 7615 Eagle Lane", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Jute Box \"))))))", "idx": "2671", "datum_id": {"dialogue_id": "a9895c4e-8f05-4550-aaac-a567975aea3c", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i 'd like for you to book me a taxi , if you 're not busy .", "tgt": "(plan (^(Taxi) Book))", "idx": "2685", "datum_id": {"dialogue_id": "fb3c6431-6f02-4fce-8e41-76d9e3fef466", "turn_index": 0}}
{"user_turn_0": "Hey , i 'd like for you to book me a taxi , if you 're not busy .", "agent_turn_0": "Root system prompt taxi book object equals destination", "user_turn_1": "I need to get to 9 Constitution Drive", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint Taxi))) Path.apply \" object \") (lambda (^(Option (Constraint Taxi)) x0) (Some (Taxi.destination_? (Place.location_? (?= \" 9 Constitution Drive \")))))))", "idx": "2686", "datum_id": {"dialogue_id": "fb3c6431-6f02-4fce-8e41-76d9e3fef466", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , get me a room at theRose hotel in Oakwood from February 13th to the 19th ,", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" Oakwood \")) (Hotel.hotelName_? (?= \" Rose \"))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 13L))))) (DateTimeRange.endDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 19L)))) (month_? (Date.month_? (?= (February)))))))))))", "idx": "2696", "datum_id": {"dialogue_id": "e0c4f411-6b8b-416f-b7d0-9b79382cdf94", "turn_index": 0}}
{"user_turn_0": "I actually need you to change the check in date to Wednesday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Would I be able to cancel at anytime ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "2699", "datum_id": {"dialogue_id": "e0c4f411-6b8b-416f-b7d0-9b79382cdf94", "turn_index": 3}}
{"user_turn_0": "Tottenham", "agent_turn_0": "Root system prompt restaurant book object equals foodType", "user_turn_1": "Any food , but I want a high price range", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.foodType_? (?= (FoodType.Any)))) (Restaurant.priceRange_? (?= (PriceRange.High)))))))", "idx": "2708", "datum_id": {"dialogue_id": "c9759edb-65c0-4d31-be9c-51e733e627e9", "turn_index": 2}}
{"user_turn_0": "Any food , but I want a high price range", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jurassic Pork", "user_turn_1": "What is the address ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "2709", "datum_id": {"dialogue_id": "c9759edb-65c0-4d31-be9c-51e733e627e9", "turn_index": 3}}
{"user_turn_0": "What is the address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals Ash Grove Industrial Park", "user_turn_1": "Ok , book it at 10:30 AM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Jurassic Pork \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM)))))))))))", "idx": "2710", "datum_id": {"dialogue_id": "c9759edb-65c0-4d31-be9c-51e733e627e9", "turn_index": 4}}
{"user_turn_0": "Hey , i want to see the message sent to Mr Smith .", "agent_turn_0": "Root system inform message checkExistence Existed", "user_turn_1": "I have the message here", "tgt": "(plan (^(Message) Find :object (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Smith \")) (Person.namePrefix_? (?= \" Mr \")))))))", "idx": "2729", "datum_id": {"dialogue_id": "34d2442b-e62b-448c-b00b-5a05f55958ed", "turn_index": 1}}
{"user_turn_0": "I have the message here", "agent_turn_0": "Root system inform message find", "user_turn_1": "4 miles", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (& (& (Navigation.source_? (Place.location_? (?= \" 7193 South Evergreen Road \"))) (Navigation.destination_? (Place.location_? (?= \" 9 School Lane \")))) (Navigation.transportationMode_? (?= (TransportationMode.Driving))))))", "idx": "2730", "datum_id": {"dialogue_id": "34d2442b-e62b-448c-b00b-5a05f55958ed", "turn_index": 2}}
{"user_turn_0": "I 'm coming back on Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 2 meridiem equals PM price equals 135", "user_turn_1": "That looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "2739", "datum_id": {"dialogue_id": "a5c3f408-6ff8-4d61-9e66-8428c7ea432d", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i need a taxi from 9 Constitution Drive to my calendar event 's location .", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" 9 Constitution Drive \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Afternoon)))))))))))", "idx": "2759", "datum_id": {"dialogue_id": "e26eda59-3446-4f3d-9260-729ffb9aa2b7", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i want to eat Thai food with a moderate price range", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.priceRange_? (?= (PriceRange.Moderate))) (Restaurant.foodType_? (?= (FoodType.Thai))))))", "idx": "2764", "datum_id": {"dialogue_id": "b8638f6e-f865-4c93-b29b-1a95134ad5f7", "turn_index": 0}}
{"user_turn_0": "It must be located in Victoria", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flip Out", "user_turn_1": "Nah , I want Italian food", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint FoodType)) Path.apply \" object.foodType \") (lambda (^(Constraint FoodType) x0) (?= (FoodType.Italian)))))", "idx": "2766", "datum_id": {"dialogue_id": "b8638f6e-f865-4c93-b29b-1a95134ad5f7", "turn_index": 2}}
{"user_turn_0": "Nah , I want Italian food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Gogol", "user_turn_1": "Does it have parking ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "2767", "datum_id": {"dialogue_id": "b8638f6e-f865-4c93-b29b-1a95134ad5f7", "turn_index": 3}}
{"user_turn_0": "Does it have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Okay , I want this one at 3 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Flip Out \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "2768", "datum_id": {"dialogue_id": "b8638f6e-f865-4c93-b29b-1a95134ad5f7", "turn_index": 4}}
{"user_turn_0": "Nope , from London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM price equals 145", "user_turn_1": "Sounds good . I 'd like to book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "2785", "datum_id": {"dialogue_id": "0982baa5-2ec4-4c75-a393-b5c46d43ff90", "turn_index": 3}}
{"user_turn_0": "Does the hotel have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "I 'll take it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "2791", "datum_id": {"dialogue_id": "4fe3d378-cd63-4803-a600-d46c51bfd88c", "turn_index": 3}}
{"user_turn_0": "Three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "No , change the check in date to Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "2794", "datum_id": {"dialogue_id": "4fe3d378-cd63-4803-a600-d46c51bfd88c", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , get me a hotel with a four star rating and book it from January 6th to the 12th .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.rating_? (?= 4)) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 6L)))) (month_? (Date.month_? (?= (January)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 12L))))))))))", "idx": "2796", "datum_id": {"dialogue_id": "cadd16cc-0499-46e2-a72c-7081e1a556f3", "turn_index": 0}}
{"user_turn_0": "How do I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "2799", "datum_id": {"dialogue_id": "cadd16cc-0499-46e2-a72c-7081e1a556f3", "turn_index": 3}}
{"user_turn_0": "Tell me the hotel 's star rating", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "2806", "datum_id": {"dialogue_id": "c3cbf8e0-783c-4879-9dc7-6ee999297018", "turn_index": 3}}
{"user_turn_0": "I need one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is free cancellation supported ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "2810", "datum_id": {"dialogue_id": "c3cbf8e0-783c-4879-9dc7-6ee999297018", "turn_index": 7}}
{"user_turn_0": "Is free cancellation supported ?", "agent_turn_0": "Root system inform hotel find focus equals freeCancellation equals True", "user_turn_1": "Have my check in date switched to Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "2811", "datum_id": {"dialogue_id": "c3cbf8e0-783c-4879-9dc7-6ee999297018", "turn_index": 8}}
{"user_turn_0": "Is that a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "That works . Book that flight for four people", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Amsterdam \"))) (Flight.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (^((Constraint (List DateTime))) refer)))) (Flight.class_? (?= (FlightClass.Business)))) (Flight.passengers_? (?= 4))))))", "idx": "2817", "datum_id": {"dialogue_id": "b6b4de75-6510-404d-81f4-4ed9eae6d678", "turn_index": 4}}
{"user_turn_0": "Book the Hambone Martian restaurant for me and add it to my calendar", "agent_turn_0": "Root system prompt restaurant book restaurant book atDateTime", "user_turn_1": "I want the reservation to be for tomorrow at 5:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.atDateTime_? (& (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 5L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))) (List.exists_? (DateTime.date_? (?= (Tomorrow))))))))))", "idx": "2830", "datum_id": {"dialogue_id": "15e858d2-6a2e-49c0-8240-9b02b9959db0", "turn_index": 4}}
{"user_turn_0": "I want another one that has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "Does that one have outdoor seating ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "2845", "datum_id": {"dialogue_id": "3eb22358-811b-4f03-907c-15bd092d4e83", "turn_index": 3}}
{"user_turn_0": "Find another one with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Bard\u2019s Bench", "user_turn_1": "Book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flip Out \"))))))", "idx": "2847", "datum_id": {"dialogue_id": "3eb22358-811b-4f03-907c-15bd092d4e83", "turn_index": 5}}
{"user_turn_0": "Through which airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals EasyJet", "user_turn_1": "Cool , I 'll take this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "2871", "datum_id": {"dialogue_id": "f67633f0-3dd1-48fb-9b68-a25f3574b8af", "turn_index": 4}}
{"user_turn_0": "Yes , for Thursday please", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 2 meridiem equals PM price equals 138", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "2873", "datum_id": {"dialogue_id": "f67633f0-3dd1-48fb-9b68-a25f3574b8af", "turn_index": 6}}
{"user_turn_0": "Does that one have breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "2883", "datum_id": {"dialogue_id": "ca14ea4f-bae0-4d06-bfff-eeb40ec766cb", "turn_index": 3}}
{"user_turn_0": "Is there outdoor seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "That 's fine . Book it for tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow)))))))))", "idx": "2918", "datum_id": {"dialogue_id": "146d038a-0d4e-48a1-9668-bf1b20b6d4ad", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , book me Dim Summit with table for 2 people at the 6th 2:30 PM", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.restaurantName_? (?= \" Dim Summit \")) (Restaurant.tableSize_? (?= 2))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 6L))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "2922", "datum_id": {"dialogue_id": "5e80c059-b098-4a47-861c-d8fe81f1d2f5", "turn_index": 0}}
{"user_turn_0": "Is there a car park in the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "2930", "datum_id": {"dialogue_id": "88398b6f-935e-4b50-bad5-6158f95978dc", "turn_index": 3}}
{"user_turn_0": "I need two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I need to make a prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "2935", "datum_id": {"dialogue_id": "88398b6f-935e-4b50-bad5-6158f95978dc", "turn_index": 8}}
{"user_turn_0": "Does the restaurant have outdoor seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "2944", "datum_id": {"dialogue_id": "2feefd59-adc8-4a8a-87e1-b1ddd58a16c9", "turn_index": 2}}
{"user_turn_0": "Edinburgh", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM price equals 124", "user_turn_1": "Ok book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "2950", "datum_id": {"dialogue_id": "504ff191-a31c-45dd-b885-ad877b92f5f6", "turn_index": 3}}
{"user_turn_0": "Do you want economy or business class ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "Go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "2969", "datum_id": {"dialogue_id": "5cfc6f0d-b8cf-4390-8fbd-30a747789e4f", "turn_index": 4}}
{"user_turn_0": "I want a different hotel , with a moderate price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Palm Bliss price equals 142", "user_turn_1": "Can I do laundry there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.laundry_? (^(Boolean) always)))))", "idx": "2975", "datum_id": {"dialogue_id": "ca1ba140-2926-4c63-ba65-193f649cd120", "turn_index": 4}}
{"user_turn_0": "Can I do laundry there ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Obsidian Sky \"))))))", "idx": "2976", "datum_id": {"dialogue_id": "ca1ba140-2926-4c63-ba65-193f649cd120", "turn_index": 5}}
{"user_turn_0": "Which airline is it ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals British", "user_turn_1": "That works . Book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "2989", "datum_id": {"dialogue_id": "ea9d53a1-4f93-4fa1-9ba8-edb1514c9faf", "turn_index": 2}}
{"user_turn_0": "I just need one room , room type does n't matter to me", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you change the check out date to Sunday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Sunday)))))", "idx": "2995", "datum_id": {"dialogue_id": "1503b311-cb70-4af4-9bd2-b8ab1bbae367", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , schedule health screening starting at 2 and ending at 7 , and Mr Chapman will be attending", "tgt": "(plan (^(CalendarEvent) Create :object (& (& (CalendarEvent.eventName_? (?= \" health screening \")) (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 2L))))) (DateTimeRange.endDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 7L)))))))) (CalendarEvent.attendees_? (Contact.person_? (& (Person.name_? (?= \" Chapman \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "3008", "datum_id": {"dialogue_id": "9badc413-14a5-48dc-b4c7-f7ba7ccecffe", "turn_index": 0}}
{"user_turn_0": "I want Indian food , and a low price , please", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flew Z", "user_turn_1": "What 's the address there ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "3012", "datum_id": {"dialogue_id": "9badc413-14a5-48dc-b4c7-f7ba7ccecffe", "turn_index": 4}}
{"user_turn_0": "three single room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "do they have free cancelation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "3015", "datum_id": {"dialogue_id": "9074c5cb-11c1-437c-876a-3cf4602b2866", "turn_index": 2}}
{"user_turn_0": "ok book it", "agent_turn_0": "Root system inform hotel book Completed", "user_turn_1": "what s the price range", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.priceRange_? (^(PriceRange) always)) :object (Restaurant.restaurantName_? (?= \" Capers \"))))", "idx": "3017", "datum_id": {"dialogue_id": "9074c5cb-11c1-437c-876a-3cf4602b2866", "turn_index": 4}}
{"user_turn_0": "Hey assistant , make airline reservation for one passenger from London , going in business class .", "agent_turn_0": "Root system prompt flight book object equals destination departureDateTime", "user_turn_1": "I am going to Edinburg , leaving on Monday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& x0 (Flight.destination_? (Place.location_? (?= \" Edinburgh \")))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))))))))", "idx": "3029", "datum_id": {"dialogue_id": "8efaaf42-315c-404c-9005-8dcf695536d9", "turn_index": 1}}
{"user_turn_0": "Yes . please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "The one leaving at 2 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "3050", "datum_id": {"dialogue_id": "26316f52-22be-41f5-a41d-90d48ccba66b", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i need a place in Liverpool Street with moderate price .", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.location_? (?= \" Liverpool Street \")) (Restaurant.priceRange_? (?= (PriceRange.Moderate))))))", "idx": "3053", "datum_id": {"dialogue_id": "373869aa-deb9-4d12-80fa-6af18b3efeeb", "turn_index": 0}}
{"user_turn_0": "Hi there , i need a place in Liverpool Street with moderate price .", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Cityroom", "user_turn_1": "Look for grills", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.foodType_? (?= (FoodType.Grill)))))))", "idx": "3054", "datum_id": {"dialogue_id": "373869aa-deb9-4d12-80fa-6af18b3efeeb", "turn_index": 1}}
{"user_turn_0": "Look for grills", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Spago", "user_turn_1": "That works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Cityroom \"))))))", "idx": "3055", "datum_id": {"dialogue_id": "373869aa-deb9-4d12-80fa-6af18b3efeeb", "turn_index": 2}}
{"user_turn_0": "How about June 15th", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM price equals 178", "user_turn_1": "That 's fine . Book this flight for four passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.source_? (Place.location_? (?= \" London Heathrow \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 4))))))", "idx": "3063", "datum_id": {"dialogue_id": "3a6df4a1-abeb-48db-a1b5-dab0515bf79c", "turn_index": 3}}
{"user_turn_0": "I prefer another hotel with five stars rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals The Blackstone price equals 134", "user_turn_1": "Siri what 's the rating", "tgt": "(plan (^(Hotel) Find :focus (Hotel.rating_? (^(Number) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "3070", "datum_id": {"dialogue_id": "63c9877f-8461-4bd8-8ed0-ef60330abbcf", "turn_index": 5}}
{"user_turn_0": "Siri what 's the rating", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "3071", "datum_id": {"dialogue_id": "63c9877f-8461-4bd8-8ed0-ef60330abbcf", "turn_index": 6}}
{"user_turn_0": "One room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "3075", "datum_id": {"dialogue_id": "63c9877f-8461-4bd8-8ed0-ef60330abbcf", "turn_index": 10}}
{"user_turn_0": "None of them looks good . Can you show me more options ? Food type does n't matter", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kiwi Sea", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Bard's Bench \"))))))", "idx": "3101", "datum_id": {"dialogue_id": "a8d2a805-3013-43a0-8460-23442c0d49b0", "turn_index": 4}}
{"user_turn_0": "The event will last two hours", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "Update reminder at 10 o'clock to 2 o'clock", "tgt": "(plan (^(Reminder) Update :focus (Reminder.atDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 2L))))) :object (Reminder.atDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 10L)))))))", "idx": "3122", "datum_id": {"dialogue_id": "e4da1fcc-4394-481c-be4f-1f154b8adf1f", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , calling Mr McGrath now ...", "tgt": "(plan (^(PhoneCall) Create))", "idx": "3124", "datum_id": {"dialogue_id": "2044150f-c7f2-4871-8872-44b657621d53", "turn_index": 0}}
{"user_turn_0": "Hey assistant , calling Mr McGrath now ...", "agent_turn_0": "Root system prompt phoneCall create object equals recipients", "user_turn_1": "Who will you be calling ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Option (Constraint PhoneCall))) Path.apply \" object \") (lambda (^(Option (Constraint PhoneCall)) x0) (Some (PhoneCall.recipients_? (Contact.person_? (& (Person.name_? (?= \" McGrath \")) (Person.namePrefix_? (?= \" Mr \")))))))))", "idx": "3125", "datum_id": {"dialogue_id": "2044150f-c7f2-4871-8872-44b657621d53", "turn_index": 1}}
{"user_turn_0": "Make it 6:30 on August 4th", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Hmm well I guess change the date to the 25th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 25L))))))", "idx": "3133", "datum_id": {"dialogue_id": "49b4c02b-a5aa-4efb-a649-93d6f7d0cff1", "turn_index": 4}}
{"user_turn_0": "Yes . please", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "How far is Medivet Islington to 54 Duncan Street by public transportation ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (& (& (Navigation.source_? (Place.location_? (?= \" Medivet Islington \"))) (Navigation.destination_? (Place.location_? (?= \" 54 Duncan Street \")))) (Navigation.transportationMode_? (?= (TransportationMode.PublicTransportation))))))", "idx": "3144", "datum_id": {"dialogue_id": "3f7b45cd-2f32-4073-b839-97f2d9bfb83d", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , schedule Dry - Cleaning Pick - Up with David on the calendar", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.eventName_? (?= \" Dry-Cleaning Pick-Up \")) (CalendarEvent.attendees_? (Contact.person_? (Person.name_? (?= \" David \")))))))", "idx": "3151", "datum_id": {"dialogue_id": "173b94cb-5728-4b05-ab57-f765a15b72d5", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , can you book me an Indian restaurant that is not too expensive in Liverpool Street on Tuesday at 10:00 ?", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Liverpool Street \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 10L)))))))) (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Restaurant.foodType_? (?= (FoodType.Indian))))))", "idx": "3157", "datum_id": {"dialogue_id": "4eb65d76-66ce-4183-b7cf-e096c9b4d0c9", "turn_index": 0}}
{"user_turn_0": "No , I want another one with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Godka", "user_turn_1": "Sure , go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Inheat \"))))))", "idx": "3161", "datum_id": {"dialogue_id": "4eb65d76-66ce-4183-b7cf-e096c9b4d0c9", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , what 's the price point at Hambone Martian restaurant ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.priceRange_? (^(PriceRange) always)) :object (Restaurant.restaurantName_? (?= \" Hambone Martian \"))))", "idx": "3164", "datum_id": {"dialogue_id": "0174f152-f3e6-4869-8e80-70d39c82d4ba", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , I need you to set up a hotel stay in Victoria lasting from February 12th to the 14th , and it needs to be moderately priced and have parking .", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" Victoria \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 12L))))) (DateTimeRange.endDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 14L)))) (month_? (Date.month_? (?= (February))))))))) (Hotel.priceRange_? (?= (PriceRange.Moderate)))) (Hotel.hasParking_? (?= true)))))", "idx": "3169", "datum_id": {"dialogue_id": "45a8fe9e-25aa-4eff-ac96-559e48fa97b3", "turn_index": 0}}
{"user_turn_0": "I think I 'd rather have a place with at least one star", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Grand Hyatt price equals 178", "user_turn_1": "And do they have free wifi there as well ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "3172", "datum_id": {"dialogue_id": "45a8fe9e-25aa-4eff-ac96-559e48fa97b3", "turn_index": 3}}
{"user_turn_0": "And do they have free wifi there as well ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Okay let 's book that one , then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Chestnut Tree \"))))))", "idx": "3173", "datum_id": {"dialogue_id": "45a8fe9e-25aa-4eff-ac96-559e48fa97b3", "turn_index": 4}}
{"user_turn_0": "When is my flight coming today ?", "agent_turn_0": "Root system inform flight find focus equals departureDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM", "user_turn_1": "Set up a calendar event on the 6th and add it to the reminder", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 6L))))))))", "idx": "3188", "datum_id": {"dialogue_id": "98e5f70d-7b28-4d7e-b9ab-ad1f69d5f0d1", "turn_index": 4}}
{"user_turn_0": "Hi my assistant , change my event", "agent_turn_0": "Root system prompt calendarEvent update object", "user_turn_1": "The 3 PM football game", "tgt": "(plan (revise (^(Unit) Path.apply \" Update \") (^((Option (Constraint CalendarEvent))) Path.apply \" object \") (lambda (^(Option (Constraint CalendarEvent)) x0) (Some (& (CalendarEvent.eventName_? (?= \" football game \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "3195", "datum_id": {"dialogue_id": "db21d870-e4f5-49e4-9f68-95ef45dd0390", "turn_index": 1}}
{"user_turn_0": "I would prefer place with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Godka", "user_turn_1": "What kind of food are they dishing out ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.foodType_? (^(FoodType) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "3218", "datum_id": {"dialogue_id": "2964f35a-7775-4042-950d-e1dedf62fb13", "turn_index": 4}}
{"user_turn_0": "I need a different place with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Goat and Guru", "user_turn_1": "Ok , then book it for 3:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Bandits \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 5L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "3221", "datum_id": {"dialogue_id": "2964f35a-7775-4042-950d-e1dedf62fb13", "turn_index": 7}}
{"user_turn_0": "Please do", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Deliver a message to 07086798286", "tgt": "(plan (^(Message) Create :object (Message.recipients_? (Contact.phoneNumber_? (?= \" 07086798286 \")))))", "idx": "3228", "datum_id": {"dialogue_id": "77da1918-abe3-4e04-a66d-e0c5d8c4359c", "turn_index": 4}}
{"user_turn_0": "I 'd rather have a different restaurant with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone", "user_turn_1": "Can you give me the restaurant 's address ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "3232", "datum_id": {"dialogue_id": "c4704765-ed3b-4da3-9f9b-3331766facee", "turn_index": 3}}
{"user_turn_0": "Can you give me the restaurant 's address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals Haywood Way", "user_turn_1": "No problem . Go ahead with the booking", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Jurassic Pork \"))))))", "idx": "3233", "datum_id": {"dialogue_id": "c4704765-ed3b-4da3-9f9b-3331766facee", "turn_index": 4}}
{"user_turn_0": "Do they have laundry services ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "3240", "datum_id": {"dialogue_id": "bd163e1b-deb8-4eb1-9fe4-9a0f802c3ebb", "turn_index": 3}}
{"user_turn_0": "One room please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Instead , modify check in to today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "3244", "datum_id": {"dialogue_id": "bd163e1b-deb8-4eb1-9fe4-9a0f802c3ebb", "turn_index": 7}}
{"user_turn_0": "I do not because I will head to Roma on the 21st", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 5 object equals nextDepartureDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM price equals 127", "user_turn_1": "Everything looks good . Please go with it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "3252", "datum_id": {"dialogue_id": "850ea002-7bdc-43c6-bb50-d375710a2364", "turn_index": 6}}
{"user_turn_0": "How can I get there", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Fresh Wave Resort \"))))))", "idx": "3258", "datum_id": {"dialogue_id": "667eea12-b439-4e0d-8e2d-9186b1c89c1a", "turn_index": 4}}
{"user_turn_0": "I need two room and the room type does n't matter", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually can you change the check out date to Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Thursday)))))", "idx": "3261", "datum_id": {"dialogue_id": "667eea12-b439-4e0d-8e2d-9186b1c89c1a", "turn_index": 7}}
{"user_turn_0": "Yes , I 'll be departing from London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I prefer the 4:20 PM departure", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "3266", "datum_id": {"dialogue_id": "17faaf7e-5f7c-437d-9db4-384a60f5f11a", "turn_index": 3}}
{"user_turn_0": "Hi assistant , schedule a 1 PM mountain tour .", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals endDateTime", "user_turn_1": "It will last for an hour", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.duration_? (AppleDuration.hour_? (?= 1)))))))", "idx": "3275", "datum_id": {"dialogue_id": "5665e265-263a-4244-ba49-f0b9b1b390a0", "turn_index": 1}}
{"user_turn_0": "Will it be a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "I 'd prefer the 1:30 PM departure", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "3294", "datum_id": {"dialogue_id": "aa57e742-b106-4e50-bea0-ab79646b5299", "turn_index": 4}}
{"user_turn_0": "Hi assistant , create a reminder for my event", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Thanks , also i want to book restaurant in Paddington . The price should be cheap", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.location_? (?= \" Paddington \")) (Restaurant.priceRange_? (?= (PriceRange.Low))))))", "idx": "3299", "datum_id": {"dialogue_id": "b866aa22-2692-49a0-a135-70095ca2657a", "turn_index": 1}}
{"user_turn_0": "How do I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "3311", "datum_id": {"dialogue_id": "576eb64a-1271-41c2-bfe2-61dd5dd6fd8b", "turn_index": 2}}
{"user_turn_0": "I want to book restaurant in Canary Wharf with parking . The booking time is at October 28th", "agent_turn_0": "Root system prompt restaurant book object equals priceRange", "user_turn_1": "No expensive and at least 1-star rating", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Restaurant.rating_? (?>= (someSalient (?= 1))))))))", "idx": "3317", "datum_id": {"dialogue_id": "b3d7a47d-1be0-4fcb-9839-73a1e44ee158", "turn_index": 2}}
{"user_turn_0": "Mexican food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Acacia Saint", "user_turn_1": "And the average cost per person ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "3319", "datum_id": {"dialogue_id": "b3d7a47d-1be0-4fcb-9839-73a1e44ee158", "turn_index": 4}}
{"user_turn_0": "And the average cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 43", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (^((Constraint String)) refer))))))", "idx": "3320", "datum_id": {"dialogue_id": "b3d7a47d-1be0-4fcb-9839-73a1e44ee158", "turn_index": 5}}
{"user_turn_0": "3 please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I pay ahead ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "3334", "datum_id": {"dialogue_id": "5b8d1304-e567-40c7-9892-9e899d6a6152", "turn_index": 4}}
{"user_turn_0": "Can I pay ahead ?", "agent_turn_0": "Root system inform hotel find focus equals prePayment equals False", "user_turn_1": "Ok , edit my check out to Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Thursday)))))", "idx": "3335", "datum_id": {"dialogue_id": "5b8d1304-e567-40c7-9892-9e899d6a6152", "turn_index": 5}}
{"user_turn_0": "Is outdoor seating provided at the restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "3351", "datum_id": {"dialogue_id": "044872c3-ff5d-42f5-8650-872222e48a28", "turn_index": 3}}
{"user_turn_0": "Book it", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Switch the appointment date to today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (?= (Today))))))))", "idx": "3352", "datum_id": {"dialogue_id": "044872c3-ff5d-42f5-8650-872222e48a28", "turn_index": 4}}
{"user_turn_0": "Is that a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Perfect . Get me that one for 2 people", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Edinburgh \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.class_? (?= (FlightClass.Economy)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 2))))))", "idx": "3358", "datum_id": {"dialogue_id": "b1def0a0-52be-4646-90d2-354e93531d49", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , what 's the start time ?", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.duration_? (AppleDuration.minute_? (?= 45))))))", "idx": "3362", "datum_id": {"dialogue_id": "cef3af62-ad2e-4241-9955-33806bd15d50", "turn_index": 0}}
{"user_turn_0": "Hello , i want to book a one way flight to Glasgow", "agent_turn_0": "Root system prompt flight book object equals source", "user_turn_1": "Machester", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.source_? (Place.location_? (?= \" Manchester \")))))))", "idx": "3373", "datum_id": {"dialogue_id": "7a86fd25-ca0a-4bb6-9e74-0285a4b77018", "turn_index": 1}}
{"user_turn_0": "I 'd prefer one with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Encino", "user_turn_1": "What 's the address ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "3382", "datum_id": {"dialogue_id": "5c0edd9d-5457-4ee2-ba3c-3bb3e0bf5ee4", "turn_index": 5}}
{"user_turn_0": "What 's the address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals Compton Arms", "user_turn_1": "That works . Book it at 10 AM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Capricorn \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (meridiem_? (?= (Meridiem.AM)))))))))))", "idx": "3383", "datum_id": {"dialogue_id": "5c0edd9d-5457-4ee2-ba3c-3bb3e0bf5ee4", "turn_index": 6}}
{"user_turn_0": "It 's for 5 people", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Move it to 2 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (Time.hour_? (?= (Hour.apply 2L))))))", "idx": "3385", "datum_id": {"dialogue_id": "5c0edd9d-5457-4ee2-ba3c-3bb3e0bf5ee4", "turn_index": 8}}
{"user_turn_0": "Yes , price range should be high price and at least one star rating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capers", "user_turn_1": "Ok , does it have parking ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "3408", "datum_id": {"dialogue_id": "d7cda17e-79d3-46dc-be2f-c472449494de", "turn_index": 3}}
{"user_turn_0": "Ok , does it have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Great . Book it for the 28th at 4 o'clock please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 28L))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 4L)))))))))))", "idx": "3409", "datum_id": {"dialogue_id": "d7cda17e-79d3-46dc-be2f-c472449494de", "turn_index": 4}}
{"user_turn_0": "None of these look good . Let me see places serving Indian food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flew Z", "user_turn_1": "Do they have parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "3418", "datum_id": {"dialogue_id": "b3b2990f-5847-49d3-a17c-f4bbdecca4a1", "turn_index": 6}}
{"user_turn_0": "Let me get a different restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Acacia Saint", "user_turn_1": "Do they have outdoor seating ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "3420", "datum_id": {"dialogue_id": "b3b2990f-5847-49d3-a17c-f4bbdecca4a1", "turn_index": 8}}
{"user_turn_0": "Do they have outdoor seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "That will work . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Jurassic Pork \"))))))", "idx": "3421", "datum_id": {"dialogue_id": "b3b2990f-5847-49d3-a17c-f4bbdecca4a1", "turn_index": 9}}
{"user_turn_0": "What rating does the Ritz Carlton in Camden Town have ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Book a room with a queen - sized bed", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.hotelName_? (?= \" Ritz-Carlton \")) (Hotel.roomType_? (List.exists_? (?= (RoomType.Queen)))))))", "idx": "3427", "datum_id": {"dialogue_id": "922ada2b-5d60-4d01-b4e2-2d8a5e8fb6b9", "turn_index": 3}}
{"user_turn_0": "Italian food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capers", "user_turn_1": "Does it have parking ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "3433", "datum_id": {"dialogue_id": "fe6dc456-0b31-4a44-baad-abb52eeb2fa2", "turn_index": 4}}
{"user_turn_0": "on the 27th", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM", "user_turn_1": "ok book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "3440", "datum_id": {"dialogue_id": "2f75c298-1a2b-4ab3-81ed-3eb3589a5305", "turn_index": 6}}
{"user_turn_0": "The event will go on for 45 minutes", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "make a calendar event on 11:30 o'clock Monday and add it to reminder", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.dayOfWeek_? (?= (Monday)))) (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L))))))))))", "idx": "3444", "datum_id": {"dialogue_id": "f26c4302-c15e-4404-ab1f-afc53dce0590", "turn_index": 2}}
{"user_turn_0": "Hey assistant , i 'd like to get business class tickets for a flight out of London .", "agent_turn_0": "Root system prompt flight book object equals destination", "user_turn_1": "Belfast City -- and I need the to be round - trip tickets", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& x0 (Flight.destination_? (Place.location_? (?= \" Belfast City \")))) (Flight.tripType_? (?= (TripType.roundTrip)))))))", "idx": "3448", "datum_id": {"dialogue_id": "45d90cdb-8234-42ab-b16c-e46e53051dd5", "turn_index": 1}}
{"user_turn_0": "Sunday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM price equals 156", "user_turn_1": "Yeah , that works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "3453", "datum_id": {"dialogue_id": "45d90cdb-8234-42ab-b16c-e46e53051dd5", "turn_index": 6}}
{"user_turn_0": "None of them look good . How about restaurants that serve Italian Cuisine", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kiwi Sea", "user_turn_1": "Does the restaurant have outdoor seats ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "3459", "datum_id": {"dialogue_id": "c64aa1ee-07ac-4e4c-a414-0193ecde86b9", "turn_index": 4}}
{"user_turn_0": "Please tell me which of the restaurants have a rating of at least one star", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Joint", "user_turn_1": "Does the restaurant have outdoor seats ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "3461", "datum_id": {"dialogue_id": "c64aa1ee-07ac-4e4c-a414-0193ecde86b9", "turn_index": 6}}
{"user_turn_0": "Does the restaurant have outdoor seats ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "That 's fine . Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Emptia \"))))))", "idx": "3462", "datum_id": {"dialogue_id": "c64aa1ee-07ac-4e4c-a414-0193ecde86b9", "turn_index": 7}}
{"user_turn_0": "From Derby", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM", "user_turn_1": "Pick the one at 3 pm", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "3473", "datum_id": {"dialogue_id": "2031416f-8ec6-4d2a-9ade-65b2c90ba61d", "turn_index": 2}}
{"user_turn_0": "As shown on my calendar , when is my Innovation Meetings with my mother", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals startDateTime equals time equals hour equals 4", "user_turn_1": "Please remind me about this event", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (^(CalendarEvent) always))))))", "idx": "3478", "datum_id": {"dialogue_id": "f94c39ea-6340-4326-a398-b086c0e71b1d", "turn_index": 2}}
{"user_turn_0": "Are there any calls from Mr Manning", "agent_turn_0": "Root system inform phoneCall checkExistence Existed object equals atDateTime equals date definedValue equals Today", "user_turn_1": "Thanks for the help . Please send him / her a text saying I 'm so sorry", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Mother))))) (Message.textContent_? (?= \" I'm so sorry \")))))", "idx": "3480", "datum_id": {"dialogue_id": "f94c39ea-6340-4326-a398-b086c0e71b1d", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , schedule an event on August 20th at 1 PM please", "tgt": "(plan (do (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (& (Date.month_? (?= (August))) (Date.day_? (?= (Day.apply 20L))))) (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM))))))))) (^(Reminder) Create :object (Reminder.reminderContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))))))", "idx": "3486", "datum_id": {"dialogue_id": "b28e4f8f-5508-460f-951e-a14b3871372f", "turn_index": 0}}
{"user_turn_0": "I need another favor . Schedule a reminder for today 's event", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "What time is History Competition with My Love", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (^(DateTime) always))) :object (& (CalendarEvent.eventName_? (?= \" history competition \")) (CalendarEvent.attendees_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Love))))))))", "idx": "3489", "datum_id": {"dialogue_id": "b28e4f8f-5508-460f-951e-a14b3871372f", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , i want to book a cheap hotel for check in today and check out on Monday .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?= (PriceRange.Low))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))))))))", "idx": "3491", "datum_id": {"dialogue_id": "d70bc8e2-080e-4cbf-8996-bf72cf6ba3ca", "turn_index": 0}}
{"user_turn_0": "How long do you think it 'll take to make it there ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 50", "user_turn_1": "Cook up a reminder", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Option (Constraint Reminder))) Path.apply \" object \") (lambda (^(Option (Constraint Reminder)) x0) (^(Reminder) Create$default$object))))", "idx": "3514", "datum_id": {"dialogue_id": "962191a6-d792-48ef-b4d9-5599ad37846d", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , i need to reserve a hotel with a king sized bed , checking in tomorrow and checking out the 18th , that is not too expensive .", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 18L)))))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.King)))))))", "idx": "3521", "datum_id": {"dialogue_id": "d9412813-9a03-4a63-b28a-2a7927f8fee4", "turn_index": 0}}
{"user_turn_0": "How is it rated ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "3524", "datum_id": {"dialogue_id": "d9412813-9a03-4a63-b28a-2a7927f8fee4", "turn_index": 3}}
{"user_turn_0": "I 'm departing from Birmingham", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I 'll take the one departing at 4 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "3540", "datum_id": {"dialogue_id": "11faee50-b70b-45a3-aa04-04fbc68be16f", "turn_index": 2}}
{"user_turn_0": "Is there free wifi at this hotel ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "3561", "datum_id": {"dialogue_id": "6dbc6f42-ebc3-4aac-bc0b-5d57099e75ea", "turn_index": 3}}
{"user_turn_0": "The room type does not matter but I do need two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will you change the check out date to Sunday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Sunday)))))", "idx": "3564", "datum_id": {"dialogue_id": "6dbc6f42-ebc3-4aac-bc0b-5d57099e75ea", "turn_index": 6}}
{"user_turn_0": "I will leave from Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM price equals 65", "user_turn_1": "I want to book the flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "3568", "datum_id": {"dialogue_id": "f1a561b0-3f01-4035-96ea-19a0484813c1", "turn_index": 2}}
{"user_turn_0": "I need another favor . yeah , can you remind me about that event", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Also create one for 5 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.atDateTime \") (lambda (^(Constraint DateTime) x0) (DateTime.time_? (Time.hour_? (?= (Hour.apply 5L)))))))", "idx": "3579", "datum_id": {"dialogue_id": "e46343ee-a0ac-409b-8302-703f991adc4a", "turn_index": 3}}
{"user_turn_0": "Would you like to book it for me ?", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "I would like to revise the appointment time to be at 11:30", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (& x0 (Time.minute_? (?= (Minute.apply 30L)))))))", "idx": "3584", "datum_id": {"dialogue_id": "d600e565-44d5-42d1-925f-bb0d888e3dca", "turn_index": 3}}
{"user_turn_0": "Delete Linux Showcase with Thomas", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Oh , is that so ? Never mind then . Could you book a double room for me at a cheap hotel in Wembley with the check in for tomorrow and check out Saturday ?", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" Wembley \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday)))))))) (Hotel.priceRange_? (?= (PriceRange.Low)))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Double)))))))", "idx": "3595", "datum_id": {"dialogue_id": "ac4ff601-8a82-418d-9111-284fd8927a3f", "turn_index": 2}}
{"user_turn_0": "Does it have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Great , then book that for me , please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "3597", "datum_id": {"dialogue_id": "ac4ff601-8a82-418d-9111-284fd8927a3f", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , is there a restaurant name or a preferred location that you have in mind ?", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.priceRange_? (?= (PriceRange.Moderate))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (April))) (Date.day_? (?= (Day.apply 10L)))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 2L)))))))) (Restaurant.hasParking_? (?= true)))))", "idx": "3600", "datum_id": {"dialogue_id": "036bfba3-5bc8-4706-aa32-51add4060531", "turn_index": 0}}
{"user_turn_0": "Give me a different restaurant that has outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals La Zilla", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Stazione restaurant \"))))))", "idx": "3604", "datum_id": {"dialogue_id": "036bfba3-5bc8-4706-aa32-51add4060531", "turn_index": 4}}
{"user_turn_0": "What cabin class is it ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "I want the economy class flight that leaves at 1:40 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" Birmingham \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "3625", "datum_id": {"dialogue_id": "576db69f-fb1e-413e-8169-bd038d998d44", "turn_index": 2}}
{"user_turn_0": "The 17th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM price equals 138", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "3627", "datum_id": {"dialogue_id": "576db69f-fb1e-413e-8169-bd038d998d44", "turn_index": 4}}
{"user_turn_0": "No , I 'm headed to Roma on Friday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 4 object equals nextDepartureDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM price equals 210", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "3645", "datum_id": {"dialogue_id": "9968540e-d450-48e1-aa4f-05ecfc79974e", "turn_index": 6}}
{"user_turn_0": "Yes I will", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 12 minute equals 40 meridiem equals PM", "user_turn_1": "Sounds good . I 'd like to book this flight for two passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Paris \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (^((Constraint (List DateTime))) refer)))) (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 2))))))", "idx": "3649", "datum_id": {"dialogue_id": "2fd3e6b3-1da4-4b34-a655-0dc792e7bf7b", "turn_index": 2}}
{"user_turn_0": "Which of those places on that list serve pizza ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Lakeside Demon", "user_turn_1": "Do they take credit card there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "3666", "datum_id": {"dialogue_id": "7fb8d0c4-b83e-4a4e-8559-ead46edbda60", "turn_index": 4}}
{"user_turn_0": "I would like another restaurant that offers parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Maple", "user_turn_1": "What will the average cost per person be", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "3668", "datum_id": {"dialogue_id": "7fb8d0c4-b83e-4a4e-8559-ead46edbda60", "turn_index": 6}}
{"user_turn_0": "I want you to show me another place that offers outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kiwi Sea", "user_turn_1": "What is the address of that place ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "3670", "datum_id": {"dialogue_id": "7fb8d0c4-b83e-4a4e-8559-ead46edbda60", "turn_index": 8}}
{"user_turn_0": "What is the address of that place ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals West Plumb Branch Lane", "user_turn_1": "Works for me . Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Kiwi Sea \"))))))", "idx": "3671", "datum_id": {"dialogue_id": "7fb8d0c4-b83e-4a4e-8559-ead46edbda60", "turn_index": 9}}
{"user_turn_0": "I want another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "Book it for tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Empirica \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow)))))))))", "idx": "3679", "datum_id": {"dialogue_id": "27dbc929-5d5b-4bc8-bb6d-12fdaecaf47f", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , when does tomorrow 's train to Waverley I am taking get in ?", "tgt": "(plan (^(Train) Find :focus (Train.arrivalDateTime_? (^(DateTime) always)) :object (& (Train.destination_? (Place.location_? (?= \" Waverley \"))) (Train.departureDateTime_? (DateTime.date_? (?= (Tomorrow)))))))", "idx": "3694", "datum_id": {"dialogue_id": "792ff3fa-8b69-485e-a8b9-8770c39a756d", "turn_index": 0}}
{"user_turn_0": "Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM price equals 145", "user_turn_1": "That looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "3704", "datum_id": {"dialogue_id": "9e79b245-f7fb-4bc3-b144-78614033729f", "turn_index": 5}}
{"user_turn_0": "It 's one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel it for free ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "3716", "datum_id": {"dialogue_id": "f07239b4-26f5-4161-8c32-c831d86bd653", "turn_index": 5}}
{"user_turn_0": "How do I get there", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "3739", "datum_id": {"dialogue_id": "28c0a7a5-6087-4de0-9c4a-d25082fcbdbd", "turn_index": 3}}
{"user_turn_0": "I have no preference for the car type but make sure the car can fit one luggages", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals 36 Albert Road", "user_turn_1": "I need the destination to be Starline Cabs", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" Starline Cabs \"))))", "idx": "3751", "datum_id": {"dialogue_id": "38287952-5236-4bd4-8067-46680b250e08", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , how expensive is the Triton in Hillingdon", "tgt": "(plan (^(Hotel) Find :focus (Hotel.priceRange_? (^(PriceRange) always)) :object (& (Hotel.hotelName_? (?= \" Triton \")) (Hotel.location_? (?= \" Hillingdon \")))))", "idx": "3754", "datum_id": {"dialogue_id": "17f90df3-8c06-4c5c-b50f-14099d5da32c", "turn_index": 0}}
{"user_turn_0": "Three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is complimentary breakfast provided ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "3759", "datum_id": {"dialogue_id": "17f90df3-8c06-4c5c-b50f-14099d5da32c", "turn_index": 5}}
{"user_turn_0": "Is complimentary breakfast provided ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Book it already", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "3760", "datum_id": {"dialogue_id": "17f90df3-8c06-4c5c-b50f-14099d5da32c", "turn_index": 6}}
{"user_turn_0": "None of them look good . Show more options for any type of food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flew Z", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Jurassic Pork \"))))))", "idx": "3769", "datum_id": {"dialogue_id": "1404c715-d388-4e11-aee6-40d0a180e3f5", "turn_index": 3}}
{"user_turn_0": "Hey assistant , book me a one way flight from London Heathrow to Belfast departing on the 12th .", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM price equals 170", "user_turn_1": "I prefer the flight that leaves at 2:30 PM on business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.source_? (Place.location_? (?= \" London Heathrow \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (^((Constraint (List DateTime))) refer) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.tripType_? (?= (TripType.oneWay)))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "3778", "datum_id": {"dialogue_id": "e4e00135-b57c-4efb-926d-7ebf2eeab0a3", "turn_index": 1}}
{"user_turn_0": "What 's the weather looking like today ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cloudy", "user_turn_1": "What 's the weathering looking like today in Swansea ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint WeatherReport)) Path.apply \" object \") (lambda (^(Constraint WeatherReport) x0) (& (WeatherReport.location_? (?= \" Swansea \")) x0))))", "idx": "3786", "datum_id": {"dialogue_id": "89f604ba-ca35-44b1-95fc-9fec75edeca2", "turn_index": 3}}
{"user_turn_0": "That direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "I 'd like to book the flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "3791", "datum_id": {"dialogue_id": "89f604ba-ca35-44b1-95fc-9fec75edeca2", "turn_index": 8}}
{"user_turn_0": "No I want the one at 4:30 PM", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "3800", "datum_id": {"dialogue_id": "811a2092-f948-4c88-a7a5-1ceb98f09ba2", "turn_index": 7}}
{"user_turn_0": "Sunday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 11 minute equals 45 meridiem equals AM price equals 138", "user_turn_1": "I would prefer the 4:56 PM flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "3814", "datum_id": {"dialogue_id": "e2c85cc6-23c3-42c3-a67c-080fa10b7b61", "turn_index": 7}}
{"user_turn_0": "I need a reminder for this morning 's event", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "I need a reminder for today 's event", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.atDateTime.dateTimeRange.startDateTime \") (lambda (^(Constraint DateTime) x0) (DateTime.date_? (?= (Today))))))", "idx": "3845", "datum_id": {"dialogue_id": "1e058efe-28e4-4db3-85a2-555d42fba13d", "turn_index": 4}}
{"user_turn_0": "I want to return on Saturday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 meridiem equals PM", "user_turn_1": "Ok , sounds fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "3870", "datum_id": {"dialogue_id": "a29c39dd-212d-4107-9cf0-0c85df4f0103", "turn_index": 3}}
{"user_turn_0": "Does it have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "OK . I 'll take that one then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "3882", "datum_id": {"dialogue_id": "d67eacbf-1053-49f1-89b8-201eaee1cfb4", "turn_index": 5}}
{"user_turn_0": "I would like to return Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 12 minute equals 30 meridiem equals PM price equals 134", "user_turn_1": "That works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "3892", "datum_id": {"dialogue_id": "3d27f489-0fb2-49f9-a5e2-cee140fad80e", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , i need to make a reservation for 2 people , at Jurassic Pork .", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.restaurantName_? (?= \" Jurassic Pork \")) (Restaurant.location_? (?= \" Preston \"))) (Restaurant.tableSize_? (?= 2)))))", "idx": "3894", "datum_id": {"dialogue_id": "ca20e82d-2f12-4f7d-9a00-f117559f75e4", "turn_index": 0}}
{"user_turn_0": "I want to know if the hotel has fitness center", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Reserve it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "3903", "datum_id": {"dialogue_id": "9f962bc9-0601-4dd5-8e1b-cbdc9ef6e69b", "turn_index": 4}}
{"user_turn_0": "I want one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "I need to know if prepayment is required", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "3907", "datum_id": {"dialogue_id": "9f962bc9-0601-4dd5-8e1b-cbdc9ef6e69b", "turn_index": 8}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , make a reservation in Hillingdon hotel . It should be at least there star hotel .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= \" Hillingdon \")) (Hotel.rating_? (?>= (someSalient (?= 3)))))))", "idx": "3909", "datum_id": {"dialogue_id": "03e40077-2454-4dbd-b7b9-2c7fdc8010c6", "turn_index": 0}}
{"user_turn_0": "Look up its rating", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "I would rather stay at a cheaper hotel", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.priceRange_? (?= (PriceRange.Moderate)))))))", "idx": "3911", "datum_id": {"dialogue_id": "03e40077-2454-4dbd-b7b9-2c7fdc8010c6", "turn_index": 2}}
{"user_turn_0": "I would rather stay at a cheaper hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Obsidian Sky price equals 170", "user_turn_1": "Do they have laundry ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.laundry_? (^(Boolean) always)))))", "idx": "3912", "datum_id": {"dialogue_id": "03e40077-2454-4dbd-b7b9-2c7fdc8010c6", "turn_index": 3}}
{"user_turn_0": "Do they have laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Go ahead and book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" The Blackstone \"))))))", "idx": "3913", "datum_id": {"dialogue_id": "03e40077-2454-4dbd-b7b9-2c7fdc8010c6", "turn_index": 4}}
{"user_turn_0": "I want 3 rooms", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Check in Monday then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Monday))))))", "idx": "3935", "datum_id": {"dialogue_id": "20d44751-bbe9-4d97-8712-119437b7c9dd", "turn_index": 7}}
{"user_turn_0": "Hi my assistant , where will my event with my brother be ?", "agent_turn_0": "Root system inform calendarEvent find focus equals location equals Kissmet", "user_turn_1": "How long will it take to get there ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (Place.location_? (^((Constraint String)) refer)))))", "idx": "3943", "datum_id": {"dialogue_id": "fe030a7d-1bdf-4b90-9c95-164ddcef6258", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i need a round - trip plane ticket to Edinburg from Birmingham on Monday and coming back on the 20th .", "tgt": "(plan (^(Flight) Book :object (& (& (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" Birmingham \")))) (Flight.destination_? (Place.location_? (?= \" Edinburgh \")))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))))) (Flight.returnDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 20L))))))))", "idx": "3947", "datum_id": {"dialogue_id": "ca4c2bfa-1f2f-45db-9cc2-8579a51395f2", "turn_index": 0}}
{"user_turn_0": "And it has free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Ok , let 's get that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "3975", "datum_id": {"dialogue_id": "671f2fce-e17b-4522-9df5-760048bca475", "turn_index": 3}}
{"user_turn_0": "Three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel free of charge ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "3980", "datum_id": {"dialogue_id": "671f2fce-e17b-4522-9df5-760048bca475", "turn_index": 8}}
{"user_turn_0": "Manchester", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "Try the 16th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 16L))))))", "idx": "3989", "datum_id": {"dialogue_id": "a269e856-931f-4df3-a605-9644798e5a76", "turn_index": 2}}
{"user_turn_0": "What cabin class is that ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "I would actually prefer the 3:45 departure for business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Glasgow \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.tripType_? (?= (TripType.oneWay)))) (Flight.passengers_? (?= 3))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "3991", "datum_id": {"dialogue_id": "a269e856-931f-4df3-a605-9644798e5a76", "turn_index": 4}}
{"user_turn_0": "I prefer another hotel with at least one star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Candlewood Suites price equals 130", "user_turn_1": "Does the hotel have laundry", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.laundry_? (^(Boolean) always)))))", "idx": "3996", "datum_id": {"dialogue_id": "0fcf65df-a1a9-401b-9b55-b5648b2145aa", "turn_index": 3}}
{"user_turn_0": "Does the hotel have laundry", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Ballyfin \"))))))", "idx": "3997", "datum_id": {"dialogue_id": "0fcf65df-a1a9-401b-9b55-b5648b2145aa", "turn_index": 4}}
{"user_turn_0": "Which airline is it that ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "That 's fine . I 'd like to book the flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "4003", "datum_id": {"dialogue_id": "361c7ecd-b147-452d-b067-30593b756451", "turn_index": 4}}
{"user_turn_0": "I will return on the 20th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM price equals 134", "user_turn_1": "This one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "4006", "datum_id": {"dialogue_id": "361c7ecd-b147-452d-b067-30593b756451", "turn_index": 7}}
{"user_turn_0": "Hi assistant , set up an event every week on the calendar .", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange", "user_turn_1": "How about at 10:30 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object \") (lambda (^(Constraint CalendarEvent) x0) (& x0 (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))))))))))", "idx": "4009", "datum_id": {"dialogue_id": "43bed3db-b282-4be2-bedf-40699e2c74b5", "turn_index": 1}}
{"user_turn_0": "On the 23rd", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 4 meridiem equals PM price equals 135", "user_turn_1": "This one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "4016", "datum_id": {"dialogue_id": "1031abea-ad1b-4910-84e8-679d336a02ee", "turn_index": 3}}
{"user_turn_0": "no as long as it fits two luggages", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals 7615 Eagle Lane", "user_turn_1": "edit the destination to Medivet Islington", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" Medivet Islington \"))))", "idx": "4031", "datum_id": {"dialogue_id": "a639bc8e-0837-4528-9e94-a3c8d331a949", "turn_index": 3}}
{"user_turn_0": "Hey , what are the directions to the event this morning", "agent_turn_0": "Root system inform navigation find object equals destination equals location equals Camden Passage", "user_turn_1": "What is the weather like there ?", "tgt": "(plan (^(WeatherReport) Find :object (WeatherReport.location_? (^((Constraint String)) refer))))", "idx": "4034", "datum_id": {"dialogue_id": "a89dd841-c1e5-4289-958d-c19a7a4563a8", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , i 'd like to book a three star hotel or better , and I 'd like to check in today and leave on October 28th", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.rating_? (?>= (someSalient (?= 3)))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (& (Date.day_? (?= (Day.apply 28L))) (Date.month_? (?= (October)))))))))))", "idx": "4045", "datum_id": {"dialogue_id": "0c34c696-bd2f-4037-affc-fb0b4a9a03fd", "turn_index": 0}}
{"user_turn_0": "Do they offer laundry services", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "4048", "datum_id": {"dialogue_id": "0c34c696-bd2f-4037-affc-fb0b4a9a03fd", "turn_index": 3}}
{"user_turn_0": "Three rooms please", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "I 'd like to check in on Wednesday instead please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Wednesday))))))", "idx": "4051", "datum_id": {"dialogue_id": "0c34c696-bd2f-4037-affc-fb0b4a9a03fd", "turn_index": 6}}
{"user_turn_0": "I 'd like to check in on Wednesday instead please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they require a prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "4052", "datum_id": {"dialogue_id": "0c34c696-bd2f-4037-affc-fb0b4a9a03fd", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , is there a car type that you prefer ? Your choices include Saloon , MPV and Executive .", "tgt": "(plan (^(Taxi) Book :object (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Morning))))))))))", "idx": "4054", "datum_id": {"dialogue_id": "a9f52ea4-d428-4c24-90f1-28f56b6f6a29", "turn_index": 0}}
{"user_turn_0": "Hi assistant , is there a car type that you prefer ? Your choices include Saloon , MPV and Executive .", "agent_turn_0": "Root system prompt taxi book object equals serviceType inform taxi find object equals serviceType equals listElementOne Saloon listElementTwo MPV listElementThree Executive", "user_turn_1": "Book me a taxi that will take me to this morning 's calendar event venue", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Taxi)) Path.apply \" object \") (lambda (^(Constraint Taxi) x0) (& x0 (Taxi.serviceType_? (List.exists_? (?= (ServiceType.Saloon))))))))", "idx": "4055", "datum_id": {"dialogue_id": "a9f52ea4-d428-4c24-90f1-28f56b6f6a29", "turn_index": 1}}
{"user_turn_0": "Book me a taxi that will take me to this morning 's calendar event venue", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals Little Bat", "user_turn_1": "I want my destination switched to 4a Enterprise Way", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Place)) Path.apply \" object.destination \") (lambda (^(Constraint Place) x0) (Place.location_? (?= \" 4a Enterprise Way \")))))", "idx": "4056", "datum_id": {"dialogue_id": "a9f52ea4-d428-4c24-90f1-28f56b6f6a29", "turn_index": 2}}
{"user_turn_0": "I will be returning Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 4 minute equals 20 meridiem equals PM price equals 125", "user_turn_1": "Ok that 's cool", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "4064", "datum_id": {"dialogue_id": "66e6e2b6-635b-4a14-b804-be9ba6b9cf7b", "turn_index": 5}}
{"user_turn_0": "Hey , can you add Dylan to my event held in Basel House on my calendar", "agent_turn_0": "Root system inform calendarEvent update Completed", "user_turn_1": "Next , text him", "tgt": "(plan (^(Message) Create :object (Message.recipients_? (^((Constraint Contact)) refer))))", "idx": "4067", "datum_id": {"dialogue_id": "1f7009d6-bbed-4ecd-9968-c9bb27274e62", "turn_index": 1}}
{"user_turn_0": "Get a table for 2 , please", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Okay , change it to today , then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Today)))))", "idx": "4073", "datum_id": {"dialogue_id": "c4867086-39ee-4dd1-8b01-339b25a300d7", "turn_index": 2}}
{"user_turn_0": "Hello assistant , i need a round trip plane ticket leaving today from Liverpool to Belfast City .", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "Does Tuesday work ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "4077", "datum_id": {"dialogue_id": "ddf479e7-1211-44ad-bbef-cc2635cc8578", "turn_index": 1}}
{"user_turn_0": "Do any of the restaurants you found serve grilled food ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Joint", "user_turn_1": "Is parking offered at the restaurant ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "4086", "datum_id": {"dialogue_id": "2f6770d8-63bf-44cd-b870-d3d2de235bb3", "turn_index": 4}}
{"user_turn_0": "Give me a different restaurant that offers outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Boiling Fence", "user_turn_1": "Is credit card accepted at this restaurant ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "4088", "datum_id": {"dialogue_id": "2f6770d8-63bf-44cd-b870-d3d2de235bb3", "turn_index": 6}}
{"user_turn_0": "Is credit card accepted at this restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Book me this restaurant for the 27th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Interknack \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 27L))))))))))", "idx": "4089", "datum_id": {"dialogue_id": "2f6770d8-63bf-44cd-b870-d3d2de235bb3", "turn_index": 7}}
{"user_turn_0": "Call 07740004762", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Schedule an event on June 19 at 6 and add it to my reminder", "tgt": "(plan (do (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (& (Date.month_? (?= (June))) (Date.day_? (?= (Day.apply 19L))))) (DateTime.time_? (Time.hour_? (?= (Hour.apply 6L)))))))) (^(Reminder) Create :object (Reminder.reminderContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))))))", "idx": "4113", "datum_id": {"dialogue_id": "d0368fa2-eb63-4139-b498-20dde39f2e05", "turn_index": 3}}
{"user_turn_0": "No , get a different one , one that has at least one star", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals The Watson price equals 135", "user_turn_1": "Do they have a fitness center ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasFitness_? (^(Boolean) always)))))", "idx": "4124", "datum_id": {"dialogue_id": "417ed96c-334d-46eb-a0f6-077904c26fa2", "turn_index": 4}}
{"user_turn_0": "Do they have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Blossomwell Resorts \"))))))", "idx": "4125", "datum_id": {"dialogue_id": "417ed96c-334d-46eb-a0f6-077904c26fa2", "turn_index": 5}}
{"user_turn_0": "Wait , change the check in to February 5th", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "What if I need to cancel", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "4128", "datum_id": {"dialogue_id": "417ed96c-334d-46eb-a0f6-077904c26fa2", "turn_index": 8}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , what 's the event 's ending time ?", "tgt": "(plan (^(CalendarEvent) Create :object (& (& (& (CalendarEvent.eventName_? (?= \" creative communication \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday)))) (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM))))))))) (CalendarEvent.attendees_? (Contact.person_? (& (Person.name_? (?= \" Arnold \")) (Person.namePrefix_? (?= \" Mr \")))))) (CalendarEvent.location_? (?= \" Tides Estate \")))))", "idx": "4136", "datum_id": {"dialogue_id": "dd99d10c-8546-49c0-b0fb-54b6012f34d9", "turn_index": 0}}
{"user_turn_0": "How do I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Alright , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Odysse Suites \"))))))", "idx": "4145", "datum_id": {"dialogue_id": "bc36dba9-f57d-4f01-a043-8ad1807a2dea", "turn_index": 4}}
{"user_turn_0": "I will leave tomorrow and would like to fly business class", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "What if I revise it to the 15th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 15L))))))", "idx": "4149", "datum_id": {"dialogue_id": "e9dff31a-3820-4ae0-b468-04c2cb6daf8f", "turn_index": 2}}
{"user_turn_0": "Hello assistant , what is the rating of Flip Out ?", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 3", "user_turn_1": "Book a table for two people", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.restaurantName_? (^((Constraint String)) refer)) (Restaurant.tableSize_? (?= 2)))))", "idx": "4159", "datum_id": {"dialogue_id": "3c4964f1-6f00-44bb-8a69-d5a81754400f", "turn_index": 1}}
{"user_turn_0": "At 3 PM today", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Ok . Change it to the 21st", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 21L))))))", "idx": "4161", "datum_id": {"dialogue_id": "3c4964f1-6f00-44bb-8a69-d5a81754400f", "turn_index": 3}}
{"user_turn_0": "How much is it per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 39", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Hambone Martian \"))))))", "idx": "4169", "datum_id": {"dialogue_id": "acf6c4d9-8cff-41f5-bfbe-d88103938a06", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i need to book Floq with a table for 6 people on the 28th", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.restaurantName_? (?= \" Floq \")) (Restaurant.tableSize_? (?= 6))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 28L)))))))))", "idx": "4177", "datum_id": {"dialogue_id": "38972b0c-df3c-49d5-ae34-13b7350051a1", "turn_index": 0}}
{"user_turn_0": "Sunday please", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM price equals 201", "user_turn_1": "That 's fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "4197", "datum_id": {"dialogue_id": "5ea4c5a2-148a-4e13-8ca9-20521068b4f5", "turn_index": 5}}
{"user_turn_0": "Is that an economy class or business class flight ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "Okay , I 'll take that flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "4207", "datum_id": {"dialogue_id": "66694f55-6c99-4047-9a02-1a49764343c3", "turn_index": 3}}
{"user_turn_0": "I need three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait a second . do I need to prepay for the booking ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "4214", "datum_id": {"dialogue_id": "509c5d8d-53ef-450b-a133-ce5e22964b1b", "turn_index": 4}}
{"user_turn_0": "No , but I need three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel for free ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "4225", "datum_id": {"dialogue_id": "d955b8b4-085d-440a-b04b-5ef9c6eae330", "turn_index": 4}}
{"user_turn_0": "I want to book a hotel room with wifi", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "I want an inexpensive room in Wembley", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.location_? (?= \" Wembley \"))) (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "4236", "datum_id": {"dialogue_id": "0f3a0d58-dc6a-4d1d-a131-d2d4c5beee41", "turn_index": 3}}
{"user_turn_0": "Yes . please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I choose the 2:30 PM flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "4240", "datum_id": {"dialogue_id": "b0ad9b65-1f19-4234-8a8e-f78a1a529ef3", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , i need a taxi from 60 Cross street to the event at 5 PM .", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" 60 Cross Street \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 5L))) (meridiem_? (?= (Meridiem.PM)))))))))))))", "idx": "4248", "datum_id": {"dialogue_id": "37a31703-7a13-42c1-842c-d175771c8619", "turn_index": 0}}
{"user_turn_0": "Can you give me the cost ?", "agent_turn_0": "Root system inform flight find focus equals price equals 135", "user_turn_1": "Cool . Can you book it for two people ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (^((Constraint (List DateTime))) refer)))) (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 2))))))", "idx": "4256", "datum_id": {"dialogue_id": "658fd377-8d82-4f0d-86b3-ecc3626bfc94", "turn_index": 3}}
{"user_turn_0": "Yeah I will be . I want to depart on the 11th of April", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM price equals 142", "user_turn_1": "I would rather have the flight that leaves at 4 PM and I want the tickets to be economy", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Paris \"))) (Flight.passengers_? (?= 2))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "4272", "datum_id": {"dialogue_id": "dd86d829-26da-4620-a219-387d605cd702", "turn_index": 2}}
{"user_turn_0": "Book it", "agent_turn_0": "Root system inform calendarEvent create Completed restaurant book Completed", "user_turn_1": "Now I need a train from Reading Station to Euston that leaves before 5 PM", "tgt": "(plan (^(Train) Book :object (& (& (Train.source_? (Place.location_? (?= \" Reading station \"))) (Train.destination_? (Place.location_? (?= \" Euston \")))) (Train.departureDateTime_? (DateTime.time_? (?<= (someSalient (& (Time.hour_? (?= (Hour.apply 5L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "4282", "datum_id": {"dialogue_id": "d4927d09-b6f5-4194-82f2-14bca42217db", "turn_index": 4}}
{"user_turn_0": "Never mind , I prefer another hotel with low price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Hyatt price equals 160", "user_turn_1": "Does it have a fitness center ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasFitness_? (^(Boolean) always)))))", "idx": "4286", "datum_id": {"dialogue_id": "4358afeb-180d-4357-9c41-dbcd06fa8ff2", "turn_index": 3}}
{"user_turn_0": "Does it have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Great . Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Green Acres \"))))))", "idx": "4287", "datum_id": {"dialogue_id": "4358afeb-180d-4357-9c41-dbcd06fa8ff2", "turn_index": 4}}
{"user_turn_0": "The room type does n't matter as long as I get two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "4291", "datum_id": {"dialogue_id": "4358afeb-180d-4357-9c41-dbcd06fa8ff2", "turn_index": 8}}
{"user_turn_0": "No , I 'll be going to Madrid on Thursday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 2 object equals nextDepartureDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM price equals 199", "user_turn_1": "I think this one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (^((Constraint Hour)) refer)) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "4302", "datum_id": {"dialogue_id": "43757845-a6be-4507-ab2d-7f0627052fd8", "turn_index": 4}}
{"user_turn_0": "I will be leaving on January the 9th from London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM price equals 150", "user_turn_1": "Hmm . I think I 'd rather have the one leaving at 4:30 PM . I need an economy flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Brussel \"))) (Flight.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (Time.hour_? (^((Constraint Hour)) refer)) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "4311", "datum_id": {"dialogue_id": "997bd3ba-2024-482d-939b-173815d4865d", "turn_index": 2}}
{"user_turn_0": "Hmm , sorry . I actually need to leave for my first trip on Monday instead", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 12 minute equals 25 meridiem equals PM", "user_turn_1": "Sounds good . Book it for four people , please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Brussel \"))) (Flight.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (Time.hour_? (?= (Hour.apply 9L))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.source_? (Place.location_? (?= \" London \")))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (^((Constraint (List DateTime))) refer)))) (Flight.class_? (?= (FlightClass.Economy)))) (Flight.nextDestination_? (^((Constraint Place)) refer))) (Flight.nextDepartureDateTime_? (& (DateTime.date_? (Date.dayOfWeek_? (?= (Friday)))) (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))) (Flight.passengers_? (?= 4))))))", "idx": "4315", "datum_id": {"dialogue_id": "997bd3ba-2024-482d-939b-173815d4865d", "turn_index": 6}}
{"user_turn_0": "Table for 6 people", "agent_turn_0": "Root system offer restaurant book inform calendarEvent find Conflicted", "user_turn_1": "No can you change the booking time to 3 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hour)) Path.apply \" object.atDateTime.time.hour \") (lambda (^(Constraint Hour) x0) (?= (Hour.apply 3L)))))", "idx": "4324", "datum_id": {"dialogue_id": "2f2bb9e6-2410-404c-9734-8f4832620832", "turn_index": 2}}
{"user_turn_0": "Yes book it please", "agent_turn_0": "Root system inform calendarEvent create Completed restaurant book Completed", "user_turn_1": "Book the The Lakeside Demon restaurant for me and add it to calendar", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (Restaurant.restaurantName_? (?= \" The Lakeside Demon \")))))", "idx": "4326", "datum_id": {"dialogue_id": "2f2bb9e6-2410-404c-9734-8f4832620832", "turn_index": 4}}
{"user_turn_0": "Let me book three rooms there", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel free of charge once I make the reservation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "4336", "datum_id": {"dialogue_id": "66c061d3-3859-4fa1-9194-456c76cd3ab7", "turn_index": 3}}
{"user_turn_0": "Can I cancel free of charge once I make the reservation ?", "agent_turn_0": "Root system inform hotel find focus equals freeCancellation equals True", "user_turn_1": "Make the check out day Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Friday))))))", "idx": "4337", "datum_id": {"dialogue_id": "66c061d3-3859-4fa1-9194-456c76cd3ab7", "turn_index": 4}}
{"user_turn_0": "Make the check out day Friday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Make the check in Wednesday instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Wednesday))))))", "idx": "4338", "datum_id": {"dialogue_id": "66c061d3-3859-4fa1-9194-456c76cd3ab7", "turn_index": 5}}
{"user_turn_0": "Make the check in Wednesday instead", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you freely cancel a reservation there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "4339", "datum_id": {"dialogue_id": "66c061d3-3859-4fa1-9194-456c76cd3ab7", "turn_index": 6}}
{"user_turn_0": "That 's right", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I 'd prefer the 1:45 PM departure please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "4343", "datum_id": {"dialogue_id": "0c5147fd-ad71-4aae-a321-e5f82ee5b393", "turn_index": 2}}
{"user_turn_0": "I do n't like any of those . Look up places that serve sushi", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Chipotle Grill", "user_turn_1": "Where is it located ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "4350", "datum_id": {"dialogue_id": "9663330d-3abf-4a22-bea0-08454455a57b", "turn_index": 3}}
{"user_turn_0": "I want another place with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Box", "user_turn_1": "Do they take credit cards ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "4353", "datum_id": {"dialogue_id": "9663330d-3abf-4a22-bea0-08454455a57b", "turn_index": 6}}
{"user_turn_0": "Do they take credit cards ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "Book it anyway", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Shining Gate \"))))))", "idx": "4354", "datum_id": {"dialogue_id": "9663330d-3abf-4a22-bea0-08454455a57b", "turn_index": 7}}
{"user_turn_0": "Hello assistant , what rating does Rose hotel have ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Book a room in July from the 8th to the 11th", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.hotelName_? (^((Constraint String)) refer)) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 8L))))) (DateTimeRange.endDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 11L)))) (month_? (Date.month_? (?= (July)))))))))))", "idx": "4358", "datum_id": {"dialogue_id": "555e7962-999b-418c-99b7-d5fe3a92c475", "turn_index": 1}}
{"user_turn_0": "Just one", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "No . Change the check in date to tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Tomorrow)))))", "idx": "4361", "datum_id": {"dialogue_id": "555e7962-999b-418c-99b7-d5fe3a92c475", "turn_index": 4}}
{"user_turn_0": "How is the weather in Cardiff tomorrow ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Rainy", "user_turn_1": "Did my daughter call me ?", "tgt": "(plan (^(PhoneCall) CheckExistence :object (& (PhoneCall.newness_? (?= (Newness.New))) (PhoneCall.sender_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Daughter))))))))", "idx": "4370", "datum_id": {"dialogue_id": "97c8394d-aecf-4a8a-8612-79301998a7f2", "turn_index": 2}}
{"user_turn_0": "Did my daughter call me ?", "agent_turn_0": "Root system inform phoneCall checkExistence NotExisted", "user_turn_1": "Can you text her asking what time was that appointment", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Daughter))))) (Message.textContent_? (?= \" what time was that appointment \")))))", "idx": "4371", "datum_id": {"dialogue_id": "97c8394d-aecf-4a8a-8612-79301998a7f2", "turn_index": 3}}
{"user_turn_0": "London Heathrow", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM price equals 65", "user_turn_1": "I want the one at 4 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "4375", "datum_id": {"dialogue_id": "040e011c-190f-4cc0-840c-abca648a3953", "turn_index": 2}}
{"user_turn_0": "I wo n't as I will be going to Berlin on Sunday next", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 2 object equals nextDepartureDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM price equals 201", "user_turn_1": "I like that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "4378", "datum_id": {"dialogue_id": "040e011c-190f-4cc0-840c-abca648a3953", "turn_index": 5}}
{"user_turn_0": "Hello assistant , show me the attendees of Hang Out on my calendar", "agent_turn_0": "Root system inform calendarEvent find focus equals attendees equals person equals name equals Chapman namePrefix equals Mr", "user_turn_1": "Include him / her to Healthy Blossom please", "tgt": "(plan (^(CalendarEvent) Create :focus (^((Constraint CalendarEvent)) refer) :object (CalendarEvent.eventName_? (?= \" Healthy Blossom \"))))", "idx": "4381", "datum_id": {"dialogue_id": "7ddcee01-130c-40c1-80d1-1b9f5ffb4198", "turn_index": 1}}
{"user_turn_0": "Hi assistant , how much does the Diva hotel in King 's Cross cost ?", "agent_turn_0": "Root system inform hotel find focus equals priceRange equals Moderate", "user_turn_1": "Ok reserve a room for me there from August 18th to the 19th", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.hotelName_? (?= \" Diva \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 18L))))) (DateTimeRange.endDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 19L)))) (month_? (Date.month_? (?= (August)))))))))))", "idx": "4386", "datum_id": {"dialogue_id": "4c7f65eb-e9d1-4840-8b01-938cb39da710", "turn_index": 1}}
{"user_turn_0": "Tell me will breakfast be included", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "4410", "datum_id": {"dialogue_id": "52517266-7fe2-48cc-8261-5025f21819b1", "turn_index": 3}}
{"user_turn_0": "I 'd like to have two single rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there a prepayment needed ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "4412", "datum_id": {"dialogue_id": "52517266-7fe2-48cc-8261-5025f21819b1", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , can you change the day of my next event ?", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (^(Date) always)))) :object (CalendarEvent.listOffset_? (?= 1))))", "idx": "4414", "datum_id": {"dialogue_id": "9ecd3117-a698-40ba-8700-615a9517b0f6", "turn_index": 0}}
{"user_turn_0": "Hi assistant , can you change the day of my next event ?", "agent_turn_0": "Root system prompt calendarEvent update focus equals dateTimeRange equals startDateTime equals date", "user_turn_1": "Set it to be on Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Update \") (^((Constraint Date)) Path.apply \" focus.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "4415", "datum_id": {"dialogue_id": "9ecd3117-a698-40ba-8700-615a9517b0f6", "turn_index": 1}}
{"user_turn_0": "Does the Floq restaurant take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Ok . That 's fine . Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Lakeside Demon \"))))))", "idx": "4424", "datum_id": {"dialogue_id": "cc7deffc-7039-4f35-a6c5-16c0080ecc35", "turn_index": 5}}
{"user_turn_0": "Does the hotel have free wifi", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "4432", "datum_id": {"dialogue_id": "26c6b5c2-0937-49ae-871d-42c2466c8c45", "turn_index": 3}}
{"user_turn_0": "Yes you are right", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "4467", "datum_id": {"dialogue_id": "4b034cf7-fd94-4d2a-ae28-1b93d2222035", "turn_index": 4}}
{"user_turn_0": "I need to get there by 11 PM on April 8th", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM", "user_turn_1": "Sure", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "4472", "datum_id": {"dialogue_id": "6ad497a1-f25b-44c5-b36c-d48d16887725", "turn_index": 4}}
{"user_turn_0": "What 's the address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals Starline Cabs", "user_turn_1": "Please book that for me today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Inheat \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Today)))))))))", "idx": "4481", "datum_id": {"dialogue_id": "9bde9795-cb67-4509-8a66-c26cfadc9b11", "turn_index": 5}}
{"user_turn_0": "What is the address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals Tumacacori Rectory Road", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Maple \"))))))", "idx": "4489", "datum_id": {"dialogue_id": "3aeef319-e3e7-4546-800b-5fa017be5428", "turn_index": 4}}
{"user_turn_0": "What 's the rating of it ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "Okay , book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "4495", "datum_id": {"dialogue_id": "c3b727cf-1d13-48a8-ab1b-b2b5a9a496d2", "turn_index": 2}}
{"user_turn_0": "I 'll need three queen - sized beds", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to pay for it at booking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "4497", "datum_id": {"dialogue_id": "c3b727cf-1d13-48a8-ab1b-b2b5a9a496d2", "turn_index": 4}}
{"user_turn_0": "Do I need to pay for it at booking ?", "agent_turn_0": "Root system inform hotel find focus equals prePayment equals False", "user_turn_1": "Actually , change the check out to Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Friday))))))", "idx": "4498", "datum_id": {"dialogue_id": "c3b727cf-1d13-48a8-ab1b-b2b5a9a496d2", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , can you book me a hotel in Blackwell for Wednesday that 's not too expensive ? I want to book a double room .", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" Blackwall \")) (Hotel.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))))) (Hotel.priceRange_? (?= (PriceRange.Moderate)))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Double)))))))", "idx": "4510", "datum_id": {"dialogue_id": "e9689828-a8d5-4372-b2ec-dbd4fe44de9e", "turn_index": 0}}
{"user_turn_0": "I would rather stay at a hotel that has a rating of at least one star", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Freehand price equals 173", "user_turn_1": "Is there free wifi at the hotel ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasWifi_? (^(Boolean) always)))))", "idx": "4513", "datum_id": {"dialogue_id": "e9689828-a8d5-4372-b2ec-dbd4fe44de9e", "turn_index": 3}}
{"user_turn_0": "Is there free wifi at the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Can you book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Blossomwell Resorts \"))))))", "idx": "4514", "datum_id": {"dialogue_id": "e9689828-a8d5-4372-b2ec-dbd4fe44de9e", "turn_index": 4}}
{"user_turn_0": "I 'm leaving from Southampton", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM", "user_turn_1": "I 'd rather the one at 4:45 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "4519", "datum_id": {"dialogue_id": "e4b94075-7ed7-4a6a-bba6-844cdb471d4b", "turn_index": 2}}
{"user_turn_0": "The best place for me would not be highly priced and rated with at least one star", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Fairmont price equals 145", "user_turn_1": "Does that place provide free Wi - Fi ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasWifi_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "4525", "datum_id": {"dialogue_id": "0058e42c-5bcd-4cdc-be1c-54e137aeaa1e", "turn_index": 3}}
{"user_turn_0": "Does that place provide free Wi - Fi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Great ; make the booking please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "4526", "datum_id": {"dialogue_id": "0058e42c-5bcd-4cdc-be1c-54e137aeaa1e", "turn_index": 4}}
{"user_turn_0": "AM start time", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "10 AM", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.endDateTime_? (^(DateTime) always))) :object (& (CalendarEvent.eventName_? (?= \" Grocery shopping \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow))))))))", "idx": "4540", "datum_id": {"dialogue_id": "7cacaef4-42d1-4df2-ba61-9f7f41201189", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , sky Venus .", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.location_? (^(String) always)) :object (CalendarEvent.eventName_? (?= \" spring outing \"))))", "idx": "4541", "datum_id": {"dialogue_id": "4177b881-e2d0-48e8-936b-53daed325fb6", "turn_index": 0}}
{"user_turn_0": "Hello assistant , sky Venus .", "agent_turn_0": "Root system prompt calendarEvent update focus equals location", "user_turn_1": "I want to change the location of spring outing on the calendar", "tgt": "(plan (revise (^(Unit) Path.apply \" Update \") (^((Constraint String)) Path.apply \" focus.location \") (lambda (^(Constraint String) x0) (?= \" Sky Venus \"))))", "idx": "4542", "datum_id": {"dialogue_id": "4177b881-e2d0-48e8-936b-53daed325fb6", "turn_index": 1}}
{"user_turn_0": "I want to change the location of spring outing on the calendar", "agent_turn_0": "Root system inform calendarEvent update Completed", "user_turn_1": "How much time will it take to get there ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (Place.location_? (?= \" Sky Venus \")))))", "idx": "4543", "datum_id": {"dialogue_id": "4177b881-e2d0-48e8-936b-53daed325fb6", "turn_index": 2}}
{"user_turn_0": "I 'd like to book one room please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they have free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "4555", "datum_id": {"dialogue_id": "23cefcef-6e75-40e0-a149-320842480d87", "turn_index": 4}}
{"user_turn_0": "Do they have free cancellation ?", "agent_turn_0": "Root system inform hotel find focus equals freeCancellation equals False", "user_turn_1": "Please modify the check in to the 7th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 7L))))))", "idx": "4556", "datum_id": {"dialogue_id": "23cefcef-6e75-40e0-a149-320842480d87", "turn_index": 5}}
{"user_turn_0": "Hey , can you book me a hotel with a king sized bed ?", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "Somewhere in Forest Hill that 's not too expensive", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.location_? (?= \" Forest Hill \"))) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))))))", "idx": "4560", "datum_id": {"dialogue_id": "9678c4d6-cd65-4c2f-9d92-c33a6471ed25", "turn_index": 1}}
{"user_turn_0": "Can you change my check in to be today and check ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to pay for the room right now ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "4565", "datum_id": {"dialogue_id": "9678c4d6-cd65-4c2f-9d92-c33a6471ed25", "turn_index": 6}}
{"user_turn_0": "Three please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually , can you change my check out day to be on Sunday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Sunday))))))", "idx": "4571", "datum_id": {"dialogue_id": "03d18ac4-66a2-4f84-8f2a-99cdb2a01567", "turn_index": 4}}
{"user_turn_0": "Actually , can you change my check out day to be on Sunday ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Ok , if I change my mind later will I be charged a cancellation fee ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "4572", "datum_id": {"dialogue_id": "03d18ac4-66a2-4f84-8f2a-99cdb2a01567", "turn_index": 5}}
{"user_turn_0": "Probably Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM price equals 135", "user_turn_1": "This one seems good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "4580", "datum_id": {"dialogue_id": "e78eb321-fd16-4aff-9d85-13ed2318c813", "turn_index": 6}}
{"user_turn_0": "Do they have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "4584", "datum_id": {"dialogue_id": "13d13b1a-a41d-47bf-bad1-9d166d36f8e3", "turn_index": 2}}
{"user_turn_0": "I 'd like three single rooms please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel for free if I change my mind ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "4588", "datum_id": {"dialogue_id": "13d13b1a-a41d-47bf-bad1-9d166d36f8e3", "turn_index": 6}}
{"user_turn_0": "January 13th before 6 PM and please book that business class for me", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM price equals 199", "user_turn_1": "I 'd like to book this flight for four passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast City \"))) (Flight.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (Time.hour_? (?= (Hour.apply 11L))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.class_? (?= (FlightClass.Business)))) (Flight.passengers_? (?= 4))))))", "idx": "4593", "datum_id": {"dialogue_id": "00fc4657-9e0b-4b20-979b-cbda75fefdaa", "turn_index": 3}}
{"user_turn_0": "Hi there , what is the price range of Jute Joint restaurant in Queen 's Park ?", "agent_turn_0": "Root system inform restaurant find focus equals priceRange equals Moderate", "user_turn_1": "What 's the rating ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.rating_? (^(Number) always)) :object (Restaurant.restaurantName_? (?= \" Jute Joint \"))))", "idx": "4600", "datum_id": {"dialogue_id": "e4d578c4-c3d6-4e05-a890-d4016956c35f", "turn_index": 1}}
{"user_turn_0": "Let me know the rating", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Please book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "4610", "datum_id": {"dialogue_id": "c41e5f81-0e8e-450e-af54-b12f85816d77", "turn_index": 5}}
{"user_turn_0": "The 18th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM price equals 127", "user_turn_1": "That one sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "4633", "datum_id": {"dialogue_id": "dd445f63-1480-4b98-b02c-eef4cd4fe72d", "turn_index": 4}}
{"user_turn_0": "That is correct", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 55 meridiem equals PM", "user_turn_1": "Looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (^((Constraint Train)) refer)))))", "idx": "4647", "datum_id": {"dialogue_id": "1ed1a974-e3de-4bc0-93a4-152544a8e203", "turn_index": 2}}
{"user_turn_0": "Is breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "4658", "datum_id": {"dialogue_id": "52599029-b43e-490b-bb9c-b8ec221800b6", "turn_index": 3}}
{"user_turn_0": "Friday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM", "user_turn_1": "Okay that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "4674", "datum_id": {"dialogue_id": "c9b01be8-ccb4-4df6-be96-4ee293399459", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i 'd like to book at cheap hotel near my event .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Hotel.priceRange_? (?= (PriceRange.Low))))))", "idx": "4687", "datum_id": {"dialogue_id": "7d61e1a1-4fa7-4e55-b532-6b1658126fae", "turn_index": 0}}
{"user_turn_0": "Do they include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Ok make a reservation for me there please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "4689", "datum_id": {"dialogue_id": "7d61e1a1-4fa7-4e55-b532-6b1658126fae", "turn_index": 2}}
{"user_turn_0": "Hey assistant , erase the event lasting 45 minutes", "agent_turn_0": "Root system inform calendarEvent delete Completed", "user_turn_1": "Get me on a train from Cambridge central station to Oxford station departing before 9 PM", "tgt": "(plan (^(Train) Book :object (& (& (Train.source_? (Place.location_? (?= \" Cambridge central station \"))) (Train.destination_? (Place.location_? (?= \" Oxford station \")))) (Train.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (Time.hour_? (?= (Hour.apply 9L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "4695", "datum_id": {"dialogue_id": "3b7aaba1-3332-483a-b55a-19dcc9c68eb8", "turn_index": 1}}
{"user_turn_0": "Get me on a train from Cambridge central station to Oxford station departing before 9 PM", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 55 meridiem equals PM", "user_turn_1": "Okay I want a ticket on that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (^((Constraint Train)) refer)))))", "idx": "4696", "datum_id": {"dialogue_id": "3b7aaba1-3332-483a-b55a-19dcc9c68eb8", "turn_index": 2}}
{"user_turn_0": "Do they have a gym ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Make the booking there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "4711", "datum_id": {"dialogue_id": "765ea0fe-817a-4d7e-b4ae-0128a42b1de4", "turn_index": 3}}
{"user_turn_0": "One", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they have breakfast included during the stay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "4716", "datum_id": {"dialogue_id": "765ea0fe-817a-4d7e-b4ae-0128a42b1de4", "turn_index": 8}}
{"user_turn_0": "Do they have breakfast included during the stay ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "4717", "datum_id": {"dialogue_id": "765ea0fe-817a-4d7e-b4ae-0128a42b1de4", "turn_index": 9}}
{"user_turn_0": "Do they have a car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "4726", "datum_id": {"dialogue_id": "888258a0-94cc-4f32-9a5a-505ae3fc6a6d", "turn_index": 3}}
{"user_turn_0": "I want two rooms . The type does n't matter", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait , could you update the check out date to Thursday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Thursday)))))", "idx": "4729", "datum_id": {"dialogue_id": "888258a0-94cc-4f32-9a5a-505ae3fc6a6d", "turn_index": 6}}
{"user_turn_0": "Wait , could you update the check out date to Thursday ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "4730", "datum_id": {"dialogue_id": "888258a0-94cc-4f32-9a5a-505ae3fc6a6d", "turn_index": 7}}
{"user_turn_0": "Ok , book it", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "I need a four star hotel , with moderate pricing", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?= (PriceRange.Moderate))) (Hotel.rating_? (?= 4)))))", "idx": "4736", "datum_id": {"dialogue_id": "06a96061-99d6-4520-8bf8-bbc08f1a3477", "turn_index": 4}}
{"user_turn_0": "What 's the weather like there ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cold", "user_turn_1": "Thanks for the help . Please send when do you want to go", "tgt": "(plan (^(Message) Create :object (Message.textContent_? (?= \" when do you want to go \"))))", "idx": "4739", "datum_id": {"dialogue_id": "06edabc0-5734-430a-9bae-dd66899375b7", "turn_index": 2}}
{"user_turn_0": "What is the average cost per person", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 39", "user_turn_1": "Book it for today please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Chipotle Grill \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Today)))))))))", "idx": "4748", "datum_id": {"dialogue_id": "2a9fca74-3ae2-4632-a64c-741cbcc2d967", "turn_index": 6}}
{"user_turn_0": "Does it serve seafood ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kitty City", "user_turn_1": "Ok , go ahead and book it for Thursday at 1 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Godka \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "4760", "datum_id": {"dialogue_id": "b0941e6e-6cb8-4e2b-a2e3-0650be5eae12", "turn_index": 3}}
{"user_turn_0": "Ok , go ahead and book it for Thursday at 1 PM", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Ok then change the booking to February 19th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (& (Date.month_? (?= (February))) (Date.day_? (?= (Day.apply 19L)))))))", "idx": "4761", "datum_id": {"dialogue_id": "b0941e6e-6cb8-4e2b-a2e3-0650be5eae12", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , what 's the rating of the Old Ford restaurant called The Boiling Fence", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.rating_? (^(Number) always)) :object (& (Restaurant.restaurantName_? (?= \" The Boiling Fence \")) (Restaurant.location_? (?= \" Old Ford \")))))", "idx": "4764", "datum_id": {"dialogue_id": "0e626de5-b744-4dc6-a7d9-7b9e0a753342", "turn_index": 0}}
{"user_turn_0": "Hello , what 's the rating of the Old Ford restaurant called The Boiling Fence", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 2", "user_turn_1": "I 'd like to book that at 2 PM please", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.restaurantName_? (?= \" The Boiling Fence \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "4765", "datum_id": {"dialogue_id": "0e626de5-b744-4dc6-a7d9-7b9e0a753342", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , what 's the event 's starting time ?", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.dateTimeRange_? (DateTimeRange.duration_? (AppleDuration.hour_? (?= 1)))) (CalendarEvent.eventName_? (?= \" free discussion \")))))", "idx": "4774", "datum_id": {"dialogue_id": "e0171516-cb46-4570-b98d-e5613fa28bbe", "turn_index": 0}}
{"user_turn_0": "Which airlines is that ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "Then I 'll book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "4797", "datum_id": {"dialogue_id": "72572fa5-e857-4c80-a832-087034299f2b", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , what 's the price range of Chestnut Tree", "tgt": "(plan (^(Hotel) Find :focus (Hotel.priceRange_? (^(PriceRange) always)) :object (Hotel.hotelName_? (?= \" Chestnut Tree \"))))", "idx": "4805", "datum_id": {"dialogue_id": "ce2f291b-8854-4bb0-8ed1-bfec0781065b", "turn_index": 0}}
{"user_turn_0": "Economy or business", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "I 'd prefer the 2:50 PM and would like Business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Amsterdam \"))) (Flight.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "4829", "datum_id": {"dialogue_id": "bbab622a-4df9-49bf-8641-0d9c0df91bf3", "turn_index": 4}}
{"user_turn_0": "Yeah . On Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM price equals 134", "user_turn_1": "This one looks great", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "4832", "datum_id": {"dialogue_id": "bbab622a-4df9-49bf-8641-0d9c0df91bf3", "turn_index": 7}}
{"user_turn_0": "Yes on Friday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "4847", "datum_id": {"dialogue_id": "80e2ef6f-cf24-4702-9094-ac177f8ada7c", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , erase Rodeo Center event please", "tgt": "(plan (^(CalendarEvent) Delete :object (CalendarEvent.location_? (?= \" Rodeo Center \"))))", "idx": "4869", "datum_id": {"dialogue_id": "132f45cc-26dc-448f-b13b-f3f3e521be5d", "turn_index": 0}}
{"user_turn_0": "Correct", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM", "user_turn_1": "That 's perfect please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (^((Constraint Train)) refer)))))", "idx": "4872", "datum_id": {"dialogue_id": "132f45cc-26dc-448f-b13b-f3f3e521be5d", "turn_index": 3}}
{"user_turn_0": "I 'd like to return on Thursday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM", "user_turn_1": "That 's perfect", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "4874", "datum_id": {"dialogue_id": "132f45cc-26dc-448f-b13b-f3f3e521be5d", "turn_index": 5}}
{"user_turn_0": "Hello assistant , tell me if I have a new call from my father .", "agent_turn_0": "Root system inform phoneCall checkExistence Existed object equals atDateTime equals date definedValue equals Today", "user_turn_1": "Do me another favor . Text him saying , I 'm so sorry", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Father))))) (Message.textContent_? (?= \" I'm so sorry \")))))", "idx": "4882", "datum_id": {"dialogue_id": "0b4d394d-1214-427d-9f6c-28f3ee6588cf", "turn_index": 1}}
{"user_turn_0": "Sure , send it", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "The event on Friday needs to be sent to my son", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Son))))) (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday)))))))))))))", "idx": "4884", "datum_id": {"dialogue_id": "0b4d394d-1214-427d-9f6c-28f3ee6588cf", "turn_index": 3}}
{"user_turn_0": "Do they include breakfast there ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Hmm , okay . I think I 'd rather have a hotel with a more moderate price point", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.priceRange_? (?= (PriceRange.Moderate)))))))", "idx": "4894", "datum_id": {"dialogue_id": "52a7541c-7359-4b6f-ad25-43123c51d995", "turn_index": 3}}
{"user_turn_0": "Hmm , okay . I think I 'd rather have a hotel with a more moderate price point", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Club Quarters price equals 178", "user_turn_1": "Huh , do they have parking there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasParking_? (^(Boolean) always)))))", "idx": "4895", "datum_id": {"dialogue_id": "52a7541c-7359-4b6f-ad25-43123c51d995", "turn_index": 4}}
{"user_turn_0": "Huh , do they have parking there ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Okay , awesome . Let 's go with that", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Ritz-Carlton \"))))))", "idx": "4896", "datum_id": {"dialogue_id": "52a7541c-7359-4b6f-ad25-43123c51d995", "turn_index": 5}}
{"user_turn_0": "Actually , sorry . Make it three rooms , please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Umm , do they let you cancel and not have to pay anything ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "4901", "datum_id": {"dialogue_id": "52a7541c-7359-4b6f-ad25-43123c51d995", "turn_index": 10}}
{"user_turn_0": "Umm , do they let you cancel and not have to pay anything ?", "agent_turn_0": "Root system inform hotel find focus equals freeCancellation equals True", "user_turn_1": "Hmm , actually I need the check in day to be on the 4th , on second thought", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 4L))))))", "idx": "4902", "datum_id": {"dialogue_id": "52a7541c-7359-4b6f-ad25-43123c51d995", "turn_index": 11}}
{"user_turn_0": "Hmm , actually I need the check in day to be on the 4th , on second thought", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you please change the check in to Monday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Monday))))))", "idx": "4903", "datum_id": {"dialogue_id": "52a7541c-7359-4b6f-ad25-43123c51d995", "turn_index": 12}}
{"user_turn_0": "Yes , send", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "How far is the commute to The Dima Foundation ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (Navigation.destination_? (Place.location_? (?= \" The Dima Foundation \")))))", "idx": "4909", "datum_id": {"dialogue_id": "d5b9f9ac-8705-4bf0-b055-ae1651332dd7", "turn_index": 4}}
{"user_turn_0": "The one called Air Fair with my brother", "agent_turn_0": "Root system prompt calendarEvent update focus equals dateTimeRange equals startDateTime equals date", "user_turn_1": "Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Update \") (^((Constraint Date)) Path.apply \" focus.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Saturday))))))", "idx": "4944", "datum_id": {"dialogue_id": "c0750caf-fe82-4c8c-b44b-13f28817cd8d", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , when will the event finish ?", "tgt": "(plan (do (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (?= (Tomorrow))) (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (meridiem_? (?= (Meridiem.AM))))))))) (^(Reminder) Create :object (Reminder.reminderContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))))))", "idx": "4947", "datum_id": {"dialogue_id": "4e9af92f-7201-403d-a807-c3ec3a94145a", "turn_index": 0}}
{"user_turn_0": "Hi there , when will the event finish ?", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals endDateTime", "user_turn_1": "Schedule a calendar event for tomorrow at 10 AM and have it added to reminder", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.duration_? (AppleDuration.hour_? (?= 2)))))))", "idx": "4948", "datum_id": {"dialogue_id": "4e9af92f-7201-403d-a807-c3ec3a94145a", "turn_index": 1}}
{"user_turn_0": "How would I get to that hotel ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Make the reservation there , please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Ballyfin \"))))))", "idx": "4962", "datum_id": {"dialogue_id": "0c08ef50-0122-457b-a1fe-257ce3f40403", "turn_index": 5}}
{"user_turn_0": "The location", "agent_turn_0": "Root system prompt calendarEvent update focus equals location", "user_turn_1": "Update it to Basil house", "tgt": "(plan (revise (^(Unit) Path.apply \" Update \") (^((Constraint String)) Path.apply \" focus.location \") (lambda (^(Constraint String) x0) (?= \" Basel House \"))))", "idx": "4991", "datum_id": {"dialogue_id": "277415a3-d978-4ab3-8136-8809c3ae8f97", "turn_index": 2}}
{"user_turn_0": "Update it to Basil house", "agent_turn_0": "Root system inform calendarEvent update Completed", "user_turn_1": "Show me how to get there", "tgt": "(plan (^(Navigation) Find :object (Navigation.destination_? (Place.location_? (?= \" Basel House \")))))", "idx": "4992", "datum_id": {"dialogue_id": "277415a3-d978-4ab3-8136-8809c3ae8f97", "turn_index": 3}}
{"user_turn_0": "London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM price equals 173", "user_turn_1": "I 'll take it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "4996", "datum_id": {"dialogue_id": "2ff8568f-58f1-4ed8-9318-3c9795fa733a", "turn_index": 2}}
{"user_turn_0": "Is there outdoor seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "Book it anyway", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "5001", "datum_id": {"dialogue_id": "98980896-fcc3-46c4-ba35-a8cb13509b7d", "turn_index": 2}}
{"user_turn_0": "Let it be on Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM price equals 173", "user_turn_1": "This one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "5027", "datum_id": {"dialogue_id": "b3c3371f-1456-4b18-9564-9915e56e10ad", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , can you get me a table at an expensive Chinese hotpot place in Northwick Park ? For 2:00 on Wednesday .", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Northwick Park \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 2L)))))))) (Restaurant.priceRange_? (?= (PriceRange.High)))) (Restaurant.foodType_? (?= (FoodType.ChineseHotPot))))))", "idx": "5034", "datum_id": {"dialogue_id": "28b41124-360f-4843-925a-2695b1f9ac61", "turn_index": 0}}
{"user_turn_0": "Let 's try something else that also has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Box", "user_turn_1": "Where is it ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "5037", "datum_id": {"dialogue_id": "28b41124-360f-4843-925a-2695b1f9ac61", "turn_index": 3}}
{"user_turn_0": "Which of these have 5 stars ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Beef Easy", "user_turn_1": "Is there parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "5039", "datum_id": {"dialogue_id": "28b41124-360f-4843-925a-2695b1f9ac61", "turn_index": 5}}
{"user_turn_0": "Let 's do something else . I wanna sit outside", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Boiling Fence", "user_turn_1": "And I can sit outside ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "5041", "datum_id": {"dialogue_id": "28b41124-360f-4843-925a-2695b1f9ac61", "turn_index": 7}}
{"user_turn_0": "And I can sit outside ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "Cool . Let 's do it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Dingo \"))))))", "idx": "5042", "datum_id": {"dialogue_id": "28b41124-360f-4843-925a-2695b1f9ac61", "turn_index": 8}}
{"user_turn_0": "Cool . Let 's do it", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Try January 6th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (& (Date.month_? (?= (January))) (Date.day_? (?= (Day.apply 6L)))))))", "idx": "5043", "datum_id": {"dialogue_id": "28b41124-360f-4843-925a-2695b1f9ac61", "turn_index": 9}}
{"user_turn_0": "I will depart from Euston", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM", "user_turn_1": "I want the one at 4:45 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "5048", "datum_id": {"dialogue_id": "bfc0271c-8723-420a-8619-4fb2e93190cd", "turn_index": 2}}
{"user_turn_0": "I will return on Friday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "5050", "datum_id": {"dialogue_id": "bfc0271c-8723-420a-8619-4fb2e93190cd", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , make an event held in Inhale on March 10th at 10 AM", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (& (Date.month_? (?= (March))) (Date.day_? (?= (Day.apply 10L))))) (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (meridiem_? (?= (Meridiem.AM)))))))) (CalendarEvent.location_? (?= \" Inhale \")))))", "idx": "5052", "datum_id": {"dialogue_id": "400e2dc5-1830-48a3-98a3-7a8eb12dac9a", "turn_index": 0}}
{"user_turn_0": "Hi my assistant , who are the attendees of my calendar event tomorrow", "agent_turn_0": "Root system inform calendarEvent find focus equals attendees equals person equals name equals Dorothy", "user_turn_1": "create doctor 's appointment with her", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.eventName_? (?= \" doctor's appointment \")) (^((Constraint CalendarEvent)) refer))))", "idx": "5068", "datum_id": {"dialogue_id": "33209c99-81f0-40f5-afe9-b67502934810", "turn_index": 1}}
{"user_turn_0": "I am", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 12 minute equals 30 meridiem equals PM", "user_turn_1": "I need a ticket to the one that departs at 4:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "5079", "datum_id": {"dialogue_id": "decd88ec-5a99-4a2e-b1ba-9d3711cd7eb9", "turn_index": 2}}
{"user_turn_0": "Hello assistant , i would like to book a flight going to Amsterdam on Eastern Airways .", "agent_turn_0": "Root system prompt flight book object equals source departureDateTime", "user_turn_1": "I want t6o leave today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (?= (Today)))))))))", "idx": "5086", "datum_id": {"dialogue_id": "bb406c00-17e6-424f-be65-dd8e37f8f9c2", "turn_index": 1}}
{"user_turn_0": "London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM price equals 134", "user_turn_1": "I would actually like the one that departs at 1:40 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "5088", "datum_id": {"dialogue_id": "bb406c00-17e6-424f-be65-dd8e37f8f9c2", "turn_index": 3}}
{"user_turn_0": "Hello , what time will my afternoon calendar event finish ?", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals endDateTime equals time equals hour equals 2", "user_turn_1": "Also set a reminder for me at that time", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 2L)))))))", "idx": "5100", "datum_id": {"dialogue_id": "8b223365-87ea-4409-b886-b7131d024879", "turn_index": 1}}
{"user_turn_0": "Make it on the 22nd please", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "I would like to book a hotel that does n't have a high price and at least a three star rating", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))) (Hotel.rating_? (?>= (someSalient (?= 3)))))))", "idx": "5102", "datum_id": {"dialogue_id": "8b223365-87ea-4409-b886-b7131d024879", "turn_index": 3}}
{"user_turn_0": "Liverpool", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM price equals 166", "user_turn_1": "Alright get me on that flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "5120", "datum_id": {"dialogue_id": "16f75029-9ac6-494d-8564-40b34ef63ef9", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant I need you to book a place to east American food that has at least two stars .", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.rating_? (?>= (someSalient (?= 2)))) (Restaurant.foodType_? (?= (FoodType.American))))))", "idx": "5132", "datum_id": {"dialogue_id": "0d8132fc-9c44-46de-a62e-c497b7353500", "turn_index": 0}}
{"user_turn_0": "Where is that ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals Camden Passage", "user_turn_1": "Sure , okay . Let 's book it for tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" The Maple \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow)))))))))", "idx": "5136", "datum_id": {"dialogue_id": "0d8132fc-9c44-46de-a62e-c497b7353500", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , book a cheap hotel in Grahame Park for today and check - out on tomorrow please .", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" Grahame Park \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (?= (Tomorrow))))))) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))))))", "idx": "5161", "datum_id": {"dialogue_id": "154dabbd-82e6-48ce-aa4b-e14b61d3a2c2", "turn_index": 0}}
{"user_turn_0": "No , find me another hotel with at least two stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Triton price equals 155", "user_turn_1": "Do they have a private bathroom ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.privateBath_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "5163", "datum_id": {"dialogue_id": "154dabbd-82e6-48ce-aa4b-e14b61d3a2c2", "turn_index": 2}}
{"user_turn_0": "Do they have a private bathroom ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Ok , cool . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Moody Moon \"))))))", "idx": "5164", "datum_id": {"dialogue_id": "154dabbd-82e6-48ce-aa4b-e14b61d3a2c2", "turn_index": 3}}
{"user_turn_0": "Can you book it for 3 rooms please ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually , change the check out date to Sunday instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Saturday))))))", "idx": "5167", "datum_id": {"dialogue_id": "154dabbd-82e6-48ce-aa4b-e14b61d3a2c2", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , when will my train to Jersey get there ?", "tgt": "(plan (^(Train) Find :focus (Train.arrivalDateTime_? (^(DateTime) always)) :object (Train.destination_? (Place.location_? (?= \" Jersey \")))))", "idx": "5169", "datum_id": {"dialogue_id": "dcf4feb5-ced2-413a-93ed-84bac8e22346", "turn_index": 0}}
{"user_turn_0": "book it for me please", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Change the appointment time to 3 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (Time.hour_? (?= (Hour.apply 3L))))))", "idx": "5178", "datum_id": {"dialogue_id": "e6b854df-5e9f-4044-8f5a-255a4be785cb", "turn_index": 4}}
{"user_turn_0": "I want one with a four star rating that 's not too expensive", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Freehand price equals 130", "user_turn_1": "Does it have a fitness center ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasFitness_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "5184", "datum_id": {"dialogue_id": "da4e2d41-8b2b-486a-9105-deb29f95ab70", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , do you have a restaurant name or a preferred location in mind ?", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.foodType_? (?= (FoodType.Indian))) (Restaurant.hasParking_? (?= true)))))", "idx": "5190", "datum_id": {"dialogue_id": "bec95df5-4da0-4409-b41f-eeb8272f62c1", "turn_index": 0}}
{"user_turn_0": "Yes price range should be low price", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Canton Silk", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" La Zilla \"))))))", "idx": "5197", "datum_id": {"dialogue_id": "bec95df5-4da0-4409-b41f-eeb8272f62c1", "turn_index": 7}}
{"user_turn_0": "How far away is to Jackson Fish Wholesalers by public transportation ?", "agent_turn_0": "Root system inform navigation find focus equals distance equals number equals 6", "user_turn_1": "Also i want to book hotel in Canary Wharf check in today and check out 20th . It should be cheap and I want a queen sized bed", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" Canary Wharf \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 20L)))))))) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Queen)))))))", "idx": "5233", "datum_id": {"dialogue_id": "5878961c-c274-4c7a-a629-5e01c77766e3", "turn_index": 4}}
{"user_turn_0": "What is the address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 6a Streatham Hill", "user_turn_1": "Book it for tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Flavoroso \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow)))))))))", "idx": "5239", "datum_id": {"dialogue_id": "2d25e880-87f6-441f-a88a-bc470794501c", "turn_index": 4}}
{"user_turn_0": "Hello , what is the price range of Crescent Resort hotel in King 's Cross", "agent_turn_0": "Root system inform hotel find focus equals priceRange equals Moderate", "user_turn_1": "Book from June 6th to 11th", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.hotelName_? (?= \" Crescent Resort \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 6L)))) (month_? (Date.month_? (?= (June)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 11L))))))))))", "idx": "5244", "datum_id": {"dialogue_id": "055c5b37-d274-4d12-8f8b-7ffbc4b119f7", "turn_index": 1}}
{"user_turn_0": "Update check in date to November 5th", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is free cancellation possible ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "5247", "datum_id": {"dialogue_id": "055c5b37-d274-4d12-8f8b-7ffbc4b119f7", "turn_index": 4}}
{"user_turn_0": "One", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they allow you to cancel for free ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "5254", "datum_id": {"dialogue_id": "7fe2dd9f-6837-40fe-a1a0-2cc6e80430ba", "turn_index": 5}}
{"user_turn_0": "Yes , something with a three star rating and a high price", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Chipotle Grill", "user_turn_1": "Make the reservation there , please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "5258", "datum_id": {"dialogue_id": "0205a4a9-64ac-4925-888c-0f2374639cb6", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , book an italian restaurant", "tgt": "(plan (^(Restaurant) Book :object (Restaurant.foodType_? (?= (FoodType.Italian)))))", "idx": "5262", "datum_id": {"dialogue_id": "941a0314-ec8a-4318-8168-167cb9205062", "turn_index": 0}}
{"user_turn_0": "No , I want one that has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Shining Gate", "user_turn_1": "Okay , tell me the price per person ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "5265", "datum_id": {"dialogue_id": "941a0314-ec8a-4318-8168-167cb9205062", "turn_index": 3}}
{"user_turn_0": "Okay , tell me the price per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 63", "user_turn_1": "Okay , make the reservation for 3:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" La Zilla \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "5266", "datum_id": {"dialogue_id": "941a0314-ec8a-4318-8168-167cb9205062", "turn_index": 4}}
{"user_turn_0": "Okay , make the reservation for 3:30 PM", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Then change it to 5 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 5L))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "5267", "datum_id": {"dialogue_id": "941a0314-ec8a-4318-8168-167cb9205062", "turn_index": 5}}
{"user_turn_0": "I will return on the 19th", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "5294", "datum_id": {"dialogue_id": "7d86359a-65da-4880-9273-4803b54f4242", "turn_index": 5}}
{"user_turn_0": "Hey , are there missed calls from my sister ?", "agent_turn_0": "Root system inform phoneCall checkExistence Existed", "user_turn_1": "Next , text her saying I 'm so sorry", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Sister))))) (Message.textContent_? (?= \" I'm so sorry \")))))", "idx": "5297", "datum_id": {"dialogue_id": "47f70cd0-8cab-4b12-8b3d-9bb842d0e321", "turn_index": 1}}
{"user_turn_0": "Do you know if the restaurant has outdoor seats", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "Ok fine , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "5304", "datum_id": {"dialogue_id": "e41842d4-eb58-47c5-a5a9-f93b308a8494", "turn_index": 2}}
{"user_turn_0": "Hello assistant , when does the 11:30 AM train to Nottingham arrive ?", "agent_turn_0": "Root system inform train find focus equals arrivalDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM", "user_turn_1": "Thanks so much . I 'd like to make a hotel reservation for today through tomorrow at the Ritz - Carlton in Victoria/", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" Victoria \")) (Hotel.hotelName_? (?= \" Ritz-Carlton \"))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (?= (Tomorrow)))))))))", "idx": "5314", "datum_id": {"dialogue_id": "8867475c-ce64-4115-908c-4aed727dd2e6", "turn_index": 1}}
{"user_turn_0": "Three please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel for free if I change my mind ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "5317", "datum_id": {"dialogue_id": "8867475c-ce64-4115-908c-4aed727dd2e6", "turn_index": 4}}
{"user_turn_0": "I want something not too high", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Stazione restaurant", "user_turn_1": "Do they have outdoor seating ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "5345", "datum_id": {"dialogue_id": "576c9503-1e16-4b77-807b-87724837e1c5", "turn_index": 4}}
{"user_turn_0": "I want one with parking please", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Godka", "user_turn_1": "Do they take credit card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "5348", "datum_id": {"dialogue_id": "576c9503-1e16-4b77-807b-87724837e1c5", "turn_index": 7}}
{"user_turn_0": "Do they take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "Ok , go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Dingo \"))))))", "idx": "5349", "datum_id": {"dialogue_id": "576c9503-1e16-4b77-807b-87724837e1c5", "turn_index": 8}}
{"user_turn_0": "Hi assistant , who are the attendees of my March 16th at 2:30 PM", "agent_turn_0": "Root system inform calendarEvent find focus equals attendees equals person equals relationshipType equals Mother", "user_turn_1": "Add her to my debate session", "tgt": "(plan (^(CalendarEvent) Create :focus (CalendarEvent.attendees_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Mother))))) :object (CalendarEvent.eventName_? (?= \" debate session \"))))", "idx": "5353", "datum_id": {"dialogue_id": "6af79eff-c0a9-4a28-bb24-ae91c10376ef", "turn_index": 1}}
{"user_turn_0": "Is breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "5360", "datum_id": {"dialogue_id": "78741666-5e41-4027-8ecc-756d5a4618d3", "turn_index": 3}}
{"user_turn_0": "Type does n't matter , but I need two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Change the check in date to Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "5363", "datum_id": {"dialogue_id": "78741666-5e41-4027-8ecc-756d5a4618d3", "turn_index": 6}}
{"user_turn_0": "Change the check in date to Tuesday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there a fee for canceling ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "5364", "datum_id": {"dialogue_id": "78741666-5e41-4027-8ecc-756d5a4618d3", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , i need a train to York central station and I need to get there before 10:30 PM", "tgt": "(plan (^(Train) Book :object (& (Train.destination_? (Place.location_? (?= \" York central station \"))) (Train.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "5366", "datum_id": {"dialogue_id": "8a3cd350-33bc-4989-bd8d-36d721799346", "turn_index": 0}}
{"user_turn_0": "Correctamundo !", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 35 meridiem equals PM", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (^((Constraint Train)) refer)))))", "idx": "5368", "datum_id": {"dialogue_id": "8a3cd350-33bc-4989-bd8d-36d721799346", "turn_index": 2}}
{"user_turn_0": "Can you show me upcoming trains going to Newcastle", "agent_turn_0": "Root system inform train find", "user_turn_1": "Can you tell me how to get to 7615 Eagle Ln", "tgt": "(plan (^(Navigation) Find :object (Navigation.destination_? (Place.location_? (?= \" 7615 Eagle Lane \")))))", "idx": "5380", "datum_id": {"dialogue_id": "8b1aa26b-9e1a-4bbd-85c5-b6179b27b72c", "turn_index": 3}}
{"user_turn_0": "Yes , send it", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Book a cheap restaurant with parking", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.priceRange_? (?= (PriceRange.Low))) (Restaurant.hasParking_? (?= true)))))", "idx": "5400", "datum_id": {"dialogue_id": "666ba1db-355a-412d-b5e1-168dedf90785", "turn_index": 2}}
{"user_turn_0": "Try tomorrow", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 12 minute equals 15 meridiem equals PM", "user_turn_1": "That works . Book it for 4 passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.class_? (?= (FlightClass.Economy))) (Flight.destination_? (Place.location_? (?= \" Dublin \")))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 4))))))", "idx": "5407", "datum_id": {"dialogue_id": "6aee1b04-1212-44c9-9900-de6a94a69b30", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , how much does Club Quarteres in Wembley cost ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.priceRange_? (^(PriceRange) always)) :object (& (Hotel.hotelName_? (?= \" Club Quarters \")) (Hotel.location_? (?= \" Wembley \")))))", "idx": "5409", "datum_id": {"dialogue_id": "9c497b15-7f23-433c-8419-ea40b948f31d", "turn_index": 0}}
{"user_turn_0": "Saloon would be good", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals 24 Empire Way", "user_turn_1": "Change the destination to 9 School Lane", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Place)) Path.apply \" object.destination \") (lambda (^(Constraint Place) x0) (Place.location_? (?= \" 9 School Lane \")))))", "idx": "5421", "datum_id": {"dialogue_id": "215d76cf-0c07-47d9-bfcc-e8f1d991379e", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , what is Dimple \u2019s rated ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.rating_? (^(Number) always)) :object (Restaurant.restaurantName_? (?= \" Dimple's \"))))", "idx": "5424", "datum_id": {"dialogue_id": "fa01c93f-e238-43a4-b311-22e8518f4f33", "turn_index": 0}}
{"user_turn_0": "I prefer another hotel with moderate price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Blue Moon price equals 130", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" The Watson \"))))))", "idx": "5432", "datum_id": {"dialogue_id": "a80cba94-626c-43b2-845a-c68e27251ef3", "turn_index": 3}}
{"user_turn_0": "It have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Then book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "5450", "datum_id": {"dialogue_id": "4ad3c0a2-c6e3-4b94-b8d2-c6505492ad25", "turn_index": 3}}
{"user_turn_0": "Three of them", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Switch the check in date to Monday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Monday))))))", "idx": "5453", "datum_id": {"dialogue_id": "4ad3c0a2-c6e3-4b94-b8d2-c6505492ad25", "turn_index": 6}}
{"user_turn_0": "three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "5461", "datum_id": {"dialogue_id": "56860bdb-e2c8-4e56-985a-22ecd1f6f197", "turn_index": 6}}
{"user_turn_0": "Can you tell me the average cost per person", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 42", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (^((Constraint String)) refer))))))", "idx": "5466", "datum_id": {"dialogue_id": "897da75b-1150-4e1f-ad48-8931004f839d", "turn_index": 3}}
{"user_turn_0": "I 'd prefer one with five stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Embassy Suites price equals 160", "user_turn_1": "Does it have laundry ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.laundry_? (^(Boolean) always)))))", "idx": "5475", "datum_id": {"dialogue_id": "993fe0a0-1f65-42a7-b690-7c37fffbd1ed", "turn_index": 5}}
{"user_turn_0": "Does it have laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Astro Resort \"))))))", "idx": "5476", "datum_id": {"dialogue_id": "993fe0a0-1f65-42a7-b690-7c37fffbd1ed", "turn_index": 6}}
{"user_turn_0": "I need three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Change the check out to the 27th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 27L))))))", "idx": "5480", "datum_id": {"dialogue_id": "993fe0a0-1f65-42a7-b690-7c37fffbd1ed", "turn_index": 10}}
{"user_turn_0": "Is it a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "I actually want the flight that departs at 3 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "5514", "datum_id": {"dialogue_id": "186911c1-36c5-49b2-88f6-4f0ce6135040", "turn_index": 4}}
{"user_turn_0": "On which airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "I 'd like that", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "5521", "datum_id": {"dialogue_id": "e73ff8bf-b5a1-48aa-8b43-404681d8406c", "turn_index": 4}}
{"user_turn_0": "Are there private bathrooms in the rooms ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Ok , go ahead and book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "5561", "datum_id": {"dialogue_id": "3f0266c5-67cf-42e0-8194-ca2d4d3b983d", "turn_index": 3}}
{"user_turn_0": "I need one room but I do n't care what kind it is", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to pay for the room now ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "5565", "datum_id": {"dialogue_id": "3f0266c5-67cf-42e0-8194-ca2d4d3b983d", "turn_index": 7}}
{"user_turn_0": "Breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "5575", "datum_id": {"dialogue_id": "0c464c8b-e4d2-497e-87e0-98db3c6248df", "turn_index": 3}}
{"user_turn_0": "2 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Modify the check out date to Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Sunday))))))", "idx": "5577", "datum_id": {"dialogue_id": "0c464c8b-e4d2-497e-87e0-98db3c6248df", "turn_index": 5}}
{"user_turn_0": "I want a restaurant that serves Japanese food and that has a high price range", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Bard\u2019s Bench", "user_turn_1": "Is parking offered at the restaurant ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "5593", "datum_id": {"dialogue_id": "f0e402ea-0c00-4bca-b5db-f398a08c9dfb", "turn_index": 2}}
{"user_turn_0": "Do any of the restaurants you found have a rating of at least three stars ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Emptia", "user_turn_1": "Is credit card accepted at the restaurant ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "5595", "datum_id": {"dialogue_id": "f0e402ea-0c00-4bca-b5db-f398a08c9dfb", "turn_index": 4}}
{"user_turn_0": "Is credit card accepted at the restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Book it for 6:30", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Bard's Bench \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (?= (Minute.apply 30L)))))))))))", "idx": "5596", "datum_id": {"dialogue_id": "f0e402ea-0c00-4bca-b5db-f398a08c9dfb", "turn_index": 5}}
{"user_turn_0": "Book it for 6:30", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Have the appointment date switched to Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))))))", "idx": "5597", "datum_id": {"dialogue_id": "f0e402ea-0c00-4bca-b5db-f398a08c9dfb", "turn_index": 6}}
{"user_turn_0": "Does the hotel have car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "5612", "datum_id": {"dialogue_id": "e345b68f-c727-451e-a1c2-6d09c913b1b2", "turn_index": 3}}
{"user_turn_0": "One", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "5618", "datum_id": {"dialogue_id": "e345b68f-c727-451e-a1c2-6d09c913b1b2", "turn_index": 9}}
{"user_turn_0": "Your price range should be high and the restaurant should have Spanish food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Maple", "user_turn_1": "Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "5623", "datum_id": {"dialogue_id": "1db2a94a-25e5-4570-b0f5-d4eeb00900b1", "turn_index": 3}}
{"user_turn_0": "I will need a table for 3 people please", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Could you change the appoint date to January 25th please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (& (Date.month_? (?= (January))) (Date.day_? (?= (Day.apply 25L))))))))))", "idx": "5625", "datum_id": {"dialogue_id": "1db2a94a-25e5-4570-b0f5-d4eeb00900b1", "turn_index": 5}}
{"user_turn_0": "How 's the weather in Jersey today ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cold", "user_turn_1": "Thanks , next i need you to make a reminder at 6 o'clock for me", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 6L)))))))", "idx": "5634", "datum_id": {"dialogue_id": "5c09d5a6-beb3-482c-80ba-0eaf00825109", "turn_index": 2}}
{"user_turn_0": "The price range should not be high", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floss and Joes", "user_turn_1": "Does this restaurant take credit cards ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "5642", "datum_id": {"dialogue_id": "4cc03476-dc4e-40ca-b67b-bd796efe1b77", "turn_index": 5}}
{"user_turn_0": "Does this restaurant take credit cards ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "Ok . Book it for me at January 23rd", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Jurassic Pork \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (& (Date.month_? (?= (January))) (Date.day_? (?= (Day.apply 23L)))))))))))", "idx": "5643", "datum_id": {"dialogue_id": "4cc03476-dc4e-40ca-b67b-bd796efe1b77", "turn_index": 6}}
{"user_turn_0": "I want a restaurant that serves Indian food and that has a low price range", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flip Out", "user_turn_1": "Is parking offered at the restaurant ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "5657", "datum_id": {"dialogue_id": "528632bf-f6e5-4750-b2d6-822ab756f07e", "turn_index": 5}}
{"user_turn_0": "Is parking offered at the restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "5658", "datum_id": {"dialogue_id": "528632bf-f6e5-4750-b2d6-822ab756f07e", "turn_index": 6}}
{"user_turn_0": "I 'll be departing from Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM price equals 156", "user_turn_1": "That 's sounds fine . I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "5664", "datum_id": {"dialogue_id": "43218b78-6840-4b12-882c-98b8c4ebd879", "turn_index": 2}}
{"user_turn_0": "That 's sounds fine . I 'd like to book this flight", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM price equals 145", "user_turn_1": "This one looks fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "5665", "datum_id": {"dialogue_id": "43218b78-6840-4b12-882c-98b8c4ebd879", "turn_index": 3}}
{"user_turn_0": "I want a queen sized bed", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait , change my check out to Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Friday)))))", "idx": "5677", "datum_id": {"dialogue_id": "0071c2a3-20e1-44d0-94e9-1a1aedb323a8", "turn_index": 4}}
{"user_turn_0": "Wait , change my check out to Friday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does it come with free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "5678", "datum_id": {"dialogue_id": "0071c2a3-20e1-44d0-94e9-1a1aedb323a8", "turn_index": 5}}
{"user_turn_0": "yes", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Also which city or airport are you going to ?", "tgt": "(plan (^(Flight) Book :object (& (Flight.class_? (?= (FlightClass.Economy))) (Flight.airLine_? (?= \" British \")))))", "idx": "5702", "datum_id": {"dialogue_id": "cefaa4a6-7a88-4f16-b40a-20de566031f1", "turn_index": 2}}
{"user_turn_0": "Also which city or airport are you going to ?", "agent_turn_0": "Root system prompt flight book object equals source departureDateTime", "user_turn_1": "when and where are you leaving from ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& x0 (Flight.source_? (Place.location_? (?= \" Leeds \")))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))))))))", "idx": "5703", "datum_id": {"dialogue_id": "cefaa4a6-7a88-4f16-b40a-20de566031f1", "turn_index": 3}}
{"user_turn_0": "How do I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Great , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "5708", "datum_id": {"dialogue_id": "6f63b727-383e-4d7e-979f-dd969f014de7", "turn_index": 3}}
{"user_turn_0": "I 'd like another hotel with four stars rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Hyatt price equals 201", "user_turn_1": "Is a car park available at the hotel ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "5727", "datum_id": {"dialogue_id": "8d6a1647-a107-4cec-8005-98e1c827e858", "turn_index": 3}}
{"user_turn_0": "Is a car park available at the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Please book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Obsidian Sky \"))))))", "idx": "5728", "datum_id": {"dialogue_id": "8d6a1647-a107-4cec-8005-98e1c827e858", "turn_index": 4}}
{"user_turn_0": "Can you change the check in date to the 10th ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is prepayment required ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "5733", "datum_id": {"dialogue_id": "8d6a1647-a107-4cec-8005-98e1c827e858", "turn_index": 9}}
{"user_turn_0": "I want a low price range", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dimple\u2019s", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "5738", "datum_id": {"dialogue_id": "4dd11215-74da-4a56-81c2-87e874d52fc4", "turn_index": 3}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM", "user_turn_1": "I want it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "5744", "datum_id": {"dialogue_id": "f4caefdf-1396-4c42-94a1-70590a2d8da9", "turn_index": 2}}
{"user_turn_0": "One", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you change the check in date to today ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "5765", "datum_id": {"dialogue_id": "7a5a0ebc-1d47-4efa-8de1-01ef5cfb81b5", "turn_index": 3}}
{"user_turn_0": "I want a different inexpensive hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Enchanted Isle price equals 135", "user_turn_1": "Do they have laundry at the hotel ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.laundry_? (^(Boolean) always)))))", "idx": "5771", "datum_id": {"dialogue_id": "27d4fe31-eb64-46e5-ad51-ba5e1e98d662", "turn_index": 4}}
{"user_turn_0": "Do they have laundry at the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Blue Moon \"))))))", "idx": "5772", "datum_id": {"dialogue_id": "27d4fe31-eb64-46e5-ad51-ba5e1e98d662", "turn_index": 5}}
{"user_turn_0": "Two", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking allow free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "5777", "datum_id": {"dialogue_id": "27d4fe31-eb64-46e5-ad51-ba5e1e98d662", "turn_index": 10}}
{"user_turn_0": "Yes . please", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM", "user_turn_1": "Let 's do the one at 3:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "5782", "datum_id": {"dialogue_id": "3f12bca4-eb09-431c-a4a1-226d5d16c8e9", "turn_index": 3}}
{"user_turn_0": "Chelmsford", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM", "user_turn_1": "I choose 1:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "5787", "datum_id": {"dialogue_id": "bfe7455e-d4d2-4fe1-83a2-eff7c17ab359", "turn_index": 2}}
{"user_turn_0": "Hello assistant , please send a message", "agent_turn_0": "Root system prompt message create object equals recipients", "user_turn_1": "To Thomas saying let me know if you want to go", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Option (Constraint Message))) Path.apply \" object \") (lambda (^(Option (Constraint Message)) x0) (Some (& (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Thomas \")))) (Message.textContent_? (?= \" let me know if you want to go \")))))))", "idx": "5796", "datum_id": {"dialogue_id": "5bf97633-c474-4404-bea1-043210c11e16", "turn_index": 1}}
{"user_turn_0": "Japanese", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Juniper Cloud", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "5803", "datum_id": {"dialogue_id": "a69ff0af-dde4-4493-88be-5b755e6b17ab", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , 6:30 PM .", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (^(DateTime) always))) :object (CalendarEvent.listOffset_? (?= 1))))", "idx": "5823", "datum_id": {"dialogue_id": "b2881b9d-b705-44fd-9195-9bac0c1b8d77", "turn_index": 0}}
{"user_turn_0": "Go ahead", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "What time does my calendar event schedule for 16th end ?", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.endDateTime_? (^(DateTime) always))) :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 16L))))))))", "idx": "5840", "datum_id": {"dialogue_id": "b8de933f-e5f4-4583-ad60-dbabaede6a95", "turn_index": 4}}
{"user_turn_0": "Hi assistant , i 'd like the directions to the river tour please", "agent_turn_0": "Root system inform navigation find object equals destination equals location equals 94 Hall Lane", "user_turn_1": "What 's the weather like there ?", "tgt": "(plan (^(WeatherReport) Find :object (WeatherReport.location_? (^((Constraint String)) refer))))", "idx": "5842", "datum_id": {"dialogue_id": "c49de9ec-aa50-43c6-aa25-36249187a1ec", "turn_index": 1}}
{"user_turn_0": "Hey assistant , could you tell me who the attendees of my Far Away Feast , as shown on the calendar", "agent_turn_0": "Root system inform calendarEvent find focus equals attendees equals person equals relationshipType equals Daughter", "user_turn_1": "Could you create Grocery shopping with him / her", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.eventName_? (?= \" Grocery shopping \")) (CalendarEvent.attendees_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Daughter))))))))", "idx": "5848", "datum_id": {"dialogue_id": "0b9cfde2-6cb8-486a-a54e-076162311a1b", "turn_index": 1}}
{"user_turn_0": "I 'm craving Indian food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Chipotle Grill", "user_turn_1": "Do they accept credit cards ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "5864", "datum_id": {"dialogue_id": "2e22ec0e-a854-4808-b47c-d15c51501534", "turn_index": 4}}
{"user_turn_0": "Do they accept credit cards ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Yes , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "5865", "datum_id": {"dialogue_id": "2e22ec0e-a854-4808-b47c-d15c51501534", "turn_index": 5}}
{"user_turn_0": "Sunday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM price equals 130", "user_turn_1": "That one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "5886", "datum_id": {"dialogue_id": "0cf022dc-9feb-4302-82ab-1a9179d7afde", "turn_index": 6}}
{"user_turn_0": "Hey , get me a table at the Emptia restaurant in Bedfordshire for tomorrow at 10:30 AM", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Make the reservation for Monday instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Monday))))))", "idx": "5889", "datum_id": {"dialogue_id": "05be0cea-0c34-43b7-9118-d611785cdedb", "turn_index": 1}}
{"user_turn_0": "I wonder which of the restaurants serve Indian food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone Martian", "user_turn_1": "Does the restaurant take credit card ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "5912", "datum_id": {"dialogue_id": "a678a251-1ca3-41fa-b5fd-e0db5dedfc94", "turn_index": 3}}
{"user_turn_0": "I want another restaurant with parking please", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Acacia Saint", "user_turn_1": "Does the restaurant take credit card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "5914", "datum_id": {"dialogue_id": "a678a251-1ca3-41fa-b5fd-e0db5dedfc94", "turn_index": 5}}
{"user_turn_0": "Does the restaurant take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Spago \"))))))", "idx": "5915", "datum_id": {"dialogue_id": "a678a251-1ca3-41fa-b5fd-e0db5dedfc94", "turn_index": 6}}
{"user_turn_0": "The one that is taking place in Helie", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "How far away is to 54 Islington Park Road is I drove there", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (& (Navigation.destination_? (Place.location_? (?= \" 54 Islington Park Road \"))) (Navigation.transportationMode_? (?= (TransportationMode.Driving))))))", "idx": "5920", "datum_id": {"dialogue_id": "1c6612e4-15b6-4fda-966d-bde4791cf736", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , order and executive type care to pick me up at 66 Park Avenue", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.serviceType_? (List.exists_? (?= (ServiceType.Executive)))) (Taxi.source_? (Place.location_? (?= \" 66 Park Avenue \"))))))", "idx": "5942", "datum_id": {"dialogue_id": "d1289a9b-e1ad-47d1-8b2b-f7bb6f9d1d0c", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , book a cheap restaurant .", "tgt": "(plan (^(Restaurant) Book :object (Restaurant.priceRange_? (?= (PriceRange.Low)))))", "idx": "5947", "datum_id": {"dialogue_id": "089571fa-6a6c-4ed2-8d2b-47f845a77a45", "turn_index": 0}}
{"user_turn_0": "Are there any calls for me from Mr. Arnold ?", "agent_turn_0": "Root system inform phoneCall checkExistence Existed object equals atDateTime equals date definedValue equals Today", "user_turn_1": "Next , text Mr. Arnold please", "tgt": "(plan (^(Message) Create :object (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Arnold \")) (Person.namePrefix_? (?= \" Mr \")))))))", "idx": "5956", "datum_id": {"dialogue_id": "b161de96-6002-427d-ba8a-074e14201b1b", "turn_index": 3}}
{"user_turn_0": "Is this a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "I would prefer the one leaving at 4 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "5962", "datum_id": {"dialogue_id": "afb1d9de-4baa-4fd9-b3f7-d8bd5f94ffc4", "turn_index": 2}}
{"user_turn_0": "Hey assistant , remind me of the event I have today .", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Book a table on Friday at 2:30 pm in Greenford", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.location_? (?= \" Greenford \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "6011", "datum_id": {"dialogue_id": "f40bbfb5-66b0-4298-b3f0-4e06a7d66d19", "turn_index": 1}}
{"user_turn_0": "Moderate pricing", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floq", "user_turn_1": "Which of those has a 3 star rating at least ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.rating_? (?>= (someSalient (?= 3))))))))", "idx": "6016", "datum_id": {"dialogue_id": "f40bbfb5-66b0-4298-b3f0-4e06a7d66d19", "turn_index": 6}}
{"user_turn_0": "Which of those has a 3 star rating at least ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flavoroso", "user_turn_1": "What 's the address to there ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "6017", "datum_id": {"dialogue_id": "f40bbfb5-66b0-4298-b3f0-4e06a7d66d19", "turn_index": 7}}
{"user_turn_0": "What 's the address to there ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals The Body Shop in Upper Street", "user_turn_1": "That works . Get a table there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Floss and Joes \"))))))", "idx": "6018", "datum_id": {"dialogue_id": "f40bbfb5-66b0-4298-b3f0-4e06a7d66d19", "turn_index": 8}}
{"user_turn_0": "Hey , i 'd like to book an economy class flight that leaves from London Heathrow for one person .", "agent_turn_0": "Root system prompt flight book object equals destination departureDateTime", "user_turn_1": "I 'm going to Glasgow and leaving on Monday/", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& x0 (Flight.destination_? (Place.location_? (?= \" Glasgow \")))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))))))))", "idx": "6022", "datum_id": {"dialogue_id": "95dbbe4a-f77d-45fc-8b5d-c52970a0bbdf", "turn_index": 1}}
{"user_turn_0": "Yes , please", "agent_turn_0": "Root system prompt flight book object equals returnDateTime", "user_turn_1": "It 's on the 17", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.returnDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 17L)))))))))", "idx": "6025", "datum_id": {"dialogue_id": "95dbbe4a-f77d-45fc-8b5d-c52970a0bbdf", "turn_index": 4}}
{"user_turn_0": "I 'd rather go to a different place that has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "Do they have parking there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "6033", "datum_id": {"dialogue_id": "cb0468c1-49ab-49b4-9604-5072b59f10cc", "turn_index": 5}}
{"user_turn_0": "Do they have parking there ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Okay , make the reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Goat and Guru \"))))))", "idx": "6034", "datum_id": {"dialogue_id": "cb0468c1-49ab-49b4-9604-5072b59f10cc", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , can you send all of my London train information to one of my friends ?", "tgt": "(plan (^(Message) Create :object (Message.textContent_? (?= (^(String Train) reference (Train.destination_? (Place.location_? (?= \" London \"))))))))", "idx": "6037", "datum_id": {"dialogue_id": "ebef5b10-f9bb-441f-95a9-a60d49640a0f", "turn_index": 0}}
{"user_turn_0": "Hello assistant , book me a round trip flight from London to Belfast City departing for Monday", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "Well , what about Wednesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.departureDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Wednesday)))))", "idx": "6043", "datum_id": {"dialogue_id": "638d116c-f70d-4810-aa36-231fedca6aa5", "turn_index": 1}}
{"user_turn_0": "On Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 11 minute equals 55 meridiem equals AM price equals 156", "user_turn_1": "Awesome , I 'll take it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "6046", "datum_id": {"dialogue_id": "638d116c-f70d-4810-aa36-231fedca6aa5", "turn_index": 4}}
{"user_turn_0": "Find a different place that has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Lakeside Demon", "user_turn_1": "It has parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "6065", "datum_id": {"dialogue_id": "2196fd12-c067-46b3-9209-411ab1f8cf78", "turn_index": 7}}
{"user_turn_0": "What 's the average cost for a customer ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 65", "user_turn_1": "Let 's book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flavoroso \"))))))", "idx": "6068", "datum_id": {"dialogue_id": "2196fd12-c067-46b3-9209-411ab1f8cf78", "turn_index": 10}}
{"user_turn_0": "Hi my assistant , book an inexpensive restaurant with parking for March 9th at 1 PM .", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName location", "user_turn_1": "The location should be in Tower Hill and have at least one star", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.location_? (?= \" Tower Hill \"))) (Restaurant.rating_? (?>= (someSalient (?= 1))))))))", "idx": "6093", "datum_id": {"dialogue_id": "886b2c73-9d42-408b-a262-67dc206a2fae", "turn_index": 1}}
{"user_turn_0": "I would rather have a restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Beef Easy", "user_turn_1": "What type of food does it serve ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.foodType_? (^(FoodType) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "6095", "datum_id": {"dialogue_id": "886b2c73-9d42-408b-a262-67dc206a2fae", "turn_index": 3}}
{"user_turn_0": "Which serves Thai Food ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Boiling Fence", "user_turn_1": "Ok . That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" La Zilla \"))))))", "idx": "6097", "datum_id": {"dialogue_id": "886b2c73-9d42-408b-a262-67dc206a2fae", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , can you send the details of the event I set for the 8th to my son ?", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 8L))))))))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Son))))))))", "idx": "6100", "datum_id": {"dialogue_id": "d60eae94-fa40-420c-b023-0ada94cfbc0d", "turn_index": 0}}
{"user_turn_0": "What cabin class would it be ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "Sure thing . I 'd like to book that flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "6107", "datum_id": {"dialogue_id": "d2fb3399-9424-4a44-abf6-eab829a09bf3", "turn_index": 2}}
{"user_turn_0": "The event on every Tuesday", "agent_turn_0": "Root system inform calendarEvent update Completed", "user_turn_1": "Thanks for the help . Can you send him a text saying \" hello \" ?", "tgt": "(plan (^(Message) Create :object (Message.recipients_? (& (^((Constraint Contact)) refer) (Contact.textContent_? (?= \" hello \"))))))", "idx": "6119", "datum_id": {"dialogue_id": "1bb98f4a-8318-4e9f-b28a-27ae6b654c97", "turn_index": 2}}
{"user_turn_0": "I want to leave from Liverpool", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 4 meridiem equals PM price equals 142", "user_turn_1": "Okay , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "6124", "datum_id": {"dialogue_id": "94073c70-9b9c-404e-a36e-2ce0109cb449", "turn_index": 2}}
{"user_turn_0": "Do they have a car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Ok let me get a room there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "6130", "datum_id": {"dialogue_id": "7b44ba87-dde7-4c36-919a-09c38c80d952", "turn_index": 3}}
{"user_turn_0": "I need three rooms of any type", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait , change the check out to Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Thursday))))))", "idx": "6132", "datum_id": {"dialogue_id": "7b44ba87-dde7-4c36-919a-09c38c80d952", "turn_index": 5}}
{"user_turn_0": "The saloon would be good", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals 67 North Street", "user_turn_1": "Can you change the destination to 29 Highgate Lane", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" 29 Highgate Lane \"))))", "idx": "6153", "datum_id": {"dialogue_id": "5b9106d4-9244-4480-9405-b4b7519f4c2a", "turn_index": 3}}
{"user_turn_0": "How long will that take ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 15", "user_turn_1": "What 's the driving time from Angel Central to 4a Enterprise Way ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Navigation)) Path.apply \" object \") (lambda (^(Constraint Navigation) x0) (& (& (Navigation.source_? (Place.location_? (?= \" Angel Central \"))) (Navigation.destination_? (Place.location_? (?= \" 4a Enterprise Way \")))) (Navigation.transportationMode_? (?= (TransportationMode.Driving)))))))", "idx": "6158", "datum_id": {"dialogue_id": "8e488f33-8a6e-4fe7-8dc2-5ebafb1bc0a0", "turn_index": 2}}
{"user_turn_0": "Hi my assistant , i would like to book that departs Tuesday , returns Sunday , and goes from Manchester to Glasgow .", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 11 minute equals 55 meridiem equals AM", "user_turn_1": "Looks good to me . Please make the booking for two passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" Manchester \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (^((Constraint (List DateTime))) refer)))) (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))) (Flight.passengers_? (?= 2))))))", "idx": "6162", "datum_id": {"dialogue_id": "59640a52-118b-43ef-ac33-cd6091d03c65", "turn_index": 1}}
{"user_turn_0": "No , from Sheffield", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM", "user_turn_1": "I prefer the 4 PM one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "6168", "datum_id": {"dialogue_id": "569ba75f-24c7-4407-b1ba-34902077eec6", "turn_index": 2}}
{"user_turn_0": "Birmingham", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM price equals 166", "user_turn_1": "Great , book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "6178", "datum_id": {"dialogue_id": "0f0ce889-6184-42d7-af2a-88667e877d16", "turn_index": 2}}
{"user_turn_0": "I want Chinese hotpot and need it to have at least two stars rating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Juniper Cloud", "user_turn_1": "On average , how much will it cost per person ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "6196", "datum_id": {"dialogue_id": "455ce668-70e5-4c2d-8fa6-63e25a113446", "turn_index": 3}}
{"user_turn_0": "I prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Interknack", "user_turn_1": "What 's the address ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "6198", "datum_id": {"dialogue_id": "455ce668-70e5-4c2d-8fa6-63e25a113446", "turn_index": 5}}
{"user_turn_0": "I prefer another restaurant that has outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kiwi Sea", "user_turn_1": "Does the restaurant have outdoor seating ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "6200", "datum_id": {"dialogue_id": "455ce668-70e5-4c2d-8fa6-63e25a113446", "turn_index": 7}}
{"user_turn_0": "Does the restaurant have outdoor seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "That \u2019s good , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Juniper Cloud \"))))))", "idx": "6201", "datum_id": {"dialogue_id": "455ce668-70e5-4c2d-8fa6-63e25a113446", "turn_index": 8}}
{"user_turn_0": "I need two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually change when I get there to be today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Today)))))", "idx": "6211", "datum_id": {"dialogue_id": "9f6cc9cb-3545-4978-bdc2-0c09880909d0", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , book a double room at a hotel with at least three stars", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.rating_? (?>= (someSalient (?= 3)))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Double)))))))", "idx": "6213", "datum_id": {"dialogue_id": "14967032-4e8a-4dfd-9a5f-54dca18c9460", "turn_index": 0}}
{"user_turn_0": "Does the hotel have a private bathroom ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "I prefer another cheap hotel", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "6216", "datum_id": {"dialogue_id": "14967032-4e8a-4dfd-9a5f-54dca18c9460", "turn_index": 3}}
{"user_turn_0": "I prefer another cheap hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Bluebird Guesthouse price equals 150", "user_turn_1": "Does the hotel have a private bathroom ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "6217", "datum_id": {"dialogue_id": "14967032-4e8a-4dfd-9a5f-54dca18c9460", "turn_index": 4}}
{"user_turn_0": "Does the hotel have a private bathroom ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Four Seasons \"))))))", "idx": "6218", "datum_id": {"dialogue_id": "14967032-4e8a-4dfd-9a5f-54dca18c9460", "turn_index": 5}}
{"user_turn_0": "I prefer another restaurant with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capricorn", "user_turn_1": "What is the address of the restaurant ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "6230", "datum_id": {"dialogue_id": "b74c8acd-6370-4ac0-b975-e5457b1a0e43", "turn_index": 4}}
{"user_turn_0": "What is the address of the restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 234 University Street", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Bard's Bench \"))))))", "idx": "6231", "datum_id": {"dialogue_id": "b74c8acd-6370-4ac0-b975-e5457b1a0e43", "turn_index": 5}}
{"user_turn_0": "Yes , for the 22nd please", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM price equals 166", "user_turn_1": "That looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "6243", "datum_id": {"dialogue_id": "dee21984-3cbc-4284-8426-e91128027625", "turn_index": 7}}
{"user_turn_0": "Yes , I want you to send it now", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "I want to send the December 28th event to Bella", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (& (Date.day_? (?= (Day.apply 28L))) (Date.month_? (?= (December)))))))))) (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Bella \"))))))))", "idx": "6248", "datum_id": {"dialogue_id": "7a58f753-b2d0-4e7a-a3d6-40476c01c15f", "turn_index": 3}}
{"user_turn_0": "Is this a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Okay , let 's book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "6265", "datum_id": {"dialogue_id": "df553336-001d-4e58-af6e-fea99fa46815", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "OK assistant , let me book a king - sized bed at a hotel that has parking and one star rating or above please .", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.rating_? (?!= (someSalient (?= 0)))) (Hotel.roomType_? (List.exists_? (?= (RoomType.King))))) (Hotel.hasParking_? (?= true)))))", "idx": "6277", "datum_id": {"dialogue_id": "73743791-8cf8-42da-b650-c6b33da07e68", "turn_index": 0}}
{"user_turn_0": "Is there a way to get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "I want to book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "6281", "datum_id": {"dialogue_id": "73743791-8cf8-42da-b650-c6b33da07e68", "turn_index": 4}}
{"user_turn_0": "Does the hotel have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Great book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "6287", "datum_id": {"dialogue_id": "4821dc33-38f8-4f15-b6eb-ab1ece3fd823", "turn_index": 3}}
{"user_turn_0": "One double room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they offer free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "6290", "datum_id": {"dialogue_id": "4821dc33-38f8-4f15-b6eb-ab1ece3fd823", "turn_index": 6}}
{"user_turn_0": "Hi there , schedule a reminder for the event this morning", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Next task , send my next event to my father", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Father))))))))", "idx": "6298", "datum_id": {"dialogue_id": "b15945eb-0e9f-4032-bd91-5b8facd6cef0", "turn_index": 1}}
{"user_turn_0": "Make sure it fits six passengers", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals Little Bat", "user_turn_1": "Modify the destination to 9 School Lane", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Place)) Path.apply \" object.destination \") (lambda (^(Constraint Place) x0) (Place.location_? (?= \" 9 School Lane \")))))", "idx": "6329", "datum_id": {"dialogue_id": "4c7dd377-2f33-41df-b8a4-4424d5ae3675", "turn_index": 2}}
{"user_turn_0": "Do me another favor . I would like to book a round trip flight to Dublin for three passengers ; the departure date is the 10th", "agent_turn_0": "Root system prompt flight book object equals source", "user_turn_1": "I want it to be in Heathrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.source_? (Place.location_? (?= \" London Heathrow \")))))))", "idx": "6341", "datum_id": {"dialogue_id": "962d9c92-9cdd-469d-b669-58d77465158c", "turn_index": 4}}
{"user_turn_0": "Tell me which airline it is", "agent_turn_0": "Root system inform flight find focus equals airLine equals EasyJet", "user_turn_1": "book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "6343", "datum_id": {"dialogue_id": "962d9c92-9cdd-469d-b669-58d77465158c", "turn_index": 6}}
{"user_turn_0": "Hey , i want to book an MPV taxi to go from 12 Hydean Way to Angel Central", "agent_turn_0": "Root system offer taxi book", "user_turn_1": "No , I want to go to 9 School Lane instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" 9 School Lane \"))))", "idx": "6358", "datum_id": {"dialogue_id": "52da9361-20f2-4bd1-9608-553955cdf65b", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , when will the event end ?", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.endDateTime_? (^(DateTime) always))) :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))))))", "idx": "6372", "datum_id": {"dialogue_id": "ce089081-a2be-4bb1-9d90-5f60a20fb0d3", "turn_index": 0}}
{"user_turn_0": "Change it too Saturday", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "What are the direction to Bella Outdoors on my calendar", "tgt": "(plan (^(Navigation) Find :object (Navigation.destination_? (?= (^(Place CalendarEvent) reference (& (CalendarEvent.eventName_? (?= \" Bella Outdoors \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))))))))))", "idx": "6375", "datum_id": {"dialogue_id": "ce089081-a2be-4bb1-9d90-5f60a20fb0d3", "turn_index": 3}}
{"user_turn_0": "What are the direction to Bella Outdoors on my calendar", "agent_turn_0": "Root system inform navigation find object equals destination equals location equals 66 Park Avenue", "user_turn_1": "Show me the weather", "tgt": "(plan (^(WeatherReport) Find :object (WeatherReport.location_? (^((Constraint String)) refer))))", "idx": "6376", "datum_id": {"dialogue_id": "ce089081-a2be-4bb1-9d90-5f60a20fb0d3", "turn_index": 4}}
{"user_turn_0": "What cuisine is it ?", "agent_turn_0": "Root system inform restaurant find focus equals foodType equals German Food", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "6380", "datum_id": {"dialogue_id": "10a79848-0334-4820-8132-f1d586021c0c", "turn_index": 3}}
{"user_turn_0": "Next , please add my appointment for Chipotle Grill restaurant to calendar", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Thanks , also set reminder to take a shower at 5 PM April 12th", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Reminder)) Path.apply \" object \") (lambda (^(Constraint Reminder) x0) (& (Reminder.reminderContent_? (?= \" take a shower \")) (Reminder.atDateTime_? (& (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 5L))) (meridiem_? (?= (Meridiem.PM))))) (DateTime.date_? (& (Date.month_? (?= (April))) (Date.day_? (?= (Day.apply 12L)))))))))))", "idx": "6397", "datum_id": {"dialogue_id": "3db1ef0d-3335-452b-971d-fd3452e20da3", "turn_index": 3}}
{"user_turn_0": "I will come back on Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM price equals 170", "user_turn_1": "That s good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "6434", "datum_id": {"dialogue_id": "3cb2754f-e114-4235-9bab-36738b073e19", "turn_index": 4}}
{"user_turn_0": "Friday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM price equals 199", "user_turn_1": "That one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "6464", "datum_id": {"dialogue_id": "d6e66a7e-5738-4033-8cd8-e22562cca817", "turn_index": 5}}
{"user_turn_0": "What 's the weather in Glasgow like today ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cloudy", "user_turn_1": "Can you give me directions to 1 Islington Green to 24 Empire Way ?", "tgt": "(plan (^(Navigation) Find :object (& (Navigation.source_? (Place.location_? (?= \" 1 Islington Green \"))) (Navigation.destination_? (Place.location_? (?= \" 24 Empire Way \"))))))", "idx": "6470", "datum_id": {"dialogue_id": "a0a77f40-5e77-411f-9183-be74515dcee8", "turn_index": 4}}
{"user_turn_0": "Make it Bristol", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 meridiem equals PM", "user_turn_1": "Looks great", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "6479", "datum_id": {"dialogue_id": "f4069b77-ba77-4e4f-ae5c-c2dbacb1c693", "turn_index": 2}}
{"user_turn_0": "Which of those places serves Japanese Cuisine ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floq", "user_turn_1": "What would the average cost per person be ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "6487", "datum_id": {"dialogue_id": "b23a30d8-3ec6-42f8-9bea-00db76825f55", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , is Dry - Cleaning Delivery on my calendar from now until 4 PM ?", "tgt": "(plan (^(CalendarEvent) CheckExistence :object (& (CalendarEvent.eventName_? (?= \" Dry-Cleaning Delivery \")) (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Now)))) (DateTimeRange.endDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "6503", "datum_id": {"dialogue_id": "081b4656-0e2c-43f0-acae-d8914dc34294", "turn_index": 0}}
{"user_turn_0": "Do I have a message from my parents ?", "agent_turn_0": "Root system inform message checkExistence Existed", "user_turn_1": "When does my train to Southampton get here ?", "tgt": "(plan (^(Train) Find :focus (Train.arrivalDateTime_? (^(DateTime) always)) :object (Train.destination_? (Place.location_? (?= \" Southampton \")))))", "idx": "6505", "datum_id": {"dialogue_id": "081b4656-0e2c-43f0-acae-d8914dc34294", "turn_index": 2}}
{"user_turn_0": "Hey assistant , what time does Point Presentation Start on today , as shown on the calnder", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals startDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM", "user_turn_1": "Thanks for the help . Set a reminder for me at that time", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (^((Constraint DateTime)) refer))))", "idx": "6514", "datum_id": {"dialogue_id": "70e922f3-eca1-4d97-98d6-41369d2e0a84", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , how long will it take me to get to the event", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today))))))))))", "idx": "6518", "datum_id": {"dialogue_id": "6fd199e1-9a6a-4bd8-9113-0af3501336a4", "turn_index": 0}}
{"user_turn_0": "Does the place have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "6521", "datum_id": {"dialogue_id": "6fd199e1-9a6a-4bd8-9113-0af3501336a4", "turn_index": 3}}
{"user_turn_0": "Can you book me 3 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does this place have free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "6524", "datum_id": {"dialogue_id": "6fd199e1-9a6a-4bd8-9113-0af3501336a4", "turn_index": 6}}
{"user_turn_0": "What 's the weather like in Leicester ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Rainy", "user_turn_1": "How about in Leeds ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint String)) Path.apply \" object.location \") (lambda (^(Constraint String) x0) (?= \" Leeds \"))))", "idx": "6555", "datum_id": {"dialogue_id": "1d4c0cab-af5b-4bb0-b309-a4a72c7db8f7", "turn_index": 4}}
{"user_turn_0": "I will be needing one room and the room type does not matter", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "6560", "datum_id": {"dialogue_id": "bb47635e-5637-4ed1-8c0d-9f3b798f9eb3", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , book a round trip train ticket to Swansea leaving on Friday and returning on the 6th .", "tgt": "(plan (^(Train) Book :object (& (& (Train.destination_? (Place.location_? (?= \" Swansea \"))) (Train.departureDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday)))))) (Train.returnDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 6L))))))))", "idx": "6572", "datum_id": {"dialogue_id": "fa66ce8b-0c1e-4c35-bab6-27fd493ae063", "turn_index": 0}}
{"user_turn_0": "Liverpool", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "6574", "datum_id": {"dialogue_id": "fa66ce8b-0c1e-4c35-bab6-27fd493ae063", "turn_index": 2}}
{"user_turn_0": "Which of them serve Thai food ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floss and Joes", "user_turn_1": "What 's the average cost per person ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "6580", "datum_id": {"dialogue_id": "fe2bbe65-d799-4999-aadb-ced0d0d46422", "turn_index": 3}}
{"user_turn_0": "I 'd rather have something with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Spago", "user_turn_1": "What is the address ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "6582", "datum_id": {"dialogue_id": "fe2bbe65-d799-4999-aadb-ced0d0d46422", "turn_index": 5}}
{"user_turn_0": "What is the address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 100 Foregate Street", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flavoroso \"))))))", "idx": "6583", "datum_id": {"dialogue_id": "fe2bbe65-d799-4999-aadb-ced0d0d46422", "turn_index": 6}}
{"user_turn_0": "The 19th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM price equals 130", "user_turn_1": "OK that one is good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "6592", "datum_id": {"dialogue_id": "767cfbf9-8e80-4ee9-98cd-30570e5ef1ec", "turn_index": 5}}
{"user_turn_0": "Is breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "6602", "datum_id": {"dialogue_id": "f8532a8c-ddfc-48bc-a556-b163be0040d6", "turn_index": 3}}
{"user_turn_0": "Two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "6606", "datum_id": {"dialogue_id": "f8532a8c-ddfc-48bc-a556-b163be0040d6", "turn_index": 7}}
{"user_turn_0": "it is 3", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is cancellation free", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "6627", "datum_id": {"dialogue_id": "b1f7fe8c-a3d2-44a7-a739-9d4f570d2be5", "turn_index": 3}}
{"user_turn_0": "Friday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "6634", "datum_id": {"dialogue_id": "bbbd4d3e-39ee-443d-901e-c3f800758c4d", "turn_index": 5}}
{"user_turn_0": "I 'd prefer a place with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Canton Silk", "user_turn_1": "What kind of food do they serve ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.foodType_? (^(FoodType) always)))))", "idx": "6665", "datum_id": {"dialogue_id": "be48e305-3612-49fb-94b5-4c079062bc56", "turn_index": 4}}
{"user_turn_0": "Hi assistant , is Preach Your Pitch on my calendar ?", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Make one for me", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.eventName_? (?= \" Sam's Big Birthday Bash \")) (CalendarEvent.location_? (?= \" Jibbelrs \")))))", "idx": "6672", "datum_id": {"dialogue_id": "774ee134-400d-40e7-a3fa-0df3901eddc8", "turn_index": 1}}
{"user_turn_0": "Hello assistant , please book a round trip ticket leaving November 12th and returning Thursday from Birmingham to Brussel", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM price equals 210", "user_turn_1": "Ok , I need it for two people", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" Birmingham \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday)))))) (Flight.passengers_? (?= 2))))))", "idx": "6691", "datum_id": {"dialogue_id": "a6074ffb-1c73-4e85-8383-3667aaf61f12", "turn_index": 1}}
{"user_turn_0": "At 7 PM", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Set up an event at Tides Estate and send it to my brother", "tgt": "(plan (do (^(CalendarEvent) Create :object (CalendarEvent.eventLocation_? (?= \" Tides Estate \"))) (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Brother))))) (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always))))))))", "idx": "6697", "datum_id": {"dialogue_id": "2b3101cf-1850-4cc3-b4fc-f767cf189c60", "turn_index": 2}}
{"user_turn_0": "Yes , the price range should not be high", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals La Zilla", "user_turn_1": "I would like to know what is the average cost per person", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "6702", "datum_id": {"dialogue_id": "acc92c87-b66b-40ad-b008-b8160bc6ab83", "turn_index": 2}}
{"user_turn_0": "Can you tell me which restaurants have a rating of three stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capricorn", "user_turn_1": "Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" La Zilla \"))))))", "idx": "6704", "datum_id": {"dialogue_id": "acc92c87-b66b-40ad-b008-b8160bc6ab83", "turn_index": 4}}
{"user_turn_0": "Does that place have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Then , get it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "6711", "datum_id": {"dialogue_id": "9dc15e0b-4599-4a24-95e4-fedb1fa33f3e", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i would like", "tgt": "(plan (^(Flight) Book :object (Flight.source_? (Place.location_? (?= \" London \")))))", "idx": "6714", "datum_id": {"dialogue_id": "bef50073-3feb-4414-9dd7-0cb9475bfc9f", "turn_index": 0}}
{"user_turn_0": "I 'm departing from Glasgow", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 meridiem equals PM", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "6724", "datum_id": {"dialogue_id": "6998c18b-f3f2-4e40-8a3e-ea97c9324799", "turn_index": 3}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (^((Constraint Hour)) refer)) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "6727", "datum_id": {"dialogue_id": "6998c18b-f3f2-4e40-8a3e-ea97c9324799", "turn_index": 6}}
{"user_turn_0": "I prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Acacia Saint", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Floss and Joes \"))))))", "idx": "6747", "datum_id": {"dialogue_id": "fcad974a-665b-4d2e-82e1-6d5c01345433", "turn_index": 3}}
{"user_turn_0": "Get rid of the Smart Card Research held in Terminal 5", "agent_turn_0": "Root system inform calendarEvent delete Completed", "user_turn_1": "Tell me what time my calendar event finishes today", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.endDateTime_? (^(DateTime) always))) :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))))))", "idx": "6759", "datum_id": {"dialogue_id": "ac0bbbf0-0ecd-4f65-aade-fab99755e546", "turn_index": 2}}
{"user_turn_0": "Yes , I will be", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 1 meridiem equals PM price equals 127", "user_turn_1": "Okay book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "6764", "datum_id": {"dialogue_id": "cb43ae27-0aa8-4d21-bfb5-3f6d1b805418", "turn_index": 2}}
{"user_turn_0": "I prefer the 1:40 PM train", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 meridiem equals PM", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (^((Constraint Hour)) refer)) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "6769", "datum_id": {"dialogue_id": "8364acf2-f3df-4c05-bb39-b5e8ca7c616e", "turn_index": 2}}
{"user_turn_0": "Thanks , also i need a reminder labeled take medicines for 2 PM on Thursday", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Thanks , also i need to reserve a restaurant that has Thai food", "tgt": "(plan (^(Restaurant) Book :object (Restaurant.foodType_? (?= (FoodType.Thai)))))", "idx": "6775", "datum_id": {"dialogue_id": "e7143429-049c-46ec-a931-d6d26f62ab63", "turn_index": 3}}
{"user_turn_0": "Yeah , book it", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "Update my calendar event attendees", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.attendees_? (^(Contact) always))))", "idx": "6786", "datum_id": {"dialogue_id": "c6d12dad-c25e-4dd2-aba7-6d4eeb264ba6", "turn_index": 4}}
{"user_turn_0": "I would like to have one king sized bed", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Well , does the booking support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "6806", "datum_id": {"dialogue_id": "34d20b93-cf5d-4a39-8fd7-abc899b10e11", "turn_index": 4}}
{"user_turn_0": "Ok , does it have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "6810", "datum_id": {"dialogue_id": "21b7bffe-5856-453a-a8de-81cfab6e7356", "turn_index": 2}}
{"user_turn_0": "Hello , book a round trip air ticket from Manchester to Edinburgh for tomorrow with a return date of Saturday", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 12 minute equals 25 meridiem equals PM", "user_turn_1": "That 's fine . Book that flight for one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" Manchester \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (^((Constraint (List DateTime))) refer)))) (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday)))))) (Flight.passengers_? (?= 1))))))", "idx": "6821", "datum_id": {"dialogue_id": "8ea1285e-9a2f-412a-86b5-bf05865698b6", "turn_index": 1}}
{"user_turn_0": "I 'm leaving from Manchester on Monday", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 12 minute equals 25 meridiem equals PM", "user_turn_1": "Ok , book that one for 3 passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 3))))))", "idx": "6827", "datum_id": {"dialogue_id": "fa204160-b4f1-4da0-950f-e67c59dc9eb1", "turn_index": 2}}
{"user_turn_0": "Yes . please", "agent_turn_0": "Root system inform reminder delete Completed", "user_turn_1": "Add an event to my calendar", "tgt": "(plan (do (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (?= (Tomorrow))) (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (?= (Minute.apply 30L))))))))) (^(Reminder) Create :object (Reminder.reminderContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))))))", "idx": "6835", "datum_id": {"dialogue_id": "cfea1d28-22d6-4e99-96ba-907e65ca1d15", "turn_index": 4}}
{"user_turn_0": "Hello , can you give me the time of my Information Sharing Meetings with Mr. Butler ?", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals startDateTime equals time equals hour equals 1 meridiem equals PM", "user_turn_1": "Next , can you put a reminder for me ?", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (^(CalendarEvent) always))))))", "idx": "6842", "datum_id": {"dialogue_id": "b02c6967-6a62-4fd7-9fb1-17cc32e68534", "turn_index": 1}}
{"user_turn_0": "What kind of food is served there ?", "agent_turn_0": "Root system inform restaurant find focus equals foodType equals Chinese hotpot", "user_turn_1": "Book it then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "6858", "datum_id": {"dialogue_id": "579cb0da-0789-48d2-ad25-88d37890ebda", "turn_index": 3}}
{"user_turn_0": "How is that one rated ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "I 'll stay there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "6871", "datum_id": {"dialogue_id": "51070968-fc91-42a2-8614-3577a077541d", "turn_index": 3}}
{"user_turn_0": "Please , can you make that for three rooms ?", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "What if I check in on Tuesday instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "6874", "datum_id": {"dialogue_id": "51070968-fc91-42a2-8614-3577a077541d", "turn_index": 6}}
{"user_turn_0": "Hi assistant , order a taxi to 14 Dagmar Passage and the car type I need is MPV", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals 97 Church Road", "user_turn_1": "Change the destination to The Body Shop in Upper Street", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" The Body Shop in Upper Street \"))))", "idx": "6877", "datum_id": {"dialogue_id": "41d7fbf7-f308-4f5c-8584-bbe5e92b59b1", "turn_index": 1}}
{"user_turn_0": "I 'm getting back on Sunday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM", "user_turn_1": "Sure , that works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "6889", "datum_id": {"dialogue_id": "effa7f99-1a8b-42a4-82d3-b4a1bb8091a1", "turn_index": 3}}
{"user_turn_0": "What are the directions from 94 Hall Lane to 2a Prebend Street ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "I need another favor . Remind me at 6:00 on the 12th", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (& (DateTime.time_? (Time.hour_? (?= (Hour.apply 6L)))) (DateTime.date_? (Date.day_? (?= (Day.apply 12L))))))))", "idx": "6900", "datum_id": {"dialogue_id": "94d30b84-9402-413b-8d54-2fb689bb2678", "turn_index": 2}}
{"user_turn_0": "I need another favor . Remind me at 6:00 on the 12th", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Add a 4:00 reminder", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.atDateTime \") (lambda (^(Constraint DateTime) x0) (DateTime.time_? (Time.hour_? (?= (Hour.apply 4L)))))))", "idx": "6901", "datum_id": {"dialogue_id": "94d30b84-9402-413b-8d54-2fb689bb2678", "turn_index": 3}}
{"user_turn_0": "I 'm going to Coventry", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM", "user_turn_1": "I 'd rather have the one at 1 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "6911", "datum_id": {"dialogue_id": "13e04613-034f-4fc0-97ee-6a0707dda647", "turn_index": 3}}
{"user_turn_0": "I 'm returning on Saturday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 4 meridiem equals PM", "user_turn_1": "Sounds great", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "6913", "datum_id": {"dialogue_id": "13e04613-034f-4fc0-97ee-6a0707dda647", "turn_index": 5}}
{"user_turn_0": "Show me directions to my scheduled event , please", "agent_turn_0": "Root system inform navigation find object equals destination equals location equals 9028 Woodsman Lane", "user_turn_1": "And what is the weather like there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint WeatherReport)) Path.apply \" object \") (lambda (^(Constraint WeatherReport) x0) (WeatherReport.location_? (?= \" Birmingham \")))))", "idx": "6933", "datum_id": {"dialogue_id": "6b46ff07-0dd4-49a6-bb51-fbf0002c9c9a", "turn_index": 3}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "6940", "datum_id": {"dialogue_id": "be7db51a-a786-4a7f-b94a-28ed9f5c2a62", "turn_index": 3}}
{"user_turn_0": "London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 3 meridiem equals PM price equals 127", "user_turn_1": "That 's fine . I 'd like to book the flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "6969", "datum_id": {"dialogue_id": "5a1d6aa1-8afd-4f51-b4e2-48f13b2d419e", "turn_index": 2}}
{"user_turn_0": "I want one double room", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Can I check in on the 14th instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 14L))))))", "idx": "6978", "datum_id": {"dialogue_id": "7681d85c-219d-4c2e-b877-f5d6908a8d2a", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , make an event in Red Inbox at 9 tomorrow on the calendar .", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (?= (Tomorrow))) (DateTime.time_? (Time.hour_? (?= (Hour.apply 9L))))))) (CalendarEvent.location_? (?= \" Red Innox \")))))", "idx": "6995", "datum_id": {"dialogue_id": "3b39ee97-0439-4261-97a9-b2b8c122b354", "turn_index": 0}}
{"user_turn_0": "Hey assistant , tell me if I have an event held at Rich Mix on the calendar .", "agent_turn_0": "Root system inform calendarEvent find Existed", "user_turn_1": "Okay , how long would it take to get there ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (Place.location_? (^((Constraint String)) refer)))))", "idx": "7001", "datum_id": {"dialogue_id": "d05f661f-6459-4fda-b7c7-3394472f178f", "turn_index": 1}}
{"user_turn_0": "I will depart from Leeds", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM", "user_turn_1": "Looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "7004", "datum_id": {"dialogue_id": "d05f661f-6459-4fda-b7c7-3394472f178f", "turn_index": 4}}
{"user_turn_0": "Looks good", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM", "user_turn_1": "That 's fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "7013", "datum_id": {"dialogue_id": "1be9fcfe-c40b-4697-a893-b21031815c3a", "turn_index": 2}}
{"user_turn_0": "Is there outdoors seats ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "Cool , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "7055", "datum_id": {"dialogue_id": "610fa7b4-f720-4856-af9b-eb41ec7a54e3", "turn_index": 4}}
{"user_turn_0": "I want a restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Lakeside Demon", "user_turn_1": "That looks good , go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Hambone Martian \"))))))", "idx": "7074", "datum_id": {"dialogue_id": "232187a7-0ee9-4700-8ef4-308c137a3e75", "turn_index": 4}}
{"user_turn_0": "That looks good , go ahead and book it", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Change the date to Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday)))))))))", "idx": "7075", "datum_id": {"dialogue_id": "232187a7-0ee9-4700-8ef4-308c137a3e75", "turn_index": 5}}
{"user_turn_0": "Yeah , book it", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "Next , i need a table for February 6th at the Floss and Joes in Northwick Park", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.location_? (?= \" Northwick Park \")) (Restaurant.restaurantName_? (?= \" Floss and Joes \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (& (Date.month_? (?= (February))) (Date.day_? (?= (Day.apply 6L))))))))))", "idx": "7081", "datum_id": {"dialogue_id": "9fdd908c-b27b-44f6-beb5-0a390797b0c6", "turn_index": 3}}
{"user_turn_0": "Does the hotel have laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "7093", "datum_id": {"dialogue_id": "fbe5c5b0-ce6a-4b73-af43-262a87ad890e", "turn_index": 5}}
{"user_turn_0": "One room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "7099", "datum_id": {"dialogue_id": "fbe5c5b0-ce6a-4b73-af43-262a87ad890e", "turn_index": 11}}
{"user_turn_0": "Okay , but which ones have at least a three star rating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Acacia Saint", "user_turn_1": "What is their average cost per person ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "7115", "datum_id": {"dialogue_id": "21f4e5d3-8280-4dc8-874c-6608095cddc3", "turn_index": 4}}
{"user_turn_0": "Somewhere with parking would be better", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Stazione restaurant", "user_turn_1": "Do they accept credit cards ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "7117", "datum_id": {"dialogue_id": "21f4e5d3-8280-4dc8-874c-6608095cddc3", "turn_index": 6}}
{"user_turn_0": "Somewhere with outdoor seating is better", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jurassic Pork", "user_turn_1": "That works . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Goat and Guru \"))))))", "idx": "7119", "datum_id": {"dialogue_id": "21f4e5d3-8280-4dc8-874c-6608095cddc3", "turn_index": 8}}
{"user_turn_0": "I would like to send a message to 07810142276", "agent_turn_0": "Root system prompt message create object equals textContent", "user_turn_1": "It 's going to be bon voyage", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (& x0 (Message.textContent_? (?= \" bon voyage \"))))))", "idx": "7131", "datum_id": {"dialogue_id": "33a4acdc-5746-48d9-9e57-1db98a223882", "turn_index": 3}}
{"user_turn_0": "I need to be back on the 20th , I think ?", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 11 minute equals 50 meridiem equals AM price equals 160", "user_turn_1": "OK , I 'll go with that one then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "7143", "datum_id": {"dialogue_id": "a8fa6297-7895-4a49-a208-4a63e6a6c814", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , tell me reminder of event on the 14th", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 14L)))))))))))", "idx": "7150", "datum_id": {"dialogue_id": "a39b0f6d-908e-4218-aa1d-51c95af3af93", "turn_index": 0}}
{"user_turn_0": "Hello , tell me reminder of event on the 14th", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Set a reminder for it", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object.atDateTime \") (lambda (^(Constraint CalendarEvent) x0) (^(CalendarEvent) always))))", "idx": "7151", "datum_id": {"dialogue_id": "a39b0f6d-908e-4218-aa1d-51c95af3af93", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , here are the directions for how to get to your destination .", "tgt": "(plan (^(Navigation) Find :object (& (Navigation.source_? (Place.location_? (?= \" The Dima Foundation \"))) (Navigation.destination_? (Place.location_? (?= \" 76 Windsor Road \"))))))", "idx": "7155", "datum_id": {"dialogue_id": "423b5045-d585-4894-aa25-b046cd7aab4c", "turn_index": 0}}
{"user_turn_0": "I 'd like to come back Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 12 minute equals 30 meridiem equals PM price equals 65", "user_turn_1": "That works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "7173", "datum_id": {"dialogue_id": "c5fe5bb0-8d4d-4a34-9808-649047a8a035", "turn_index": 3}}
{"user_turn_0": "I want another hotel that has higher than a zero star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Westin price equals 119", "user_turn_1": "Is breakfast included ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "7200", "datum_id": {"dialogue_id": "4bf96128-4e7d-4d1e-9ecb-0cf0c738beec", "turn_index": 4}}
{"user_turn_0": "Is breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" InterContinental \"))))))", "idx": "7201", "datum_id": {"dialogue_id": "4bf96128-4e7d-4d1e-9ecb-0cf0c738beec", "turn_index": 5}}
{"user_turn_0": "Does the hotel have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it for me friend", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "7220", "datum_id": {"dialogue_id": "ec0ca098-2408-4c96-9bb7-81604def1061", "turn_index": 3}}
{"user_turn_0": "I need three rooms please and the room type does n't matter", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Can I check in on Wednesday instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Wednesday))))))", "idx": "7223", "datum_id": {"dialogue_id": "ec0ca098-2408-4c96-9bb7-81604def1061", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , is there a price range that you prefer ?", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.location_? (?= \" Ealing \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "7225", "datum_id": {"dialogue_id": "25f413be-2cd2-464c-9e26-452510e586ae", "turn_index": 0}}
{"user_turn_0": "I want a restaurant that serves Chinese hotpot", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals La Zilla", "user_turn_1": "Is credit card accepted at the restaurant ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "7228", "datum_id": {"dialogue_id": "25f413be-2cd2-464c-9e26-452510e586ae", "turn_index": 3}}
{"user_turn_0": "Is credit card accepted at the restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "7229", "datum_id": {"dialogue_id": "25f413be-2cd2-464c-9e26-452510e586ae", "turn_index": 4}}
{"user_turn_0": "I do n't care about the type of room . I need three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there a deposit ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "7244", "datum_id": {"dialogue_id": "7e90b52a-60e4-4b58-b71c-dbac25c4fdb0", "turn_index": 6}}
{"user_turn_0": "Three single room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is breakfast included ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "7249", "datum_id": {"dialogue_id": "fa712f32-161e-483e-92f1-ff3efe84dc2b", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , get me a single room at a hotel", "tgt": "(plan (^(Hotel) Book :object (Hotel.roomType_? (List.exists_? (?= (RoomType.Single))))))", "idx": "7251", "datum_id": {"dialogue_id": "10492708-c6c5-481c-8149-9fd6382f879a", "turn_index": 0}}
{"user_turn_0": "Do they have parking there ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Get the reservation there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "7254", "datum_id": {"dialogue_id": "10492708-c6c5-481c-8149-9fd6382f879a", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , can I get a table reservation for a moderately priced hotel with a car park in Holland Park at 3 o'clock on the 20th ?", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Holland Park \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 20L))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 3L)))))))) (Restaurant.priceRange_? (?= (PriceRange.Moderate)))) (Restaurant.hasParking_? (?= true)))))", "idx": "7259", "datum_id": {"dialogue_id": "6147a22c-e7dc-4b22-941c-c354f9b12317", "turn_index": 0}}
{"user_turn_0": "I want Japanese cuisine", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Gogol", "user_turn_1": "Ok , book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "7261", "datum_id": {"dialogue_id": "6147a22c-e7dc-4b22-941c-c354f9b12317", "turn_index": 2}}
{"user_turn_0": "Ok , book it for me please", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Well how about if we change the date to today ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Today)))))", "idx": "7262", "datum_id": {"dialogue_id": "6147a22c-e7dc-4b22-941c-c354f9b12317", "turn_index": 3}}
{"user_turn_0": "2 single rooms", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Try for Ritz Carlton hotel", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.hotelName \") (lambda (^(Constraint String) x0) (?= \" Ritz-Carlton \"))))", "idx": "7275", "datum_id": {"dialogue_id": "fa5e28a9-4724-4191-9dd6-5cfa9b265eab", "turn_index": 5}}
{"user_turn_0": "Hey , make an event with my sister from 2 PM to 5 PM on my calendar", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Ok , send an event to Frank please", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Frank \")))))))", "idx": "7278", "datum_id": {"dialogue_id": "139cf179-a449-4c9d-85bc-f66acac7e49d", "turn_index": 1}}
{"user_turn_0": "What kind of food does it serve ?", "agent_turn_0": "Root system inform restaurant find focus equals foodType equals Italian Cuisine", "user_turn_1": "can you book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "7285", "datum_id": {"dialogue_id": "65578f96-6990-42ec-b5e0-3df44756872d", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , will you be departing from London ?", "tgt": "(plan (^(Flight) Book :object (& (Flight.class_? (?= (FlightClass.Business))) (Flight.destination_? (Place.location_? (?= \" Brussel \"))))))", "idx": "7288", "datum_id": {"dialogue_id": "cd61353c-944c-4cb8-906f-38af263680d0", "turn_index": 0}}
{"user_turn_0": "Yes , I 'll be needing a return ticket for Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 4 meridiem equals PM price equals 166", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "7292", "datum_id": {"dialogue_id": "cd61353c-944c-4cb8-906f-38af263680d0", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , help me get a taxi from 9028 Woodsman Lane to the spring outing entry on the calendar today", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" 9028 Woodsman Lane \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (& (CalendarEvent.eventName_? (?= \" spring outing \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today))))))))))))", "idx": "7294", "datum_id": {"dialogue_id": "7a760d56-442a-4cae-b8a4-fc3ebe26415a", "turn_index": 0}}
{"user_turn_0": "Book three rooms please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Change the check - out date to the 19th instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 19L))))))", "idx": "7315", "datum_id": {"dialogue_id": "83714df6-98d6-4f58-9257-6f61c69dd986", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , i need a reservation at an affordable hotel that 's rated at least one star .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))) (Hotel.rating_? (?>= (someSalient (?= 1)))))))", "idx": "7317", "datum_id": {"dialogue_id": "28e299d7-ecd8-4054-bff0-ebc494463ba0", "turn_index": 0}}
{"user_turn_0": "Is free Wi - Fi offered at the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Make the reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "7320", "datum_id": {"dialogue_id": "28e299d7-ecd8-4054-bff0-ebc494463ba0", "turn_index": 3}}
{"user_turn_0": "I want to queen sized beds", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I be able to cancel for free ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "7323", "datum_id": {"dialogue_id": "28e299d7-ecd8-4054-bff0-ebc494463ba0", "turn_index": 6}}
{"user_turn_0": "Will I be able to cancel for free ?", "agent_turn_0": "Root system inform hotel find focus equals freeCancellation equals True", "user_turn_1": "Change when I leave to Saturday instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Saturday))))))", "idx": "7324", "datum_id": {"dialogue_id": "28e299d7-ecd8-4054-bff0-ebc494463ba0", "turn_index": 7}}
{"user_turn_0": "London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM price equals 166", "user_turn_1": "I prefer the one which departs at 2:50 PM and I would like to have economy class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast City \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "7329", "datum_id": {"dialogue_id": "5b66acf4-4b89-41f9-b51d-00fa1cd58ae5", "turn_index": 2}}
{"user_turn_0": "Does the restaurant have parking", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "7336", "datum_id": {"dialogue_id": "89cefb2b-b8fc-4208-ac41-91c848e1c55e", "turn_index": 4}}
{"user_turn_0": "Set the time to be at 6 o'clock", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Ok , can you change the appointment date to Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday)))))))))", "idx": "7338", "datum_id": {"dialogue_id": "89cefb2b-b8fc-4208-ac41-91c848e1c55e", "turn_index": 6}}
{"user_turn_0": "How 's today 's weather ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Sunny", "user_turn_1": "How 's today 's weather ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "7350", "datum_id": {"dialogue_id": "60bb9b82-07d2-41ad-9d76-1cf7c4bcef56", "turn_index": 4}}
{"user_turn_0": "Economy or business ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "I prefer the 3 PM departure and a seat in economy class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast City \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "7354", "datum_id": {"dialogue_id": "60bb9b82-07d2-41ad-9d76-1cf7c4bcef56", "turn_index": 8}}
{"user_turn_0": "Nope , I 'm headed to Zurich on Saturday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 5 object equals nextDepartureDateTime equals time equals hour equals 4 minute equals 20 meridiem equals PM price equals 145", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "7356", "datum_id": {"dialogue_id": "60bb9b82-07d2-41ad-9d76-1cf7c4bcef56", "turn_index": 10}}
{"user_turn_0": "Switch the departure date for my second trip to Thursday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 4 object equals nextDepartureDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM price equals 142", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "7358", "datum_id": {"dialogue_id": "60bb9b82-07d2-41ad-9d76-1cf7c4bcef56", "turn_index": 12}}
{"user_turn_0": "How many stars ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "7369", "datum_id": {"dialogue_id": "7b858f4c-5e2a-4e8d-966a-4b7bf5a49b97", "turn_index": 3}}
{"user_turn_0": "Does that hotel have private bathroom ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "7378", "datum_id": {"dialogue_id": "2a7a074d-907b-4160-b34b-ad869604a518", "turn_index": 3}}
{"user_turn_0": "How about the Freehand hotel instead ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "7384", "datum_id": {"dialogue_id": "2a7a074d-907b-4160-b34b-ad869604a518", "turn_index": 9}}
{"user_turn_0": "Does the hotel have a private bath room ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "7389", "datum_id": {"dialogue_id": "7d07b956-b82f-4d91-96e9-97016170ec64", "turn_index": 3}}
{"user_turn_0": "Three rooms it does n't matter", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does it support free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "7391", "datum_id": {"dialogue_id": "7d07b956-b82f-4d91-96e9-97016170ec64", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , please book an afternoon taxi from Camden Passage to my venue", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" Camden Passage \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Afternoon)))))))))))", "idx": "7440", "datum_id": {"dialogue_id": "3a2fe142-850d-4670-873d-d525d107b7ce", "turn_index": 0}}
{"user_turn_0": "Does the hotel have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "7453", "datum_id": {"dialogue_id": "29b1e3d9-eda2-41b3-9646-79d3df75c7c0", "turn_index": 3}}
{"user_turn_0": "I would like to have two single room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "7461", "datum_id": {"dialogue_id": "f9a81435-21bd-436a-8227-6c8a02395314", "turn_index": 4}}
{"user_turn_0": "Does the booking support free cancellation ?", "agent_turn_0": "Root system inform hotel find focus equals freeCancellation equals False", "user_turn_1": "Actually can you change the check in date to Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "7462", "datum_id": {"dialogue_id": "f9a81435-21bd-436a-8227-6c8a02395314", "turn_index": 5}}
{"user_turn_0": "I just need it for two luggages", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals 7615 Eagle Lane", "user_turn_1": "Update the destination to 1 Islington Green", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" 1 Islington Green \"))))", "idx": "7483", "datum_id": {"dialogue_id": "78608a91-8f2f-43a9-ae0b-984262cc98c6", "turn_index": 4}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM price equals 135", "user_turn_1": "I 'll take the 2:30 PM flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "7507", "datum_id": {"dialogue_id": "ea0f320e-2d03-4193-b32e-28b992aed513", "turn_index": 3}}
{"user_turn_0": "Hi there , please call Mr. Morrison .", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "What is the weather like there ?", "tgt": "(plan (^(WeatherReport) Find))", "idx": "7510", "datum_id": {"dialogue_id": "e2d29c53-ca7c-498e-beca-83eadec1851a", "turn_index": 1}}
{"user_turn_0": "I 'm coming back on Thursday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 meridiem equals PM", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "7517", "datum_id": {"dialogue_id": "8818cccf-36ee-4443-af39-b2871e07aba3", "turn_index": 3}}
{"user_turn_0": "Give me directions for the event tomorrow", "agent_turn_0": "Root system inform navigation find object equals destination equals location equals Tumacacori Rectory Road", "user_turn_1": "Next , please get me a taxi to that location", "tgt": "(plan (^(Taxi) Book :object (Taxi.destination_? (^((Constraint Place)) refer))))", "idx": "7528", "datum_id": {"dialogue_id": "57e32480-e419-41f7-bb1a-347095a223b6", "turn_index": 4}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system inform reminder delete Completed", "user_turn_1": "Create a reminder for the February 17th event", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (& (Date.day_? (?= (Day.apply 17L))) (Date.month_? (?= (February))))))))))))", "idx": "7546", "datum_id": {"dialogue_id": "88fbe511-18db-43bf-a095-de24e28253b6", "turn_index": 2}}
{"user_turn_0": "Call them", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Who 's coming to my Dry - Cleaning Pick - Up according to the calendar", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.attendees_? (^(Contact) always)) :object (CalendarEvent.eventName_? (?= \" Dry-Cleaning Pick-Up \"))))", "idx": "7557", "datum_id": {"dialogue_id": "d93a3777-b74d-4fa1-9345-3e6ef4b64e4d", "turn_index": 3}}
{"user_turn_0": "Who 's coming to my Dry - Cleaning Pick - Up according to the calendar", "agent_turn_0": "Root system inform calendarEvent find focus equals attendees equals person equals name equals Stewart namePrefix equals Mr", "user_turn_1": "Add them to Dry - Cleaning", "tgt": "(plan (^(CalendarEvent) Create :focus (CalendarEvent.attendees_? (Contact.person_? (Person.name_? (?= \" Harry \")))) :object (CalendarEvent.eventName_? (?= \" Dry-Cleaning \"))))", "idx": "7558", "datum_id": {"dialogue_id": "d93a3777-b74d-4fa1-9345-3e6ef4b64e4d", "turn_index": 4}}
{"user_turn_0": "Yes book it please", "agent_turn_0": "Root system inform calendarEvent create Completed restaurant book Completed", "user_turn_1": "Create event starting at 2 o'clock and lasting for one hour in my calendar", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 2L))))) (DateTimeRange.duration_? (AppleDuration.hour_? (?= 1)))))))", "idx": "7573", "datum_id": {"dialogue_id": "e646edda-e8a1-412a-a17b-6f0cf8fcb14d", "turn_index": 4}}
{"user_turn_0": "I do n't like any of these . Look for one with a Chinese hotpot", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Bard\u2019s Bench", "user_turn_1": "Does it have outdoor seating ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "7582", "datum_id": {"dialogue_id": "bb17eb09-060e-4d97-815e-a8c625c01866", "turn_index": 3}}
{"user_turn_0": "I 'd rather do one with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Gogol", "user_turn_1": "Do they take credit cards ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "7585", "datum_id": {"dialogue_id": "bb17eb09-060e-4d97-815e-a8c625c01866", "turn_index": 6}}
{"user_turn_0": "Do they take credit cards ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Okay , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Floss and Joes \"))))))", "idx": "7586", "datum_id": {"dialogue_id": "bb17eb09-060e-4d97-815e-a8c625c01866", "turn_index": 7}}
{"user_turn_0": "Let me go with another hotel that has one star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Ritz-Carlton price equals 201", "user_turn_1": "Does it have parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasParking_? (^(Boolean) always)))))", "idx": "7607", "datum_id": {"dialogue_id": "aac2fa99-2c2c-481b-bd03-b5553bfaff04", "turn_index": 3}}
{"user_turn_0": "Does it have parking ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "That 's all right , please book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "7608", "datum_id": {"dialogue_id": "aac2fa99-2c2c-481b-bd03-b5553bfaff04", "turn_index": 4}}
{"user_turn_0": "Let me have three king - sized beds", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait , does it have free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "7612", "datum_id": {"dialogue_id": "aac2fa99-2c2c-481b-bd03-b5553bfaff04", "turn_index": 8}}
{"user_turn_0": "What 's its rating like ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Will you book me a room for Tuesday to Friday ?", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.hotelName_? (^((Constraint String)) refer)) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday))))))))))", "idx": "7619", "datum_id": {"dialogue_id": "9e0c2c12-8469-4e52-abb9-30a34f57dc76", "turn_index": 5}}
{"user_turn_0": "Please , make me a reminder for that event , too", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "What would you like to say ?", "tgt": "(plan (^(Message) Create :object (Message.recipients_? (Contact.phoneNumber_? (?= \" 07010775083 \")))))", "idx": "7632", "datum_id": {"dialogue_id": "5f49d707-96f0-4d36-affc-44dbb0d67c56", "turn_index": 4}}
{"user_turn_0": "I 'm leaving from Aberdeen", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 55 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (^((Constraint Train)) refer)))))", "idx": "7641", "datum_id": {"dialogue_id": "1450c6c8-9e7f-42f6-b574-c4e6854ee6a4", "turn_index": 2}}
{"user_turn_0": "What 's the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "I prefer another cheap hotel", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "7651", "datum_id": {"dialogue_id": "4c088b56-273e-4522-9566-d4e1ef4bc887", "turn_index": 2}}
{"user_turn_0": "I prefer another cheap hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Odysse Suites price equals 135", "user_turn_1": "What 's the rating ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "7652", "datum_id": {"dialogue_id": "4c088b56-273e-4522-9566-d4e1ef4bc887", "turn_index": 3}}
{"user_turn_0": "What 's the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Triton \"))))))", "idx": "7653", "datum_id": {"dialogue_id": "4c088b56-273e-4522-9566-d4e1ef4bc887", "turn_index": 4}}
{"user_turn_0": "I would like to have three double rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually can you change the check in date to Tuesday please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.startDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Tuesday)))))", "idx": "7657", "datum_id": {"dialogue_id": "4c088b56-273e-4522-9566-d4e1ef4bc887", "turn_index": 8}}
{"user_turn_0": "Great . How can I get there", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Nice . Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Peninsula \"))))))", "idx": "7665", "datum_id": {"dialogue_id": "ee3eb62f-506c-4f8b-b181-405051448aa4", "turn_index": 6}}
{"user_turn_0": "Actually make the check in date to the 8th", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I need prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "7669", "datum_id": {"dialogue_id": "ee3eb62f-506c-4f8b-b181-405051448aa4", "turn_index": 10}}
{"user_turn_0": "Also yes , schedule Jamboree Party that begins at 3:30 PM and lasts for two hours", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Next task , yes , also send the event to Mr Asloop", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Alsop \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "7674", "datum_id": {"dialogue_id": "12f8dbbb-5bac-4922-9209-2825158a91e9", "turn_index": 3}}
{"user_turn_0": "That 's right", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM price equals 156", "user_turn_1": "I 'd rather take the one at 1:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "7679", "datum_id": {"dialogue_id": "ba6d7062-3149-40c2-9eba-a4b091a8df06", "turn_index": 3}}
{"user_turn_0": "Do you know if breakfast is included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Can you book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "7688", "datum_id": {"dialogue_id": "eaf60133-9fc6-40c4-a96c-7cb854c38ece", "turn_index": 4}}
{"user_turn_0": "Which Airline would that be ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals EasyJet", "user_turn_1": "I rather have the one at 3:20 PM instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "7703", "datum_id": {"dialogue_id": "10feac13-d8fc-4fce-91a5-78b313207f2a", "turn_index": 3}}
{"user_turn_0": "How many stars is it ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Ok , get it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "7711", "datum_id": {"dialogue_id": "5dd717c9-77a7-4c84-a51a-396b3393bc1a", "turn_index": 4}}
{"user_turn_0": "is this economy or business", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "I d like to book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "7724", "datum_id": {"dialogue_id": "777dc5fb-8493-4964-baf7-8e6acbd12078", "turn_index": 3}}
{"user_turn_0": "Saturday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 4 object equals nextDepartureDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM price equals 125", "user_turn_1": "it looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "7727", "datum_id": {"dialogue_id": "777dc5fb-8493-4964-baf7-8e6acbd12078", "turn_index": 6}}
{"user_turn_0": "what is the cabin class", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "I actually prefer the flight which departs 3 PM and I make it economy class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Dublin \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.source_? (Place.location_? (?= \" Manchester \")))) (Flight.nextDestination_? (^((Constraint Place)) refer))) (Flight.nextDepartureDateTime_? (& (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday)))) (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "7730", "datum_id": {"dialogue_id": "777dc5fb-8493-4964-baf7-8e6acbd12078", "turn_index": 9}}
{"user_turn_0": "Looks good to me", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM", "user_turn_1": "Sounds good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "7734", "datum_id": {"dialogue_id": "321c6999-a169-4783-820e-e7aa8a6d8f64", "turn_index": 2}}
{"user_turn_0": "Just make sure the restaurant has a five star rating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Box", "user_turn_1": "Book it for the 26th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" The Shining Gate \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 26L))))))))))", "idx": "7750", "datum_id": {"dialogue_id": "02959af1-54ac-4fb1-9bde-b15d0729e26e", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , where 's River Park located ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.location_? (^(String) always)) :object (Hotel.hotelName_? (?= \" River Park \"))))", "idx": "7754", "datum_id": {"dialogue_id": "bb896367-f8f6-47f2-bcf1-2c8ff533db1a", "turn_index": 0}}
{"user_turn_0": "I need three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Change the check in date to Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "7759", "datum_id": {"dialogue_id": "bb896367-f8f6-47f2-bcf1-2c8ff533db1a", "turn_index": 5}}
{"user_turn_0": "Change the check in date to Tuesday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel it for free ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "7760", "datum_id": {"dialogue_id": "bb896367-f8f6-47f2-bcf1-2c8ff533db1a", "turn_index": 6}}
{"user_turn_0": "Is there a fitness center on location ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Find a cheaper hotel", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "7780", "datum_id": {"dialogue_id": "bf7b071c-90ed-4b73-b25c-1520be062e3a", "turn_index": 2}}
{"user_turn_0": "Find a cheaper hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Astro Resort price equals 145", "user_turn_1": "Have they got parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasParking_? (^(Boolean) always)))))", "idx": "7781", "datum_id": {"dialogue_id": "bf7b071c-90ed-4b73-b25c-1520be062e3a", "turn_index": 3}}
{"user_turn_0": "Pick a different 5 star rated hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Peninsula price equals 155", "user_turn_1": "Alright , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Farmhouse Inn \"))))))", "idx": "7783", "datum_id": {"dialogue_id": "bf7b071c-90ed-4b73-b25c-1520be062e3a", "turn_index": 5}}
{"user_turn_0": "Get one of any type", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Switch to the 15th for check in", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 15L))))))", "idx": "7785", "datum_id": {"dialogue_id": "bf7b071c-90ed-4b73-b25c-1520be062e3a", "turn_index": 7}}
{"user_turn_0": "Switch to the 15th for check in", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Must I prepay for it ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "7786", "datum_id": {"dialogue_id": "bf7b071c-90ed-4b73-b25c-1520be062e3a", "turn_index": 8}}
{"user_turn_0": "What airline is that ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "Sure thing . Book that flight for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "7800", "datum_id": {"dialogue_id": "06e94f5a-5e35-4f25-bff1-0aac0862188c", "turn_index": 3}}
{"user_turn_0": "Sunday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 2 meridiem equals PM price equals 173", "user_turn_1": "Looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "7803", "datum_id": {"dialogue_id": "06e94f5a-5e35-4f25-bff1-0aac0862188c", "turn_index": 6}}
{"user_turn_0": "And what 's the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "7809", "datum_id": {"dialogue_id": "88945912-1caa-4b16-a7c4-8585df18fdd5", "turn_index": 4}}
{"user_turn_0": "I would like to depart from Manchester", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "How do you feel about the 15th ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 15L))))))", "idx": "7838", "datum_id": {"dialogue_id": "be019b22-c34c-43fa-8e60-f4a67def806e", "turn_index": 2}}
{"user_turn_0": "No , on Thursday I will go to Zurich", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 3 object equals nextDepartureDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM price equals 166", "user_turn_1": "Looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (^((Constraint Hour)) refer)) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "7841", "datum_id": {"dialogue_id": "be019b22-c34c-43fa-8e60-f4a67def806e", "turn_index": 5}}
{"user_turn_0": "Do you know if breakfast is included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Yeah book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "7856", "datum_id": {"dialogue_id": "cd2086a4-8497-4d40-bc71-660f649b0781", "turn_index": 3}}
{"user_turn_0": "Do they have a car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "7883", "datum_id": {"dialogue_id": "f0356369-d77c-44b1-ab27-22a9efd2cfcc", "turn_index": 3}}
{"user_turn_0": "I want one room , the type does n't matter", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I have to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "7886", "datum_id": {"dialogue_id": "f0356369-d77c-44b1-ab27-22a9efd2cfcc", "turn_index": 6}}
{"user_turn_0": "One", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does it come with free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "7899", "datum_id": {"dialogue_id": "711a0e31-9c7f-4f25-8c75-76e5f93a05f9", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , please book a round trip to Belfast", "tgt": "(plan (^(Flight) Book :object (& (Flight.destination_? (Place.location_? (?= \" Belfast \"))) (Flight.tripType_? (?= (TripType.roundTrip))))))", "idx": "7906", "datum_id": {"dialogue_id": "5b5c4524-a7be-40d9-982a-cc29227fc8c5", "turn_index": 0}}
{"user_turn_0": "Sunday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM price equals 138", "user_turn_1": "That 's perfect thank you", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "7911", "datum_id": {"dialogue_id": "5b5c4524-a7be-40d9-982a-cc29227fc8c5", "turn_index": 5}}
{"user_turn_0": "Paris on Tuesday !", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM price equals 155", "user_turn_1": "That 's fine . Book this flight for two passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.source_? (Place.location_? (?= \" Manchester \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 2))))))", "idx": "7915", "datum_id": {"dialogue_id": "990ab552-0e1c-498c-84fc-6a9ed7bc2aa8", "turn_index": 2}}
{"user_turn_0": "Yes on the 25th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM price equals 142", "user_turn_1": "This one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "7917", "datum_id": {"dialogue_id": "990ab552-0e1c-498c-84fc-6a9ed7bc2aa8", "turn_index": 4}}
{"user_turn_0": "What class is it ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "That 's fine book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "7923", "datum_id": {"dialogue_id": "c34f0cd5-7676-4ac4-bf06-6f6b394d81da", "turn_index": 4}}
{"user_turn_0": "What 's the weather like ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Sunny", "user_turn_1": "What 's the weather like today in Leicester ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Option (Constraint WeatherReport))) Path.apply \" object \") (lambda (^(Option (Constraint WeatherReport)) x0) (Some (& (WeatherReport.location_? (?= \" Leicester \")) (WeatherReport.atDateTime_? (DateTime.date_? (?= (Today)))))))))", "idx": "7946", "datum_id": {"dialogue_id": "c01f7cdd-66c4-49b7-a484-00026aae558b", "turn_index": 4}}
{"user_turn_0": "Are there private bathrooms at the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "OK , go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "7950", "datum_id": {"dialogue_id": "ef10ee44-aba9-476b-be9a-be3a2d38a8d5", "turn_index": 3}}
{"user_turn_0": "Is the Moody Moon hotel available ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking have free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "7954", "datum_id": {"dialogue_id": "ef10ee44-aba9-476b-be9a-be3a2d38a8d5", "turn_index": 7}}
{"user_turn_0": "What cabin do you want ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "I prefer the 2:50 PM flight and I want a seat in business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.source_? (Place.location_? (?= \" London \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.tripType_? (?= (TripType.oneWay)))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "7958", "datum_id": {"dialogue_id": "2e6321ef-67c8-4b93-ba3d-a51987447b18", "turn_index": 2}}
{"user_turn_0": "what 's the rating", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 3", "user_turn_1": "I would like to book it at 6 o'clock", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.restaurantName_? (^((Constraint String)) refer)) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 6L)))))))))", "idx": "7968", "datum_id": {"dialogue_id": "8efcdbb7-1eb5-4d42-b11d-c96657a138a0", "turn_index": 2}}
{"user_turn_0": "I 'm going to Dublin , and that will be economy class , thank you", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "Let 's try Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "7999", "datum_id": {"dialogue_id": "ebe4d647-f7ac-49ad-ad55-3c43643e9509", "turn_index": 3}}
{"user_turn_0": "Which airline is that one ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "Okay , put me on that flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "8001", "datum_id": {"dialogue_id": "ebe4d647-f7ac-49ad-ad55-3c43643e9509", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i 've completed your order . Let me know if you need anything else .", "tgt": "(plan (^(CalendarEvent) Delete :object (CalendarEvent.recurrenceUnit_? (RecurrenceUnit.Week_? (^(Number) always)))))", "idx": "8039", "datum_id": {"dialogue_id": "579e79c5-4f9b-4eb6-a507-916121c7b02c", "turn_index": 0}}
{"user_turn_0": "Hi there , i 've completed your order . Let me know if you need anything else .", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Here 's your order . Can I proceed with the booking ?", "tgt": "(plan (^(Train) Find :focus (Train.departureDateTime_? (^(DateTime) always)) :object (Train.destination_? (Place.location_? (?= \" Vauxhall \")))))", "idx": "8040", "datum_id": {"dialogue_id": "579e79c5-4f9b-4eb6-a507-916121c7b02c", "turn_index": 1}}
{"user_turn_0": "Here 's your order . Can I proceed with the booking ?", "agent_turn_0": "Root system inform train find focus equals departureDateTime equals time equals hour equals 3 meridiem equals PM", "user_turn_1": "Here 's what I 've got for you . Would you like the one at 3:20 PM ?", "tgt": "(plan (^(Train) Book :object (& (Train.source_? (Place.location_? (?= \" Peterborough \"))) (Train.destination_? (Place.location_? (?= \" York central station \"))))))", "idx": "8041", "datum_id": {"dialogue_id": "579e79c5-4f9b-4eb6-a507-916121c7b02c", "turn_index": 2}}
{"user_turn_0": "Here 's what I 've got for you . Would you like the one at 3:20 PM ?", "agent_turn_0": "Root system prompt train book object equals departureDateTime", "user_turn_1": "OK just let me know your return date", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& (& x0 (Train.departureDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 15L)))))) (Train.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "8042", "datum_id": {"dialogue_id": "579e79c5-4f9b-4eb6-a507-916121c7b02c", "turn_index": 3}}
{"user_turn_0": "OK just let me know your return date", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM", "user_turn_1": "This is your one - way ticket order . Can I proceed ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "8043", "datum_id": {"dialogue_id": "579e79c5-4f9b-4eb6-a507-916121c7b02c", "turn_index": 4}}
{"user_turn_0": "I 've got the following trains for you . How about the one at 1:45 PM ?", "agent_turn_0": "Root system prompt train book object equals returnDateTime", "user_turn_1": "When are you departing ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (Train.returnDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 20L)))))))))", "idx": "8046", "datum_id": {"dialogue_id": "579e79c5-4f9b-4eb6-a507-916121c7b02c", "turn_index": 7}}
{"user_turn_0": "When are you departing ?", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM", "user_turn_1": "When does my train to Vauxhall leave ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "8047", "datum_id": {"dialogue_id": "579e79c5-4f9b-4eb6-a507-916121c7b02c", "turn_index": 8}}
{"user_turn_0": "When does my train to Vauxhall leave ?", "agent_turn_0": "Root system offer train book", "user_turn_1": "Delete the event for every week on the calendar", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "8048", "datum_id": {"dialogue_id": "579e79c5-4f9b-4eb6-a507-916121c7b02c", "turn_index": 9}}
{"user_turn_0": "Three rooms of any type", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait , change the check out to Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Saturday)))))", "idx": "8052", "datum_id": {"dialogue_id": "a98602d1-8c78-494f-b3c9-6c029429009f", "turn_index": 3}}
{"user_turn_0": "Wait , change the check out to Saturday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to pay if I decide to cancel ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "8053", "datum_id": {"dialogue_id": "a98602d1-8c78-494f-b3c9-6c029429009f", "turn_index": 4}}
{"user_turn_0": "Hi there , book me at the Cityroom restaurant in Morden Park at 6 o'clock .", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "That s fine , update the appointment date to today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (?= (Today))))))))", "idx": "8066", "datum_id": {"dialogue_id": "47d1e9fd-f759-4b60-b5f8-a3e1591d318b", "turn_index": 1}}
{"user_turn_0": "Hi my assistant , i need a reminder for my event today .", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Can you get me a reservation for a restaurant that is n't too expensive and that serves German food", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High))))) (Restaurant.foodType_? (?= (FoodType.German))))))", "idx": "8076", "datum_id": {"dialogue_id": "a16fbcc5-6226-400e-ae6e-de1b265b82a2", "turn_index": 1}}
{"user_turn_0": "Which of these restaurants have ratings of at least one star ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Beef Easy", "user_turn_1": "What 's the address for this restaurant ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "8086", "datum_id": {"dialogue_id": "52644e77-40b9-422d-8fd5-634b7a6824f8", "turn_index": 4}}
{"user_turn_0": "I would prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Empirica", "user_turn_1": "What 's the address for this restaurant ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "8088", "datum_id": {"dialogue_id": "52644e77-40b9-422d-8fd5-634b7a6824f8", "turn_index": 6}}
{"user_turn_0": "I want another restaurant that has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Acacia Saint", "user_turn_1": "This looks fine . Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Encino \"))))))", "idx": "8090", "datum_id": {"dialogue_id": "52644e77-40b9-422d-8fd5-634b7a6824f8", "turn_index": 8}}
{"user_turn_0": "I would like three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "8099", "datum_id": {"dialogue_id": "ed2cd52f-9421-4635-a779-174db8c5e6b8", "turn_index": 5}}
{"user_turn_0": "What kind of food does it serve ?", "agent_turn_0": "Root system inform restaurant find focus equals foodType equals Indian food", "user_turn_1": "I 'd like it if you booked it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "8103", "datum_id": {"dialogue_id": "9aa7c9ec-00c5-4d66-bde6-28064eaba632", "turn_index": 2}}
{"user_turn_0": "Is there a car park at the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "8109", "datum_id": {"dialogue_id": "c9ab7566-c439-40c9-891c-cf5ba719b43a", "turn_index": 3}}
{"user_turn_0": "My destination is Rose Street", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals Little Bat", "user_turn_1": "Make a change to the destination to 67 North Street", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" 67 North Street \"))))", "idx": "8115", "datum_id": {"dialogue_id": "677ecd08-7009-41ae-8ccd-7fad4c2629c0", "turn_index": 2}}
{"user_turn_0": "yes", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "I ca n't find the event on your calendar", "tgt": "(plan (^(CalendarEvent) Find :object (CalendarEvent.eventName_? (?= \" Feedback session \"))))", "idx": "8131", "datum_id": {"dialogue_id": "5b16fb96-6738-435e-954a-d981113fee70", "turn_index": 3}}
{"user_turn_0": "Hello , can I see my train that 's scheduled prior to 6:30 ?", "agent_turn_0": "Root system inform train find", "user_turn_1": "How long by car does it take to get to 6a Streatham Hill from 6 John St. ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (& (& (Navigation.source_? (Place.location_? (?= \" 6 John Street \"))) (Navigation.destination_? (Place.location_? (?= \" 6a Streatham Hill \")))) (Navigation.transportationMode_? (?= (TransportationMode.Driving))))))", "idx": "8139", "datum_id": {"dialogue_id": "bb336742-dfce-4f4b-8eff-b461ff48cec9", "turn_index": 1}}
{"user_turn_0": "On Friday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM", "user_turn_1": "Yes , I would", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "8148", "datum_id": {"dialogue_id": "4734e61a-8830-4dc2-bee7-8644ea6c9fef", "turn_index": 5}}
{"user_turn_0": "I want another hotel with at least one star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Diva price equals 138", "user_turn_1": "do they have breakfast", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "8153", "datum_id": {"dialogue_id": "1e174102-d7f6-4569-812c-29ca27d338d8", "turn_index": 3}}
{"user_turn_0": "do they have breakfast", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Four Seasons \"))))))", "idx": "8154", "datum_id": {"dialogue_id": "1e174102-d7f6-4569-812c-29ca27d338d8", "turn_index": 4}}
{"user_turn_0": "Can I have 3 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "do they have booking support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "8159", "datum_id": {"dialogue_id": "1e174102-d7f6-4569-812c-29ca27d338d8", "turn_index": 9}}
{"user_turn_0": "I will be departing from London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I choose the one which departures 1:40 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "8168", "datum_id": {"dialogue_id": "2e620692-816f-47f2-9db4-9024231e8334", "turn_index": 2}}
{"user_turn_0": "Does the hotel have fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "8190", "datum_id": {"dialogue_id": "3bc397ba-13cc-49e3-870a-ceb5b9c7ad66", "turn_index": 3}}
{"user_turn_0": "I would like to have one double room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is breakfast included ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "8193", "datum_id": {"dialogue_id": "3bc397ba-13cc-49e3-870a-ceb5b9c7ad66", "turn_index": 6}}
{"user_turn_0": "Is it a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Ok , book the flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "8200", "datum_id": {"dialogue_id": "6912c3ed-41db-4211-9099-b77e2e3dca0f", "turn_index": 5}}
{"user_turn_0": "What class it it ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "8205", "datum_id": {"dialogue_id": "6912c3ed-41db-4211-9099-b77e2e3dca0f", "turn_index": 10}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , i would like to make a reservation with a minimum two - star rating and on - site parking .", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.rating_? (?>= (someSalient (?= 2)))) (Restaurant.hasParking_? (?= true)))))", "idx": "8207", "datum_id": {"dialogue_id": "1effe234-ee94-4ad5-a56f-fbe7446061b8", "turn_index": 0}}
{"user_turn_0": "Does the restaurant have outdoor seats ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "That 's fine . Book it for me at 11 o'clock please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Godka \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 11L))))))))))", "idx": "8230", "datum_id": {"dialogue_id": "1544ea05-1e01-45a1-b2be-6c9de90c9eb5", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , book a cheap restaurant at 2 PM .", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.priceRange_? (?= (PriceRange.Low))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "8233", "datum_id": {"dialogue_id": "d0c7a579-0192-49c4-811a-f444508734f3", "turn_index": 0}}
{"user_turn_0": "Which of these serve Sushi ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "What 's the address ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "8236", "datum_id": {"dialogue_id": "d0c7a579-0192-49c4-811a-f444508734f3", "turn_index": 3}}
{"user_turn_0": "No , I prefer a restaurant with parking Siri", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Stazione restaurant", "user_turn_1": "Tell me the address of this restaurant", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "8239", "datum_id": {"dialogue_id": "d0c7a579-0192-49c4-811a-f444508734f3", "turn_index": 6}}
{"user_turn_0": "Tell me the address of this restaurant", "agent_turn_0": "Root system inform restaurant find focus equals address equals Starline Cabs", "user_turn_1": "That 's cool . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Boiling Fence \"))))))", "idx": "8240", "datum_id": {"dialogue_id": "d0c7a579-0192-49c4-811a-f444508734f3", "turn_index": 7}}
{"user_turn_0": "Which of them have rating of four stars ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floss and Joes", "user_turn_1": "OK , make reservation there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Chipotle Grill \"))))))", "idx": "8252", "datum_id": {"dialogue_id": "76d50d4e-8d45-4f90-8b5e-b9c5b3705a0a", "turn_index": 4}}
{"user_turn_0": "Is it a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "That 's ok . I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "8265", "datum_id": {"dialogue_id": "bbac6d5e-7acc-4543-92f0-2895d53f8aa2", "turn_index": 3}}
{"user_turn_0": "No , next I will go to Roma on Thursday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 5 object equals nextDepartureDateTime equals time equals hour equals 4 meridiem equals PM price equals 173", "user_turn_1": "This one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "8267", "datum_id": {"dialogue_id": "bbac6d5e-7acc-4543-92f0-2895d53f8aa2", "turn_index": 5}}
{"user_turn_0": "It does n't matter , as long as it has five stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dingo", "user_turn_1": "Does the restaurant take credit card ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "8272", "datum_id": {"dialogue_id": "2c9dadd8-0cdd-468c-b7d2-a568fb07eedd", "turn_index": 3}}
{"user_turn_0": "Does the restaurant take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "That 's fine . Book it for me tomorrow at 5 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 5L)))))))))))", "idx": "8273", "datum_id": {"dialogue_id": "2c9dadd8-0cdd-468c-b7d2-a568fb07eedd", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , send a message for me", "tgt": "(plan (^(Message) Create))", "idx": "8276", "datum_id": {"dialogue_id": "087dc999-8400-4ac8-9d00-03af7b50a7a9", "turn_index": 0}}
{"user_turn_0": "How 's the weather there ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Sunny", "user_turn_1": "How much time will it take to get to the 11:30 AM calendar event ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM))))))))))))", "idx": "8294", "datum_id": {"dialogue_id": "c1851565-74b1-4908-b227-e583fd985c4c", "turn_index": 2}}
{"user_turn_0": "How do I get from 4a Enterprise Way to Upper Tything", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Create a reminder for December 8th at 7:30 to buy gifts", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Reminder)) Path.apply \" object \") (lambda (^(Constraint Reminder) x0) (& (Reminder.reminderContent_? (?= \" buy gifts \")) (Reminder.atDateTime_? (& (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 7L))) (Time.minute_? (?= (Minute.apply 30L))))) (DateTime.date_? (& (Date.month_? (?= (December))) (Date.day_? (?= (Day.apply 8L)))))))))))", "idx": "8300", "datum_id": {"dialogue_id": "200ca639-0b9a-4589-9e6e-5006cc14f025", "turn_index": 3}}
{"user_turn_0": "Create a reminder for December 8th at 7:30 to buy gifts", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Thanks , also send a message that says coming for you to Mr King", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" King \")) (Person.namePrefix_? (?= \" Mr \"))))) (Message.textContent_? (?= \" coming for you \")))))", "idx": "8301", "datum_id": {"dialogue_id": "200ca639-0b9a-4589-9e6e-5006cc14f025", "turn_index": 4}}
{"user_turn_0": "Get me 3 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does it require prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "8305", "datum_id": {"dialogue_id": "bd0c50ba-b7f7-4f80-9c89-59a82841d61a", "turn_index": 3}}
{"user_turn_0": "Do they have a car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "8309", "datum_id": {"dialogue_id": "63cdde39-8283-4d45-9849-e4f53fcae60b", "turn_index": 2}}
{"user_turn_0": "Is this a nonstop flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Okay , book it for one person", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.airLine_? (?= \" Ryanair \"))) (Flight.source_? (Place.location_? (?= \" Manchester \")))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (^((Constraint (List DateTime))) refer)))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 1))))))", "idx": "8329", "datum_id": {"dialogue_id": "54456e80-c04e-454e-8db1-df741ce00081", "turn_index": 4}}
{"user_turn_0": "What 's the address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals Medivet Islington", "user_turn_1": "Cool . Book me for the 12th at 2:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Flavoroso \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 12L))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "8336", "datum_id": {"dialogue_id": "7dc52892-abf8-4e47-b566-9bd724bef45e", "turn_index": 5}}
{"user_turn_0": "Cool . Book me for the 12th at 2:30 PM", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Ok . Can you change the appointment date to today ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Today)))))", "idx": "8337", "datum_id": {"dialogue_id": "7dc52892-abf8-4e47-b566-9bd724bef45e", "turn_index": 6}}
{"user_turn_0": "Which airline is it", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "I actually prefer the one which departures 3 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "8347", "datum_id": {"dialogue_id": "2939a5df-9146-4d93-95e9-eed3ada578c4", "turn_index": 2}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM price equals 170", "user_turn_1": "This one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "8349", "datum_id": {"dialogue_id": "2939a5df-9146-4d93-95e9-eed3ada578c4", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i would like", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.priceRange_? (?= (PriceRange.Moderate))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (November))) (Date.day_? (?= (Day.apply 13L)))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 5L))) (meridiem_? (?= (Meridiem.PM))))))))) (Restaurant.hasParking_? (?= true)))))", "idx": "8351", "datum_id": {"dialogue_id": "bbddd73d-2a93-4a13-875c-5ff8be3edecb", "turn_index": 0}}
{"user_turn_0": "Hi there , i would like", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName location", "user_turn_1": "QUeen 's Park should be the location with more than a zero star rating", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.location_? (?= \" Queen's Park \"))) (Restaurant.rating_? (?!= (someSalient (?= 0))))))))", "idx": "8352", "datum_id": {"dialogue_id": "bbddd73d-2a93-4a13-875c-5ff8be3edecb", "turn_index": 1}}
{"user_turn_0": "What kind of food is served there ?", "agent_turn_0": "Root system inform restaurant find focus equals foodType equals American Food", "user_turn_1": "could you book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "8354", "datum_id": {"dialogue_id": "bbddd73d-2a93-4a13-875c-5ff8be3edecb", "turn_index": 3}}
{"user_turn_0": "I want Seafood", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flavoroso", "user_turn_1": "Tell me what the address of the restaurant", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "8360", "datum_id": {"dialogue_id": "67b4da1b-4214-466a-b359-e16eac25d94c", "turn_index": 3}}
{"user_turn_0": "Tell me what the address of the restaurant", "agent_turn_0": "Root system inform restaurant find focus equals address equals Tenbury Wells", "user_turn_1": "Ok fine , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flavoroso \"))))))", "idx": "8361", "datum_id": {"dialogue_id": "67b4da1b-4214-466a-b359-e16eac25d94c", "turn_index": 4}}
{"user_turn_0": "Find one for 5 people please", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Alright , can you just change the appointment date to today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Today)))))", "idx": "8363", "datum_id": {"dialogue_id": "67b4da1b-4214-466a-b359-e16eac25d94c", "turn_index": 6}}
{"user_turn_0": "Hello , can you book me a taxi ?", "agent_turn_0": "Root system prompt taxi book object equals destination", "user_turn_1": "Absolutely ! Where are you headed ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint Taxi))) Path.apply \" object \") (lambda (^(Option (Constraint Taxi)) x0) (Some (& (Taxi.source_? (Place.location_? (?= \" 83 Upper Street \"))) (Taxi.destination_? (Place.location_? (?= \" Tie the Knot \"))))))))", "idx": "8366", "datum_id": {"dialogue_id": "7cd5e71e-1db1-47a9-ade7-0a812c33761f", "turn_index": 1}}
{"user_turn_0": "What kind of food do they serve ?", "agent_turn_0": "Root system inform restaurant find focus equals foodType equals Grill", "user_turn_1": "Can you book it please ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "8372", "datum_id": {"dialogue_id": "bc71ca20-d882-4281-9e77-2ea37d5e1a89", "turn_index": 2}}
{"user_turn_0": "I prefer another hotel with a three star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Four Seasons price equals 150", "user_turn_1": "Does the hotel have a private bath room ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.privateBath_? (^(Boolean) always)))))", "idx": "8380", "datum_id": {"dialogue_id": "ef6a5517-5914-469c-a3d0-02ebfabe079e", "turn_index": 3}}
{"user_turn_0": "Does the hotel have a private bath room ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Crescent Resort \"))))))", "idx": "8381", "datum_id": {"dialogue_id": "ef6a5517-5914-469c-a3d0-02ebfabe079e", "turn_index": 4}}
{"user_turn_0": "Not yet . Could you change the check in date to tomorrow", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does this booking have free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "8386", "datum_id": {"dialogue_id": "ef6a5517-5914-469c-a3d0-02ebfabe079e", "turn_index": 9}}
{"user_turn_0": "I actually prefer the 3:45pm flight", "agent_turn_0": "Root system prompt flight book object equals tripType", "user_turn_1": "No , next I 'll go to London", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.nextDestination_? (Place.location_? (?= \" Lisbon \")))))))", "idx": "8398", "datum_id": {"dialogue_id": "bdafeab6-2ab9-4bab-a329-56ee4989b3ec", "turn_index": 4}}
{"user_turn_0": "Tell me how can I get to 29 Alexander Road by car", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Please send the the 18th event", "tgt": "(plan (^(Message) Create :object (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 18L)))))))))))", "idx": "8415", "datum_id": {"dialogue_id": "454a359d-6c8a-463a-9e6e-b1efe8b79d32", "turn_index": 3}}
{"user_turn_0": "I 'd like another restaurant with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kitty City", "user_turn_1": "What kind of food does it serve ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.foodType_? (^(FoodType) always)))))", "idx": "8421", "datum_id": {"dialogue_id": "797848cd-d690-452c-a990-ab92ff3f43d9", "turn_index": 3}}
{"user_turn_0": "I 'd like another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dim Summit", "user_turn_1": "That 's fine . Book it for 6:30 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Canton Silk \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (?= (Minute.apply 30L)))))))))))", "idx": "8426", "datum_id": {"dialogue_id": "797848cd-d690-452c-a990-ab92ff3f43d9", "turn_index": 8}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , book me a restaurant in Notting Hill today that 's not too expensive but has parking .", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Notting Hill \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Today)))))) (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Restaurant.hasParking_? (?= true)))))", "idx": "8429", "datum_id": {"dialogue_id": "0de2c792-a98b-477a-a80b-eb6f9a93cf46", "turn_index": 0}}
{"user_turn_0": "Does it have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Dim Summit \"))))))", "idx": "8433", "datum_id": {"dialogue_id": "0de2c792-a98b-477a-a80b-eb6f9a93cf46", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , when does the train at 5 o'clock to Bristol get in ?", "tgt": "(plan (^(Train) Find :focus (Train.arrivalDateTime_? (^(DateTime) always)) :object (& (Train.destination_? (Place.location_? (?= \" Bristol \"))) (Train.departureDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 5L))))))))", "idx": "8437", "datum_id": {"dialogue_id": "90a68b70-fdf8-4038-9d19-2ffc348bcf99", "turn_index": 0}}
{"user_turn_0": "Name of the airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "That works . Get the plane ticket", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "8441", "datum_id": {"dialogue_id": "90a68b70-fdf8-4038-9d19-2ffc348bcf99", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , go ahead and send my next event to Mr Vance", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))) (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Vance \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "8445", "datum_id": {"dialogue_id": "351cbd06-431e-4bf2-99a4-e71492427f97", "turn_index": 0}}
{"user_turn_0": "Hello assistant , i 'd like directions from 1 Islington Green to Tenbury Wells", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Next , i 'd like to book one to Amsterdam please", "tgt": "(plan (^(Flight) Book :object (& (Flight.destination_? (Place.location_? (?= \" Amsterdam \"))) (Flight.passengers_? (?= 1)))))", "idx": "8451", "datum_id": {"dialogue_id": "29750549-274b-4024-942c-098393368e79", "turn_index": 1}}
{"user_turn_0": "Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM price equals 160", "user_turn_1": "I 'd prefer a business class departing at 2:20 PM please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Amsterdam \"))) (Flight.passengers_? (?= 1))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "8454", "datum_id": {"dialogue_id": "29750549-274b-4024-942c-098393368e79", "turn_index": 4}}
{"user_turn_0": "London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 3 meridiem equals PM price equals 134", "user_turn_1": "That 's perfect , please book that flight for four", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Dublin \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 4))))))", "idx": "8464", "datum_id": {"dialogue_id": "b0917741-49b6-4b6c-8193-2a7e67ba1266", "turn_index": 3}}
{"user_turn_0": "Can you tell me if the hotel have private bath room ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Can you book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "8492", "datum_id": {"dialogue_id": "0c8fae05-c94b-427c-83e8-6e7bf99e7adc", "turn_index": 4}}
{"user_turn_0": "Change check - in to tomorrow", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel booking for free ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "8501", "datum_id": {"dialogue_id": "8987c986-87ea-4ab0-84a2-415e54c77b41", "turn_index": 5}}
{"user_turn_0": "I 'm headed to Amsterdam on Tuesday", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 12 minute equals 50 meridiem equals PM", "user_turn_1": "Book four passengers for this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.source_? (Place.location_? (?= \" Manchester \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 4))))))", "idx": "8505", "datum_id": {"dialogue_id": "77a056fc-469b-4fa3-99f0-00bcb3171a61", "turn_index": 2}}
{"user_turn_0": "Switch my second trip 's departure date to Sunday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 4 object equals nextDepartureDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM price equals 160", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "8509", "datum_id": {"dialogue_id": "77a056fc-469b-4fa3-99f0-00bcb3171a61", "turn_index": 6}}
{"user_turn_0": "Tuesday , and could you please book economy class for me too ?", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 1 meridiem equals PM price equals 150", "user_turn_1": "I actually prefer the 4:50pm flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "8515", "datum_id": {"dialogue_id": "31dfa588-5a24-4c3c-9a24-707f2cb96f7c", "turn_index": 4}}
{"user_turn_0": "On Sunday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 4 object equals nextDepartureDateTime equals time equals hour equals 4 meridiem equals PM price equals 127", "user_turn_1": "That one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "8519", "datum_id": {"dialogue_id": "31dfa588-5a24-4c3c-9a24-707f2cb96f7c", "turn_index": 8}}
{"user_turn_0": "Find me another place , one that has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Encino", "user_turn_1": "Okay that one then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Acacia Saint \"))))))", "idx": "8525", "datum_id": {"dialogue_id": "9511e030-7cc6-4889-aa83-1ce594c970f3", "turn_index": 4}}
{"user_turn_0": "Is outdoor seating offered at this restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "8530", "datum_id": {"dialogue_id": "a0f11b7a-1e94-4472-84dc-2e7579d6f2f6", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , buy a train ticket leaving July 11th and coming back Monday from Victorial .", "tgt": "(plan (^(Train) Book :object (& (& (Train.destination_? (Place.location_? (?= \" Victorial \"))) (Train.departureDateTime_? (DateTime.date_? (& (Date.month_? (?= (July))) (Date.day_? (?= (Day.apply 11L))))))) (Train.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))))))", "idx": "8534", "datum_id": {"dialogue_id": "25398899-6884-4bf5-a838-78861e909756", "turn_index": 0}}
{"user_turn_0": "Brighton", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM", "user_turn_1": "4:50 PM is the one I choose", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "8536", "datum_id": {"dialogue_id": "25398899-6884-4bf5-a838-78861e909756", "turn_index": 2}}
{"user_turn_0": "Let me know what is the weather", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Rainy", "user_turn_1": "Tell me what is the weather in Coventry today", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Option (Constraint WeatherReport))) Path.apply \" object \") (lambda (^(Option (Constraint WeatherReport)) x0) (Some (& (WeatherReport.location_? (?= \" Coventry \")) (WeatherReport.atDateTime_? (DateTime.date_? (?= (Today)))))))))", "idx": "8563", "datum_id": {"dialogue_id": "ce0a6185-ce14-4f8b-95a1-12c66802c282", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , 9 AM .", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.dateTimeRange_? (DateTimeRange.duration_? (AppleDuration.hour_? (?= 1)))) (CalendarEvent.eventName_? (?= \" Grocery delivery \")))))", "idx": "8564", "datum_id": {"dialogue_id": "442f85b1-46e1-402d-8492-ffa9e4df3272", "turn_index": 0}}
{"user_turn_0": "Hey assistant , 9 AM .", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals startDateTime", "user_turn_1": "Schedule Grocery delivery for one hour on the calendar", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 9L))) (meridiem_? (?= (Meridiem.AM))))))))))", "idx": "8565", "datum_id": {"dialogue_id": "442f85b1-46e1-402d-8492-ffa9e4df3272", "turn_index": 1}}
{"user_turn_0": "When does flight HO347 arrive ?", "agent_turn_0": "Root system inform flight find focus equals arrivalDateTime equals time equals hour equals 10", "user_turn_1": "Schedule a taxi to Personal fitness trainer from Little Bat", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" Little Bat \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.eventName_? (?= \" Personal fitness trainer \"))))))))", "idx": "8573", "datum_id": {"dialogue_id": "c626d2ad-ae37-40a1-80a9-ebabb04a57e2", "turn_index": 4}}
{"user_turn_0": "Next , create football game with Dominic at the 9th 1:30 PM held in Basel House on the calendar", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals endDateTime", "user_turn_1": "it will end at 3:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.duration_? (AppleDuration.hour_? (?= 2)))))))", "idx": "8582", "datum_id": {"dialogue_id": "c2654a46-551b-4e6b-9a6b-845597f2e519", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , can you tell me the price range of the Hambone Martian restaurant in West Wickham .", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.priceRange_? (^(PriceRange) always)) :object (& (Restaurant.restaurantName_? (?= \" Hambone Martian \")) (Restaurant.location_? (?= \" West Wickham \")))))", "idx": "8583", "datum_id": {"dialogue_id": "924b1af2-3085-48dc-bfad-32582d1f2f31", "turn_index": 0}}
{"user_turn_0": "At 3:30 PM", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Okay , please change the appointment date to tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Tomorrow)))))", "idx": "8586", "datum_id": {"dialogue_id": "924b1af2-3085-48dc-bfad-32582d1f2f31", "turn_index": 3}}
{"user_turn_0": "What time does my event called social event start", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals startDateTime equals time equals hour equals 11", "user_turn_1": "Ok , set a reminder for meat that time", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 5L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM))))))))", "idx": "8606", "datum_id": {"dialogue_id": "85095a43-b528-406b-a285-12095e1939bb", "turn_index": 4}}
{"user_turn_0": "How is it rated ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "8611", "datum_id": {"dialogue_id": "cdcbf499-4ef9-4292-b923-2d830f8b9cc3", "turn_index": 4}}
{"user_turn_0": "Book it", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "Checking in for two nights", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.duration_? (AppleDuration.day_? (?= 2)))))))))", "idx": "8612", "datum_id": {"dialogue_id": "cdcbf499-4ef9-4292-b923-2d830f8b9cc3", "turn_index": 5}}
{"user_turn_0": "Two", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does it come with free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "8615", "datum_id": {"dialogue_id": "cdcbf499-4ef9-4292-b923-2d830f8b9cc3", "turn_index": 8}}
{"user_turn_0": "Can you give me the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "OK book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "8621", "datum_id": {"dialogue_id": "dbc05a6c-8509-415b-aa88-935aaee2bcd6", "turn_index": 4}}
{"user_turn_0": "Can you reserve 3 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Before you do , can you change the check in dare to Tuesday instead of today ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "8624", "datum_id": {"dialogue_id": "dbc05a6c-8509-415b-aa88-935aaee2bcd6", "turn_index": 7}}
{"user_turn_0": "Hey , tell who is attending my calendar event tomorrow", "agent_turn_0": "Root system inform calendarEvent find focus equals attendees equals person equals relationshipType equals Mother", "user_turn_1": "Please add her to Home Cleaning", "tgt": "(plan (^(CalendarEvent) Create :focus (CalendarEvent.attendees_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Mother))))) :object (CalendarEvent.eventName_? (?= \" Home Cleaning \"))))", "idx": "8627", "datum_id": {"dialogue_id": "7f2ca49c-b5f8-4e01-a05c-2352d994c1a2", "turn_index": 1}}
{"user_turn_0": "London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM price equals 160", "user_turn_1": "That 's fine . book it for four", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.destination_? (Place.location_? (?= \" Brussel \")))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 4))))))", "idx": "8633", "datum_id": {"dialogue_id": "8929eaae-8d7c-47c3-aeef-a85bec067a8a", "turn_index": 2}}
{"user_turn_0": "Please do", "agent_turn_0": "Root system inform flight book Completed", "user_turn_1": "Book a cheap restaurant for 4 PM", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High))))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "8635", "datum_id": {"dialogue_id": "8929eaae-8d7c-47c3-aeef-a85bec067a8a", "turn_index": 4}}
{"user_turn_0": "Hey assistant , is there an even that last 45 minutes on my calendar ?", "agent_turn_0": "Root system inform calendarEvent find Existed", "user_turn_1": "Also get me a single room in a hotel", "tgt": "(plan (^(Hotel) Book :object (Hotel.roomType_? (List.exists_? (?= (RoomType.Single))))))", "idx": "8643", "datum_id": {"dialogue_id": "50146dc5-6c82-4cc8-ab85-00f6753292ae", "turn_index": 1}}
{"user_turn_0": "I would like it to be in Camden Town", "agent_turn_0": "Root system prompt hotel book object equals priceRange", "user_turn_1": "Should be at least one star rating and affordable", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Hotel.rating_? (?>= (someSalient (?= 1))))))))", "idx": "8645", "datum_id": {"dialogue_id": "50146dc5-6c82-4cc8-ab85-00f6753292ae", "turn_index": 3}}
{"user_turn_0": "Does it have parking ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "OK book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "8647", "datum_id": {"dialogue_id": "50146dc5-6c82-4cc8-ab85-00f6753292ae", "turn_index": 5}}
{"user_turn_0": "OK book it", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "March 7th to 12th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 7L)))) (month_? (Date.month_? (?= (March)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 12L)))))))))))", "idx": "8648", "datum_id": {"dialogue_id": "50146dc5-6c82-4cc8-ab85-00f6753292ae", "turn_index": 6}}
{"user_turn_0": "Hello , please add my flight schedule to the calendar tomorrow", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Can you add my train schedule to Birmingham to today 's calendar ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (?= (^(DateTimeRange Train) reference (& (Train.destination_? (Place.location_? (?= \" Birmingham \"))) (Train.departureDateTime_? (DateTime.date_? (?= (Today))))))))))", "idx": "8652", "datum_id": {"dialogue_id": "1afee052-ebba-488c-9bcd-471999d5cfc7", "turn_index": 1}}
{"user_turn_0": "What is the distance to 7615 Eagle Lane by bike", "agent_turn_0": "Root system inform navigation find focus equals distance equals number equals 7", "user_turn_1": "Next task , can you book me a moderately priced restaurant with parking for 4 PM on the 4th ?", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.priceRange_? (?= (PriceRange.Moderate))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 4L))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))) (Restaurant.hasParking_? (?= true)))))", "idx": "8655", "datum_id": {"dialogue_id": "1afee052-ebba-488c-9bcd-471999d5cfc7", "turn_index": 4}}
{"user_turn_0": "It will be over at 5 pm", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "Thanks , next i want to book a cheap hotel with car parking", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?= (PriceRange.Low))) (Hotel.hasParking_? (?= true)))))", "idx": "8664", "datum_id": {"dialogue_id": "f371c1e1-f549-4ff8-91a4-822373b655a9", "turn_index": 3}}
{"user_turn_0": "I need three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "No , can you change the check - out date to the 18th instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Day)) Path.apply \" object.dateTimeRange.endDateTime.date.day \") (lambda (^(Constraint Day) x0) (?= (Day.apply 18L)))))", "idx": "8672", "datum_id": {"dialogue_id": "2a426b03-f6f4-416d-9673-71757cf12dd4", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i want to book restaurant with low price and I want Italian Cuisine", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.priceRange_? (?= (PriceRange.Low))) (Restaurant.foodType_? (?= (FoodType.Italian))))))", "idx": "8679", "datum_id": {"dialogue_id": "a300c6f4-48e9-4a91-a939-e3605bc6548a", "turn_index": 0}}
{"user_turn_0": "I prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flew Z", "user_turn_1": "What is the address of the restaurant", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "8684", "datum_id": {"dialogue_id": "a300c6f4-48e9-4a91-a939-e3605bc6548a", "turn_index": 5}}
{"user_turn_0": "What is the address of the restaurant", "agent_turn_0": "Root system inform restaurant find focus equals address equals Haywood Way", "user_turn_1": "That 's fine . Book it for me at 10:30 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Cityroom \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))))))))))", "idx": "8685", "datum_id": {"dialogue_id": "a300c6f4-48e9-4a91-a939-e3605bc6548a", "turn_index": 6}}
{"user_turn_0": "I will be leaving from London on Monday", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM price equals 156", "user_turn_1": "I would like the one that leaves at 4 PM and I would like to get economy class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast \"))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "8692", "datum_id": {"dialogue_id": "bbc75033-1c91-45f2-8155-6f174a87c896", "turn_index": 4}}
{"user_turn_0": "How is the weather in London today ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Rainy", "user_turn_1": "Also can you book me an economy class flight to Paris leaving at 8:30 on Monday", "tgt": "(plan (^(Flight) Book :object (& (& (Flight.class_? (?= (FlightClass.Economy))) (Flight.destination_? (Place.location_? (?= \" Paris \")))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (List.exists_? (DateTime.time_? (?>= (someSalient (& (Time.hour_? (?= (Hour.apply 8L))) (Time.minute_? (?= (Minute.apply 30L)))))))))))))", "idx": "8706", "datum_id": {"dialogue_id": "3d901b9f-7fd7-4226-8f0e-9e0ffcd9f2c6", "turn_index": 3}}
{"user_turn_0": "What is the average cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 43", "user_turn_1": "That 's fine . Book it for me today at 5 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" The Juniper Cloud \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 5L)))))))))))", "idx": "8724", "datum_id": {"dialogue_id": "f730107e-2dfb-487c-ad4e-f495bf4dc91a", "turn_index": 6}}
{"user_turn_0": "I want to eat American food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Gogol", "user_turn_1": "Is there parking at the restaurant ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "8731", "datum_id": {"dialogue_id": "2e70b34e-294a-41a0-b225-837ff7abc22d", "turn_index": 3}}
{"user_turn_0": "Give me another restaurant that has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Stazione restaurant", "user_turn_1": "Tell me the average cost per person at this restaurant", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "8733", "datum_id": {"dialogue_id": "2e70b34e-294a-41a0-b225-837ff7abc22d", "turn_index": 5}}
{"user_turn_0": "Tell me the average cost per person at this restaurant", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 35", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Gogol \"))))))", "idx": "8734", "datum_id": {"dialogue_id": "2e70b34e-294a-41a0-b225-837ff7abc22d", "turn_index": 6}}
{"user_turn_0": "Hi assistant , what 's the rating of the Hambone Martian restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 4", "user_turn_1": "I would like to book it for 1 PM", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.restaurantName_? (^((Constraint String)) refer)) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "8739", "datum_id": {"dialogue_id": "f3b34cb1-8987-4af6-8d7c-73dc5785f829", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , if you take the shortest path , it 'll take 30 minutes to get to your event at 7615 Eagle Lane .", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow))))))))))", "idx": "8743", "datum_id": {"dialogue_id": "12f75c2a-4920-46c6-8dbf-2767fb49434a", "turn_index": 0}}
{"user_turn_0": "Do they have a car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "8751", "datum_id": {"dialogue_id": "d4dded98-48f0-4e52-8106-f60e5762595b", "turn_index": 3}}
{"user_turn_0": "I want two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they allow free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "8756", "datum_id": {"dialogue_id": "d4dded98-48f0-4e52-8106-f60e5762595b", "turn_index": 8}}
{"user_turn_0": "Ill be going to Tenbury Wells", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals 207 Upper Street", "user_turn_1": "Switch the destination to 1 Islington Green", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" 1 Islington Green \"))))", "idx": "8765", "datum_id": {"dialogue_id": "690d0f5e-20a9-4645-8a03-a5086d740fad", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , book a cheap restaurant in Oxford Circus .", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.location_? (?= \" Oxford Circus \")) (Restaurant.priceRange_? (?= (PriceRange.Low))))))", "idx": "8788", "datum_id": {"dialogue_id": "e170d8ba-0234-4a83-a1da-4b38e01f064a", "turn_index": 0}}
{"user_turn_0": "Is parking available at the restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "OK book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "8790", "datum_id": {"dialogue_id": "e170d8ba-0234-4a83-a1da-4b38e01f064a", "turn_index": 2}}
{"user_turn_0": "Send it", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "When does the 5 o'clock train to Manchester Piccadilly get in ?", "tgt": "(plan (^(Train) Find :focus (Train.arrivalDateTime_? (^(DateTime) always)) :object (& (Train.destination_? (Place.location_? (?= \" Manchester Piccadilly \"))) (Train.departureDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 5L))))))))", "idx": "8802", "datum_id": {"dialogue_id": "2e325541-162f-489f-a468-e20f0e24f52f", "turn_index": 3}}
{"user_turn_0": "When does the 5 o'clock train to Manchester Piccadilly get in ?", "agent_turn_0": "Root system inform train find focus equals arrivalDateTime equals time equals hour equals 2 meridiem equals PM", "user_turn_1": "What 's the weather in Edinburg like ?", "tgt": "(plan (^(WeatherReport) Find :object (WeatherReport.location_? (?= \" Edinburgh \"))))", "idx": "8803", "datum_id": {"dialogue_id": "2e325541-162f-489f-a468-e20f0e24f52f", "turn_index": 4}}
{"user_turn_0": "Amsterdam", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM price equals 210", "user_turn_1": "That 's fine . Book it for four passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (^((Constraint (List DateTime))) refer)))) (Flight.source_? (Place.location_? (?= \" Birmingham \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 4))))))", "idx": "8808", "datum_id": {"dialogue_id": "6362ae09-21ba-4c3f-84aa-f28624e4caa7", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , what 's the distance to 9 Constitution Dr. from 36 Albert Rd . ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (& (Navigation.source_? (Place.location_? (?= \" 36 Albert Road \"))) (Navigation.destination_? (Place.location_? (?= \" 9 Constitution Drive \"))))))", "idx": "8814", "datum_id": {"dialogue_id": "2d2c5db0-83e2-4817-a41d-1194ca104523", "turn_index": 0}}
{"user_turn_0": "Which of the restaurants serve Korean food ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dim Summit", "user_turn_1": "What is the average cost per person ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "8843", "datum_id": {"dialogue_id": "a60fdcf4-0200-4f93-ab79-78af616bff9f", "turn_index": 5}}
{"user_turn_0": "Which of the restaurants have a four star rating ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Spago", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Chipotle Grill \"))))))", "idx": "8845", "datum_id": {"dialogue_id": "a60fdcf4-0200-4f93-ab79-78af616bff9f", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , will you send my event on the 27th of November to Kevin , please ?", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Kevin \")))) (Message.textContent_? (?= (^(String Train) reference (Train.departureDateTime_? (DateTime.date_? (& (Date.month_? (?= (November))) (Date.day_? (?= (Day.apply 27L))))))))))))", "idx": "8848", "datum_id": {"dialogue_id": "cb986775-b942-4f5b-be56-1e2ce792e866", "turn_index": 0}}
{"user_turn_0": "I do n't like any of those . Show me some more and forget about Chinese", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flip Out", "user_turn_1": "What 's the address of that place ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "8868", "datum_id": {"dialogue_id": "cbff28c3-35c7-4ac5-b4b0-ce25eb0b7556", "turn_index": 4}}
{"user_turn_0": "Find me a different place where I can sit outdoors", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capricorn", "user_turn_1": "Is there outdoor seating ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "8870", "datum_id": {"dialogue_id": "cbff28c3-35c7-4ac5-b4b0-ce25eb0b7556", "turn_index": 6}}
{"user_turn_0": "Let 's look for a different place with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capricorn", "user_turn_1": "And it has parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "8872", "datum_id": {"dialogue_id": "cbff28c3-35c7-4ac5-b4b0-ce25eb0b7556", "turn_index": 8}}
{"user_turn_0": "And it has parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Okay , let 's book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" La Zilla \"))))))", "idx": "8873", "datum_id": {"dialogue_id": "cbff28c3-35c7-4ac5-b4b0-ce25eb0b7556", "turn_index": 9}}
{"user_turn_0": "One with moderate pricing", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Box", "user_turn_1": "That works . Can you book it at 5 o'clock on the 10th ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Gogol \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 10L))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 5L)))))))))))", "idx": "8890", "datum_id": {"dialogue_id": "180563a0-0e16-46fd-84e2-a17a304bbf9c", "turn_index": 8}}
{"user_turn_0": "I will depart from London Heathrow", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "2:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "8895", "datum_id": {"dialogue_id": "f233057c-d2e7-4a91-a823-e1badc9dfb13", "turn_index": 2}}
{"user_turn_0": "2:50 PM", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM price equals 130", "user_turn_1": "Sure", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "8896", "datum_id": {"dialogue_id": "f233057c-d2e7-4a91-a823-e1badc9dfb13", "turn_index": 3}}
{"user_turn_0": "Do they have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Make the reservation there then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "8905", "datum_id": {"dialogue_id": "680544e8-698a-4505-af66-824ac255e7eb", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "OK assistant , let me book an American restaurant that has one star rating or above .", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.rating_? (?!= (someSalient (?= 0)))) (Restaurant.foodType_? (?= (FoodType.American))))))", "idx": "8911", "datum_id": {"dialogue_id": "a1e2027d-71c8-4314-98a8-42c0496b86e8", "turn_index": 0}}
{"user_turn_0": "I do n't like these options . How about the ones that serve Korean food ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Stazione restaurant", "user_turn_1": "Can I get the location of the restaurant ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "8915", "datum_id": {"dialogue_id": "a1e2027d-71c8-4314-98a8-42c0496b86e8", "turn_index": 4}}
{"user_turn_0": "I would rather pick another restaurant that has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Juniper Cloud", "user_turn_1": "That 's OK , can you book it at 2 PM on the 20th ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Inheat \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 20L))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "8917", "datum_id": {"dialogue_id": "a1e2027d-71c8-4314-98a8-42c0496b86e8", "turn_index": 6}}
{"user_turn_0": "Do they have a car park", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Cool , book me a slot at 10 AM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (meridiem_? (?= (Meridiem.AM)))))))))))", "idx": "8930", "datum_id": {"dialogue_id": "28d3c310-6d53-4bca-94ec-81ee7577a2dd", "turn_index": 4}}
{"user_turn_0": "Can you tell me which of these restaurants serves Indian food ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Beef Easy", "user_turn_1": "Can I have the restaurant 's address ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "8940", "datum_id": {"dialogue_id": "21a2bafe-1d14-45e8-bc47-d23003fd9607", "turn_index": 2}}
{"user_turn_0": "Can I have the restaurant 's address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals The Bull Islington", "user_turn_1": "No problem , please book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flew Z \"))))))", "idx": "8941", "datum_id": {"dialogue_id": "21a2bafe-1d14-45e8-bc47-d23003fd9607", "turn_index": 3}}
{"user_turn_0": "Also , what is the weather like today in Sheffield", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Rainy", "user_turn_1": "Okay , what 's it 's like in Cardiff", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint WeatherReport)) Path.apply \" object \") (lambda (^(Constraint WeatherReport) x0) (WeatherReport.location_? (?= \" Cardiff \")))))", "idx": "8952", "datum_id": {"dialogue_id": "01cc1c88-d440-40f8-ae9b-9a5ba99518e7", "turn_index": 2}}
{"user_turn_0": "Does that one have wifi for free ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book that one then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "8982", "datum_id": {"dialogue_id": "8e960139-1db9-449d-862e-af70ce4047c9", "turn_index": 3}}
{"user_turn_0": "Make it 2 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "8985", "datum_id": {"dialogue_id": "8e960139-1db9-449d-862e-af70ce4047c9", "turn_index": 6}}
{"user_turn_0": "Friday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 4 minute equals 20 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "8993", "datum_id": {"dialogue_id": "079d9b30-3a3e-46f0-ab87-b41d199e3e08", "turn_index": 6}}
{"user_turn_0": "Actually , I want you to change when I 'm leaving for the second trip to be on Saturday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 4 object equals nextDepartureDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM price equals 127", "user_turn_1": "That one is fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "9012", "datum_id": {"dialogue_id": "6a03c624-05ee-41b7-bcd7-18bd5ecce6d0", "turn_index": 7}}
{"user_turn_0": "The new time is 1 PM", "agent_turn_0": "Root system offer calendarEvent update inform calendarEvent find Conflicted object equals eventName equals special event", "user_turn_1": "Change the start time to 10:30 o'clock then", "tgt": "(plan (revise (^(Unit) Path.apply \" Update \") (^((Constraint Time)) Path.apply \" focus.dateTimeRange.startDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))))))", "idx": "9026", "datum_id": {"dialogue_id": "d7c74468-e203-4b24-ad43-c0c0cc86d010", "turn_index": 2}}
{"user_turn_0": "I would rather stay in a hotel that has a rating of at least three stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Four Seasons price equals 145", "user_turn_1": "Is there a fitness center there ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasFitness_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "9058", "datum_id": {"dialogue_id": "1cdc8613-ffed-4949-952b-1125a1cb12dd", "turn_index": 3}}
{"user_turn_0": "Is there a fitness center there ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Can you book it for me ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Ritz-Carlton \"))))))", "idx": "9059", "datum_id": {"dialogue_id": "1cdc8613-ffed-4949-952b-1125a1cb12dd", "turn_index": 4}}
{"user_turn_0": "Can you book it for me ?", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "October 8th to the 12th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 8L)))) (month_? (Date.month_? (?= (October)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 12L)))))))))))", "idx": "9060", "datum_id": {"dialogue_id": "1cdc8613-ffed-4949-952b-1125a1cb12dd", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , can I see a list of hotels that are n't too expensive ?", "tgt": "(plan (^(Hotel) Find :object (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))))", "idx": "9074", "datum_id": {"dialogue_id": "d9146e9b-310c-4a5b-94ab-c5196fc21b2b", "turn_index": 0}}
{"user_turn_0": "From Glasgow Central", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM", "user_turn_1": "No , give me the one for 4:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "9081", "datum_id": {"dialogue_id": "92ae83a5-7e2b-41f0-88f5-8455854a56bd", "turn_index": 2}}
{"user_turn_0": "And what 's the weather like over there ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cloudy", "user_turn_1": "And what 's the weather like in Manchester ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint String)) Path.apply \" object.location \") (lambda (^(Constraint String) x0) (?= \" Manchester \"))))", "idx": "9107", "datum_id": {"dialogue_id": "0aad5b8a-17fc-46c4-b569-2e9dc9eff529", "turn_index": 3}}
{"user_turn_0": "Can you tell me if the hotel have private bath room ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "9112", "datum_id": {"dialogue_id": "09200922-7013-4cb6-8f65-8b4137e6ed2e", "turn_index": 2}}
{"user_turn_0": "I think I 'd rather have a spot with five stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Farmhouse Inn price equals 155", "user_turn_1": "Do they have laundry there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.laundry_? (^(Boolean) always)))))", "idx": "9129", "datum_id": {"dialogue_id": "9b597934-ca57-42ac-b1e1-01e61d698618", "turn_index": 4}}
{"user_turn_0": "Do they have laundry there ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Cool , book it , please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" InterContinental \"))))))", "idx": "9130", "datum_id": {"dialogue_id": "9b597934-ca57-42ac-b1e1-01e61d698618", "turn_index": 5}}
{"user_turn_0": "From Wimbledon", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 1 meridiem equals PM", "user_turn_1": "Get me the one for 3:45 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "9141", "datum_id": {"dialogue_id": "866a2424-423e-4c44-b906-4f757464551b", "turn_index": 2}}
{"user_turn_0": "What are the direction like", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Can you book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "9172", "datum_id": {"dialogue_id": "f1b5c60c-1cc5-486f-99fa-c1c056573541", "turn_index": 4}}
{"user_turn_0": "I prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capricorn", "user_turn_1": "That 's fine . Book it for me at today 4 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" The Maple \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "9180", "datum_id": {"dialogue_id": "4493cce9-c275-4df5-a8a0-ffbd284b3fdf", "turn_index": 4}}
{"user_turn_0": "Add my sister", "agent_turn_0": "Root system inform calendarEvent update Completed", "user_turn_1": "Thanks for the help . Send her a text saying excuse me", "tgt": "(plan (^(Message) Create :object (Message.recipients_? (& (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Sister)))) (Contact.textContent_? (?= \" excuse me \"))))))", "idx": "9194", "datum_id": {"dialogue_id": "afea9e75-9802-42fa-aac9-ac6a0faa2204", "turn_index": 2}}
{"user_turn_0": "Does the hotel have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "9210", "datum_id": {"dialogue_id": "755eb4f5-f8cf-4f54-9c9d-0e2c2e72b8b1", "turn_index": 3}}
{"user_turn_0": "I want a two single room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Modify the check out date to Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Saturday)))))", "idx": "9218", "datum_id": {"dialogue_id": "73855b0f-abb1-410a-aeff-c5a7c66ae99f", "turn_index": 4}}
{"user_turn_0": "I prefer a hotel with a five star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Triton price equals 130", "user_turn_1": "Do they have a fitness center ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasFitness_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "9228", "datum_id": {"dialogue_id": "9d0b5f35-bfd6-4746-88f7-f092a77f7ec3", "turn_index": 3}}
{"user_turn_0": "Do they have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Renaissance \"))))))", "idx": "9229", "datum_id": {"dialogue_id": "9d0b5f35-bfd6-4746-88f7-f092a77f7ec3", "turn_index": 4}}
{"user_turn_0": "From Birmingham", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM price equals 155", "user_turn_1": "I 'd rather the one that leaves at 4:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "9237", "datum_id": {"dialogue_id": "91826d5c-9be2-4af1-8bb3-3c0c0fedaff5", "turn_index": 4}}
{"user_turn_0": "Hi assistant , does birth coaching exist in my schedule ?", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Ok create it then", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (?= (Tomorrow))) (DateTime.time_? (Time.hour_? (?= (Hour.apply 10L)))))))))", "idx": "9244", "datum_id": {"dialogue_id": "56b5c81a-396a-4500-9314-48baea04595d", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , i 'd like to book hotel in London Bridge from July 18th to 24th with king sized bed", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" London Bridge \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 18L)))) (month_? (Date.month_? (?= (July)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 24L)))))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.King)))))))", "idx": "9248", "datum_id": {"dialogue_id": "accd4460-da68-47bc-849f-1070905ff799", "turn_index": 0}}
{"user_turn_0": "How can I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "9250", "datum_id": {"dialogue_id": "accd4460-da68-47bc-849f-1070905ff799", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , i 'd like to book a one way flight to Edinburg for two passengers ; the departure date is Tuesday .", "tgt": "(plan (^(Flight) Book :object (& (& (& (Flight.destination_? (Place.location_? (?= \" Edinburgh \"))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))))) (Flight.tripType_? (?= (TripType.oneWay)))) (Flight.passengers_? (?= 2)))))", "idx": "9273", "datum_id": {"dialogue_id": "012b932e-a844-4df2-ac4b-244781214687", "turn_index": 0}}
{"user_turn_0": "Yes I am", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 2 meridiem equals PM price equals 124", "user_turn_1": "Yeah that 's fine . Let 's book this one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "9275", "datum_id": {"dialogue_id": "012b932e-a844-4df2-ac4b-244781214687", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , book Gogol with table for 6 for today at 6:30 PM", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.restaurantName_? (?= \" Gogol \")) (Restaurant.tableSize_? (?= 6))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "9278", "datum_id": {"dialogue_id": "32a29836-14e1-4e84-b91a-7a9c07e83427", "turn_index": 0}}
{"user_turn_0": "Hey , call Mr Anderson", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "9 AM", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 9L))) (meridiem_? (?= (Meridiem.AM)))))))))", "idx": "9298", "datum_id": {"dialogue_id": "f2c2fe8a-6217-4166-be84-78a7e995741b", "turn_index": 1}}
{"user_turn_0": "How much does it cost on average per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 36", "user_turn_1": "Make the reservation there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (^((Constraint String)) refer))))))", "idx": "9305", "datum_id": {"dialogue_id": "93719857-f9d1-4743-be47-531cd980d259", "turn_index": 3}}
{"user_turn_0": "Make the reservation there", "agent_turn_0": "Root system prompt restaurant book object equals atDateTime equals time inform restaurant find object equals atDateTime equals listElementOne time equals hour equals 6 meridiem equals PM listElementTwo time equals hour equals 8 minute equals 30 meridiem equals PM listElementThree time equals hour equals 11 meridiem equals AM", "user_turn_1": "6 o'clock works for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "9306", "datum_id": {"dialogue_id": "93719857-f9d1-4743-be47-531cd980d259", "turn_index": 4}}
{"user_turn_0": "How do I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "I would like to book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Westin \"))))))", "idx": "9314", "datum_id": {"dialogue_id": "96ae395a-445f-483e-975a-ed9688baa9a0", "turn_index": 5}}
{"user_turn_0": "Could I book 2 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does this booking support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "9321", "datum_id": {"dialogue_id": "96ae395a-445f-483e-975a-ed9688baa9a0", "turn_index": 12}}
{"user_turn_0": "Is it a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "That 's fine . Book this flight for four passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.destination_? (Place.location_? (?= \" Edinburgh \"))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 4))))))", "idx": "9326", "datum_id": {"dialogue_id": "71640139-b0be-4f50-be9f-26f3f9852899", "turn_index": 3}}
{"user_turn_0": "Does it have fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Sure . Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "9331", "datum_id": {"dialogue_id": "fda0d0e7-887d-48a5-a934-1e5445c19d15", "turn_index": 3}}
{"user_turn_0": "Can you make it 3 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "9334", "datum_id": {"dialogue_id": "fda0d0e7-887d-48a5-a934-1e5445c19d15", "turn_index": 6}}
{"user_turn_0": "Is it economy class ? Business ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "Sounds good . Let 's do it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "9338", "datum_id": {"dialogue_id": "55de8713-743e-41d8-a6f4-d6e688d74da9", "turn_index": 2}}
{"user_turn_0": "That 's correct", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I would like the one at 4 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "9353", "datum_id": {"dialogue_id": "24dac50d-e09f-47aa-9c5d-f119019ae280", "turn_index": 2}}
{"user_turn_0": "Yeah on Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 4 minute equals 20 meridiem equals PM price equals 135", "user_turn_1": "Looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (^((Constraint Hour)) refer)) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "9355", "datum_id": {"dialogue_id": "24dac50d-e09f-47aa-9c5d-f119019ae280", "turn_index": 4}}
{"user_turn_0": "I want to eat seafood", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flavoroso", "user_turn_1": "Is credit card accepted at this restaurant ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "9368", "datum_id": {"dialogue_id": "2587c82c-5803-44fa-90d3-34008b4ce556", "turn_index": 5}}
{"user_turn_0": "Is credit card accepted at this restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Book it for 3:30 PM today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Canton Silk \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "9369", "datum_id": {"dialogue_id": "2587c82c-5803-44fa-90d3-34008b4ce556", "turn_index": 6}}
{"user_turn_0": "Table for 3 people", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Have my appointment time switched to 10 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (Time.hour_? (?= (Hour.apply 10L))))))", "idx": "9371", "datum_id": {"dialogue_id": "2587c82c-5803-44fa-90d3-34008b4ce556", "turn_index": 8}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , a taxi order has been created for you . Would you like me to submit the order now ?", "tgt": "(plan (^(Taxi) Book :object (& (& (Taxi.serviceType_? (List.exists_? (?= (ServiceType.Saloon)))) (Taxi.source_? (Place.location_? (?= \" Jackson Fish Wholesalers \")))) (Taxi.destination_? (Place.location_? (?= \" 6 John Street \"))))))", "idx": "9384", "datum_id": {"dialogue_id": "48eba83b-67c3-4c6d-a9cd-2beb65ed4a14", "turn_index": 0}}
{"user_turn_0": "Hi there , a taxi order has been created for you . Would you like me to submit the order now ?", "agent_turn_0": "Root system offer taxi book", "user_turn_1": "I have submitted your order . Let me know if there 's anything else I can help you out with", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "9385", "datum_id": {"dialogue_id": "48eba83b-67c3-4c6d-a9cd-2beb65ed4a14", "turn_index": 1}}
{"user_turn_0": "I have submitted your order . Let me know if there 's anything else I can help you out with", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "I 'm afraid I could n't find the event anywhere on your calendar", "tgt": "(plan (^(CalendarEvent) CheckExistence :object (& (CalendarEvent.eventName_? (?= \" Academic Tutoring \")) (CalendarEvent.recurrenceUnit_? (RecurrenceUnit.dayOfWeek_? (?= (Friday)))))))", "idx": "9386", "datum_id": {"dialogue_id": "48eba83b-67c3-4c6d-a9cd-2beb65ed4a14", "turn_index": 2}}
{"user_turn_0": "I 'm afraid I could n't find the event anywhere on your calendar", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Then , I want to create one", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.eventName_? (?= \" Makeup artist \")) (CalendarEvent.location_? (?= \" Covent Garden \")))))", "idx": "9387", "datum_id": {"dialogue_id": "48eba83b-67c3-4c6d-a9cd-2beb65ed4a14", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i 'd like to book a place with wifi please", "tgt": "(plan (^(Hotel) Book :object (Hotel.hasWifi_? (?= true))))", "idx": "9389", "datum_id": {"dialogue_id": "36442a1c-6ce5-4381-927e-00121072df84", "turn_index": 0}}
{"user_turn_0": "I 'd prefer a low price range hotel please", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Enchanted Isle price equals 135", "user_turn_1": "Do they have a private bathroom ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.privateBath_? (^(Boolean) always)))))", "idx": "9393", "datum_id": {"dialogue_id": "36442a1c-6ce5-4381-927e-00121072df84", "turn_index": 4}}
{"user_turn_0": "Do they have a private bathroom ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Ace Hotel \"))))))", "idx": "9394", "datum_id": {"dialogue_id": "36442a1c-6ce5-4381-927e-00121072df84", "turn_index": 5}}
{"user_turn_0": "No , please cancel", "agent_turn_0": "Root systen inform calendarEvent create Canceled", "user_turn_1": "Tell me the rating of Dimple \u2019s restaurant in Northwick Park", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.rating_? (^(Number) always)) :object (& (Restaurant.restaurantName_? (?= \" Dimple's \")) (Restaurant.location_? (?= \" Northwick Park \")))))", "idx": "9407", "datum_id": {"dialogue_id": "264c98c4-842f-4518-8b63-75bea731efbf", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "assistant tell me the rating of the Capricorn in West Wickham .", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.rating_? (^(Number) always)) :object (& (Restaurant.restaurantName_? (?= \" Capricorn \")) (Restaurant.location_? (?= \" West Wickham \")))))", "idx": "9408", "datum_id": {"dialogue_id": "c3574213-915b-4cc6-a8e0-e70ebf7f9893", "turn_index": 0}}
{"user_turn_0": "Is that a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "I actually prefer the one that departs at 3:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "9417", "datum_id": {"dialogue_id": "6e09a6a9-fe86-437b-ae0c-68430afc575b", "turn_index": 4}}
{"user_turn_0": "Hey , what is the time of the special event what starts on Wednesday ?", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals startDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM", "user_turn_1": "Thanks so much . Set a reminder for it", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (^(CalendarEvent) always))))))", "idx": "9427", "datum_id": {"dialogue_id": "f2e498ca-0e4a-4af7-837f-72f76d32df85", "turn_index": 1}}
{"user_turn_0": "Thanks so much . Set a reminder for it", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Schedule a reminder for this morning 's event", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object.atDateTime \") (lambda (^(Constraint CalendarEvent) x0) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Morning))))))))", "idx": "9428", "datum_id": {"dialogue_id": "f2e498ca-0e4a-4af7-837f-72f76d32df85", "turn_index": 2}}
{"user_turn_0": "Check the airline", "agent_turn_0": "Root system inform flight find focus equals airLine equals EasyJet", "user_turn_1": "book the flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "9434", "datum_id": {"dialogue_id": "69c78311-ad29-4e5f-8aca-c86276584331", "turn_index": 3}}
{"user_turn_0": "Yes correct", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 1 meridiem equals PM price equals 166", "user_turn_1": "OK book this one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "9439", "datum_id": {"dialogue_id": "e1a97433-5b03-4068-ac93-e950f4396238", "turn_index": 2}}
{"user_turn_0": "Do they have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "9451", "datum_id": {"dialogue_id": "597834ba-87f7-4a0f-9bbc-eb99b107a1fb", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , i would like to book a hotel near my event with a good moderate price", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Hotel.priceRange_? (?= (PriceRange.Moderate))))))", "idx": "9456", "datum_id": {"dialogue_id": "bff515d9-26e8-437d-ae02-4ac745fd33cf", "turn_index": 0}}
{"user_turn_0": "I would prefer another three star hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Hilton price equals 178", "user_turn_1": "What 's the rating for that hotel", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.rating_? (^(Number) always)))))", "idx": "9459", "datum_id": {"dialogue_id": "bff515d9-26e8-437d-ae02-4ac745fd33cf", "turn_index": 3}}
{"user_turn_0": "What 's the rating for that hotel", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Get it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Rose \"))))))", "idx": "9460", "datum_id": {"dialogue_id": "bff515d9-26e8-437d-ae02-4ac745fd33cf", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , book a train that leaves from Leeds on the 8th of July .", "tgt": "(plan (^(Train) Book :object (& (Train.destination_? (Place.location_? (?= \" Leeds \"))) (Train.departureDateTime_? (DateTime.date_? (& (Date.month_? (?= (July))) (Date.day_? (?= (Day.apply 8L)))))))))", "idx": "9470", "datum_id": {"dialogue_id": "3128ae85-20b4-45d5-b028-f413b16913fe", "turn_index": 0}}
{"user_turn_0": "Yes , I will", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM", "user_turn_1": "Yes , that one is fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "9472", "datum_id": {"dialogue_id": "3128ae85-20b4-45d5-b028-f413b16913fe", "turn_index": 2}}
{"user_turn_0": "How much does it cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 43", "user_turn_1": "It 's cool . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (^((Constraint String)) refer))))))", "idx": "9479", "datum_id": {"dialogue_id": "b5d6e8a0-e0ea-41a6-8fc5-d2ab8ef9c219", "turn_index": 4}}
{"user_turn_0": "No , after that I will go to Zurich on Saturday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 4 object equals nextDepartureDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM price equals 170", "user_turn_1": "Looks good to me !", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "9486", "datum_id": {"dialogue_id": "fb0a0a70-bd23-48d3-b16d-007c5239a465", "turn_index": 4}}
{"user_turn_0": "On what airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals British", "user_turn_1": "I prefer the 1:50 PM departure", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "9501", "datum_id": {"dialogue_id": "2cd87ddb-80fd-4af2-a22b-c7202e01cb8a", "turn_index": 3}}
{"user_turn_0": "I want to be in Green Park", "agent_turn_0": "Root system prompt hotel book object equals priceRange", "user_turn_1": "I have no price range and make sure I have a queen sized bed", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.priceRange_? (?= (PriceRange.Any)))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Queen))))))))", "idx": "9509", "datum_id": {"dialogue_id": "8ff99061-7c14-4ac5-ad22-760fbabce122", "turn_index": 2}}
{"user_turn_0": "I would like a hotel with a five star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Westin price equals 135", "user_turn_1": "Does the hotel have a gym ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasFitness_? (^(Boolean) always)))))", "idx": "9512", "datum_id": {"dialogue_id": "8ff99061-7c14-4ac5-ad22-760fbabce122", "turn_index": 5}}
{"user_turn_0": "Does the hotel have a gym ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Please book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Freehand \"))))))", "idx": "9513", "datum_id": {"dialogue_id": "8ff99061-7c14-4ac5-ad22-760fbabce122", "turn_index": 6}}
{"user_turn_0": "How is it rated ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "Okay , get me the reservation for a queen bed room", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.hotelName_? (^((Constraint String)) refer)) (Hotel.roomType_? (List.exists_? (?= (RoomType.Queen)))))))", "idx": "9519", "datum_id": {"dialogue_id": "ab716989-9026-4ccd-8e71-c83fa0be233e", "turn_index": 2}}
{"user_turn_0": "It should have five stars rating and serves Chinese food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Boiling Fence", "user_turn_1": "Does it take credit card as the payment type ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "9531", "datum_id": {"dialogue_id": "da4e0244-4a8a-4f36-b3ef-fc875a64e75f", "turn_index": 2}}
{"user_turn_0": "I do n't like these . Can you show me other options ? I do n't really care about the food type", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals La Zilla", "user_turn_1": "Check if it takes credit card payment please", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "9534", "datum_id": {"dialogue_id": "da4e0244-4a8a-4f36-b3ef-fc875a64e75f", "turn_index": 5}}
{"user_turn_0": "Check if it takes credit card payment please", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "That 's all right , please book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Boiling Fence \"))))))", "idx": "9535", "datum_id": {"dialogue_id": "da4e0244-4a8a-4f36-b3ef-fc875a64e75f", "turn_index": 6}}
{"user_turn_0": "My destination will be Cardiff", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 20 meridiem equals PM", "user_turn_1": "Yes it will", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "9542", "datum_id": {"dialogue_id": "72c034a3-5023-439d-976f-a5eb09913e50", "turn_index": 3}}
{"user_turn_0": "Do n't care , so long as there 's no zero star ratings", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Moody Moon price equals 150", "user_turn_1": "Book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "9546", "datum_id": {"dialogue_id": "20df46bd-0c45-457c-b377-365683f3b5eb", "turn_index": 2}}
{"user_turn_0": "What airline is it on ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "Ok , book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "9555", "datum_id": {"dialogue_id": "3753c063-9b9a-4512-b5f5-d2cae1eb3b5d", "turn_index": 3}}
{"user_turn_0": "I 'd prefer a place with at least one star", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Peninsula price equals 166", "user_turn_1": "Do they have parking ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasParking_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "9578", "datum_id": {"dialogue_id": "f8cb80bd-2a15-4434-8c68-ce1aef54232d", "turn_index": 4}}
{"user_turn_0": "Do they have parking ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Renaissance \"))))))", "idx": "9579", "datum_id": {"dialogue_id": "f8cb80bd-2a15-4434-8c68-ce1aef54232d", "turn_index": 5}}
{"user_turn_0": "Hi assistant , tell me the price range of Bourbon Bliss hotel in King 's Cross .", "agent_turn_0": "Root system inform hotel find focus equals priceRange equals High", "user_turn_1": "Book me a king sized bed at this hotel for October 19th through 23rd", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.hotelName_? (?= \" Bourbon Bliss \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 19L)))) (month_? (Date.month_? (?= (October)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 23L)))))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.King)))))))", "idx": "9586", "datum_id": {"dialogue_id": "0016cd79-737c-4fbc-bb65-1b7969ea2aa3", "turn_index": 1}}
{"user_turn_0": "I need 3 rooms on my reservation", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is free cancellation supported ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "9589", "datum_id": {"dialogue_id": "0016cd79-737c-4fbc-bb65-1b7969ea2aa3", "turn_index": 4}}
{"user_turn_0": "What 's the weather like today ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Sunny", "user_turn_1": "Also book the Crescent Resort hotel in New Cross on May 19th in a single room for just a single night", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" New Cross \")) (Hotel.hotelName_? (?= \" Crescent Resort \"))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (& (Date.month_? (?= (May))) (Date.day_? (?= (Day.apply 19L)))))) (DateTimeRange.duration_? (AppleDuration.day_? (?= 1)))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Single)))))))", "idx": "9604", "datum_id": {"dialogue_id": "a3f3b7c9-da6f-4905-877c-ba0e0aeb2141", "turn_index": 3}}
{"user_turn_0": "it is 2", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there a cancellation fee ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "9606", "datum_id": {"dialogue_id": "a3f3b7c9-da6f-4905-877c-ba0e0aeb2141", "turn_index": 5}}
{"user_turn_0": "Just one", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually , let 's push the check out date to Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Friday)))))", "idx": "9621", "datum_id": {"dialogue_id": "02f1b4bd-440a-4002-9aa6-266bbff7eef5", "turn_index": 4}}
{"user_turn_0": "Actually , let 's push the check out date to Friday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait , does it support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "9622", "datum_id": {"dialogue_id": "02f1b4bd-440a-4002-9aa6-266bbff7eef5", "turn_index": 5}}
{"user_turn_0": "Hey assistant , display hotels in Queensbury", "agent_turn_0": "Root system inform hotel find", "user_turn_1": "I 'd like to book one to Belfast please", "tgt": "(plan (^(Flight) Book :object (& (Flight.destination_? (Place.location_? (?= \" Belfast \"))) (Flight.passengers_? (?= 1)))))", "idx": "9646", "datum_id": {"dialogue_id": "340f9b27-dd9d-472b-986b-824fbed0c4fe", "turn_index": 1}}
{"user_turn_0": "Find on in the high price range", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dim Summit", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "9661", "datum_id": {"dialogue_id": "7e38e43b-3e31-4890-b889-93712b9a734c", "turn_index": 3}}
{"user_turn_0": "I need one for 4", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Change the date to the 4th , and try again", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 4L))))))", "idx": "9664", "datum_id": {"dialogue_id": "7e38e43b-3e31-4890-b889-93712b9a734c", "turn_index": 6}}
{"user_turn_0": "What options do I have", "agent_turn_0": "Root system inform hotel find focus equals roomType equals listElementOne Double listElementTwo Single listElementThree King listElementFour Queen", "user_turn_1": "I want to have queen sized bed", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.roomType_? (List.exists_? (?= (RoomType.Queen))))))))", "idx": "9673", "datum_id": {"dialogue_id": "aaaee979-5473-4d2a-9d3d-fda3f42837de", "turn_index": 7}}
{"user_turn_0": "I need 3 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking have free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "9675", "datum_id": {"dialogue_id": "aaaee979-5473-4d2a-9d3d-fda3f42837de", "turn_index": 9}}
{"user_turn_0": "Does the booking have free cancellation ?", "agent_turn_0": "Root system inform hotel find focus equals freeCancellation equals True", "user_turn_1": "Actually can you alter the check out date to Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Friday)))))", "idx": "9676", "datum_id": {"dialogue_id": "aaaee979-5473-4d2a-9d3d-fda3f42837de", "turn_index": 10}}
{"user_turn_0": "Thanks for the help . Now add that booking to my calendar", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Whip me up an event that goes for two hours on my calendar", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (DateTimeRange.duration_? (AppleDuration.hour_? (?= 2))))))", "idx": "9681", "datum_id": {"dialogue_id": "eef83faa-791a-470c-9708-e5a92fffadcd", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , could you book a hotel room that 's low priced and has a king sized bed .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?= (PriceRange.Low))) (Hotel.roomType_? (List.exists_? (?= (RoomType.King)))))))", "idx": "9683", "datum_id": {"dialogue_id": "bf8d9432-e4c1-46ad-89e5-98df76d44298", "turn_index": 0}}
{"user_turn_0": "Does it have a fitness center", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Then let 's book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "9686", "datum_id": {"dialogue_id": "bf8d9432-e4c1-46ad-89e5-98df76d44298", "turn_index": 3}}
{"user_turn_0": "I 'm trying to stay from the 15th to the 19th of April", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "What if I checked in tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Tomorrow)))))", "idx": "9688", "datum_id": {"dialogue_id": "bf8d9432-e4c1-46ad-89e5-98df76d44298", "turn_index": 5}}
{"user_turn_0": "Could I get 2 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Must I prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "9690", "datum_id": {"dialogue_id": "bf8d9432-e4c1-46ad-89e5-98df76d44298", "turn_index": 7}}
{"user_turn_0": "Monday and book for two passengers please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM price equals 160", "user_turn_1": "That one 's fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "9706", "datum_id": {"dialogue_id": "14120b7e-21ee-4beb-92ba-35c03843def8", "turn_index": 3}}
{"user_turn_0": "Directions to my next event", "agent_turn_0": "Root system inform navigation find object equals destination equals location equals 40 Mayors Road", "user_turn_1": "Snag me a taxi to there please", "tgt": "(plan (^(Taxi) Book :object (Taxi.destination_? (^((Constraint Place)) refer))))", "idx": "9710", "datum_id": {"dialogue_id": "1470230e-fbf5-430d-bd66-4e5b1becc10f", "turn_index": 2}}
{"user_turn_0": "What 's the rating of that hotel ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Can you book it for me please ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "9716", "datum_id": {"dialogue_id": "c4ec0c07-ade8-42a0-a9a4-0f28803f9420", "turn_index": 3}}
{"user_turn_0": "Just two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel the room for free ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "9720", "datum_id": {"dialogue_id": "c4ec0c07-ade8-42a0-a9a4-0f28803f9420", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i need to change the date of project discussion on the calendar .", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (^(Date) always)))) :object (& (CalendarEvent.eventName_? (?= \" project discussion \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 15L)))))))))", "idx": "9727", "datum_id": {"dialogue_id": "f44fc428-542a-46ed-812e-0542c3d9f25b", "turn_index": 0}}
{"user_turn_0": "Set on the 20th", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM", "user_turn_1": "It Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "9742", "datum_id": {"dialogue_id": "da980e89-762d-4a12-a80d-70c5499e753f", "turn_index": 5}}
{"user_turn_0": "I prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Interknack", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Bandits \"))))))", "idx": "9759", "datum_id": {"dialogue_id": "4a14a7eb-ad7d-448c-9c70-8b3746ac12c1", "turn_index": 5}}
{"user_turn_0": "Yes , it needs to be somewhere expensive", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Joint", "user_turn_1": "What is the average cost per person there ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "9766", "datum_id": {"dialogue_id": "e966be9a-cccc-4e08-90e1-fa9470550deb", "turn_index": 3}}
{"user_turn_0": "I 'd prefer somewhere with outdoor seating too", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone", "user_turn_1": "That works . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Jute Joint \"))))))", "idx": "9769", "datum_id": {"dialogue_id": "e966be9a-cccc-4e08-90e1-fa9470550deb", "turn_index": 6}}
{"user_turn_0": "August 18th", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "The reminder has been updated from 6:30 PM to 5 o'clock", "tgt": "(plan (^(Reminder) Update :focus (Reminder.atDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 5L))))) :object (Reminder.atDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))", "idx": "9775", "datum_id": {"dialogue_id": "9c2ec19e-a08a-4606-b95b-88cf8c5217c5", "turn_index": 3}}
{"user_turn_0": "Is free wifi included ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "9780", "datum_id": {"dialogue_id": "c37a45e0-c117-40ce-af1b-1f946c101cba", "turn_index": 3}}
{"user_turn_0": "I need three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait , change the check - in date to Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.startDateTime \") (lambda (^(Constraint DateTime) x0) (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday)))))))", "idx": "9783", "datum_id": {"dialogue_id": "c37a45e0-c117-40ce-af1b-1f946c101cba", "turn_index": 6}}
{"user_turn_0": "Wait , change the check - in date to Tuesday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "If I cancel , is it free of charge ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "9784", "datum_id": {"dialogue_id": "c37a45e0-c117-40ce-af1b-1f946c101cba", "turn_index": 7}}
{"user_turn_0": "Directions from The Daily Grind to 14 Dagmar Passage", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "What is the weather today", "tgt": "(plan (^(WeatherReport) Find :object (WeatherReport.atDateTime_? (DateTime.date_? (?= (Today))))))", "idx": "9790", "datum_id": {"dialogue_id": "06c4185d-98c1-44ff-949d-c9e5a6b09df7", "turn_index": 4}}
{"user_turn_0": "None of them look good . How about restaurants that serve Seafood", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Juniper Cloud", "user_turn_1": "What is the address of the restaurant", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "9795", "datum_id": {"dialogue_id": "18932157-2f8b-46b5-add6-2774d1883e5a", "turn_index": 4}}
{"user_turn_0": "What is the address of the restaurant", "agent_turn_0": "Root system inform restaurant find focus equals address equals 234 University Street", "user_turn_1": "That 's fine . Book it for me at 3 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Floq \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "9796", "datum_id": {"dialogue_id": "18932157-2f8b-46b5-add6-2774d1883e5a", "turn_index": 5}}
{"user_turn_0": "Is it ok to make it for 2 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Make a change to the date on the 6th for check in", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 6L))))))", "idx": "9813", "datum_id": {"dialogue_id": "69207f4a-88d5-474f-a971-6f554b037855", "turn_index": 6}}
{"user_turn_0": "Make a change to the date on the 6th for check in", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do you know if the booking supports free cancellation as an option ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "9814", "datum_id": {"dialogue_id": "69207f4a-88d5-474f-a971-6f554b037855", "turn_index": 7}}
{"user_turn_0": "I am departing from London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 4 minute equals 20 meridiem equals PM price equals 156", "user_turn_1": "I prefer the one which departs at 1:45 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "9818", "datum_id": {"dialogue_id": "2a36d102-58fa-4a93-86ac-d11795fee14f", "turn_index": 2}}
{"user_turn_0": "Can you show me the message I sent to my sister ?", "agent_turn_0": "Root system inform message find", "user_turn_1": "Next task , ok . Can you book me a ride to the venue of my event later ?", "tgt": "(plan (^(Taxi) Book :object (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "9823", "datum_id": {"dialogue_id": "c9b3ed7c-edcf-4202-aaf2-12ab9dc18c54", "turn_index": 2}}
{"user_turn_0": "I 'm going to Manchester", "agent_turn_0": "Root system prompt train book object equals departureDateTime", "user_turn_1": "I 'm leaving on Wednesday and I need to arrive by 11PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& (& x0 (Train.departureDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday)))))) (Train.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (Time.hour_? (?= (Hour.apply 11L))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "9840", "datum_id": {"dialogue_id": "17ac886a-2181-41b6-9c86-39f79048043c", "turn_index": 2}}
{"user_turn_0": "Yes , cost range need not be high price", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Emptia", "user_turn_1": "I need to know if the restaurant has outdoor seats", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "9862", "datum_id": {"dialogue_id": "2e6eb3ad-b61b-4129-ad9c-f837ce08c7b0", "turn_index": 4}}
{"user_turn_0": "I prefer a different restaurant that has outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Gogol", "user_turn_1": "I need to know the average price per person", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "9864", "datum_id": {"dialogue_id": "2e6eb3ad-b61b-4129-ad9c-f837ce08c7b0", "turn_index": 6}}
{"user_turn_0": "I need to know which restaurants have at least two stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dim Summit", "user_turn_1": "I need to know if the restaurant takes credit card", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "9866", "datum_id": {"dialogue_id": "2e6eb3ad-b61b-4129-ad9c-f837ce08c7b0", "turn_index": 8}}
{"user_turn_0": "I need to know if the restaurant takes credit card", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "That 's good . Reserve it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Acacia Saint \"))))))", "idx": "9867", "datum_id": {"dialogue_id": "2e6eb3ad-b61b-4129-ad9c-f837ce08c7b0", "turn_index": 9}}
{"user_turn_0": "Tell me which airline is it", "agent_turn_0": "Root system inform flight find focus equals airLine equals EasyJet", "user_turn_1": "Ok fine , I 'd like to book the flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "9891", "datum_id": {"dialogue_id": "b4d633c3-bb37-47bd-96fd-7a9e98291d27", "turn_index": 3}}
{"user_turn_0": "No I 'll be going to Roma next on Thursday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 3 object equals nextDepartureDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM price equals 201", "user_turn_1": "I think this one 's good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "9893", "datum_id": {"dialogue_id": "b4d633c3-bb37-47bd-96fd-7a9e98291d27", "turn_index": 5}}
{"user_turn_0": "Actually , adjust the departure day of my first trip to be on Tuesday", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 12 minute equals 15 meridiem equals PM", "user_turn_1": "Ok cool , book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "9895", "datum_id": {"dialogue_id": "b4d633c3-bb37-47bd-96fd-7a9e98291d27", "turn_index": 7}}
{"user_turn_0": "Hmm , I think I 'd rather have a place that has outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Box", "user_turn_1": "Huh . Do they have parking there ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "9926", "datum_id": {"dialogue_id": "9cb86f75-3d80-41b6-a6cb-f0547488b5fb", "turn_index": 3}}
{"user_turn_0": "Huh . Do they have parking there ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Okay , cool . Let 's book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Floq \"))))))", "idx": "9927", "datum_id": {"dialogue_id": "9cb86f75-3d80-41b6-a6cb-f0547488b5fb", "turn_index": 4}}
{"user_turn_0": "It should be for the 19th of October", "agent_turn_0": "Root system prompt restaurant book object equals atDateTime equals time inform restaurant find object equals atDateTime equals listElementOne time equals hour equals 5 minute equals 30 meridiem equals PM listElementTwo time equals hour equals 8 meridiem equals PM", "user_turn_1": "I think the earlier one works well", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 5L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "9929", "datum_id": {"dialogue_id": "9cb86f75-3d80-41b6-a6cb-f0547488b5fb", "turn_index": 6}}
{"user_turn_0": "The hotel does it have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Can you please book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "9956", "datum_id": {"dialogue_id": "6e33de1e-cc83-4426-883f-d745024ab8c5", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , 4:30 PM .", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (^(DateTime) always))) :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Morning)))))))", "idx": "9970", "datum_id": {"dialogue_id": "d799929a-12f6-4a31-a1fb-6835c3313eb7", "turn_index": 0}}
{"user_turn_0": "Hi assistant , 4:30 PM .", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals startDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM", "user_turn_1": "Thanks for the help . The reminder has been created for you", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (^((Constraint DateTime)) refer))))", "idx": "9971", "datum_id": {"dialogue_id": "d799929a-12f6-4a31-a1fb-6835c3313eb7", "turn_index": 1}}
{"user_turn_0": "How 's the weather in Jersey today ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cold", "user_turn_1": "How 's the weather in Manchester ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint WeatherReport)) Path.apply \" object \") (lambda (^(Constraint WeatherReport) x0) (WeatherReport.location_? (?= \" Manchester \")))))", "idx": "9973", "datum_id": {"dialogue_id": "d799929a-12f6-4a31-a1fb-6835c3313eb7", "turn_index": 3}}
{"user_turn_0": "No , I will departure from London Euston", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM", "user_turn_1": "That works for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "9982", "datum_id": {"dialogue_id": "f5c75835-ef45-423f-8bca-a070807cdd0e", "turn_index": 2}}
{"user_turn_0": "Do they have free wifi", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "9997", "datum_id": {"dialogue_id": "1f1fd3b7-18a7-47e7-888c-814fbfa68765", "turn_index": 2}}
{"user_turn_0": "I will be needing a three room and the room type does not matter", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Please change the check out date to Thursday please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Thursday))))))", "idx": "10000", "datum_id": {"dialogue_id": "1f1fd3b7-18a7-47e7-888c-814fbfa68765", "turn_index": 5}}
{"user_turn_0": "Yes price range should be average price and the restaurant should have Spanish food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Godka", "user_turn_1": "What it usually cost per person", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "10009", "datum_id": {"dialogue_id": "80fb2027-f0db-4467-8a1f-713495a68160", "turn_index": 3}}
{"user_turn_0": "I would like another restaurant with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Goat and Guru", "user_turn_1": "Do they take credit cards", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "10011", "datum_id": {"dialogue_id": "80fb2027-f0db-4467-8a1f-713495a68160", "turn_index": 5}}
{"user_turn_0": "I would like another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Empirica", "user_turn_1": "Do they take credit card", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "10013", "datum_id": {"dialogue_id": "80fb2027-f0db-4467-8a1f-713495a68160", "turn_index": 7}}
{"user_turn_0": "Do they take credit card", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Godka \"))))))", "idx": "10014", "datum_id": {"dialogue_id": "80fb2027-f0db-4467-8a1f-713495a68160", "turn_index": 8}}
{"user_turn_0": "What 's the weather today ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Rainy", "user_turn_1": "Also book me a non - expensive 3 star restaurant", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High))))) (Restaurant.rating_? (?= 3)))))", "idx": "10021", "datum_id": {"dialogue_id": "926ac7e7-bacb-4451-99e1-50d4630b7365", "turn_index": 2}}
{"user_turn_0": "Which ones serve Sushi ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Godka", "user_turn_1": "Where is that ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "10024", "datum_id": {"dialogue_id": "926ac7e7-bacb-4451-99e1-50d4630b7365", "turn_index": 5}}
{"user_turn_0": "I really need it to have outdoor seating though", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone Martian", "user_turn_1": "Does it have outdoor seating ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "10027", "datum_id": {"dialogue_id": "926ac7e7-bacb-4451-99e1-50d4630b7365", "turn_index": 8}}
{"user_turn_0": "Does it have outdoor seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "Then book it for today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Flew Z \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Today)))))))))", "idx": "10028", "datum_id": {"dialogue_id": "926ac7e7-bacb-4451-99e1-50d4630b7365", "turn_index": 9}}
{"user_turn_0": "it is 11:30", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Ok , what if it 's on the 25th ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 25L))))))", "idx": "10030", "datum_id": {"dialogue_id": "926ac7e7-bacb-4451-99e1-50d4630b7365", "turn_index": 11}}
{"user_turn_0": "Executive", "agent_turn_0": "Root system offer taxi book", "user_turn_1": "Change the pick up point please to 54 Islington Park Road instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.source.location \") (lambda (^(Constraint String) x0) (?= \" 54 Islington Park Road \"))))", "idx": "10067", "datum_id": {"dialogue_id": "02b14829-32c7-4706-8400-6ddd278fc300", "turn_index": 5}}
{"user_turn_0": "Hotel have fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it !", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "10093", "datum_id": {"dialogue_id": "ee3b48a2-544b-47b1-86ec-433f0426343a", "turn_index": 3}}
{"user_turn_0": "I rather have another hotel with at least two stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Green Lushy Resorts price equals 166", "user_turn_1": "Does it have laundry ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.laundry_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "10111", "datum_id": {"dialogue_id": "ff072143-4400-4bc7-912a-d2435f947c19", "turn_index": 3}}
{"user_turn_0": "Does it have laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it , please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Westin \"))))))", "idx": "10112", "datum_id": {"dialogue_id": "ff072143-4400-4bc7-912a-d2435f947c19", "turn_index": 4}}
{"user_turn_0": "Yeah , go ahead and book it", "agent_turn_0": "Root systen inform restaurant book Completed", "user_turn_1": "Can you send a saloon type car to 7 Barrow Avenue", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.serviceType_? (List.exists_? (?= (ServiceType.Saloon)))) (Taxi.destination_? (Place.location_? (?= \" 7 Barrow Point Avenue \"))))))", "idx": "10148", "datum_id": {"dialogue_id": "b0374551-70f4-4258-973a-9325538f305a", "turn_index": 4}}
{"user_turn_0": "How can I get to 29 Alexander Road by bike ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Thanks for the help . Remind me to take a shower", "tgt": "(plan (^(Reminder) Create :object (Reminder.reminderContent_? (?= \" take a shower \"))))", "idx": "10152", "datum_id": {"dialogue_id": "43bce162-4f79-47f7-9254-fae7f9303c8d", "turn_index": 2}}
{"user_turn_0": "it is 3", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does this include free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "10166", "datum_id": {"dialogue_id": "d0b0ba69-2f5f-4ef8-98b1-c62ff4b8fbde", "turn_index": 5}}
{"user_turn_0": "Do any of the restaurants that you found serve Italian cuisine ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Joint", "user_turn_1": "What 's the address ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "10172", "datum_id": {"dialogue_id": "68182c60-968d-419e-90eb-6968176ddf01", "turn_index": 4}}
{"user_turn_0": "Give me another restaurant that offers parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dimple\u2019s", "user_turn_1": "Tell me the average cost per person at this restaurant", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "10175", "datum_id": {"dialogue_id": "68182c60-968d-419e-90eb-6968176ddf01", "turn_index": 7}}
{"user_turn_0": "Tell me the average cost per person at this restaurant", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 63", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Hambone \"))))))", "idx": "10176", "datum_id": {"dialogue_id": "68182c60-968d-419e-90eb-6968176ddf01", "turn_index": 8}}
{"user_turn_0": "Find something with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Chipotle Grill", "user_turn_1": "Book it for January 21st", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" The Juniper Cloud \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (& (Date.month_? (?= (January))) (Date.day_? (?= (Day.apply 21L)))))))))))", "idx": "10183", "datum_id": {"dialogue_id": "48a81437-e9d2-4f7a-8eb7-4c2aa1dcceb9", "turn_index": 3}}
{"user_turn_0": "I prefer another hotel with a low price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Freehand price equals 130", "user_turn_1": "Does the hotel have a car park ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasParking_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "10218", "datum_id": {"dialogue_id": "fa6abce0-02e9-4a3d-a81b-7aa4caacdf21", "turn_index": 8}}
{"user_turn_0": "Does the hotel have a car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Sheraton \"))))))", "idx": "10219", "datum_id": {"dialogue_id": "fa6abce0-02e9-4a3d-a81b-7aa4caacdf21", "turn_index": 9}}
{"user_turn_0": "Hi there , have today 's flight schedule added to calendar .", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Schedule a two hour event on the calendar", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (DateTimeRange.duration_? (AppleDuration.hour_? (?= 2))))))", "idx": "10261", "datum_id": {"dialogue_id": "e94d350f-9e5c-43c0-9594-4f12e46921d1", "turn_index": 1}}
{"user_turn_0": "Saturday at 11 AM", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "I need another favor . The reminder has been created for you", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (^(CalendarEvent) always))))))", "idx": "10263", "datum_id": {"dialogue_id": "e94d350f-9e5c-43c0-9594-4f12e46921d1", "turn_index": 3}}
{"user_turn_0": "Is parking available ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Okay go ahead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "10268", "datum_id": {"dialogue_id": "33691a11-3c9c-49f9-9acd-700314691892", "turn_index": 3}}
{"user_turn_0": "Hi assistant , what is the walking distance from 24 Empire Way to Medivet Islington .", "agent_turn_0": "Root system inform navigation find focus equals distance equals number equals 7", "user_turn_1": "Do me another favor . Book me a train from Wimbledon to Victoria leaving Thursday and coming back on December 18th", "tgt": "(plan (^(Train) Book :object (& (& (& (Train.source_? (Place.location_? (?= \" Wimbledon \"))) (Train.destination_? (Place.location_? (?= \" Victorial \")))) (Train.departureDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday)))))) (Train.returnDateTime_? (DateTime.date_? (& (Date.day_? (?= (Day.apply 18L))) (Date.month_? (?= (December)))))))))", "idx": "10273", "datum_id": {"dialogue_id": "06ed8ed6-b10a-4a9b-9791-f10fa0e5a8ca", "turn_index": 1}}
{"user_turn_0": "Great", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM", "user_turn_1": "That s good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "10275", "datum_id": {"dialogue_id": "06ed8ed6-b10a-4a9b-9791-f10fa0e5a8ca", "turn_index": 3}}
{"user_turn_0": "I 'd rather a different place that does n't have zero stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Blossomwell Resorts price equals 142", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Fresh Wave Resort \"))))))", "idx": "10296", "datum_id": {"dialogue_id": "b313af41-260e-439c-afcb-84d712a8962a", "turn_index": 4}}
{"user_turn_0": "I want one queen sized bed", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Change the check in date to Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "10298", "datum_id": {"dialogue_id": "b313af41-260e-439c-afcb-84d712a8962a", "turn_index": 6}}
{"user_turn_0": "Change the check in date to Tuesday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is prepayment required ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "10299", "datum_id": {"dialogue_id": "b313af41-260e-439c-afcb-84d712a8962a", "turn_index": 7}}
{"user_turn_0": "Are there any calls from my daughter ?", "agent_turn_0": "Root system inform phoneCall checkExistence Existed object equals atDateTime equals date definedValue equals Today", "user_turn_1": "Thanks so much . Can you text her ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Sister))))))))", "idx": "10305", "datum_id": {"dialogue_id": "59f90359-fc9f-4cde-8a2a-2be0d105f71a", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , what 's the rating for the Bard \u2019s Bench restaurant ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.rating_? (^(Number) always)) :object (Restaurant.restaurantName_? (?= \" Bard's Bench \"))))", "idx": "10311", "datum_id": {"dialogue_id": "e5327da3-f92d-4091-93f6-a55a95588268", "turn_index": 0}}
{"user_turn_0": "Hello , what 's the rating for the Bard \u2019s Bench restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 1", "user_turn_1": "Make a reservation there , I 'm in the mood for a dive", "tgt": "(plan (^(Restaurant) Book :object (^((Constraint Restaurant)) refer)))", "idx": "10312", "datum_id": {"dialogue_id": "e5327da3-f92d-4091-93f6-a55a95588268", "turn_index": 1}}
{"user_turn_0": "This one ends at 4 PM on July 13th", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "Schedule a calendar event at 2 o'clock", "tgt": "(plan (do (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 2L))))))) (^(Message) Create :object (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))))))", "idx": "10324", "datum_id": {"dialogue_id": "257cbd16-bbb9-4b27-9558-a43eac293bbd", "turn_index": 2}}
{"user_turn_0": "Check if it has a fitness center", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "10346", "datum_id": {"dialogue_id": "bcec8c11-52b6-4af9-ba42-3fe790b7b2c5", "turn_index": 3}}
{"user_turn_0": "Check the Ballyfin hotel", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "I need it to have free cancelations", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "10350", "datum_id": {"dialogue_id": "bcec8c11-52b6-4af9-ba42-3fe790b7b2c5", "turn_index": 7}}
{"user_turn_0": "Does the cost include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "10355", "datum_id": {"dialogue_id": "e707b761-6a7e-4b79-9f8a-fc8b3cbd5e83", "turn_index": 3}}
{"user_turn_0": "I need three single rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Switch the check in date to the 9th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Day)) Path.apply \" object.dateTimeRange.startDateTime.date.day \") (lambda (^(Constraint Day) x0) (?= (Day.apply 9L)))))", "idx": "10359", "datum_id": {"dialogue_id": "e707b761-6a7e-4b79-9f8a-fc8b3cbd5e83", "turn_index": 7}}
{"user_turn_0": "Yes that is correct", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM price equals 166", "user_turn_1": "Book me this flight for four passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast City \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (^((Constraint (List DateTime))) refer)))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 4))))))", "idx": "10385", "datum_id": {"dialogue_id": "eabcf308-cb9d-4fb0-b327-0869d84c1a26", "turn_index": 3}}
{"user_turn_0": "It 's the 27th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 12 minute equals 40 meridiem equals PM price equals 124", "user_turn_1": "Sure , go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "10387", "datum_id": {"dialogue_id": "eabcf308-cb9d-4fb0-b327-0869d84c1a26", "turn_index": 5}}
{"user_turn_0": "No . From Sheffield", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM", "user_turn_1": "No . Pick the one at 2:20 pm", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "10396", "datum_id": {"dialogue_id": "a61ed7d4-e04d-46b8-a46c-056b6f633008", "turn_index": 2}}
{"user_turn_0": "Hi there , make me a reminder for today 's event .", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Book me a restaurant in Leicester Square that has a moderate price range and a car park for 5 o'clock", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Leicester Square \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 5L))))))) (Restaurant.priceRange_? (?= (PriceRange.Moderate)))) (Restaurant.hasParking_? (?= true)))))", "idx": "10400", "datum_id": {"dialogue_id": "029d5def-73c1-40a0-a455-0a742c73da8b", "turn_index": 1}}
{"user_turn_0": "I do n't like any of what you found me . Show me restaurants that serve pizza", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kiwi Sea", "user_turn_1": "Tell me the average cost per person at this restaurant", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "10405", "datum_id": {"dialogue_id": "029d5def-73c1-40a0-a455-0a742c73da8b", "turn_index": 6}}
{"user_turn_0": "Tell me the average cost per person at this restaurant", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 39", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Emptia \"))))))", "idx": "10406", "datum_id": {"dialogue_id": "029d5def-73c1-40a0-a455-0a742c73da8b", "turn_index": 7}}
{"user_turn_0": "Saloon would be good", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals 54 Duncan Street", "user_turn_1": "Edit the destination to The Dima Foundation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" The Dima Foundation \"))))", "idx": "10411", "datum_id": {"dialogue_id": "0de57fa7-335e-45ee-99cf-cdf85e0537f8", "turn_index": 2}}
{"user_turn_0": "Please add Penelope to that event", "agent_turn_0": "Root system inform calendarEvent update Completed", "user_turn_1": "Thanks for the help . Please text him / her have a great day", "tgt": "(plan (^(Message) Create :object (Message.recipients_? (& (^((Constraint Contact)) refer) (Contact.textContent_? (?= \" have a great day \"))))))", "idx": "10426", "datum_id": {"dialogue_id": "5c08502d-165b-45c2-81ba-b438706cf7c6", "turn_index": 2}}
{"user_turn_0": "Is there free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "I actually want a different one that has a three stars rating", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.rating_? (?= 3))))))", "idx": "10437", "datum_id": {"dialogue_id": "63dbd6d5-916c-4a64-86e9-edc0caa1c2b2", "turn_index": 3}}
{"user_turn_0": "I actually want a different one that has a three stars rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Grand Hyatt price equals 142", "user_turn_1": "Is there a laundry service ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.laundry_? (^(Boolean) always)))))", "idx": "10438", "datum_id": {"dialogue_id": "63dbd6d5-916c-4a64-86e9-edc0caa1c2b2", "turn_index": 4}}
{"user_turn_0": "Is there a laundry service ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" River Park \"))))))", "idx": "10439", "datum_id": {"dialogue_id": "63dbd6d5-916c-4a64-86e9-edc0caa1c2b2", "turn_index": 5}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM price equals 65", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "10447", "datum_id": {"dialogue_id": "3a6354c5-6c91-457a-9323-5427bd1652f7", "turn_index": 5}}
{"user_turn_0": "Are there any missed calls from Mr Coleman ?", "agent_turn_0": "Root system inform phoneCall checkExistence Existed", "user_turn_1": "Next task , text him and say wait for me", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (^((Constraint Contact)) refer)) (Message.textContent_? (?= \" wait for me \")))))", "idx": "10471", "datum_id": {"dialogue_id": "b5301a44-76c1-4ea0-bca6-c5e874955805", "turn_index": 2}}
{"user_turn_0": "Is there a parking at that hotel ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Can you book me a room please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "10477", "datum_id": {"dialogue_id": "4357b1aa-8ce9-449d-8329-07f74d185952", "turn_index": 3}}
{"user_turn_0": "Grill", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Goat and Guru", "user_turn_1": "Does the restaurant have parking ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "10490", "datum_id": {"dialogue_id": "80b76a9f-b605-41ef-af7a-8e8431033044", "turn_index": 3}}
{"user_turn_0": "Tell me which of the restaurants have rating at least one star", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Chipotle Grill", "user_turn_1": "What is the address of the restaurant ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "10492", "datum_id": {"dialogue_id": "80b76a9f-b605-41ef-af7a-8e8431033044", "turn_index": 5}}
{"user_turn_0": "I prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Cityroom", "user_turn_1": "That 's fine . Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Goat and Guru \"))))))", "idx": "10494", "datum_id": {"dialogue_id": "80b76a9f-b605-41ef-af7a-8e8431033044", "turn_index": 7}}
{"user_turn_0": "I need a table for 2 people please", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Ok , can you change the appointment date to Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday)))))))))", "idx": "10496", "datum_id": {"dialogue_id": "80b76a9f-b605-41ef-af7a-8e8431033044", "turn_index": 9}}
{"user_turn_0": "Give me another restaurant that offers outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Shining Gate", "user_turn_1": "Is outdoor seating offered at this restaurant ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "10504", "datum_id": {"dialogue_id": "5c7447e0-1dcb-4f2c-adcf-ecf6b2f02ee5", "turn_index": 6}}
{"user_turn_0": "Is outdoor seating offered at this restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Chipotle Grill \"))))))", "idx": "10505", "datum_id": {"dialogue_id": "5c7447e0-1dcb-4f2c-adcf-ecf6b2f02ee5", "turn_index": 7}}
{"user_turn_0": "Sheffield", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM", "user_turn_1": "it looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "10526", "datum_id": {"dialogue_id": "d298a0ce-71bf-4eff-829a-bf5165cd161b", "turn_index": 3}}
{"user_turn_0": "4 o'clock on Wednesday", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "change the appointment date to tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Tomorrow)))))", "idx": "10533", "datum_id": {"dialogue_id": "5f8ba0ae-7e38-499f-a64f-cef2e03ab193", "turn_index": 5}}
{"user_turn_0": "Which of those restaurants serve Mexican food ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Beef Easy", "user_turn_1": "Does that place take credit card ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "10539", "datum_id": {"dialogue_id": "c8353173-5e3f-42d2-a0c3-fcccd6900a5d", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , please reserve a hotel in Modern Park . I want to check in tomorrow and check out on 16th , the hotel should have at least a two star rating .", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" Morden Park \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 16L)))))))) (Hotel.rating_? (?>= (someSalient (?= 2)))))))", "idx": "10545", "datum_id": {"dialogue_id": "dbdfa13d-8e4e-4a61-8e05-453bd230d686", "turn_index": 0}}
{"user_turn_0": "Sure , and do they have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Make reservation there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "10547", "datum_id": {"dialogue_id": "dbdfa13d-8e4e-4a61-8e05-453bd230d686", "turn_index": 2}}
{"user_turn_0": "I do n't care , as long as there is wifi", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Well , I want to check in on the 9th instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 9L))))))", "idx": "10549", "datum_id": {"dialogue_id": "dbdfa13d-8e4e-4a61-8e05-453bd230d686", "turn_index": 4}}
{"user_turn_0": "Three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can this booking be cancelled for free ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "10551", "datum_id": {"dialogue_id": "dbdfa13d-8e4e-4a61-8e05-453bd230d686", "turn_index": 6}}
{"user_turn_0": "Also can you set a reminder for the event on the 8th", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Thanks , next please send the event on July the 19th to Mr Avery", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (& (Date.day_? (?= (Day.apply 19L))) (Date.month_? (?= (July)))))))))) (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Avery \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "10557", "datum_id": {"dialogue_id": "d18181c1-223d-48ba-bc99-ba44f3b5d56f", "turn_index": 4}}
{"user_turn_0": "Friday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM price equals 170", "user_turn_1": "Looks fine to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "10562", "datum_id": {"dialogue_id": "fe39d69b-0707-49c6-a783-1824f4fbbe70", "turn_index": 4}}
{"user_turn_0": "I 'll be leaving from Leeds", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I want the one that leaves at 4 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "10571", "datum_id": {"dialogue_id": "558c222c-b969-446a-b642-5743f217e5b4", "turn_index": 2}}
{"user_turn_0": "Hi there , can you book me a taxi to my event venue for my event this morning", "agent_turn_0": "Root system prompt taxi book object equals destination inform calendarEvent find notExisted", "user_turn_1": "The destination should be listed as", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Place)) Path.apply \" object.destination \") (lambda (^(Constraint Place) x0) (Place.location_? (?= \" Ash Grove Industrial Park \")))))", "idx": "10575", "datum_id": {"dialogue_id": "6a5f5259-9175-49c4-a3bf-c651052ee192", "turn_index": 1}}
{"user_turn_0": "I want outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals priceRange", "user_turn_1": "Does n't matter , just need three stars", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.priceRange_? (?= (PriceRange.Any)))) (Restaurant.rating_? (?>= (someSalient (?= 3))))))))", "idx": "10587", "datum_id": {"dialogue_id": "2dfa0fb7-5310-48a1-9dee-9c00af6249b4", "turn_index": 3}}
{"user_turn_0": "What is the average cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 32", "user_turn_1": "That is fine , book the restaurant", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Jurassic Pork \"))))))", "idx": "10589", "datum_id": {"dialogue_id": "2dfa0fb7-5310-48a1-9dee-9c00af6249b4", "turn_index": 5}}
{"user_turn_0": "Show me the directions there", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Find me a hotel with a lower price", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))))))", "idx": "10594", "datum_id": {"dialogue_id": "4995134e-679d-46bc-bc35-83e28ca0e29a", "turn_index": 2}}
{"user_turn_0": "Find me a hotel with a lower price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Ritz-Carlton price equals 134", "user_turn_1": "Does it have parking ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasParking_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "10595", "datum_id": {"dialogue_id": "4995134e-679d-46bc-bc35-83e28ca0e29a", "turn_index": 3}}
{"user_turn_0": "Does it have a private bath room ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Grand Hyatt \"))))))", "idx": "10598", "datum_id": {"dialogue_id": "4995134e-679d-46bc-bc35-83e28ca0e29a", "turn_index": 6}}
{"user_turn_0": "Two", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is breakfast included with the booking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "10600", "datum_id": {"dialogue_id": "4995134e-679d-46bc-bc35-83e28ca0e29a", "turn_index": 8}}
{"user_turn_0": "I 'd like a different hotel that has a moderate price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Grand Hyatt price equals 201", "user_turn_1": "Book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Dreamy Desert Suites \"))))))", "idx": "10616", "datum_id": {"dialogue_id": "d5c6351e-4ec9-4ce6-814a-984048f6258c", "turn_index": 3}}
{"user_turn_0": "I need two rooms of any type", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually , make the check out Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Saturday)))))", "idx": "10619", "datum_id": {"dialogue_id": "d5c6351e-4ec9-4ce6-814a-984048f6258c", "turn_index": 6}}
{"user_turn_0": "Actually , make the check out Saturday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does it it have free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "10620", "datum_id": {"dialogue_id": "d5c6351e-4ec9-4ce6-814a-984048f6258c", "turn_index": 7}}
{"user_turn_0": "The 25th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM price equals 150", "user_turn_1": "Looking good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "10637", "datum_id": {"dialogue_id": "97b09113-ba62-4961-83a9-798fcaafc053", "turn_index": 3}}
{"user_turn_0": "I 'd prefer the one at 2 PM", "agent_turn_0": "Root system offer flight book", "user_turn_1": "Actually can you modify the departure day of my first trip to Wednesda", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))))))", "idx": "10651", "datum_id": {"dialogue_id": "75238e63-92fe-4b54-b420-308294b30b86", "turn_index": 6}}
{"user_turn_0": "Actually can you modify the departure day of my first trip to Wednesda", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM price equals 134", "user_turn_1": "Which airline ?", "tgt": "(plan (^(Flight) Find :focus (Flight.airWays_? (^(String) always)) :object (?= (^(Flight Dynamic) reference (^(Dynamic) always)))))", "idx": "10652", "datum_id": {"dialogue_id": "75238e63-92fe-4b54-b420-308294b30b86", "turn_index": 7}}
{"user_turn_0": "Which airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "I prefer the one which depart at 3:45 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "10653", "datum_id": {"dialogue_id": "75238e63-92fe-4b54-b420-308294b30b86", "turn_index": 8}}
{"user_turn_0": "I 'm coming back on Sunday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM", "user_turn_1": "Looks good enough", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "10665", "datum_id": {"dialogue_id": "80ab0555-7e8a-4ded-8a6a-98552ed6f097", "turn_index": 5}}
{"user_turn_0": "None of them look good . Can you let me see more option ? The food type does not matter", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kiwi Sea", "user_turn_1": "Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Maple \"))))))", "idx": "10690", "datum_id": {"dialogue_id": "4aa35d83-1419-4ef1-b8c4-a7300e719d70", "turn_index": 6}}
{"user_turn_0": "The airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals EasyJet", "user_turn_1": "I 'd rather the one that leaves at 3 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "10702", "datum_id": {"dialogue_id": "38c74c34-aa2e-4898-8909-b09f2a0caff2", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i 'd like to make a table reservation at 3:30 PM .", "tgt": "(plan (^(Restaurant) Book :object (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "10704", "datum_id": {"dialogue_id": "16eda750-04dd-4c82-9262-567680161b47", "turn_index": 0}}
{"user_turn_0": "Hello assistant , give me directions to my calendar event .", "agent_turn_0": "Root system inform navigation find object equals destination equals location equals The African Waistcoat", "user_turn_1": "Book a taxi for me there", "tgt": "(plan (^(Taxi) Book :object (Taxi.destination_? (^((Constraint Place)) refer))))", "idx": "10710", "datum_id": {"dialogue_id": "47331cc9-7245-4d64-8b8d-e752df0970a3", "turn_index": 1}}
{"user_turn_0": "Hi my assistant , i need to reserve a three star restaurant , on Thursday at 11:30 AM .", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName location", "user_turn_1": "West Wickman", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.location_? (?= \" West Wickham \"))))))", "idx": "10720", "datum_id": {"dialogue_id": "d377c624-861e-436b-97e7-3f4670eca905", "turn_index": 1}}
{"user_turn_0": "I want the a different one , with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Spago", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Interknack \"))))))", "idx": "10724", "datum_id": {"dialogue_id": "d377c624-861e-436b-97e7-3f4670eca905", "turn_index": 5}}
{"user_turn_0": "Table for 2", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Edit the appointment date to the 11th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 11L))))))", "idx": "10726", "datum_id": {"dialogue_id": "d377c624-861e-436b-97e7-3f4670eca905", "turn_index": 7}}
{"user_turn_0": "Will it be a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Please book it for two passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.source_? (Place.location_? (?= \" Leeds \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.class_? (?= (FlightClass.Business)))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 2))))))", "idx": "10732", "datum_id": {"dialogue_id": "1111ae96-7a25-4fde-a409-1c182cac334f", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i want to see your Decision Making Meeting in The Great Highways on my calendar .", "tgt": "(plan (^(CalendarEvent) Find :object (& (CalendarEvent.eventName_? (?= \" Decision Making Meetings \")) (CalendarEvent.location_? (?= \" The Great Highway \")))))", "idx": "10734", "datum_id": {"dialogue_id": "0c014411-88d9-454c-acd7-7f05baaba0ec", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , is there a call from Mr Edmunds ?", "tgt": "(plan (^(PhoneCall) CheckExistence :object (PhoneCall.sender_? (Contact.person_? (& (Person.name_? (?= \" Edmunds \")) (Person.namePrefix_? (?= \" Mr \")))))))", "idx": "10739", "datum_id": {"dialogue_id": "962c0d21-60da-4bbe-8554-3ba2aab20141", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , send tomorrow 's event to Jacob .", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))))))) (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Jacob \")))))))", "idx": "10744", "datum_id": {"dialogue_id": "841ceb9d-0a7d-4ce7-93a5-263408137547", "turn_index": 0}}
{"user_turn_0": "Do I have an event every week on my calendar", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Create one", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.duration_? (AppleDuration.minute_? (?= 45))))))", "idx": "10747", "datum_id": {"dialogue_id": "841ceb9d-0a7d-4ce7-93a5-263408137547", "turn_index": 3}}
{"user_turn_0": "yes", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "set a reminder for tomrrows event", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow))))))))))", "idx": "10757", "datum_id": {"dialogue_id": "35993f8c-c933-49a5-b626-d76e903d268c", "turn_index": 3}}
{"user_turn_0": "Hi there , change the date of event which lasts for two hours on the calendar", "agent_turn_0": "Root system prompt calendarEvent update focus equals dateTimeRange equals startDateTime equals date", "user_turn_1": "The new date is Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Update \") (^((Constraint Date)) Path.apply \" focus.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Sunday))))))", "idx": "10765", "datum_id": {"dialogue_id": "de3895ea-f29a-4d42-9e10-35d460f2f934", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , is there a car type that you prefer ? Your choices include Saloon , MPV and Executive .", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" 8063 Lake View \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))))))))))", "idx": "10774", "datum_id": {"dialogue_id": "57e101db-af79-49bf-8f4b-ff8f6ef5fa39", "turn_index": 0}}
{"user_turn_0": "Hi my assistant , is there a car type that you prefer ? Your choices include Saloon , MPV and Executive .", "agent_turn_0": "Root system prompt taxi book object equals serviceType inform taxi find object equals serviceType equals listElementOne Saloon listElementTwo MPV listElementThree Executive", "user_turn_1": "Book a taxi that will take me from 8063 Lake View to today 's calendar event venue", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Taxi)) Path.apply \" object \") (lambda (^(Constraint Taxi) x0) (& (& x0 (Taxi.serviceType_? (List.exists_? (?= (ServiceType.Any))))) (Taxi.passengers_? (?= 6))))))", "idx": "10775", "datum_id": {"dialogue_id": "57e101db-af79-49bf-8f4b-ff8f6ef5fa39", "turn_index": 1}}
{"user_turn_0": "Yes . please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM price equals 210", "user_turn_1": "I want the one leaving at 3 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "10781", "datum_id": {"dialogue_id": "4155ad3a-1e3b-48e0-8779-567018e54b6c", "turn_index": 2}}
{"user_turn_0": "Show me a different hotel that has a rating of three stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Obsidian Sky price equals 170", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Triton \"))))))", "idx": "10794", "datum_id": {"dialogue_id": "1b95fc32-38be-4c46-a993-562cc4fd1d17", "turn_index": 3}}
{"user_turn_0": "I do n't care about the room type . Just book me two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is free cancellation supported ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "10798", "datum_id": {"dialogue_id": "1b95fc32-38be-4c46-a993-562cc4fd1d17", "turn_index": 7}}
{"user_turn_0": "I need a return ticket for Sunday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 meridiem equals PM", "user_turn_1": "Yes please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "10804", "datum_id": {"dialogue_id": "e77ec181-a4ee-4c1d-b8d5-0fcfa415ffe4", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , tell me the average cost per person at this restaurant .", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Forest Hill \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow)))))) (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Restaurant.foodType_? (?= (FoodType.Korean))))))", "idx": "10817", "datum_id": {"dialogue_id": "f301d219-ac68-4b4e-901b-02e09510a1a4", "turn_index": 0}}
{"user_turn_0": "Hey , tell me the average cost per person at this restaurant .", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dimple\u2019s", "user_turn_1": "I found the following restaurants that fit your criteria . A good option appears to be Dimple 's", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "10818", "datum_id": {"dialogue_id": "f301d219-ac68-4b4e-901b-02e09510a1a4", "turn_index": 1}}
{"user_turn_0": "Give me a different restaurant that has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone", "user_turn_1": "Is there outdoor seating at this restaurant ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "10820", "datum_id": {"dialogue_id": "f301d219-ac68-4b4e-901b-02e09510a1a4", "turn_index": 3}}
{"user_turn_0": "Do any of the restaurants you found have a rating of at least three stars ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Bandits", "user_turn_1": "Is credit card accepted at the restaurant ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "10823", "datum_id": {"dialogue_id": "f301d219-ac68-4b4e-901b-02e09510a1a4", "turn_index": 6}}
{"user_turn_0": "Is credit card accepted at the restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Dimple's \"))))))", "idx": "10824", "datum_id": {"dialogue_id": "f301d219-ac68-4b4e-901b-02e09510a1a4", "turn_index": 7}}
{"user_turn_0": "it is 6:30", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Switch the appointment time to 11 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (Time.hour_? (?= (Hour.apply 11L))))))", "idx": "10826", "datum_id": {"dialogue_id": "f301d219-ac68-4b4e-901b-02e09510a1a4", "turn_index": 9}}
{"user_turn_0": "Hey , set up computer science study with Sebastian on the calendar .", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange", "user_turn_1": "How about at 2 PM and hold it in The Riley Center", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object \") (lambda (^(Constraint CalendarEvent) x0) (& (& x0 (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))) (CalendarEvent.location_? (?= \" The Riley Center \"))))))", "idx": "10830", "datum_id": {"dialogue_id": "d031a280-9c84-42d2-be88-9b68c079d381", "turn_index": 1}}
{"user_turn_0": "For which airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals EasyJet", "user_turn_1": "I 'd rather do the 2:50 PM flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "10838", "datum_id": {"dialogue_id": "a09a96b3-5633-4098-a106-27e3c2ef516f", "turn_index": 4}}
{"user_turn_0": "Wednesday", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM price equals 210", "user_turn_1": "Cool . Book this for one passenger", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Paris \"))) (Flight.airLine_? (?= \" Eastern \"))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 1))))))", "idx": "10859", "datum_id": {"dialogue_id": "67c6fd9d-42bc-4d9f-aa75-ee1a5e6e441e", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , please tell me what are the dates you want to stay ?", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" Baker Street \")) (Hotel.hotelName_? (?= \" Fresh Wave Resort \"))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Single)))))))", "idx": "10866", "datum_id": {"dialogue_id": "938279a9-d93e-4369-9bb7-ec7762eda28f", "turn_index": 0}}
{"user_turn_0": "I 'm leaving tomorrow from Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM price equals 130", "user_turn_1": "Let 's book that flight for two people", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Amsterdam \"))) (Flight.tripType_? (?= (TripType.oneWay)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 2))))))", "idx": "10873", "datum_id": {"dialogue_id": "b06e7705-0cda-45ed-a759-990b47bcc162", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , how long does it take to get to the ice hockey .", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (?= (^(Place CalendarEvent) reference (& (CalendarEvent.eventName_? (?= \" ice hockey \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))))))))))", "idx": "10876", "datum_id": {"dialogue_id": "953397b0-8559-4f15-b540-5ff5138df86f", "turn_index": 0}}
{"user_turn_0": "It does n't matter much , I just want American Food please", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Shining Gate", "user_turn_1": "Do they have outdoor seating ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "10889", "datum_id": {"dialogue_id": "986c50f4-b649-4bcb-b416-929bf472dcd0", "turn_index": 3}}
{"user_turn_0": "Do they have outdoor seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "That 's okay , please book that for me at 3:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "10890", "datum_id": {"dialogue_id": "986c50f4-b649-4bcb-b416-929bf472dcd0", "turn_index": 4}}
{"user_turn_0": "Yes price range should be high price and rating five stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dingo", "user_turn_1": "What is the average cost per person ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "10901", "datum_id": {"dialogue_id": "4c84f208-7efd-42f6-b4f3-7d705286a1a1", "turn_index": 2}}
{"user_turn_0": "I prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flew Z", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Dingo \"))))))", "idx": "10905", "datum_id": {"dialogue_id": "4c84f208-7efd-42f6-b4f3-7d705286a1a1", "turn_index": 6}}
{"user_turn_0": "Does the hotel have car parking ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "10912", "datum_id": {"dialogue_id": "1daf6775-ba95-434a-89cf-c15bdede62a2", "turn_index": 3}}
{"user_turn_0": "I would like to have three double rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "10916", "datum_id": {"dialogue_id": "1daf6775-ba95-434a-89cf-c15bdede62a2", "turn_index": 7}}
{"user_turn_0": "Do I need to prepay ?", "agent_turn_0": "Root system inform hotel find focus equals prePayment equals False", "user_turn_1": "Actually can you change the check out date to Saturday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Saturday))))))", "idx": "10917", "datum_id": {"dialogue_id": "1daf6775-ba95-434a-89cf-c15bdede62a2", "turn_index": 8}}
{"user_turn_0": "For December 17th at 11 AM", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "How about January 13th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (& (Date.month_? (?= (January))) (Date.day_? (?= (Day.apply 13L)))))))", "idx": "10927", "datum_id": {"dialogue_id": "3ca40e63-8585-40b9-8118-af38c1836a43", "turn_index": 3}}
{"user_turn_0": "From Gatwick Airport", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM", "user_turn_1": "I 'll take it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "10944", "datum_id": {"dialogue_id": "ac7cc26a-2534-4ee6-85ae-f8d3f42e375f", "turn_index": 3}}
{"user_turn_0": "I 'll take it", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 meridiem equals PM", "user_turn_1": "Sure", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (^((Constraint Time)) refer))))))", "idx": "10945", "datum_id": {"dialogue_id": "ac7cc26a-2534-4ee6-85ae-f8d3f42e375f", "turn_index": 4}}
{"user_turn_0": "London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM price equals 145", "user_turn_1": "I think I 'd prefer the flight at 4:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "10955", "datum_id": {"dialogue_id": "37eb90ed-fdc7-4212-906c-8ba73093e198", "turn_index": 3}}
{"user_turn_0": "Which airline is it ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "That 's fine . I 'd like to book the flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "10982", "datum_id": {"dialogue_id": "f7336e45-979f-4bb0-a311-123e22b22748", "turn_index": 4}}
{"user_turn_0": "Does the hotel have private bath room ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Great . Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "10989", "datum_id": {"dialogue_id": "8cf3c6d0-4edf-4407-aa81-d0192270c02e", "turn_index": 3}}
{"user_turn_0": "I need 2 rooms please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking support free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "10993", "datum_id": {"dialogue_id": "8cf3c6d0-4edf-4407-aa81-d0192270c02e", "turn_index": 7}}
{"user_turn_0": "Departing from Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "The one that departs at 3:30 PM works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "10997", "datum_id": {"dialogue_id": "e57f0aa3-3d19-4a38-b975-ca04a76bc95e", "turn_index": 2}}
{"user_turn_0": "Indian", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Stazione restaurant", "user_turn_1": "What is the address ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "11003", "datum_id": {"dialogue_id": "d6955c60-1463-4793-a11f-691d069103d2", "turn_index": 2}}
{"user_turn_0": "Which of the restaurants are rated more than zero stars ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dimple\u2019s", "user_turn_1": "Does the restaurant have outdoor seats ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "11005", "datum_id": {"dialogue_id": "d6955c60-1463-4793-a11f-691d069103d2", "turn_index": 4}}
{"user_turn_0": "I prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flip Out", "user_turn_1": "Does the restaurant have outdoor seats ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "11007", "datum_id": {"dialogue_id": "d6955c60-1463-4793-a11f-691d069103d2", "turn_index": 6}}
{"user_turn_0": "Does the restaurant have outdoor seats ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Stazione restaurant \"))))))", "idx": "11008", "datum_id": {"dialogue_id": "d6955c60-1463-4793-a11f-691d069103d2", "turn_index": 7}}
{"user_turn_0": "Do any of these restaurants have three stars ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "I 'm good with that . Let 's book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Jute Box \"))))))", "idx": "11017", "datum_id": {"dialogue_id": "841bc29e-ccd0-4c90-8bbf-f12b0a1ec0d3", "turn_index": 6}}
{"user_turn_0": "I 'd prefer the flight that departs at 1:40 PM", "agent_turn_0": "Root system prompt flight book object equals tripType", "user_turn_1": "Yeah thanks", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.tripType_? (?= (TripType.roundTrip)))))))", "idx": "11029", "datum_id": {"dialogue_id": "dee76dbe-c58f-4314-957f-1646886c1a88", "turn_index": 3}}
{"user_turn_0": "Yes , Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM price equals 142", "user_turn_1": "That is okay", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "11042", "datum_id": {"dialogue_id": "634fc2da-c47c-4cda-bf59-33fc7e0fba0f", "turn_index": 4}}
{"user_turn_0": "I willI will be traveling to Cardiff", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 20 meridiem equals PM", "user_turn_1": "No , book me the 1:40 PM train instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "11047", "datum_id": {"dialogue_id": "f0a4e59f-e1f0-4f33-b177-59fdfd14b28a", "turn_index": 3}}
{"user_turn_0": "I need two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "11054", "datum_id": {"dialogue_id": "fad303f4-a632-4e6b-83c3-85757f4e5216", "turn_index": 5}}
{"user_turn_0": "I want to know if I have event held in Shoreditch on the calendar", "agent_turn_0": "Root system inform calendarEvent find Existed", "user_turn_1": "I need to know the time it takes to get there", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (Place.location_? (^((Constraint String)) refer)))))", "idx": "11070", "datum_id": {"dialogue_id": "63be278c-b8eb-4452-a7d1-922de2dc99ae", "turn_index": 3}}
{"user_turn_0": "Make it for 3:00 in the afternoon , today", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Okay , cool . And make a reminder for 2:30 in the afternoon , too", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Reminder)) Path.apply \" object \") (lambda (^(Constraint Reminder) x0) (Reminder.atDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "11101", "datum_id": {"dialogue_id": "f3cfc697-b45a-45d9-988a-f1e147c948e5", "turn_index": 2}}
{"user_turn_0": "Which of those serve Chinese hotpot", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Beef Easy", "user_turn_1": "What s the address ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "11151", "datum_id": {"dialogue_id": "ad53f1c1-39b6-46fc-bbd8-654bc27ecc65", "turn_index": 5}}
{"user_turn_0": "Any price range is fine . Just make sure it has a 2 star rating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "That works . Book a table there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "11155", "datum_id": {"dialogue_id": "5100f3b1-a568-452a-a5d0-49ad5843406c", "turn_index": 3}}
{"user_turn_0": "I prefer another hotel with at least three stars rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals The Watson price equals 155", "user_turn_1": "Does the hotel have car park ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasParking_? (^(Boolean) always)))))", "idx": "11165", "datum_id": {"dialogue_id": "dc145c5d-5055-4412-99a8-f372b99f5d22", "turn_index": 5}}
{"user_turn_0": "Does the hotel have car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Freehand \"))))))", "idx": "11166", "datum_id": {"dialogue_id": "dc145c5d-5055-4412-99a8-f372b99f5d22", "turn_index": 6}}
{"user_turn_0": "Does the hotel have car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "11176", "datum_id": {"dialogue_id": "bf2c3080-3c34-403b-b015-75c504a62e73", "turn_index": 5}}
{"user_turn_0": "Wait I need 2 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you change the check out date to Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Friday)))))", "idx": "11181", "datum_id": {"dialogue_id": "bf2c3080-3c34-403b-b015-75c504a62e73", "turn_index": 10}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , where 's the The Fresco at ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.location_? (^(String) always)) :object (Hotel.hotelName_? (?= \" The Fresco \"))))", "idx": "11188", "datum_id": {"dialogue_id": "9819e740-0f4d-4b01-aa87-61a18372d6e3", "turn_index": 0}}
{"user_turn_0": "Hi assistant , where 's the The Fresco at ?", "agent_turn_0": "Root system inform hotel find focus equals location equals New Cross", "user_turn_1": "Book a double room for your favorite person", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.hotelName_? (?= \" The Fresco \")) (Hotel.roomType_? (List.exists_? (?= (RoomType.Double)))))))", "idx": "11189", "datum_id": {"dialogue_id": "9819e740-0f4d-4b01-aa87-61a18372d6e3", "turn_index": 1}}
{"user_turn_0": "Get me two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Hold on . I want to change the checkout date to the 19th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 19L))))))", "idx": "11192", "datum_id": {"dialogue_id": "9819e740-0f4d-4b01-aa87-61a18372d6e3", "turn_index": 4}}
{"user_turn_0": "Hold on . I want to change the checkout date to the 19th", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is free cancellation available ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "11193", "datum_id": {"dialogue_id": "9819e740-0f4d-4b01-aa87-61a18372d6e3", "turn_index": 5}}
{"user_turn_0": "I would like one in Hammersmith", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Boiling Fence", "user_turn_1": "Which one of these", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.rating_? (?>= (someSalient (?= 2))))))))", "idx": "11197", "datum_id": {"dialogue_id": "77532a83-7f90-4e0d-9e92-2bdf15d079b2", "turn_index": 2}}
{"user_turn_0": "Neither of them look good . Show me restaurants that have Spanish food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dingo", "user_turn_1": "What is the cost per person", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "11199", "datum_id": {"dialogue_id": "77532a83-7f90-4e0d-9e92-2bdf15d079b2", "turn_index": 4}}
{"user_turn_0": "What is the cost per person", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 65", "user_turn_1": "That s good . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Boiling Fence \"))))))", "idx": "11200", "datum_id": {"dialogue_id": "77532a83-7f90-4e0d-9e92-2bdf15d079b2", "turn_index": 5}}
{"user_turn_0": "Hello assistant , i need a room with a queen bed at a four star hotel that has parking", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "Find me one in Oakwood that has a high price", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.location_? (?= \" Oakwood \"))) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))))))", "idx": "11205", "datum_id": {"dialogue_id": "0d45873e-0e88-4a4c-a42d-d4a7714aecb9", "turn_index": 1}}
{"user_turn_0": "Do they have a fitness center though", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Make the reservation there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "11207", "datum_id": {"dialogue_id": "0d45873e-0e88-4a4c-a42d-d4a7714aecb9", "turn_index": 3}}
{"user_turn_0": "AM", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "Next , i need to catch a train from Edinburgh Waverly to Stratford . This is for today", "tgt": "(plan (^(Train) Book :object (& (& (Train.source_? (Place.location_? (?= \" Edinburgh Waverley \"))) (Train.destination_? (Place.location_? (?= \" Stratford \")))) (Train.departureDateTime_? (DateTime.date_? (?= (Today)))))))", "idx": "11218", "datum_id": {"dialogue_id": "dc4d40fa-3c19-4a0a-a5f2-33b80ddd0667", "turn_index": 3}}
{"user_turn_0": "What airline is it ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "11224", "datum_id": {"dialogue_id": "9501ab3c-d6ce-4806-85db-db1a3174ca14", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , book an inexpensive hotel with at least three stars .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))) (Hotel.rating_? (?>= (someSalient (?= 3)))))))", "idx": "11229", "datum_id": {"dialogue_id": "33f24a62-dbe0-4f33-832d-2793bcd249ce", "turn_index": 0}}
{"user_turn_0": "Does the hotel have parking ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "11232", "datum_id": {"dialogue_id": "33f24a62-dbe0-4f33-832d-2793bcd249ce", "turn_index": 3}}
{"user_turn_0": "I would like to have two king sized beds", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Change the check out date to Saturday please ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Saturday)))))", "idx": "11236", "datum_id": {"dialogue_id": "33f24a62-dbe0-4f33-832d-2793bcd249ce", "turn_index": 7}}
{"user_turn_0": "Change the check out date to Saturday please ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "11237", "datum_id": {"dialogue_id": "33f24a62-dbe0-4f33-832d-2793bcd249ce", "turn_index": 8}}
{"user_turn_0": "I see . How about the Vitale hotel ? Is it available ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Great . Do I need prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "11245", "datum_id": {"dialogue_id": "225ae092-82e7-4a21-b06e-bdc9952b7e24", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , give me directions from 6a Streatham to Rose Street", "tgt": "(plan (^(Navigation) Find :object (& (Navigation.source_? (Place.location_? (?= \" 6a Streatham Hill \"))) (Navigation.destination_? (Place.location_? (?= \" Rose Street \"))))))", "idx": "11257", "datum_id": {"dialogue_id": "7be1d10e-54f1-493e-bf2d-1d2b72b06b36", "turn_index": 0}}
{"user_turn_0": "It does n't matter , but I need three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "wait does it have free cancellation", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "11272", "datum_id": {"dialogue_id": "50bd638a-e5ae-4272-ba36-7f7418b4c732", "turn_index": 5}}
{"user_turn_0": "I want one that does n't have too high of a price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Renaissance price equals 201", "user_turn_1": "Does it have free wifi ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasWifi_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "11277", "datum_id": {"dialogue_id": "775b853d-c7f8-470a-8f58-4641fe86c2bd", "turn_index": 3}}
{"user_turn_0": "Does it have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "11278", "datum_id": {"dialogue_id": "775b853d-c7f8-470a-8f58-4641fe86c2bd", "turn_index": 4}}
{"user_turn_0": "I need three rooms of any type", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel for free ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "11283", "datum_id": {"dialogue_id": "775b853d-c7f8-470a-8f58-4641fe86c2bd", "turn_index": 9}}
{"user_turn_0": "It 's going to be today and please book it for four people", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "Let me go with Monday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Monday))))))", "idx": "11288", "datum_id": {"dialogue_id": "01641641-0557-413f-a415-f2388ddf5bd5", "turn_index": 3}}
{"user_turn_0": "Bradford", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM", "user_turn_1": "I prefer the one at 4 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "11295", "datum_id": {"dialogue_id": "b2acb70b-d154-48c0-a758-8a346778b055", "turn_index": 2}}
{"user_turn_0": "Saturday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "11298", "datum_id": {"dialogue_id": "b2acb70b-d154-48c0-a758-8a346778b055", "turn_index": 5}}
{"user_turn_0": "Does it have laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "There 's a washing machine in every room", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "11311", "datum_id": {"dialogue_id": "083deb41-d979-493f-adf0-d7205e421569", "turn_index": 4}}
{"user_turn_0": "There 's a washing machine in every room", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "Okay , what dates do you want to stay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 11L))))) (DateTimeRange.endDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 13L)))) (month_? (Date.month_? (?= (July))))))))))))", "idx": "11312", "datum_id": {"dialogue_id": "083deb41-d979-493f-adf0-d7205e421569", "turn_index": 5}}
{"user_turn_0": "How can I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Alright book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "11319", "datum_id": {"dialogue_id": "06e14c3a-ac96-47dd-a32f-8593dab40ec6", "turn_index": 3}}
{"user_turn_0": "I want to book one double room please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there a free cancellation option ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "11325", "datum_id": {"dialogue_id": "7a664bd6-e761-4eca-9336-0d04c92ccc66", "turn_index": 3}}
{"user_turn_0": "Does that place have a private bathroom ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Please make the booking for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "11335", "datum_id": {"dialogue_id": "9ceeebd9-4317-4202-b90b-7e4649751e03", "turn_index": 3}}
{"user_turn_0": "I would like to have two queen sized beds", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "I actually need to revise the check in date to be Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "11338", "datum_id": {"dialogue_id": "9ceeebd9-4317-4202-b90b-7e4649751e03", "turn_index": 6}}
{"user_turn_0": "I actually need to revise the check in date to be Tuesday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "I need to know if that booking includes free cancellation", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "11339", "datum_id": {"dialogue_id": "9ceeebd9-4317-4202-b90b-7e4649751e03", "turn_index": 7}}
{"user_turn_0": "Okay , what 's the address of the place", "agent_turn_0": "Root system inform restaurant find focus equals address equals 66 Park Avenue", "user_turn_1": "Sounds fine to me , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Beef Easy \"))))))", "idx": "11351", "datum_id": {"dialogue_id": "abdadb13-4a23-43ea-95a7-1c3a6a0952e6", "turn_index": 4}}
{"user_turn_0": "Tell me the hotel 's rating", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "11373", "datum_id": {"dialogue_id": "00376ef6-968e-492b-a1d5-d46055631210", "turn_index": 3}}
{"user_turn_0": "Hey , have my train schedule from Aberdeen to Dudley added to calendar .", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Have this morning 's restaurant appointment added to calendar", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (?= (^(DateTimeRange Restaurant) reference (Restaurant.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Morning))))))))))", "idx": "11378", "datum_id": {"dialogue_id": "2e2033bf-f55c-4df8-b983-7b64dc23392d", "turn_index": 1}}
{"user_turn_0": "No , departing from Leeds", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 2 meridiem equals PM price equals 156", "user_turn_1": "Okay , I 'll take this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "11384", "datum_id": {"dialogue_id": "f6f3836d-6463-4e32-9959-a12c2e5a2401", "turn_index": 2}}
{"user_turn_0": "I will be leaving from Euston", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 35 meridiem equals PM", "user_turn_1": "I want the one that leaves at 2:40 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (Train.departureDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "11394", "datum_id": {"dialogue_id": "6ac7d5b6-cfc6-4495-bd8c-4ad1866e2f52", "turn_index": 2}}
{"user_turn_0": "I 'm returning on the 22nd", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM", "user_turn_1": "That looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "11396", "datum_id": {"dialogue_id": "6ac7d5b6-cfc6-4495-bd8c-4ad1866e2f52", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i would like to book a hotel for tomorrow in Canary Wharf that is moderate in price and has a king sized bed . I will be checking in tomorrow .", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" Canary Wharf \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 7L)))))))) (Hotel.priceRange_? (?= (PriceRange.Moderate)))) (Hotel.roomType_? (List.exists_? (?= (RoomType.King)))))))", "idx": "11398", "datum_id": {"dialogue_id": "7ed96ba5-4810-47f8-8375-2fce7501bd54", "turn_index": 0}}
{"user_turn_0": "Get me a 4 star hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Diva price equals 142", "user_turn_1": "Does that have a gym ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasFitness_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "11400", "datum_id": {"dialogue_id": "7ed96ba5-4810-47f8-8375-2fce7501bd54", "turn_index": 2}}
{"user_turn_0": "Does that have a gym ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Harborview \"))))))", "idx": "11401", "datum_id": {"dialogue_id": "7ed96ba5-4810-47f8-8375-2fce7501bd54", "turn_index": 3}}
{"user_turn_0": "Hello assistant , i need a mid priced hotel room , checking in today for one night", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "I 'd like a 3 star hotel near Ealing", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.location_? (?= \" Ealing \"))) (Hotel.rating_? (?>= (someSalient (?= 3))))))))", "idx": "11416", "datum_id": {"dialogue_id": "0ce1756c-bfca-40dc-b20c-94845a9c4cf0", "turn_index": 1}}
{"user_turn_0": "Are there private baths ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Get it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "11418", "datum_id": {"dialogue_id": "0ce1756c-bfca-40dc-b20c-94845a9c4cf0", "turn_index": 3}}
{"user_turn_0": "I 'd like a one star or better without a high price range", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Crescent Resort price equals 156", "user_turn_1": "Do they offer free wifi", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasWifi_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "11426", "datum_id": {"dialogue_id": "fede5af6-4f7a-4f04-81c5-127f3ea78058", "turn_index": 4}}
{"user_turn_0": "And which of the restaurants have rating five stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Spago", "user_turn_1": "Does the restaurant take credit card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "11432", "datum_id": {"dialogue_id": "371b20ff-6d9d-4ab9-843f-a6a1c78aca81", "turn_index": 5}}
{"user_turn_0": "I prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Chipotle Grill", "user_turn_1": "Does the restaurant have outdoor seats", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "11434", "datum_id": {"dialogue_id": "371b20ff-6d9d-4ab9-843f-a6a1c78aca81", "turn_index": 7}}
{"user_turn_0": "Does the restaurant have outdoor seats", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "That 's fine . Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Hambone \"))))))", "idx": "11435", "datum_id": {"dialogue_id": "371b20ff-6d9d-4ab9-843f-a6a1c78aca81", "turn_index": 8}}
{"user_turn_0": "Book it", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "I need the Chipotle Grill reserved on the 6th and an event created for the reservation", "tgt": "(plan (do (^(Restaurant) Book :object (& (Restaurant.restaurantName_? (?= \" Chipotle Grill \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 6L)))))))) (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (?= (^(DateTimeRange Restaurant) reference (^(Restaurant) always)))))))", "idx": "11443", "datum_id": {"dialogue_id": "95941c81-8192-40f8-a525-d0bbbaf2b45f", "turn_index": 4}}
{"user_turn_0": "It needs to be in Waterloo with four stars", "agent_turn_0": "Root system prompt hotel book object equals priceRange", "user_turn_1": "it should have an inexpensive price", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "11458", "datum_id": {"dialogue_id": "8f0a720a-c90c-4f89-863b-d42bff055aac", "turn_index": 2}}
{"user_turn_0": "Is there laundry", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "11460", "datum_id": {"dialogue_id": "8f0a720a-c90c-4f89-863b-d42bff055aac", "turn_index": 4}}
{"user_turn_0": "it is 2", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there breakfast", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "11464", "datum_id": {"dialogue_id": "8f0a720a-c90c-4f89-863b-d42bff055aac", "turn_index": 8}}
{"user_turn_0": "Is there breakfast", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "ok , please book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "11465", "datum_id": {"dialogue_id": "8f0a720a-c90c-4f89-863b-d42bff055aac", "turn_index": 9}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM price equals 65", "user_turn_1": "I would like to book the flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "11474", "datum_id": {"dialogue_id": "daa5ed05-d52a-41a6-ba76-4a85d204310e", "turn_index": 3}}
{"user_turn_0": "Have they got parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Cool , reserve it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "11479", "datum_id": {"dialogue_id": "3a9b657c-cefb-432e-8591-6bc00dfce188", "turn_index": 2}}
{"user_turn_0": "It 's 11 AM", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Switch the appointment to the 27th then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 27L))))))", "idx": "11481", "datum_id": {"dialogue_id": "3a9b657c-cefb-432e-8591-6bc00dfce188", "turn_index": 4}}
{"user_turn_0": "I 'm leaving out of London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM price equals 138", "user_turn_1": "I think I 'd rather the one that leaves at 4:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "11493", "datum_id": {"dialogue_id": "1e70e96c-9eaf-40ec-9dec-8cb7881733c4", "turn_index": 4}}
{"user_turn_0": "How long will it take to get there ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 25", "user_turn_1": "I would like to know how far away is it to 61 Hill Street by public transportation", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (& (Navigation.destination_? (Place.location_? (?= \" 61 Hill Street \"))) (Navigation.transportationMode_? (?= (TransportationMode.PublicTransportation))))))", "idx": "11506", "datum_id": {"dialogue_id": "08f6849b-1632-4550-9f2a-5201bdea5d9f", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , I need you to please set up a hotel stay with a moderate price . It needs to to be a single night and I need a double room .", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.priceRange_? (?= (PriceRange.Moderate))) (Hotel.dateTimeRange_? (DateTimeRange.duration_? (AppleDuration.day_? (?= 1))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Double)))))))", "idx": "11538", "datum_id": {"dialogue_id": "205b2c49-f898-46ea-881a-2c5915961485", "turn_index": 0}}
{"user_turn_0": "Hmm . Do they have laundry there ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Cool , that 's fine . Can you book it , please ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "11541", "datum_id": {"dialogue_id": "205b2c49-f898-46ea-881a-2c5915961485", "turn_index": 3}}
{"user_turn_0": "Just two", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Umm , do they include breakfast there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "11544", "datum_id": {"dialogue_id": "205b2c49-f898-46ea-881a-2c5915961485", "turn_index": 6}}
{"user_turn_0": "Umm , do they include breakfast there ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Okay , well , that 's fine . Book it , please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "11545", "datum_id": {"dialogue_id": "205b2c49-f898-46ea-881a-2c5915961485", "turn_index": 7}}
{"user_turn_0": "Actually can you change the departure day of my first trip to August 13th", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM price equals 201", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "11558", "datum_id": {"dialogue_id": "9a7ff30c-b255-4dac-9492-df5dcac9d602", "turn_index": 7}}
{"user_turn_0": "I 'm departing from Leeds", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM price equals 138", "user_turn_1": "Book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "11568", "datum_id": {"dialogue_id": "f7142572-73d7-44ae-9bf1-ac5cc64ae771", "turn_index": 3}}
{"user_turn_0": "How long is the journey ?", "agent_turn_0": "Root system inform flight find focus equals duration equals hour equals 1 minute equals 15", "user_turn_1": "I prefer the 4:30PPM flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "11582", "datum_id": {"dialogue_id": "29fa9808-b79f-4aa1-ac4c-52bfb6f8a117", "turn_index": 4}}
{"user_turn_0": "2 PM please", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Change the appointment date for tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (?= (Tomorrow))))))))", "idx": "11620", "datum_id": {"dialogue_id": "d228f7df-bcf3-4551-b64f-b3a9192ce850", "turn_index": 4}}
{"user_turn_0": "I want a different one with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "That works . I need it on September 15th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Chipotle Grill \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (& (Date.month_? (?= (September))) (Date.day_? (?= (Day.apply 15L)))))))))))", "idx": "11636", "datum_id": {"dialogue_id": "7d81767d-a663-4ec4-944f-cae307233928", "turn_index": 3}}
{"user_turn_0": "At 7 PM", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "Thanks , also can you book me a table at a restaurant in Middle Park on May 13th ? I want to reserve it for 6 somewhere that serves Thai food", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.location_? (?= \" Middle Park \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (May))) (Date.day_? (?= (Day.apply 13L)))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 6L)))))))) (Restaurant.foodType_? (?= (FoodType.Thai))))))", "idx": "11642", "datum_id": {"dialogue_id": "99a1eb85-afd0-47bc-9223-867ddfb9619a", "turn_index": 2}}
{"user_turn_0": "Yeah I want to eat somewhere that 's not too expensive", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capers", "user_turn_1": "Sure , reserve me a table there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "11644", "datum_id": {"dialogue_id": "99a1eb85-afd0-47bc-9223-867ddfb9619a", "turn_index": 4}}
{"user_turn_0": "Is there a fitness center in the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "11653", "datum_id": {"dialogue_id": "e4fcc2e2-16da-4661-9776-e845a613358b", "turn_index": 3}}
{"user_turn_0": "I need one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Could you change the check out date to Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.endDateTime \") (lambda (^(Constraint DateTime) x0) (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))))", "idx": "11657", "datum_id": {"dialogue_id": "e4fcc2e2-16da-4661-9776-e845a613358b", "turn_index": 7}}
{"user_turn_0": "What are directions to go there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Yes , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "11662", "datum_id": {"dialogue_id": "d9c7a145-3b70-4493-95b4-71841c77c996", "turn_index": 3}}
{"user_turn_0": "Yes , I 'll be departing from Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM price equals 201", "user_turn_1": "I prefer the 3:45 PM departure", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "11668", "datum_id": {"dialogue_id": "435207a6-92bd-434c-94cd-b1dd84233e20", "turn_index": 2}}
{"user_turn_0": "Looks good to me", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "11674", "datum_id": {"dialogue_id": "d18f8bbd-607b-4ee5-a344-d840958e522f", "turn_index": 2}}
{"user_turn_0": "Can you tell me how to get from Tie the Knot to 100 Upper Street using public transportation", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Okay thanks . I need to book a restaurant in Bond Street on the 20th . I need one with a low price that 's rated at least three stars", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Bond Street \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 20L))))))) (Restaurant.priceRange_? (?= (PriceRange.Low)))) (Restaurant.rating_? (?>= (someSalient (?= 3)))))))", "idx": "11694", "datum_id": {"dialogue_id": "efe1033f-c14d-4ec1-a319-55d942b848bd", "turn_index": 2}}
{"user_turn_0": "No , I need something else , with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dimple\u2019s", "user_turn_1": "What 's the address ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "11697", "datum_id": {"dialogue_id": "efe1033f-c14d-4ec1-a319-55d942b848bd", "turn_index": 5}}
{"user_turn_0": "What 's the address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals Camden Passage", "user_turn_1": "Okay that will work for me . Book me that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Encino \"))))))", "idx": "11698", "datum_id": {"dialogue_id": "efe1033f-c14d-4ec1-a319-55d942b848bd", "turn_index": 6}}
{"user_turn_0": "Okay that will work for me . Book me that one", "agent_turn_0": "Root system prompt restaurant book object equals atDateTime equals time inform restaurant find object equals atDateTime equals time equals hour equals 6", "user_turn_1": "Yeah 6 works for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 6L)))))))))", "idx": "11699", "datum_id": {"dialogue_id": "efe1033f-c14d-4ec1-a319-55d942b848bd", "turn_index": 7}}
{"user_turn_0": "I need direction from West Plumb Branch Lane to 7615 Eagle Lane", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "How can I get to 8665 Fairway Avenue", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Navigation)) Path.apply \" object \") (lambda (^(Constraint Navigation) x0) (Navigation.destination_? (Place.location_? (?= \" 8665 Fairway Avenue \"))))))", "idx": "11710", "datum_id": {"dialogue_id": "6b9214c9-cf52-4ad7-a0c0-bd4b109a9c5b", "turn_index": 3}}
{"user_turn_0": "I will leave from Leeds on April the 14th", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 11 minute equals 45 meridiem equals AM", "user_turn_1": "Cool , book it for only one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast City \"))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 1))))))", "idx": "11721", "datum_id": {"dialogue_id": "6e4795c9-1270-4653-a459-d13d765a4e76", "turn_index": 2}}
{"user_turn_0": "What time do I have my reminder scheduled", "agent_turn_0": "Root system inform reminder find focus equals atDateTime equals time equals hour equals 3", "user_turn_1": "Next task , please book me a taxi from The Daily Grind to my event venue", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" The Daily Grind \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.eventName_? (?= \" Home Cleaning \"))))))))", "idx": "11740", "datum_id": {"dialogue_id": "81a40f32-283d-409e-9e19-365ab9c7d7cf", "turn_index": 4}}
{"user_turn_0": "Do any of the restaurants you found serve Indian food ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Encino", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Emptia \"))))))", "idx": "11745", "datum_id": {"dialogue_id": "f7af3cc6-2c74-4784-9c0f-26d96802edc1", "turn_index": 4}}
{"user_turn_0": "Hi my assistant , add Dog Walking from 3 PM to 5 PM on the calendar", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Add event from 11 AM to noon on the calendar", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object \") (lambda (^(Constraint CalendarEvent) x0) (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (meridiem_? (?= (Meridiem.AM)))))) (DateTimeRange.endDateTime_? (DateTime.time_? (?= (Noon)))))))))", "idx": "11756", "datum_id": {"dialogue_id": "c3a8a49f-88ad-45aa-9d6e-187de4510f89", "turn_index": 1}}
{"user_turn_0": "Does this hotel have private bath room ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Great , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "11775", "datum_id": {"dialogue_id": "89f8873a-91c1-46b7-9d5e-d5f93d22f632", "turn_index": 4}}
{"user_turn_0": "Hello assistant , i need to reserve a hotel with at least one star , car park , and a king sized bed .", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "I 'm thinking Old Ford , and not too expensive", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.location_? (?= \" Old Ford \"))) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))))))", "idx": "11790", "datum_id": {"dialogue_id": "0fb8e905-8bd7-4db1-b16e-cffdda8c60ae", "turn_index": 1}}
{"user_turn_0": "What is the weather like tomorrow in Cardiff ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cold", "user_turn_1": "What is the commute from 234 University Street to 61 Hill Street by bike ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (& (& (Navigation.source_? (Place.location_? (?= \" 234 University Street \"))) (Navigation.destination_? (Place.location_? (?= \" 61 Hill Street \")))) (Navigation.transportationMode_? (?= (TransportationMode.Biking))))))", "idx": "11800", "datum_id": {"dialogue_id": "2e7470c2-f518-4904-bfc2-a34fcfc3f9f6", "turn_index": 4}}
{"user_turn_0": "Yes please send it", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Create Innovation Integration with Mr Fisher from now until 8 PM on the calendar", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object \") (lambda (^(Constraint CalendarEvent) x0) (& (& (CalendarEvent.eventName_? (?= \" Innovation Integration \")) (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Now)))) (DateTimeRange.endDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 8L))) (meridiem_? (?= (Meridiem.PM))))))))) (CalendarEvent.attendees_? (Contact.person_? (& (Person.name_? (?= \" Fisher \")) (Person.namePrefix_? (?= \" Mr \")))))))))", "idx": "11805", "datum_id": {"dialogue_id": "9e244e07-1a21-44eb-96e7-59531043c0e7", "turn_index": 4}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM price equals 166", "user_turn_1": "Select the one at 1:40 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "11813", "datum_id": {"dialogue_id": "193ec50b-8c87-47c4-9baa-60083f40e007", "turn_index": 2}}
{"user_turn_0": "Get me another option with five stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Ritz-Carlton price equals 156", "user_turn_1": "Do they have laundry services ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.laundry_? (^(Boolean) always)))))", "idx": "11825", "datum_id": {"dialogue_id": "78ff1d88-4749-44f1-99be-a01e8fd1ab73", "turn_index": 3}}
{"user_turn_0": "Do they have laundry services ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it for me then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" The Blackstone \"))))))", "idx": "11826", "datum_id": {"dialogue_id": "78ff1d88-4749-44f1-99be-a01e8fd1ab73", "turn_index": 4}}
{"user_turn_0": "Saturday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 3 object equals nextDepartureDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM price equals 173", "user_turn_1": "That works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "11843", "datum_id": {"dialogue_id": "927f1ed5-bc46-4e25-b042-c69d64e9ace9", "turn_index": 7}}
{"user_turn_0": "Hi there , i want to book a hotel room in Forest Hill tomorrow for one night .", "agent_turn_0": "Root system prompt hotel book object equals priceRange", "user_turn_1": "A moderate price", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.priceRange_? (?= (PriceRange.Moderate)))))))", "idx": "11846", "datum_id": {"dialogue_id": "9dc71e99-919b-41fb-9972-d9d7e58e64bb", "turn_index": 1}}
{"user_turn_0": "I want another hotel with a four - star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Chestnut Tree price equals 142", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Green Lushy Resorts \"))))))", "idx": "11849", "datum_id": {"dialogue_id": "9dc71e99-919b-41fb-9972-d9d7e58e64bb", "turn_index": 4}}
{"user_turn_0": "Just one", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is a cancellation free of charge ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "11852", "datum_id": {"dialogue_id": "9dc71e99-919b-41fb-9972-d9d7e58e64bb", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , send the event tomorrow to my mother", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))))))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Mother))))))))", "idx": "11859", "datum_id": {"dialogue_id": "616ceead-459f-4d8d-ac32-5aa546a1f459", "turn_index": 0}}
{"user_turn_0": "Make it three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is complimentary breakfast served there ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "11869", "datum_id": {"dialogue_id": "3613f44e-b382-417a-accb-763c703b7782", "turn_index": 5}}
{"user_turn_0": "Is complimentary breakfast served there ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Great I 'm ready to submit", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "11870", "datum_id": {"dialogue_id": "3613f44e-b382-417a-accb-763c703b7782", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , i want to book a moderately priced hotel in Modernest Park .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= \" Morden Park \")) (Hotel.priceRange_? (?= (PriceRange.Moderate))))))", "idx": "11871", "datum_id": {"dialogue_id": "e8ffb49a-7c2b-41fb-b81f-2a2bdbf52fbc", "turn_index": 0}}
{"user_turn_0": "Which airline is that ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals EasyJet", "user_turn_1": "Let 's book that flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "11879", "datum_id": {"dialogue_id": "c3415fd3-1327-4582-b3ce-03334b537b45", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , i want you to book the Goat and Guru restaurant for me on August 4th at 4 PM and add it to my calendar .", "tgt": "(plan (do (^(Restaurant) Book :object (& (Restaurant.restaurantName_? (?= \" Goat and Guru \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (August))) (Date.day_? (?= (Day.apply 5L)))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM)))))))))) (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (?= (^(DateTimeRange Restaurant) reference (^(Restaurant) always)))))))", "idx": "11883", "datum_id": {"dialogue_id": "5a464835-c4c3-4cd9-ada2-85709154f3bd", "turn_index": 0}}
{"user_turn_0": "Yes , book it please", "agent_turn_0": "Root system inform calendarEvent create Completed restaurant book Completed", "user_turn_1": "Thanks so much . Can you book a table of 5 at the Hambone in King 's Cross on June 13th at 2:00 please ?", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.restaurantName_? (?= \" Hambone \")) (Restaurant.location_? (?= \" King's Cross \"))) (Restaurant.tableSize_? (?= 5))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (June))) (Date.day_? (?= (Day.apply 13L)))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 2L))))))))))", "idx": "11886", "datum_id": {"dialogue_id": "5a464835-c4c3-4cd9-ada2-85709154f3bd", "turn_index": 3}}
{"user_turn_0": "None of them looks good . Can you show me more options ? Food type does n't matter", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dingo", "user_turn_1": "What is the average cost per person", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "11900", "datum_id": {"dialogue_id": "eda82d48-05c6-4666-af04-a9a237f5b0bb", "turn_index": 4}}
{"user_turn_0": "What is the average cost per person", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 29", "user_turn_1": "That 's fine . Book it for me at 7:30 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" The Shining Gate \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 7L))) (Time.minute_? (?= (Minute.apply 30L)))))))))))", "idx": "11901", "datum_id": {"dialogue_id": "eda82d48-05c6-4666-af04-a9a237f5b0bb", "turn_index": 5}}
{"user_turn_0": "Get me another one that is at least 2 stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals The Watson price equals 135", "user_turn_1": "Is there a gym in that one ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasFitness_? (^(Boolean) always)))))", "idx": "11946", "datum_id": {"dialogue_id": "a7ba9fcc-f695-464f-92db-a4d3382c7309", "turn_index": 4}}
{"user_turn_0": "Is there a gym in that one ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book that one please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Candlewood Suites \"))))))", "idx": "11947", "datum_id": {"dialogue_id": "a7ba9fcc-f695-464f-92db-a4d3382c7309", "turn_index": 5}}
{"user_turn_0": "Book that one please", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "In June from the 15th to the 17th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 15L))))) (DateTimeRange.endDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 17L)))) (month_? (Date.month_? (?= (June))))))))))))", "idx": "11948", "datum_id": {"dialogue_id": "a7ba9fcc-f695-464f-92db-a4d3382c7309", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , how far away is 1 Islington Green from Compton Arms ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (& (Navigation.source_? (Place.location_? (?= \" 1 Islington Green \"))) (Navigation.destination_? (Place.location_? (?= \" Compton Arms \"))))))", "idx": "11951", "datum_id": {"dialogue_id": "51de7bc8-0c1e-4e71-9efd-43d9c72ef19f", "turn_index": 0}}
{"user_turn_0": "Sunday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (^((Constraint Hour)) refer)) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "11955", "datum_id": {"dialogue_id": "51de7bc8-0c1e-4e71-9efd-43d9c72ef19f", "turn_index": 4}}
{"user_turn_0": "It ends tomorrow at 8 PM", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Schedule a recurring event on Wednesday in calendar", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object \") (lambda (^(Constraint CalendarEvent) x0) (CalendarEvent.recurrenceUnit_? (RecurrenceUnit.dayOfWeek_? (?= (Wednesday)))))))", "idx": "11965", "datum_id": {"dialogue_id": "2e2c5205-79f0-4a55-8d75-a640464e0df3", "turn_index": 3}}
{"user_turn_0": "Hey , where is the calendar event A Gathering of Hunters with my sister called ?", "agent_turn_0": "Root system inform calendarEvent find focus equals location equals The Puzzalarium", "user_turn_1": "Ok , so how long does it take to get there ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (Place.location_? (^((Constraint String)) refer)))))", "idx": "11980", "datum_id": {"dialogue_id": "bd9aeb3c-62aa-4cfe-9710-7d048c07f920", "turn_index": 1}}
{"user_turn_0": "Ok , but does it have a gym ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Ok . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "11987", "datum_id": {"dialogue_id": "bd9aeb3c-62aa-4cfe-9710-7d048c07f920", "turn_index": 8}}
{"user_turn_0": "No , I 'll go to Zurich on Thursday after", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 4 object equals nextDepartureDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM price equals 173", "user_turn_1": "Ok , looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "12009", "datum_id": {"dialogue_id": "9465931a-4cf0-43bb-817c-edbc639bb075", "turn_index": 6}}
{"user_turn_0": "Just make sure the car type fits two luggages", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals 97 Church Road", "user_turn_1": "Have the destination changed to 61 Richmond Avenue", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Place)) Path.apply \" object.destination \") (lambda (^(Constraint Place) x0) (Place.location_? (?= \" 61 Richmond Avenue \")))))", "idx": "12029", "datum_id": {"dialogue_id": "01940bcc-13da-4582-8cd5-9efb2d923c4f", "turn_index": 2}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 12 minute equals 30 meridiem equals PM", "user_turn_1": "That 's fine . Book this flight for one passenger", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 16L))))) (^((Constraint (List DateTime))) refer)))) (Flight.returnDateTime_? (DateTime.date_? (^((Constraint Date)) refer)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 1))))))", "idx": "12053", "datum_id": {"dialogue_id": "b6648f1b-ac30-454f-b530-16e345a12791", "turn_index": 4}}
{"user_turn_0": "That 's fine . Book this flight for one passenger", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM price equals 210", "user_turn_1": "This one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "12054", "datum_id": {"dialogue_id": "b6648f1b-ac30-454f-b530-16e345a12791", "turn_index": 5}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Can you send a message that says have you had dinner", "tgt": "(plan (^(Message) Create :object (Message.textContent_? (?= \" have you had dinner \"))))", "idx": "12060", "datum_id": {"dialogue_id": "341b7cfc-418a-42c9-83c4-56870468dd01", "turn_index": 4}}
{"user_turn_0": "A not priced highly hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Etiquette Suites price equals 134", "user_turn_1": "Is that with breakfast ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "12083", "datum_id": {"dialogue_id": "f6145254-09c8-4385-bb81-67db7a05e264", "turn_index": 2}}
{"user_turn_0": "Is that with breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Make the reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "12084", "datum_id": {"dialogue_id": "f6145254-09c8-4385-bb81-67db7a05e264", "turn_index": 3}}
{"user_turn_0": "Is there a message from my love", "agent_turn_0": "Root system inform message checkExistence Existed", "user_turn_1": "Text her saying taco tuesday", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Love))))) (Message.textContent_? (?= \" taco tuesday \")))))", "idx": "12092", "datum_id": {"dialogue_id": "9e5ce61f-e3bf-4f31-af71-cfb709752977", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i want to book a flight from London Heathrow to Dublin leaving on Match 10th", "tgt": "(plan (^(Flight) Book :object (& (& (Flight.source_? (Place.location_? (?= \" London Heathrow \"))) (Flight.destination_? (Place.location_? (?= \" Dublin \")))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (& (Date.month_? (?= (March))) (Date.day_? (?= (Day.apply 10L))))))))))", "idx": "12093", "datum_id": {"dialogue_id": "55c309de-299f-40c3-ba39-1bd4ae617a07", "turn_index": 0}}
{"user_turn_0": "Which airlines is it", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "I would like to book this flight please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "12095", "datum_id": {"dialogue_id": "55c309de-299f-40c3-ba39-1bd4ae617a07", "turn_index": 2}}
{"user_turn_0": "Could you tell me the airline", "agent_turn_0": "Root system inform flight find focus equals airLine equals British", "user_turn_1": "Great . I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "12102", "datum_id": {"dialogue_id": "33c56be7-705f-4693-84d9-f11f5caa0c7c", "turn_index": 4}}
{"user_turn_0": "Paris and I plan to departure on the 14th", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "How about the 11th of the month ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Day)) Path.apply \" object.departureDateTime.date.day \") (lambda (^(Constraint Day) x0) (?= (Day.apply 11L)))))", "idx": "12112", "datum_id": {"dialogue_id": "e0b963e3-85da-4f3c-9c9d-6ba996b4cc1a", "turn_index": 3}}
{"user_turn_0": "Is that a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Cool , book it for three passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.source_? (Place.location_? (?= \" Manchester \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 3))))))", "idx": "12114", "datum_id": {"dialogue_id": "e0b963e3-85da-4f3c-9c9d-6ba996b4cc1a", "turn_index": 5}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Send my event to Mr Tucker", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (& (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Tucker \")) (Person.namePrefix_? (?= \" Mr \")))))))))", "idx": "12145", "datum_id": {"dialogue_id": "ab00a5fe-bfa1-4bce-89a6-50b8882440cf", "turn_index": 4}}
{"user_turn_0": "Hi my assistant , i would like to book a hotel in New Cross with car park from 16th to 20th February", "agent_turn_0": "Root system prompt hotel book object equals priceRange", "user_turn_1": "I need one with three stars rating", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.priceRange_? (?= (PriceRange.Any)))) (Hotel.rating_? (?= 3))))))", "idx": "12164", "datum_id": {"dialogue_id": "5ddef152-bdbd-45ec-a02e-e63594532a6c", "turn_index": 1}}
{"user_turn_0": "I need one with three stars rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals InterContinental price equals 199", "user_turn_1": "Is there breakfast ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "12165", "datum_id": {"dialogue_id": "5ddef152-bdbd-45ec-a02e-e63594532a6c", "turn_index": 2}}
{"user_turn_0": "Is there breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "12166", "datum_id": {"dialogue_id": "5ddef152-bdbd-45ec-a02e-e63594532a6c", "turn_index": 3}}
{"user_turn_0": "Does it take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "Book it for tomorrow at 5:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Gogol \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 5L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "12176", "datum_id": {"dialogue_id": "26baf30d-3a64-4280-9ad4-ce8ad539d647", "turn_index": 7}}
{"user_turn_0": "How can I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "12188", "datum_id": {"dialogue_id": "844079ee-77d5-4276-b66b-ef385d3cb6a4", "turn_index": 4}}
{"user_turn_0": "Can you change the check in date to Wednesday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "12192", "datum_id": {"dialogue_id": "844079ee-77d5-4276-b66b-ef385d3cb6a4", "turn_index": 8}}
{"user_turn_0": "I 'll be leaving on the 7th from London", "agent_turn_0": "Root system prompt flight book object equals destination", "user_turn_1": "Amsertdam", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.destination_? (Place.location_? (?= \" Amsterdam \")))))))", "idx": "12196", "datum_id": {"dialogue_id": "cd84d2c3-ad19-4b10-ab35-6af8042440bf", "turn_index": 2}}
{"user_turn_0": "Amsertdam", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 12 minute equals 15 meridiem equals PM", "user_turn_1": "Actually , I 'd like the flight that leaves at 3:20 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "12197", "datum_id": {"dialogue_id": "cd84d2c3-ad19-4b10-ab35-6af8042440bf", "turn_index": 3}}
{"user_turn_0": "Coming back on the 17th", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM", "user_turn_1": "That works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "12204", "datum_id": {"dialogue_id": "fb28a54b-dc10-46bb-b6bd-54ae7bfeb6a5", "turn_index": 5}}
{"user_turn_0": "Hello assistant , i 'd like to book air tickets from London Heathrow to Dublin for one passenger", "agent_turn_0": "Root system prompt flight book object equals departureDateTime", "user_turn_1": "Tomorrow after 8:30 o'clock ; and book business class for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& x0 (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (?>= (someSalient (& (Time.hour_? (?= (Hour.apply 8L))) (Time.minute_? (?= (Minute.apply 30L))))))))))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "12207", "datum_id": {"dialogue_id": "ab10f9a6-3656-46dd-83ea-5f481ebdd3a8", "turn_index": 1}}
{"user_turn_0": "Which airline is it ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "That 's fine . I 'd like to book the flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "12209", "datum_id": {"dialogue_id": "ab10f9a6-3656-46dd-83ea-5f481ebdd3a8", "turn_index": 3}}
{"user_turn_0": "Hey , are there any missed calls for me from Mr Powell ?", "agent_turn_0": "Root system inform train find focus equals arrivalDateTime equals time equals hour equals 2", "user_turn_1": "2 o'clock", "tgt": "(plan (^(PhoneCall) CheckExistence :object (& (PhoneCall.answerStatus_? (?= (AnswerStatus.CallMissed))) (PhoneCall.sender_? (Contact.person_? (& (Person.name_? (?= \" Powell \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "12212", "datum_id": {"dialogue_id": "0a781a89-9761-49d6-8cd0-81b91f208eb9", "turn_index": 1}}
{"user_turn_0": "Three please", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Change check in to the 9th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 9L))))))", "idx": "12231", "datum_id": {"dialogue_id": "0cb2c259-4350-4f87-b8f0-813b82d5649a", "turn_index": 4}}
{"user_turn_0": "Change check in to the 9th", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is prepayment required ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "12232", "datum_id": {"dialogue_id": "0cb2c259-4350-4f87-b8f0-813b82d5649a", "turn_index": 5}}
{"user_turn_0": "Hey , make a reminder for event on March the 6th", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Get me a flight ticket to Belfast City departing on Wednesday at 8:30", "tgt": "(plan (^(Flight) Book :object (& (Flight.destination_? (Place.location_? (?= \" Belfast City \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (List.exists_? (DateTime.time_? (?>= (someSalient (& (Time.hour_? (?= (Hour.apply 8L))) (Time.minute_? (?= (Minute.apply 30L)))))))))))))", "idx": "12250", "datum_id": {"dialogue_id": "73de0aec-efa7-4c28-8ffb-5b8e73780f95", "turn_index": 1}}
{"user_turn_0": "I 'm departing from London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 4 meridiem equals PM price equals 210", "user_turn_1": "I want the one that departs at 2:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "12252", "datum_id": {"dialogue_id": "73de0aec-efa7-4c28-8ffb-5b8e73780f95", "turn_index": 3}}
{"user_turn_0": "Yes you are right", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM", "user_turn_1": "Book the one at 2:40 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "12263", "datum_id": {"dialogue_id": "dda46864-3ea5-4547-af06-40d620d7b81d", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , is there a car type that you prefer ? Your choices include Saloon , MPV and Executive .", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" The African Waistcoat \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Afternoon)))))))))))", "idx": "12282", "datum_id": {"dialogue_id": "eba4803e-623d-43dc-b9da-2d03fb0eaee4", "turn_index": 0}}
{"user_turn_0": "Hello , is there a car type that you prefer ? Your choices include Saloon , MPV and Executive .", "agent_turn_0": "Root system prompt taxi book object equals serviceType inform taxi find object equals serviceType equals listElementOne Saloon listElementTwo MPV listElementThree Executive", "user_turn_1": "Book me a taxi that will take me from The African Waistcoat to this afternoon 's calendar event venue", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Taxi)) Path.apply \" object \") (lambda (^(Constraint Taxi) x0) (& (& x0 (Taxi.serviceType_? (List.exists_? (?= (ServiceType.Any))))) (Taxi.luggages_? (?= 1))))))", "idx": "12283", "datum_id": {"dialogue_id": "eba4803e-623d-43dc-b9da-2d03fb0eaee4", "turn_index": 1}}
{"user_turn_0": "Which airline is it ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals EasyJet", "user_turn_1": "I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "12299", "datum_id": {"dialogue_id": "3bac4b08-eb30-47de-bb12-5e4bcdc6fd4c", "turn_index": 4}}
{"user_turn_0": "Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM price equals 65", "user_turn_1": "That one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "12305", "datum_id": {"dialogue_id": "826c9bdd-4c9e-4f70-8a4a-7d593205df8c", "turn_index": 3}}
{"user_turn_0": "Does the restaurant take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "That 's fine . Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "12312", "datum_id": {"dialogue_id": "f1dd37dc-d158-4207-9da5-234c2f3332a8", "turn_index": 5}}
{"user_turn_0": "That 's fine . Book it please", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Ok , can you change the appointment date to the 15th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 15L))))))", "idx": "12313", "datum_id": {"dialogue_id": "f1dd37dc-d158-4207-9da5-234c2f3332a8", "turn_index": 6}}
{"user_turn_0": "Next task , i want to leave tomorrow and return on the 25th ; book a round trip flight from London to Dublin", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 4 minute equals 20 meridiem equals PM price equals 150", "user_turn_1": "Make it business class on the 3:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" London \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.returnDateTime_? (DateTime.date_? (^((Constraint Date)) refer)))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "12327", "datum_id": {"dialogue_id": "3dbb1c0f-6fd8-475c-aef5-ed0172963cd7", "turn_index": 4}}
{"user_turn_0": "Does the restaurant have outdoor seats ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "12337", "datum_id": {"dialogue_id": "ddb3fd60-b198-4832-b75a-3eb450a5b360", "turn_index": 4}}
{"user_turn_0": "I prefer another hotel with at least one star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Sheraton price equals 130", "user_turn_1": "Does the hotel have laundry", "tgt": "(plan (^(Hotel) Find :focus (Hotel.laundry_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "12350", "datum_id": {"dialogue_id": "385ff219-9cce-4710-ad3d-f927369fd05e", "turn_index": 3}}
{"user_turn_0": "Does the hotel have laundry", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Candlewood Suites \"))))))", "idx": "12351", "datum_id": {"dialogue_id": "385ff219-9cce-4710-ad3d-f927369fd05e", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , get a room for me at a hotel that is at least 1 star for today to the 28th .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.rating_? (?>= (someSalient (?= 1)))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 28L))))))))))", "idx": "12354", "datum_id": {"dialogue_id": "c435eff4-71e6-495f-bd36-e14e6af33969", "turn_index": 0}}
{"user_turn_0": "Does it include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "12358", "datum_id": {"dialogue_id": "c435eff4-71e6-495f-bd36-e14e6af33969", "turn_index": 4}}
{"user_turn_0": "Go ahead and make the reservations", "agent_turn_0": "Root system inform calendarEvent create Completed restaurant book Completed", "user_turn_1": "Can you add an event to my calendar , start time is 11 AM", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (meridiem_? (?= (Meridiem.AM)))))))))", "idx": "12370", "datum_id": {"dialogue_id": "fdd6c548-8eff-4abd-8448-cf18e0127080", "turn_index": 3}}
{"user_turn_0": "Just 1", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to pay when I book ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "12394", "datum_id": {"dialogue_id": "f3add867-8715-49ca-8b37-25b339446ceb", "turn_index": 5}}
{"user_turn_0": "Make my destination is Dublin", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM price equals 199", "user_turn_1": "Ok fine , book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "12400", "datum_id": {"dialogue_id": "daa34a62-8159-4729-935e-0127a7202c64", "turn_index": 4}}
{"user_turn_0": "It does n't matter , as long as it has five stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Stazione restaurant", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "12409", "datum_id": {"dialogue_id": "92dfc4e1-483c-42a9-aa69-9bde20ef9f28", "turn_index": 2}}
{"user_turn_0": "Sure , I 'll go with the 2 PM", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 meridiem equals PM", "user_turn_1": "Yeah , let me have that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "12415", "datum_id": {"dialogue_id": "6bc7c951-1efe-4bf9-a6c5-5c131d6b69d5", "turn_index": 3}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "12425", "datum_id": {"dialogue_id": "f0d94d2f-19d4-4db8-98e2-7c58d4a1a885", "turn_index": 3}}
{"user_turn_0": "None of them looks good . Can you show me more options ? Food type does n't matter", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Bandits", "user_turn_1": "What is the average cost per person", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "12433", "datum_id": {"dialogue_id": "b338c194-17fe-400e-b015-d1cf38b8925f", "turn_index": 6}}
{"user_turn_0": "What is the average cost per person", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 39", "user_turn_1": "That 's fine Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Gogol \"))))))", "idx": "12434", "datum_id": {"dialogue_id": "b338c194-17fe-400e-b015-d1cf38b8925f", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , what 's the rating of that Parallel Tower place ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.rating_? (^(Number) always)) :object (Hotel.hotelName_? (?= \" Parallel Tower \"))))", "idx": "12438", "datum_id": {"dialogue_id": "c3e85b76-6236-4bba-9394-a77eef8dbe46", "turn_index": 0}}
{"user_turn_0": "Hello assistant , what 's the rating of that Parallel Tower place ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Let 's book it", "tgt": "(plan (^(Hotel) Book :object (Hotel.hotelName_? (^((Constraint String)) refer))))", "idx": "12439", "datum_id": {"dialogue_id": "c3e85b76-6236-4bba-9394-a77eef8dbe46", "turn_index": 1}}
{"user_turn_0": "Get me two rooms and do n't worry about type", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is prepayment required ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "12443", "datum_id": {"dialogue_id": "c3e85b76-6236-4bba-9394-a77eef8dbe46", "turn_index": 5}}
{"user_turn_0": "Do they have a gym ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "12460", "datum_id": {"dialogue_id": "f1dc38be-ea02-41e1-ac56-3d5cc1588191", "turn_index": 3}}
{"user_turn_0": "I 'd like one room , and I do n't care much about room type", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they have free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "12464", "datum_id": {"dialogue_id": "f1dc38be-ea02-41e1-ac56-3d5cc1588191", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , can you tell me everything that 's on my calendar from now until 7 ?", "tgt": "(plan (^(CalendarEvent) Find :object (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Now)))) (DateTimeRange.endDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 7L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "12466", "datum_id": {"dialogue_id": "66bba50b-8adb-47d4-9f50-1a2a366bae7d", "turn_index": 0}}
{"user_turn_0": "I need one room and the room type does n't matter", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "12490", "datum_id": {"dialogue_id": "0accd518-7fd5-4923-ae35-600fd085b5e8", "turn_index": 3}}
{"user_turn_0": "Does the booking support free cancellation ?", "agent_turn_0": "Root system inform hotel find focus equals freeCancellation equals False", "user_turn_1": "Actually can you change the check out date to Sunday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Sunday))))))", "idx": "12491", "datum_id": {"dialogue_id": "0accd518-7fd5-4923-ae35-600fd085b5e8", "turn_index": 4}}
{"user_turn_0": "Add an event to my calendar for 11:30 AM tomorrow and add it to my reminders", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals endDateTime", "user_turn_1": "At 8 PM on January 8th", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.endDateTime_? (& (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 8L))) (meridiem_? (?= (Meridiem.PM))))) (DateTime.date_? (& (Date.month_? (?= (January))) (Date.day_? (?= (Day.apply 8L)))))))))))", "idx": "12497", "datum_id": {"dialogue_id": "53ea766c-9b22-4917-9bd6-50f6397ef1e5", "turn_index": 4}}
{"user_turn_0": "And does it have car parking ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Then would you book it for me ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "12501", "datum_id": {"dialogue_id": "74dfd5ce-dd06-4ad5-b425-b966a8595396", "turn_index": 3}}
{"user_turn_0": "Hello assistant , book me a hotel near my next event from Tuesday to Friday", "agent_turn_0": "Root system prompt hotel book object equals priceRange", "user_turn_1": "I 'd like an inexpensive price with at least a three star rating", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Hotel.rating_? (?>= (someSalient (?= 3))))))))", "idx": "12511", "datum_id": {"dialogue_id": "2daa61fb-2d25-48c3-a4cc-e903715e49d1", "turn_index": 1}}
{"user_turn_0": "Tell me if they have a fitness center", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "12513", "datum_id": {"dialogue_id": "2daa61fb-2d25-48c3-a4cc-e903715e49d1", "turn_index": 3}}
{"user_turn_0": "Book three rooms and the room type does n't matter", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there a prepayment needed ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "12515", "datum_id": {"dialogue_id": "2daa61fb-2d25-48c3-a4cc-e903715e49d1", "turn_index": 5}}
{"user_turn_0": "Find me a different place and no zero star hotels", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Vitale price equals 156", "user_turn_1": "Do you know if it has free wifi ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasWifi_? (^(Boolean) always)))))", "idx": "12535", "datum_id": {"dialogue_id": "9af6095c-1962-448d-af19-e17b53094c15", "turn_index": 3}}
{"user_turn_0": "Do you know if it has free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it right this moment", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Lucia \"))))))", "idx": "12536", "datum_id": {"dialogue_id": "9af6095c-1962-448d-af19-e17b53094c15", "turn_index": 4}}
{"user_turn_0": "From Aberdeen", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM", "user_turn_1": "I want to leave at 3 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "12558", "datum_id": {"dialogue_id": "c41b7fd7-c3ff-40ad-ba90-5092e3fabd30", "turn_index": 2}}
{"user_turn_0": "Hi my assistant , book a four star hotel with parking and a single room .", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "Yes , it should be inexpensive and in Strawberry Hill", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.location_? (?= \" Strawberry Hill \"))) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))))))", "idx": "12562", "datum_id": {"dialogue_id": "928763b0-9bf0-4077-9758-4af0bfee569c", "turn_index": 1}}
{"user_turn_0": "What are the directions ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "12564", "datum_id": {"dialogue_id": "928763b0-9bf0-4077-9758-4af0bfee569c", "turn_index": 3}}
{"user_turn_0": "Hi there , what 's the rating for the Etiquette Suites hotel ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Book it for me from October 17th to the 20th . I need a single room", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.hotelName_? (^((Constraint String)) refer)) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 17L))))) (DateTimeRange.endDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 20L)))) (month_? (Date.month_? (?= (October))))))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Single)))))))", "idx": "12578", "datum_id": {"dialogue_id": "cfdf2c75-a6b9-4d2c-b743-c3c9fe995acd", "turn_index": 1}}
{"user_turn_0": "Just one", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you change the check out date to Saturday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.endDateTime \") (lambda (^(Constraint DateTime) x0) (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday)))))))", "idx": "12580", "datum_id": {"dialogue_id": "cfdf2c75-a6b9-4d2c-b743-c3c9fe995acd", "turn_index": 3}}
{"user_turn_0": "Can you change the check out date to Saturday ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "12581", "datum_id": {"dialogue_id": "cfdf2c75-a6b9-4d2c-b743-c3c9fe995acd", "turn_index": 4}}
{"user_turn_0": "Sunday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "12605", "datum_id": {"dialogue_id": "20a186fa-b1aa-4e7e-b034-8e1df5c4073f", "turn_index": 6}}
{"user_turn_0": "What is their rating", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "12623", "datum_id": {"dialogue_id": "395b4a48-476b-4d88-b898-32bb838ef7b4", "turn_index": 3}}
{"user_turn_0": "I will be needing one and the room type does not matter", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "12625", "datum_id": {"dialogue_id": "395b4a48-476b-4d88-b898-32bb838ef7b4", "turn_index": 5}}
{"user_turn_0": "Then just cancel it", "agent_turn_0": "Root system inform hotel book Canceled", "user_turn_1": "Can you try booking a hotel in Camden Town ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (Hotel.location_? (?= \" Camden Town \")))))", "idx": "12631", "datum_id": {"dialogue_id": "5eadccef-cec1-4702-a40b-b7484010a5b2", "turn_index": 4}}
{"user_turn_0": "Does it have a private bathroom ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Okay , book this one for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "12645", "datum_id": {"dialogue_id": "80ea9322-dcee-4514-b556-0398961db1fe", "turn_index": 2}}
{"user_turn_0": "How far away is from Ash Grove Industrial Park to The Daily Grind", "agent_turn_0": "Root system inform navigation find focus equals distance equals number equals 7", "user_turn_1": "Thanks , next now send my event to 07716524125", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Message.recipients_? (Contact.phoneNumber_? (?= \" 07716524125 \"))))))", "idx": "12654", "datum_id": {"dialogue_id": "e3a3475f-23a0-45ff-82fb-073373b77208", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , tell me what is the rating of Bard \u2019s Bench restaurant", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.rating_? (^(Number) always)) :object (Restaurant.restaurantName_? (?= \" Bard's Bench \"))))", "idx": "12661", "datum_id": {"dialogue_id": "c0c9ead9-dad8-4bcb-9b51-5ea47e3f633c", "turn_index": 0}}
{"user_turn_0": "Hello , tell me what is the rating of Bard \u2019s Bench restaurant", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 3", "user_turn_1": "Can you book it for me on Monday", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.restaurantName_? (^((Constraint String)) refer)) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday)))))))))", "idx": "12662", "datum_id": {"dialogue_id": "c0c9ead9-dad8-4bcb-9b51-5ea47e3f633c", "turn_index": 1}}
{"user_turn_0": "Give me directions", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Triton \"))))))", "idx": "12669", "datum_id": {"dialogue_id": "ef9d50f6-bbfa-4bc9-863b-3351e2a8061a", "turn_index": 3}}
{"user_turn_0": "Ok then . How about the Hyatt hotel ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel the booking for free ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "12675", "datum_id": {"dialogue_id": "ef9d50f6-bbfa-4bc9-863b-3351e2a8061a", "turn_index": 9}}
{"user_turn_0": "I need to know who are the attendees of my calendar event at 1 PM", "agent_turn_0": "Root system inform calendarEvent find focus equals attendees equals person equals name equals Thomson namePrefix equals Mr", "user_turn_1": "I would like add him / her to basketball fun", "tgt": "(plan (^(CalendarEvent) Create :focus (^((Constraint CalendarEvent)) refer) :object (CalendarEvent.eventName_? (?= \" basketball fun \"))))", "idx": "12690", "datum_id": {"dialogue_id": "b68280db-990d-4a7f-939d-0068fa04fb7a", "turn_index": 3}}
{"user_turn_0": "Hi there , what do i have from 10:30 to 2 PM on my calendar ?", "agent_turn_0": "Root system inform calendarEvent find", "user_turn_1": "I want to book a single room at a hotel in Forest Hill from July 15th to 18th", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" Forest Hill \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 15L)))) (month_? (Date.month_? (?= (July)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 18L)))))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Single)))))))", "idx": "12703", "datum_id": {"dialogue_id": "e09fb3e2-3300-4d05-8058-5969de25972d", "turn_index": 1}}
{"user_turn_0": "Is there parking ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Please book", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "12705", "datum_id": {"dialogue_id": "e09fb3e2-3300-4d05-8058-5969de25972d", "turn_index": 3}}
{"user_turn_0": "Two", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you change the checkout date to the 19th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Day)) Path.apply \" object.dateTimeRange.endDateTime.date.day \") (lambda (^(Constraint Day) x0) (?= (Day.apply 19L)))))", "idx": "12707", "datum_id": {"dialogue_id": "e09fb3e2-3300-4d05-8058-5969de25972d", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , can you put the event I have on Monday onto my calendar ?", "tgt": "(plan (do (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))))) (^(Reminder) Create :object (Reminder.reminderContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))))))", "idx": "12720", "datum_id": {"dialogue_id": "8054b80c-92c3-4bc5-be59-49d0647a9181", "turn_index": 0}}
{"user_turn_0": "What 's the name of the airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals EasyJet", "user_turn_1": "No problem , book this flight please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "12749", "datum_id": {"dialogue_id": "fe77594a-3feb-402a-8d74-a772c973fd26", "turn_index": 4}}
{"user_turn_0": "I will return on Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 12 minute equals 30 meridiem equals PM price equals 201", "user_turn_1": "That 's fine . Please book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "12751", "datum_id": {"dialogue_id": "fe77594a-3feb-402a-8d74-a772c973fd26", "turn_index": 6}}
{"user_turn_0": "Hi there , add to my calendar an event on the 7th and add it to my reminder please", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals startDateTime equals time", "user_turn_1": "The event will begin at 3:30 PM and it will end at 7 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 7L)))) (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))) (DateTimeRange.endDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 7L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "12754", "datum_id": {"dialogue_id": "5141635f-4e96-4d67-86d1-20f3731e5711", "turn_index": 1}}
{"user_turn_0": "Does the restaurant have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "12771", "datum_id": {"dialogue_id": "984c5402-1957-44d6-9081-fa9a6969dd51", "turn_index": 2}}
{"user_turn_0": "I 'd prefer to have a different hotel with a low price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Lucia price equals 125", "user_turn_1": "Are private bathrooms available at the hotel ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.privateBath_? (^(Boolean) always)))))", "idx": "12779", "datum_id": {"dialogue_id": "8d0a9c2c-9cb8-48a7-b97c-03a7c7cac694", "turn_index": 5}}
{"user_turn_0": "From London", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 35 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (^((Constraint Train)) refer)))))", "idx": "12792", "datum_id": {"dialogue_id": "6fd8f7e5-187e-4cf0-9ce3-380bae14c7a4", "turn_index": 2}}
{"user_turn_0": "Yes , go ahead , please", "agent_turn_0": "Root system inform train book Completed", "user_turn_1": "Next I need a round trip ticket on a train going to Barking from Manchester Piccadilly after 10 in the morning", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& (& (& (Train.source_? (Place.location_? (?= \" Manchester Piccadilly \"))) (Train.destination_? (Place.location_? (?= \" Barking \")))) (Train.departureDateTime_? (DateTime.time_? (?>= (someSalient (& (Time.hour_? (?= (Hour.apply 10L))) (meridiem_? (?= (Meridiem.AM))))))))) (Train.tripType_? (?= (TripType.roundTrip)))))))", "idx": "12794", "datum_id": {"dialogue_id": "6fd8f7e5-187e-4cf0-9ce3-380bae14c7a4", "turn_index": 4}}
{"user_turn_0": "Hi my assistant , what 's the distance to Ash Grove Industrial Park ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 25", "user_turn_1": "If you take the shortest path , 25 minutes", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (Navigation.destination_? (Place.location_? (?= \" Ash Grove Industrial Park \")))))", "idx": "12796", "datum_id": {"dialogue_id": "db231ada-630b-4522-866c-ce79431022f5", "turn_index": 1}}
{"user_turn_0": "If you take the shortest path , 25 minutes", "agent_turn_0": "Root system inform navigation find focus equals distance equals number equals 7", "user_turn_1": "What 's the distance from Jackson Fish Wholesalers to 397 Tallwood Court ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Navigation)) Path.apply \" object \") (lambda (^(Constraint Navigation) x0) (& (Navigation.source_? (Place.location_? (?= \" Jackson Fish Wholesalers \"))) (Navigation.destination_? (Place.location_? (?= \" 397 Tallwood Court \")))))))", "idx": "12797", "datum_id": {"dialogue_id": "db231ada-630b-4522-866c-ce79431022f5", "turn_index": 2}}
{"user_turn_0": "How much time will the journey take ?", "agent_turn_0": "Root system inform flight find focus equals duration equals hour equals 1 minute equals 5", "user_turn_1": "Book four passengers for this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.source_? (Place.location_? (?= \" Liverpool \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (August))) (Date.day_? (?= (Day.apply 4L)))))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 4))))))", "idx": "12801", "datum_id": {"dialogue_id": "db231ada-630b-4522-866c-ce79431022f5", "turn_index": 6}}
{"user_turn_0": "Friday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 2 object equals nextDepartureDateTime equals time equals hour equals 4 meridiem equals PM price equals 134", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "12804", "datum_id": {"dialogue_id": "db231ada-630b-4522-866c-ce79431022f5", "turn_index": 9}}
{"user_turn_0": "I want to change my second trip 's departure date to the 19th", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 5 object equals nextDepartureDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM price equals 150", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "12806", "datum_id": {"dialogue_id": "db231ada-630b-4522-866c-ce79431022f5", "turn_index": 11}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i want to book restaurant with an average price at the 21st ; and I would like Mexican Food", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.priceRange_? (?= (PriceRange.Moderate))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 21L))))))) (Restaurant.foodType_? (?= (FoodType.Mexican))))))", "idx": "12808", "datum_id": {"dialogue_id": "4f8a1cd8-8c83-4bb8-b4fb-b29956c5776c", "turn_index": 0}}
{"user_turn_0": "Hey , i want to book restaurant with an average price at the 21st ; and I would like Mexican Food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName location", "user_turn_1": "It should be in Forrest Hill with at least a one star rating", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.location_? (?= \" Forest Hill \"))) (Restaurant.rating_? (?>= (someSalient (?= 1))))))))", "idx": "12809", "datum_id": {"dialogue_id": "4f8a1cd8-8c83-4bb8-b4fb-b29956c5776c", "turn_index": 1}}
{"user_turn_0": "I would like another one with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone Martian", "user_turn_1": "Does it have parking", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "12811", "datum_id": {"dialogue_id": "4f8a1cd8-8c83-4bb8-b4fb-b29956c5776c", "turn_index": 3}}
{"user_turn_0": "Does it have parking", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Ok book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flavoroso \"))))))", "idx": "12812", "datum_id": {"dialogue_id": "4f8a1cd8-8c83-4bb8-b4fb-b29956c5776c", "turn_index": 4}}
{"user_turn_0": "Do me another favor . Place a call to Mr Mackenzie", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "I need another favor . Add to my reminders", "tgt": "(plan (^(Reminder) Create))", "idx": "12819", "datum_id": {"dialogue_id": "bb82d744-8aff-43d8-bbb5-92649530e60e", "turn_index": 3}}
{"user_turn_0": "I need another favor . Add to my reminders", "agent_turn_0": "Root system prompt reminder create object equals atDateTime", "user_turn_1": "at 11:30", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Option (Constraint Reminder))) Path.apply \" object \") (lambda (^(Option (Constraint Reminder)) x0) (Some (Reminder.atDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L))))))))))", "idx": "12820", "datum_id": {"dialogue_id": "bb82d744-8aff-43d8-bbb5-92649530e60e", "turn_index": 4}}
{"user_turn_0": "I want the one leaving at 3 PM", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM price equals 138", "user_turn_1": "Great", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "12823", "datum_id": {"dialogue_id": "9fe9c486-135d-40d7-a4d1-96ec475051bb", "turn_index": 2}}
{"user_turn_0": "I want another hotel with three stars rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Embassy Suites price equals 160", "user_turn_1": "book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Obsidian Sky \"))))))", "idx": "12843", "datum_id": {"dialogue_id": "ef4a20d6-99ec-4da3-b38f-8e2a24b24cd9", "turn_index": 4}}
{"user_turn_0": "two", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "do the booking support free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "12847", "datum_id": {"dialogue_id": "ef4a20d6-99ec-4da3-b38f-8e2a24b24cd9", "turn_index": 8}}
{"user_turn_0": "Hi assistant , remind me to buy gifts at 11 AM tomorrow", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "I want to book a train ticket from Leicester to Machester", "tgt": "(plan (^(Train) Book :object (& (Train.source_? (Place.location_? (?= \" Leicester \"))) (Train.destination_? (Place.location_? (?= \" Manchester \"))))))", "idx": "12850", "datum_id": {"dialogue_id": "bea881cb-13c8-4e0a-ac56-62c385c53c12", "turn_index": 1}}
{"user_turn_0": "Which ones have a five - star rating ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Canton Silk", "user_turn_1": "Do they accept credit card payments ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "12862", "datum_id": {"dialogue_id": "e578a995-078a-4509-a2f0-803e6c09e1ed", "turn_index": 3}}
{"user_turn_0": "Do they accept credit card payments ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "Okay , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Juniper Cloud \"))))))", "idx": "12863", "datum_id": {"dialogue_id": "e578a995-078a-4509-a2f0-803e6c09e1ed", "turn_index": 4}}
{"user_turn_0": "Set a reminder for the event on the 14th", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Create a reminder for the event this afternoon please", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.atDateTime.dateTimeRange.startDateTime \") (lambda (^(Constraint DateTime) x0) (DateTime.time_? (?= (Afternoon))))))", "idx": "12868", "datum_id": {"dialogue_id": "1ea1b33d-6881-4642-affb-dbf736acc9c2", "turn_index": 2}}
{"user_turn_0": "Do I have any missed calls from Piers", "agent_turn_0": "Root system inform phoneCall checkExistence Existed", "user_turn_1": "Text him saying Hey", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (^((Constraint Contact)) refer)) (Message.textContent_? (?= \" Hey \")))))", "idx": "12870", "datum_id": {"dialogue_id": "1ea1b33d-6881-4642-affb-dbf736acc9c2", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , i want to book a cheap hotel with car parking for two nights .", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.priceRange_? (?= (PriceRange.Low))) (Hotel.dateTimeRange_? (DateTimeRange.duration_? (AppleDuration.day_? (?= 2))))) (Hotel.hasParking_? (?= true)))))", "idx": "12876", "datum_id": {"dialogue_id": "f7f8f902-4879-4437-bd92-6c644c994179", "turn_index": 0}}
{"user_turn_0": "Does the hotel have private bath room ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "12879", "datum_id": {"dialogue_id": "f7f8f902-4879-4437-bd92-6c644c994179", "turn_index": 3}}
{"user_turn_0": "Two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "12883", "datum_id": {"dialogue_id": "f7f8f902-4879-4437-bd92-6c644c994179", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , find me a cheap restaurant for Thursday at 3 o'clock", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High))))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 3L))))))))))", "idx": "12885", "datum_id": {"dialogue_id": "7facf670-5fcc-41ae-a87d-b6dc56882baf", "turn_index": 0}}
{"user_turn_0": "Where dat at", "agent_turn_0": "Root system inform restaurant find focus equals address equals 9 School Lane", "user_turn_1": "Nah man , I need a place to park my ride", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.hasParking_? (?= true))))))", "idx": "12891", "datum_id": {"dialogue_id": "7facf670-5fcc-41ae-a87d-b6dc56882baf", "turn_index": 6}}
{"user_turn_0": "Nah man , I need a place to park my ride", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floq", "user_turn_1": "But is there parking", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "12892", "datum_id": {"dialogue_id": "7facf670-5fcc-41ae-a87d-b6dc56882baf", "turn_index": 7}}
{"user_turn_0": "But is there parking", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Dope ! That 's where I want to go", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Bandits \"))))))", "idx": "12893", "datum_id": {"dialogue_id": "7facf670-5fcc-41ae-a87d-b6dc56882baf", "turn_index": 8}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , how long will it take to get to 14 Dagmar passage ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (Place.location_? (?= \" 14 Dagmar Passage \")))))", "idx": "12911", "datum_id": {"dialogue_id": "33dea234-5297-4d98-bed0-a247b41bb9e9", "turn_index": 0}}
{"user_turn_0": "Did Gordon give me a missed call ?", "agent_turn_0": "Root system inform phoneCall checkExistence Existed", "user_turn_1": "Thanks so much . Text him / her do we need bananas", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (^((Constraint Contact)) refer)) (Message.textContent_? (?= \" do we need bananas \")))))", "idx": "12914", "datum_id": {"dialogue_id": "33dea234-5297-4d98-bed0-a247b41bb9e9", "turn_index": 3}}
{"user_turn_0": "I want somewhere with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Godka", "user_turn_1": "Do they have outdoor seats ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "12929", "datum_id": {"dialogue_id": "4b094672-dcf5-40a4-be53-13d28b0e46cf", "turn_index": 3}}
{"user_turn_0": "Which of the restaurants are rated five stars ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Acacia Saint", "user_turn_1": "What is the average cost per person ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "12932", "datum_id": {"dialogue_id": "4b094672-dcf5-40a4-be53-13d28b0e46cf", "turn_index": 6}}
{"user_turn_0": "What is the average cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 36", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Emptia \"))))))", "idx": "12933", "datum_id": {"dialogue_id": "4b094672-dcf5-40a4-be53-13d28b0e46cf", "turn_index": 7}}
{"user_turn_0": "Find me another hotel , one with at least one star", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Sheraton price equals 119", "user_turn_1": "Do they have private bathrooms there ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.privateBath_? (^(Boolean) always)))))", "idx": "12951", "datum_id": {"dialogue_id": "0a97d6f5-b61e-4827-ad5a-a9e3f4b8db8d", "turn_index": 5}}
{"user_turn_0": "Do they have private bathrooms there ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Make the reservation there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Lucia \"))))))", "idx": "12952", "datum_id": {"dialogue_id": "0a97d6f5-b61e-4827-ad5a-a9e3f4b8db8d", "turn_index": 6}}
{"user_turn_0": "Yes , book it", "agent_turn_0": "Root system inform flight book Completed", "user_turn_1": "I need one plane ticket from London to Dublin", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (Flight.source_? (Place.location_? (?= \" London \"))) (Flight.destination_? (Place.location_? (?= \" Dublin \")))) (Flight.passengers_? (?= 1))))))", "idx": "12966", "datum_id": {"dialogue_id": "25410628-00be-48a7-8679-8507b1bbd411", "turn_index": 4}}
{"user_turn_0": "Wanda", "agent_turn_0": "Root system prompt message create object equals recipients equals person equals nameHint", "user_turn_1": "Wanda Powell", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Person)) Path.apply \" object.recipients.person \") (lambda (^(Constraint Person) x0) (& x0 (Person.nameHint_? (?= \" Powell \"))))))", "idx": "12969", "datum_id": {"dialogue_id": "798f658c-a84b-475b-bc9f-faceaf02afe4", "turn_index": 2}}
{"user_turn_0": "Does it have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "12975", "datum_id": {"dialogue_id": "dc707978-ccd5-41db-b307-53e1425d1d71", "turn_index": 3}}
{"user_turn_0": "does it have laundry", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "12986", "datum_id": {"dialogue_id": "6c30490b-b85c-455b-b789-de45d81acef7", "turn_index": 3}}
{"user_turn_0": "just one", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "does it have free cancellation", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "12991", "datum_id": {"dialogue_id": "6c30490b-b85c-455b-b789-de45d81acef7", "turn_index": 8}}
{"user_turn_0": "I would prefer another hotel with three star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Hilton price equals 138", "user_turn_1": "Does the hotel have private bath rooms ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.privateBath_? (^(Boolean) always)))))", "idx": "12997", "datum_id": {"dialogue_id": "35449f98-aeb8-4cb2-9b19-b5421d4d3307", "turn_index": 4}}
{"user_turn_0": "Does the hotel have private bath rooms ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Can you please book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Ballyfin \"))))))", "idx": "12998", "datum_id": {"dialogue_id": "35449f98-aeb8-4cb2-9b19-b5421d4d3307", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i want to book a three - star hotel .", "tgt": "(plan (^(Hotel) Book :object (Hotel.rating_? (?= 3))))", "idx": "13010", "datum_id": {"dialogue_id": "1d047c87-760d-4f01-aa19-9f3cab7d6752", "turn_index": 0}}
{"user_turn_0": "Does the hotel have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "13013", "datum_id": {"dialogue_id": "1d047c87-760d-4f01-aa19-9f3cab7d6752", "turn_index": 3}}
{"user_turn_0": "Can I have two rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking support free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "13017", "datum_id": {"dialogue_id": "1d047c87-760d-4f01-aa19-9f3cab7d6752", "turn_index": 7}}
{"user_turn_0": "Does it have a gym ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "13032", "datum_id": {"dialogue_id": "34c9a4d0-f06c-456b-8c1d-c85ff73be580", "turn_index": 3}}
{"user_turn_0": "I need 3 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait , change my check in to Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "13036", "datum_id": {"dialogue_id": "34c9a4d0-f06c-456b-8c1d-c85ff73be580", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , how much is the Marriott Hotel priced for more or less ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.priceRange_? (^(PriceRange) always)) :object (Hotel.hotelName_? (?= \" Marriott \"))))", "idx": "13038", "datum_id": {"dialogue_id": "742fd0e2-c577-41e4-aebf-e1a2bf27f34f", "turn_index": 0}}
{"user_turn_0": "What rating does it have ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Book that hotel for me", "tgt": "(plan (^(Hotel) Book :object (Hotel.hotelName_? (^((Constraint String)) refer))))", "idx": "13040", "datum_id": {"dialogue_id": "742fd0e2-c577-41e4-aebf-e1a2bf27f34f", "turn_index": 2}}
{"user_turn_0": "What kind of food does it serve ?", "agent_turn_0": "Root system inform restaurant find focus equals foodType equals Sushi", "user_turn_1": "Can you book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "13048", "datum_id": {"dialogue_id": "4703e156-a61a-49d0-8f87-351c13480c3f", "turn_index": 2}}
{"user_turn_0": "Yes , book this for me please", "agent_turn_0": "Root system inform calendarEvent create Completed restaurant book Completed", "user_turn_1": "Thanks for the help . Senda a message to Olivia", "tgt": "(plan (^(Message) Create :object (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Olivia \"))))))", "idx": "13056", "datum_id": {"dialogue_id": "7c7ab6a8-1425-471d-aff9-b042cde0e411", "turn_index": 4}}
{"user_turn_0": "Yes for Friday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM price equals 156", "user_turn_1": "I like that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "13061", "datum_id": {"dialogue_id": "27a98ce2-7015-42ab-88dc-fdeaa34426e7", "turn_index": 4}}
{"user_turn_0": "Do they take card there ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Okay book it then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "13071", "datum_id": {"dialogue_id": "c143aa54-383d-420a-8add-e3e4780cbb35", "turn_index": 3}}
{"user_turn_0": "Set a reminder for that event", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "I would like to make a restaurant booking at Northwick park for tomorrow at 11:30 . That restaurant should be high priced and rated more than zero stars", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Northwick Park \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L))))))))) (Restaurant.priceRange_? (?= (PriceRange.High)))) (Restaurant.rating_? (?!= (someSalient (?= 0)))))))", "idx": "13085", "datum_id": {"dialogue_id": "fab11cd2-db99-4602-af84-43788e02b324", "turn_index": 4}}
{"user_turn_0": "I 'm going to Edinburgh", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "13089", "datum_id": {"dialogue_id": "38982645-208c-4790-a2c2-745521026d40", "turn_index": 3}}
{"user_turn_0": "I do n't like any of those options . What about places that serve German ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Goat and Guru", "user_turn_1": "Do they have outdoor seating ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "13099", "datum_id": {"dialogue_id": "6b6a404a-b97b-4c50-aa7b-183ae312ca0b", "turn_index": 3}}
{"user_turn_0": "How do I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "13109", "datum_id": {"dialogue_id": "d0d3a940-0756-4f82-a158-468a8b409dd1", "turn_index": 3}}
{"user_turn_0": "Hi my assistant , i 'd like to make a reservation at a Spanish restaurant with onsite parking .", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName location", "user_turn_1": "Looks OK . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.location_? (?= \" Middle Park \"))) (Restaurant.rating_? (?= 4))))))", "idx": "13114", "datum_id": {"dialogue_id": "102c0ee6-49b2-4ecc-855a-894cf574a160", "turn_index": 1}}
{"user_turn_0": "Looks OK . Book it", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals La Zilla", "user_turn_1": "Here 's the reservation information . Should I submit it ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "13115", "datum_id": {"dialogue_id": "102c0ee6-49b2-4ecc-855a-894cf574a160", "turn_index": 2}}
{"user_turn_0": "Here 's the reservation information . Should I submit it ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "And what table size would you like ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 5L)))))))))))", "idx": "13116", "datum_id": {"dialogue_id": "102c0ee6-49b2-4ecc-855a-894cf574a160", "turn_index": 3}}
{"user_turn_0": "And what table size would you like ?", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Sorry , the restaurant is n't open at that time", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "13117", "datum_id": {"dialogue_id": "102c0ee6-49b2-4ecc-855a-894cf574a160", "turn_index": 4}}
{"user_turn_0": "Sorry , the restaurant is n't open at that time", "agent_turn_0": "Root system prompt restaurant book object equals tableSize", "user_turn_1": "Does it have an outdoor seating area ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.tableSize_? (?= 2))))))", "idx": "13118", "datum_id": {"dialogue_id": "102c0ee6-49b2-4ecc-855a-894cf574a160", "turn_index": 5}}
{"user_turn_0": "Brighton", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 meridiem equals PM", "user_turn_1": "I want the 2 PM one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "13122", "datum_id": {"dialogue_id": "8a533c5f-d954-4d6e-ab52-8e1366ed5427", "turn_index": 2}}
{"user_turn_0": "Do I have calls from Mr Hudson ?", "agent_turn_0": "Root system inform phoneCall checkExistence Existed object equals atDateTime equals date definedValue equals Today", "user_turn_1": "Also text him saying how are you", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (^((Constraint Contact)) refer)) (Message.textContent_? (?= \" how are you \")))))", "idx": "13128", "datum_id": {"dialogue_id": "36e18b1b-1ab3-42fb-9757-f391b94fb818", "turn_index": 2}}
{"user_turn_0": "Please do", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Deliver another message", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Option (Constraint Message))) Path.apply \" object \") (lambda (^(Option (Constraint Message)) x0) (^(Message) Create$default$object))))", "idx": "13138", "datum_id": {"dialogue_id": "ff5a36cf-34a7-4a11-b995-0472ab0acbf3", "turn_index": 2}}
{"user_turn_0": "Does it have parking ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "13144", "datum_id": {"dialogue_id": "fd1e21a4-6eb1-459c-8b83-b9fb188b8f82", "turn_index": 3}}
{"user_turn_0": "Edinburgh", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM price equals 135", "user_turn_1": "Cool get it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "13151", "datum_id": {"dialogue_id": "b29df852-237e-47d1-b0bb-69253c9ea41b", "turn_index": 3}}
{"user_turn_0": "Actually can you change the departure day of my first trip to tomorrow", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM price equals 170", "user_turn_1": "That is ok . I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "13156", "datum_id": {"dialogue_id": "b29df852-237e-47d1-b0bb-69253c9ea41b", "turn_index": 8}}
{"user_turn_0": "Hey assistant , when will my flight take off today", "agent_turn_0": "Root system inform flight find focus equals departureDateTime equals time equals hour equals 2 meridiem equals PM", "user_turn_1": "Is there an event today at 2 PM", "tgt": "(plan (^(CalendarEvent) CheckExistence :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (?= (Today))) (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "13200", "datum_id": {"dialogue_id": "ad9ca1e8-38fa-4c20-a46c-c82142e1abfb", "turn_index": 1}}
{"user_turn_0": "Is there an event today at 2 PM", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Make one", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.eventName_? (?= \" Pet sitting \"))))", "idx": "13201", "datum_id": {"dialogue_id": "ad9ca1e8-38fa-4c20-a46c-c82142e1abfb", "turn_index": 2}}
{"user_turn_0": "I 'd rather stay somewhere with a moderate price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Bluebird Guesthouse price equals 178", "user_turn_1": "Does it have a private bath room ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.privateBath_? (^(Boolean) always)))))", "idx": "13207", "datum_id": {"dialogue_id": "d6d2c064-5155-49fd-97a9-0108d4787bec", "turn_index": 3}}
{"user_turn_0": "Does it have a private bath room ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "I want a place with at least 1 star", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.rating_? (?>= (someSalient (?= 1))))))))", "idx": "13208", "datum_id": {"dialogue_id": "d6d2c064-5155-49fd-97a9-0108d4787bec", "turn_index": 4}}
{"user_turn_0": "I want a place with at least 1 star", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Bluebird Guesthouse price equals 135", "user_turn_1": "Does it have laundry ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.laundry_? (^(Boolean) always)))))", "idx": "13209", "datum_id": {"dialogue_id": "d6d2c064-5155-49fd-97a9-0108d4787bec", "turn_index": 5}}
{"user_turn_0": "Does it have laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Dream Connect \"))))))", "idx": "13210", "datum_id": {"dialogue_id": "d6d2c064-5155-49fd-97a9-0108d4787bec", "turn_index": 6}}
{"user_turn_0": "Which of the restaurants have Indian food ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jurassic Pork", "user_turn_1": "Does it have parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "13224", "datum_id": {"dialogue_id": "c3e2f6d0-4710-4790-ab86-5e0e223840f2", "turn_index": 4}}
{"user_turn_0": "I rather have another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Beef Easy", "user_turn_1": "Cool , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Maple \"))))))", "idx": "13226", "datum_id": {"dialogue_id": "c3e2f6d0-4710-4790-ab86-5e0e223840f2", "turn_index": 6}}
{"user_turn_0": "I need directions from 29 Highgate Lane to 9 Constitution Drive", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Remind me to take medicines", "tgt": "(plan (^(Reminder) Create :object (Reminder.reminderContent_? (?= \" take medicines \"))))", "idx": "13232", "datum_id": {"dialogue_id": "fe258820-9874-404d-91a9-07dbc818783f", "turn_index": 2}}
{"user_turn_0": "Just make sure the restaurant serves American food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Chipotle Grill", "user_turn_1": "What 's the address ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "13240", "datum_id": {"dialogue_id": "08b8f3eb-c4ae-4a11-ac1e-ee5f64dfe99e", "turn_index": 5}}
{"user_turn_0": "What type of food do they have ?", "agent_turn_0": "Root system inform restaurant find focus equals foodType equals Chinese food", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "13249", "datum_id": {"dialogue_id": "c754e5d9-2f5a-46e1-96a4-431f4ff1c7ff", "turn_index": 3}}
{"user_turn_0": "I want a table for 3 please", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Alright , update the appointment date to today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (?= (Today))))))))", "idx": "13251", "datum_id": {"dialogue_id": "c754e5d9-2f5a-46e1-96a4-431f4ff1c7ff", "turn_index": 5}}
{"user_turn_0": "Does that cost include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "13256", "datum_id": {"dialogue_id": "b547b35d-3137-4bad-9ee4-fb4e65f9b384", "turn_index": 3}}
{"user_turn_0": "I need one double room", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Have me check in on Tuesday instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "13259", "datum_id": {"dialogue_id": "b547b35d-3137-4bad-9ee4-fb4e65f9b384", "turn_index": 6}}
{"user_turn_0": "Have me check in on Tuesday instead", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I need to make a prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "13260", "datum_id": {"dialogue_id": "b547b35d-3137-4bad-9ee4-fb4e65f9b384", "turn_index": 7}}
{"user_turn_0": "Remind me on November 14th", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Next task , send tomorrow 's event to Mr Allan", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))))))) (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Allan \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "13275", "datum_id": {"dialogue_id": "68f787f0-751b-433b-adba-193ad753f427", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i need an event made for my event .", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (^(CalendarEvent) always))))))", "idx": "13277", "datum_id": {"dialogue_id": "fe43fd01-b662-4650-94cd-5853b78f938c", "turn_index": 0}}
{"user_turn_0": "I would like the event to start at 10 AM", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "Also create hang out held in Tin Roof on the calendar", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.eventName_? (?= \" hang out \")) (CalendarEvent.location_? (?= \" Tin Roof \")))))", "idx": "13289", "datum_id": {"dialogue_id": "35794208-125a-4099-811a-ee24dbc5cdca", "turn_index": 3}}
{"user_turn_0": "Yes you are right", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM price equals 160", "user_turn_1": "That 's ok . I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "13293", "datum_id": {"dialogue_id": "ccfa9626-302d-45c8-9ca1-5ec1ccbaa27b", "turn_index": 2}}
{"user_turn_0": "Paddington", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM", "user_turn_1": "Looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "13299", "datum_id": {"dialogue_id": "dc781432-fd94-4189-af32-278b4c26873c", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , i want to book a hotel with car parking and I want single room .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.roomType_? (List.exists_? (?= (RoomType.Single)))) (Hotel.hasParking_? (?= true)))))", "idx": "13318", "datum_id": {"dialogue_id": "5b6fcb08-18a3-48f1-9ae2-fa9530e42d8f", "turn_index": 0}}
{"user_turn_0": "Give me directions", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Etiquette Suites \"))))))", "idx": "13323", "datum_id": {"dialogue_id": "5b6fcb08-18a3-48f1-9ae2-fa9530e42d8f", "turn_index": 5}}
{"user_turn_0": "I need three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "What about prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "13336", "datum_id": {"dialogue_id": "dd552331-8c25-4ee8-9b68-a261b88fa733", "turn_index": 3}}
{"user_turn_0": "Hello assistant , i want to take a look at my calendar events please .", "agent_turn_0": "Root system inform calendarEvent find", "user_turn_1": "Next task , let me book a restaurant that serves Italian cuisine and not high price at 2 PM in London bridge", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" London Bridge \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))) (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Restaurant.foodType_? (?= (FoodType.Italian))))))", "idx": "13349", "datum_id": {"dialogue_id": "5efcf587-2efd-4378-b85a-7d1da4632f50", "turn_index": 1}}
{"user_turn_0": "Let me go another restaurant that has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flew Z", "user_turn_1": "Double check if it has parking please", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "13352", "datum_id": {"dialogue_id": "5efcf587-2efd-4378-b85a-7d1da4632f50", "turn_index": 4}}
{"user_turn_0": "I want to go with another one that has outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone Martian", "user_turn_1": "Can you provide a cost per person ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "13354", "datum_id": {"dialogue_id": "5efcf587-2efd-4378-b85a-7d1da4632f50", "turn_index": 6}}
{"user_turn_0": "Can you provide a cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 43", "user_turn_1": "Let me go ahead and book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Maple \"))))))", "idx": "13355", "datum_id": {"dialogue_id": "5efcf587-2efd-4378-b85a-7d1da4632f50", "turn_index": 7}}
{"user_turn_0": "I will need to book a table for five", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Please change the booking date to June 7th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (& (Date.month_? (?= (June))) (Date.day_? (?= (Day.apply 7L))))))))))", "idx": "13357", "datum_id": {"dialogue_id": "5efcf587-2efd-4378-b85a-7d1da4632f50", "turn_index": 9}}
{"user_turn_0": "Do they have private bath rooms ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Can you please book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "13362", "datum_id": {"dialogue_id": "7e2c6aa3-c0f1-4251-8a31-7a4c070f5d9c", "turn_index": 3}}
{"user_turn_0": "Does it have a private bath room ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "13370", "datum_id": {"dialogue_id": "2ad41ffd-ccb1-41c5-9282-f25af5b96c69", "turn_index": 3}}
{"user_turn_0": "Just one", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually can you change the check out date to Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Sunday)))))", "idx": "13374", "datum_id": {"dialogue_id": "2ad41ffd-ccb1-41c5-9282-f25af5b96c69", "turn_index": 7}}
{"user_turn_0": "Actually can you change the check out date to Sunday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need any prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "13375", "datum_id": {"dialogue_id": "2ad41ffd-ccb1-41c5-9282-f25af5b96c69", "turn_index": 8}}
{"user_turn_0": "Coming back on Sunday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM", "user_turn_1": "Fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "13388", "datum_id": {"dialogue_id": "edab8783-9ef9-4b3b-910d-b7843077738c", "turn_index": 6}}
{"user_turn_0": "Three please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Change the check out date to the 23rd", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 23L))))))", "idx": "13395", "datum_id": {"dialogue_id": "3bd47711-092b-4cfb-8717-7b1ed61afa25", "turn_index": 5}}
{"user_turn_0": "Change the check out date to the 23rd", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will it have free cancelations ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "13396", "datum_id": {"dialogue_id": "3bd47711-092b-4cfb-8717-7b1ed61afa25", "turn_index": 6}}
{"user_turn_0": "Does the hotel provide laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "13406", "datum_id": {"dialogue_id": "a1dfff6d-01e3-4312-9d0b-dfa8b77f18e9", "turn_index": 3}}
{"user_turn_0": "London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM price equals 150", "user_turn_1": "Looks good , I 'll take it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "13434", "datum_id": {"dialogue_id": "143fcc29-ebea-46a4-a832-c6d93bef12bc", "turn_index": 2}}
{"user_turn_0": "true", "agent_turn_0": "Root system inform message find notExisted object equals recipients", "user_turn_1": "Do me another favor . Let me get a restaurant at 6:30 PM on the 18th for German food", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.priceRange_? (?= (PriceRange.Low))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 18L))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Restaurant.foodType_? (?= (FoodType.German))))))", "idx": "13441", "datum_id": {"dialogue_id": "f432875e-6c06-4a40-80a2-79aecd43e608", "turn_index": 4}}
{"user_turn_0": "Call him", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Let me know if I have any missed calls from Evan", "tgt": "(plan (revise (^(Unit) Path.apply \" CheckExistence \") (^((Constraint String)) Path.apply \" object.sender.person.name \") (lambda (^(Constraint String) x0) (?= \" Evan \"))))", "idx": "13444", "datum_id": {"dialogue_id": "467d62ee-62bb-42f4-97e3-452548490b1d", "turn_index": 2}}
{"user_turn_0": "Is there a missed call from Thomas", "agent_turn_0": "Root system inform phoneCall checkExistence Existed", "user_turn_1": "Next task , text him saying what 's your favorite color", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (^((Constraint Contact)) refer)) (Message.textContent_? (?= \" what's your favorite color \")))))", "idx": "13449", "datum_id": {"dialogue_id": "6fe63087-43fa-4861-9c31-53ffc2167290", "turn_index": 2}}
{"user_turn_0": "Hey assistant , can you put a reminder on my calendar for my event this morning ?", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Next task , can you book me table at a restaurant on Baker Street ? Make sure there 's a table available on January 7th and the restaurant has parking available", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.location_? (?= \" Baker Street \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (& (Date.month_? (?= (January))) (Date.day_? (?= (Day.apply 7L)))))))) (Restaurant.hasParking_? (?= true)))))", "idx": "13463", "datum_id": {"dialogue_id": "8960be34-1f95-4d00-961e-9b07d67121c7", "turn_index": 1}}
{"user_turn_0": "I do n't mind as long as the restaurant has a rating of at least four stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone Martian", "user_turn_1": "Ok , I trust you", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "13465", "datum_id": {"dialogue_id": "8960be34-1f95-4d00-961e-9b07d67121c7", "turn_index": 3}}
{"user_turn_0": "Today at 1 in the afternoon", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Alright what about 1:30", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "13472", "datum_id": {"dialogue_id": "de2a3661-6775-4146-b569-d7b4e3386a0c", "turn_index": 3}}
{"user_turn_0": "Hey assistant , make event with Mr MacLeod conducted in Maverick on the calendar", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange", "user_turn_1": "I need to know the time you would like to set", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object \") (lambda (^(Constraint CalendarEvent) x0) (& x0 (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))))))))", "idx": "13475", "datum_id": {"dialogue_id": "05a58cd2-0896-4b57-8870-a477508b602e", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i need a reservation at a moderately priced hotel on September 19 until the 22nd .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?= (PriceRange.Moderate))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 19L)))) (month_? (Date.month_? (?= (September)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 22L))))))))))", "idx": "13484", "datum_id": {"dialogue_id": "e14d1a28-c89e-4f9d-a146-b53f0fe38616", "turn_index": 0}}
{"user_turn_0": "Is there a place to work out in the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Make a reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "13487", "datum_id": {"dialogue_id": "e14d1a28-c89e-4f9d-a146-b53f0fe38616", "turn_index": 3}}
{"user_turn_0": "Hello assistant , please get me directions to 29 Highgate Lane by bike", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Thanks for the help . I 'd like to book a Tuesday departure for Amsterdam", "tgt": "(plan (^(Flight) Book :object (& (& (Flight.destination_? (Place.location_? (?= \" Amsterdam \"))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))))) (Flight.tripType_? (?= (TripType.roundTrip))))))", "idx": "13492", "datum_id": {"dialogue_id": "46d44e6d-8f4e-42ae-88f1-868c0aa9b179", "turn_index": 1}}
{"user_turn_0": "I will return on Sunday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "13507", "datum_id": {"dialogue_id": "e65f8e9a-d00d-497f-813c-1409644380b4", "turn_index": 4}}
{"user_turn_0": "Does it include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" River Park \"))))))", "idx": "13513", "datum_id": {"dialogue_id": "fe0856b5-990f-470c-97aa-e72def267723", "turn_index": 4}}
{"user_turn_0": "One room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "13517", "datum_id": {"dialogue_id": "fe0856b5-990f-470c-97aa-e72def267723", "turn_index": 8}}
{"user_turn_0": "Do I need to prepay ?", "agent_turn_0": "Root system inform hotel find focus equals prePayment equals False", "user_turn_1": "Actually change the check out to Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Thursday))))))", "idx": "13518", "datum_id": {"dialogue_id": "fe0856b5-990f-470c-97aa-e72def267723", "turn_index": 9}}
{"user_turn_0": "Actually change the check out to Thursday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "13519", "datum_id": {"dialogue_id": "fe0856b5-990f-470c-97aa-e72def267723", "turn_index": 10}}
{"user_turn_0": "Do I need to prepay ?", "agent_turn_0": "Root system inform hotel find focus equals prePayment equals False", "user_turn_1": "Change the check out date to Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Saturday)))))", "idx": "13520", "datum_id": {"dialogue_id": "fe0856b5-990f-470c-97aa-e72def267723", "turn_index": 11}}
{"user_turn_0": "Change the check out date to Saturday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Change the check out date to the 21st", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 21L))))))", "idx": "13521", "datum_id": {"dialogue_id": "fe0856b5-990f-470c-97aa-e72def267723", "turn_index": 12}}
{"user_turn_0": "What is the weather like in Swansea", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cloudy", "user_turn_1": "Next task , can you please remind me to review the paycheck at 5:30 PM", "tgt": "(plan (^(Reminder) Create :object (& (Reminder.reminderContent_? (?= \" review the paycheck \")) (Reminder.atDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 5L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "13527", "datum_id": {"dialogue_id": "c241667e-c25a-4595-bef3-1c731ed7d676", "turn_index": 4}}
{"user_turn_0": "I like that one", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM", "user_turn_1": "That 's great", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "13535", "datum_id": {"dialogue_id": "3fce2aa5-d38a-45dc-b039-acc9c9342353", "turn_index": 2}}
{"user_turn_0": "What airline is it on ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "I prefer the one leaving at 4:50 Pm", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "13557", "datum_id": {"dialogue_id": "eb5a2d84-cf98-4634-aa05-ff1bd47e7573", "turn_index": 4}}
{"user_turn_0": "Friday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM price equals 173", "user_turn_1": "This one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "13564", "datum_id": {"dialogue_id": "001eefb1-ddb6-45e9-a5b9-986c3a8824d9", "turn_index": 4}}
{"user_turn_0": "How is the weather in Leeds today ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Sunny", "user_turn_1": "Delete every single one of my messages", "tgt": "(plan (^(Message) Delete :object (Message.quantifier_? (?= (Quantifier.All)))))", "idx": "13569", "datum_id": {"dialogue_id": "24fa4890-7c06-4918-87a5-2f4f29f28059", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , i want to book a single room at a moderately priced hotel for tomorrow night", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))) (DateTimeRange.duration_? (AppleDuration.day_? (?= 1)))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Single)))))))", "idx": "13571", "datum_id": {"dialogue_id": "28ad7fab-cd2c-4f9e-a9dc-f1e17cae482d", "turn_index": 0}}
{"user_turn_0": "I need one room and the room type does n't matter", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually can you change the check out date to Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Sunday))))))", "idx": "13621", "datum_id": {"dialogue_id": "6965493e-9cd8-44f1-95da-076692041d79", "turn_index": 3}}
{"user_turn_0": "It starts at 2:30 PM and ends at 4:30 PM", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "Let 's book a hotel in Hammersmith for a single room from the 14th to the 18th", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" Hammersmith \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 14L))))) (DateTimeRange.endDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 18L)))) (month_? (Date.month_? (?= (February))))))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Single)))))))", "idx": "13627", "datum_id": {"dialogue_id": "15078cf7-8cbf-454e-8209-ea2dcc469783", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , i want to book a cheap Indian restaurant at 3:30 PM .", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High))))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))) (Restaurant.foodType_? (?= (FoodType.Indian))))))", "idx": "13633", "datum_id": {"dialogue_id": "34237534-e3c7-4f9f-9f3a-799f6bb53b2f", "turn_index": 0}}
{"user_turn_0": "I prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Godka", "user_turn_1": "What is the average cost per person ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "13637", "datum_id": {"dialogue_id": "34237534-e3c7-4f9f-9f3a-799f6bb53b2f", "turn_index": 4}}
{"user_turn_0": "What is the average cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 36", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Capers \"))))))", "idx": "13638", "datum_id": {"dialogue_id": "34237534-e3c7-4f9f-9f3a-799f6bb53b2f", "turn_index": 5}}
{"user_turn_0": "Is breakfast also included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "13644", "datum_id": {"dialogue_id": "196310b4-0dac-48ca-a486-2437e7807d7f", "turn_index": 3}}
{"user_turn_0": "Three rooms are needed ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does this booking support free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "13649", "datum_id": {"dialogue_id": "196310b4-0dac-48ca-a486-2437e7807d7f", "turn_index": 8}}
{"user_turn_0": "On Wednesday", "agent_turn_0": "Root system prompt flight book object equals destination", "user_turn_1": "Edinburg", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.destination_? (Place.location_? (?= \" Edinburgh \")))))))", "idx": "13668", "datum_id": {"dialogue_id": "c126e464-4da7-4184-8ad6-d47cec91dfa1", "turn_index": 2}}
{"user_turn_0": "Sunday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM price equals 156", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "13673", "datum_id": {"dialogue_id": "c126e464-4da7-4184-8ad6-d47cec91dfa1", "turn_index": 7}}
{"user_turn_0": "I prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Godka", "user_turn_1": "Does the restaurant have outdoor seats ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "13680", "datum_id": {"dialogue_id": "65f94fc7-b279-4bb6-9812-ea6d2ba68046", "turn_index": 5}}
{"user_turn_0": "I prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Acacia Saint", "user_turn_1": "Does the restaurant take credit card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "13682", "datum_id": {"dialogue_id": "65f94fc7-b279-4bb6-9812-ea6d2ba68046", "turn_index": 7}}
{"user_turn_0": "Does the restaurant take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "That 's fine . Book it for me on the 13th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Cityroom \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 13L))))))))))", "idx": "13683", "datum_id": {"dialogue_id": "65f94fc7-b279-4bb6-9812-ea6d2ba68046", "turn_index": 8}}
{"user_turn_0": "Yes , please", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "How far is 7 Upper Street from Little Bat ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (& (Navigation.source_? (Place.location_? (?= \" Little Bat \"))) (Navigation.destination_? (Place.location_? (?= \" 7 Upper Street \"))))))", "idx": "13691", "datum_id": {"dialogue_id": "d8cb4471-28b3-4d79-81ca-85a66ec0d5fb", "turn_index": 4}}
{"user_turn_0": "one", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "I want to check in on Monday instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Monday))))))", "idx": "13697", "datum_id": {"dialogue_id": "fe682ded-c34b-452d-ad34-d727131794b5", "turn_index": 5}}
{"user_turn_0": "What 's the address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals Angel Central", "user_turn_1": "Book it for Monday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Cityroom \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))))))))", "idx": "13710", "datum_id": {"dialogue_id": "d20cf6ef-ce3d-4205-ba0a-7ac0417903b1", "turn_index": 3}}
{"user_turn_0": "I would prefer another restaurant that has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone", "user_turn_1": "Does this restaurant take credit cards ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "13719", "datum_id": {"dialogue_id": "0d42d168-8cd7-4638-a6a0-eb3a0da7b12d", "turn_index": 5}}
{"user_turn_0": "I would like another restaurant with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Juniper Cloud", "user_turn_1": "Does this restaurant have parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "13721", "datum_id": {"dialogue_id": "0d42d168-8cd7-4638-a6a0-eb3a0da7b12d", "turn_index": 7}}
{"user_turn_0": "Does this restaurant have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "This is fine . Book it now please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flew Z \"))))))", "idx": "13722", "datum_id": {"dialogue_id": "0d42d168-8cd7-4638-a6a0-eb3a0da7b12d", "turn_index": 8}}
{"user_turn_0": "What airline is it ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals EasyJet", "user_turn_1": "I 'd rather have the one at 2:40 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "13728", "datum_id": {"dialogue_id": "990e4d00-0048-4b42-94e6-da4212c27de3", "turn_index": 3}}
{"user_turn_0": "I would like a hotel with at least one star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Moody Moon price equals 170", "user_turn_1": "The hotel do they have free wifi ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasWifi_? (^(Boolean) always)))))", "idx": "13739", "datum_id": {"dialogue_id": "305d74b4-b70d-4800-b166-d6057a5484aa", "turn_index": 4}}
{"user_turn_0": "The hotel do they have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Please book the hotel for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" The Blackstone \"))))))", "idx": "13740", "datum_id": {"dialogue_id": "305d74b4-b70d-4800-b166-d6057a5484aa", "turn_index": 5}}
{"user_turn_0": "Is there anyway I can have 3 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Please can you put the check in day as Monday please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Monday))))))", "idx": "13742", "datum_id": {"dialogue_id": "305d74b4-b70d-4800-b166-d6057a5484aa", "turn_index": 7}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM price equals 124", "user_turn_1": "Get me on the flight that departs at 4:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "13757", "datum_id": {"dialogue_id": "cf406649-a96b-41b2-b11b-c081d7fc7e7e", "turn_index": 2}}
{"user_turn_0": "Hi there , i need to book reservations for a three star restaurant in Middle Park .", "agent_turn_0": "Root system prompt restaurant book object equals foodType", "user_turn_1": "Highly priced Thai food", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.foodType_? (?= (FoodType.Thai)))) (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))))))", "idx": "13761", "datum_id": {"dialogue_id": "0bc1e283-f61f-49d6-a425-2f7488147a77", "turn_index": 1}}
{"user_turn_0": "I need something different with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Stazione restaurant", "user_turn_1": "Will there be parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "13764", "datum_id": {"dialogue_id": "0bc1e283-f61f-49d6-a425-2f7488147a77", "turn_index": 4}}
{"user_turn_0": "Will there be parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "That works . Go ahead and book me for today at 3 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Encino \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "13765", "datum_id": {"dialogue_id": "0bc1e283-f61f-49d6-a425-2f7488147a77", "turn_index": 5}}
{"user_turn_0": "I need the table for 2 people", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Change that appointment date to Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Sunday))))))", "idx": "13767", "datum_id": {"dialogue_id": "0bc1e283-f61f-49d6-a425-2f7488147a77", "turn_index": 7}}
{"user_turn_0": "No . I 'm going to Madrid on Thursday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 4 object equals nextDepartureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM price equals 199", "user_turn_1": "It looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "13773", "datum_id": {"dialogue_id": "f94f9d07-3e8b-4a55-b9a4-32b031a660bc", "turn_index": 4}}
{"user_turn_0": "Wait . Could you change the departure day for my first trip today ?", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM price equals 130", "user_turn_1": "I 'd rather have a business class flight that leaves at 1:40 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (& (Flight.source_? (Place.location_? (?= \" London \"))) (Flight.destination_? (Place.location_? (?= \" Edinburgh \")))) (Flight.passengers_? (?= 1))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.nextDestination_? (^((Constraint Place)) refer))) (Flight.nextDepartureDateTime_? (& (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday)))) (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "13775", "datum_id": {"dialogue_id": "f94f9d07-3e8b-4a55-b9a4-32b031a660bc", "turn_index": 6}}
{"user_turn_0": "Schedule it at 2 AM please", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Add an event held in Basel House at 1 PM to the calendar", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object \") (lambda (^(Constraint CalendarEvent) x0) (& (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM))))))) (CalendarEvent.location_? (?= \" Basel House \"))))))", "idx": "13780", "datum_id": {"dialogue_id": "be93e4b5-0ecd-4dbd-afbf-c33c0901bcab", "turn_index": 3}}
{"user_turn_0": "What is the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "Book it then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "13805", "datum_id": {"dialogue_id": "f588c423-c87d-406e-8749-e3e50ee2c0e9", "turn_index": 3}}
{"user_turn_0": "I want a one queen size bed", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Could you change the check in date ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Today)))))", "idx": "13809", "datum_id": {"dialogue_id": "f588c423-c87d-406e-8749-e3e50ee2c0e9", "turn_index": 7}}
{"user_turn_0": "It does n't matter as long as the rating is at least three stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kiwi Sea", "user_turn_1": "Does the restaurant take credit card ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "13815", "datum_id": {"dialogue_id": "293fcfd0-18dc-4bd9-8427-61fa8ef553a7", "turn_index": 4}}
{"user_turn_0": "I prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kitty City", "user_turn_1": "What is the address of the restaurant ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "13817", "datum_id": {"dialogue_id": "293fcfd0-18dc-4bd9-8427-61fa8ef553a7", "turn_index": 6}}
{"user_turn_0": "What is the address of the restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 54 Islington Park Road", "user_turn_1": "That 's fine . Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Dimple's \"))))))", "idx": "13818", "datum_id": {"dialogue_id": "293fcfd0-18dc-4bd9-8427-61fa8ef553a7", "turn_index": 7}}
{"user_turn_0": "Next , i 'd like to purchase a train ticket leaving Waterloo and going to Edinburgh Waverley before 5 PM", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 20 meridiem equals PM", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "13832", "datum_id": {"dialogue_id": "676c0d49-63b1-46c2-806c-e5d2997298dc", "turn_index": 4}}
{"user_turn_0": "It ends at 4 pm", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Check call from my love", "tgt": "(plan (^(PhoneCall) CheckExistence :object (& (PhoneCall.newness_? (?= (Newness.New))) (PhoneCall.sender_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Love))))))))", "idx": "13841", "datum_id": {"dialogue_id": "e717b98b-ad9e-4fe9-be5b-51c81e1abdf4", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , book me a flight to Brussel through Easter Airways please", "tgt": "(plan (^(Flight) Book :object (& (Flight.destination_? (Place.location_? (?= \" Brussel \"))) (Flight.airLine_? (?= \" Eastern \")))))", "idx": "13853", "datum_id": {"dialogue_id": "d95c3962-ddaa-4f95-88c2-0d65de3df95b", "turn_index": 0}}
{"user_turn_0": "OK book me the taxi", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "Also book me a three - star rated hotel for two nights in Leicester Square", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" Leicester Square \")) (Hotel.dateTimeRange_? (DateTimeRange.duration_? (AppleDuration.day_? (?= 2))))) (Hotel.rating_? (?= 3)))))", "idx": "13868", "datum_id": {"dialogue_id": "f2ea6494-616e-4ce5-89fe-4eab962bbfa1", "turn_index": 4}}
{"user_turn_0": "Hmmm , tempting but I 'd rather have something else with a two star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals River Park price equals 125", "user_turn_1": "What rating does that one have ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.rating_? (^(Number) always)))))", "idx": "13883", "datum_id": {"dialogue_id": "084d8996-e498-489b-ba20-f1f412e01274", "turn_index": 4}}
{"user_turn_0": "What rating does that one have ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Okay , book me that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Freehand \"))))))", "idx": "13884", "datum_id": {"dialogue_id": "084d8996-e498-489b-ba20-f1f412e01274", "turn_index": 5}}
{"user_turn_0": "Hold on , I need 2 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I need to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "13888", "datum_id": {"dialogue_id": "084d8996-e498-489b-ba20-f1f412e01274", "turn_index": 9}}
{"user_turn_0": "Hmm . Well anyways , I need to change my check in date to tomorrow", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Okay change the check in to Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "13890", "datum_id": {"dialogue_id": "084d8996-e498-489b-ba20-f1f412e01274", "turn_index": 11}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , check calendar event today 2:30 PM", "tgt": "(plan (^(CalendarEvent) Find :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (?= (Today))) (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "13892", "datum_id": {"dialogue_id": "d768ec9d-8388-476d-8bc0-3b6e7aeab517", "turn_index": 0}}
{"user_turn_0": "I 'd like a different restaurant , one with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone", "user_turn_1": "Do they have outdoor seating ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "13900", "datum_id": {"dialogue_id": "2295b013-1309-43d6-8d8d-8583d308d3ec", "turn_index": 3}}
{"user_turn_0": "I 'd like a different restaurant with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flavoroso", "user_turn_1": "Do they take card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "13902", "datum_id": {"dialogue_id": "2295b013-1309-43d6-8d8d-8583d308d3ec", "turn_index": 5}}
{"user_turn_0": "Do they take card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Okay , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "13903", "datum_id": {"dialogue_id": "2295b013-1309-43d6-8d8d-8583d308d3ec", "turn_index": 6}}
{"user_turn_0": "Okay , book it", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Can you make that reservation tomorrow instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "13904", "datum_id": {"dialogue_id": "2295b013-1309-43d6-8d8d-8583d308d3ec", "turn_index": 7}}
{"user_turn_0": "How would I get to that hotel ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Okay , I 'll stay there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "13926", "datum_id": {"dialogue_id": "401396fa-fcd3-423e-9724-46aef642851d", "turn_index": 3}}
{"user_turn_0": "Three , please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually , change the check out to the 23rd , please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 23L))))))", "idx": "13931", "datum_id": {"dialogue_id": "401396fa-fcd3-423e-9724-46aef642851d", "turn_index": 8}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , when does flight HO 347 depart ?", "tgt": "(plan (^(Flight) Find :focus (Flight.departureDateTime_? (^((List DateTime)) always)) :object (Flight.flightNumber_? (?= \" HO347 \"))))", "idx": "13933", "datum_id": {"dialogue_id": "53aa4c3e-1a7e-4749-868d-af610c79c59e", "turn_index": 0}}
{"user_turn_0": "I prefer another hotel with at least one star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Parallel Tower price equals 142", "user_turn_1": "Does the hotel have fitness center ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasFitness_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "13942", "datum_id": {"dialogue_id": "7be0a90c-fb55-4d94-b7eb-e3e11dab6669", "turn_index": 4}}
{"user_turn_0": "Does the hotel have fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" The Fresco \"))))))", "idx": "13943", "datum_id": {"dialogue_id": "7be0a90c-fb55-4d94-b7eb-e3e11dab6669", "turn_index": 5}}
{"user_turn_0": "Three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you change the check out date to Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "13947", "datum_id": {"dialogue_id": "7be0a90c-fb55-4d94-b7eb-e3e11dab6669", "turn_index": 9}}
{"user_turn_0": "Can you change the check out date to Friday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking support free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "13948", "datum_id": {"dialogue_id": "7be0a90c-fb55-4d94-b7eb-e3e11dab6669", "turn_index": 10}}
{"user_turn_0": "How can I get to 14 Dagmar Passage by bike ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "How long does it take to get to The Dima Foundation by walking ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (& (Navigation.destination_? (Place.location_? (?= \" The Dima Foundation \"))) (Navigation.transportationMode_? (?= (TransportationMode.Walking))))))", "idx": "13952", "datum_id": {"dialogue_id": "cfb0d108-f378-443c-a080-944cb0049536", "turn_index": 2}}
{"user_turn_0": "Is that one a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Ok . Book that one for 4 passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" Birmingham \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (^((Constraint (List DateTime))) refer)))) (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))) (Flight.passengers_? (?= 4))))))", "idx": "13960", "datum_id": {"dialogue_id": "d8ec7397-b281-47e0-b685-2cb7f498d69c", "turn_index": 2}}
{"user_turn_0": "Ok . Book that one for 4 passengers", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM price equals 134", "user_turn_1": "That one works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "13961", "datum_id": {"dialogue_id": "d8ec7397-b281-47e0-b685-2cb7f498d69c", "turn_index": 3}}
{"user_turn_0": "Hi my assistant , on my calendar , do I have a Smart Card Research in Golden Gate ?", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Can you create it , please ?", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.eventName_? (?= \" routine checkup \")) (CalendarEvent.location_? (?= \" Tin Roof \")))))", "idx": "13964", "datum_id": {"dialogue_id": "5fa04480-084d-4b7c-8980-e3d64be007fe", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i 'm afraid I could n't find this event anywhere on your calendar .", "tgt": "(plan (^(CalendarEvent) CheckExistence :object (& (CalendarEvent.eventName_? (?= \" media interview \")) (CalendarEvent.recurrenceUnit_? (RecurrenceUnit.dayOfWeek_? (?= (Tuesday)))))))", "idx": "13975", "datum_id": {"dialogue_id": "53b71338-ed27-4349-8422-48e969abf04f", "turn_index": 0}}
{"user_turn_0": "Hello assistant , i 'm afraid I could n't find this event anywhere on your calendar .", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "What 's the event 's ending time ?", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.eventName_? (?= \" formula one \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 20L)))) (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 9L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM)))))))))))", "idx": "13976", "datum_id": {"dialogue_id": "53b71338-ed27-4349-8422-48e969abf04f", "turn_index": 1}}
{"user_turn_0": "I prefer another hotel with not zero star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Parallel Tower price equals 65", "user_turn_1": "Does the hotel have fitness center ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasFitness_? (^(Boolean) always)))))", "idx": "13984", "datum_id": {"dialogue_id": "a9ac07d3-9e13-4d88-a5a4-c575572b14f8", "turn_index": 4}}
{"user_turn_0": "Does the hotel have fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" River Park \"))))))", "idx": "13985", "datum_id": {"dialogue_id": "a9ac07d3-9e13-4d88-a5a4-c575572b14f8", "turn_index": 5}}
{"user_turn_0": "I would like another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floq", "user_turn_1": "Do they accept credit card ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "14007", "datum_id": {"dialogue_id": "b44fb3a6-7cb9-43d6-bc58-8118214433bc", "turn_index": 4}}
{"user_turn_0": "Which of the restaurants have a rating of at least one star", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flew Z", "user_turn_1": "I would like to know the address of the restaurant", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "14009", "datum_id": {"dialogue_id": "b44fb3a6-7cb9-43d6-bc58-8118214433bc", "turn_index": 6}}
{"user_turn_0": "I would like another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jurassic Pork", "user_turn_1": "Do they have outdoor seats", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "14011", "datum_id": {"dialogue_id": "b44fb3a6-7cb9-43d6-bc58-8118214433bc", "turn_index": 8}}
{"user_turn_0": "Do they have outdoor seats", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flavoroso \"))))))", "idx": "14012", "datum_id": {"dialogue_id": "b44fb3a6-7cb9-43d6-bc58-8118214433bc", "turn_index": 9}}
{"user_turn_0": "Hmm . I think I actually need a different place that does n't have a zero star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Ballyfin price equals 125", "user_turn_1": "And do they have a private washroom there ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.privateBath_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "14030", "datum_id": {"dialogue_id": "7bf56801-20c6-4407-8f58-163dcd764cc1", "turn_index": 5}}
{"user_turn_0": "And do they have a private washroom there ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Okay , book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Sheraton \"))))))", "idx": "14031", "datum_id": {"dialogue_id": "7bf56801-20c6-4407-8f58-163dcd764cc1", "turn_index": 6}}
{"user_turn_0": "I prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kiwi Sea", "user_turn_1": "Does the restaurant have outdoor seats", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "14044", "datum_id": {"dialogue_id": "0130d565-dfb2-4d02-bea5-8dd4658095b0", "turn_index": 8}}
{"user_turn_0": "Does the restaurant have outdoor seats", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "That 's fine . Book itThat 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Dim Summit \"))))))", "idx": "14045", "datum_id": {"dialogue_id": "0130d565-dfb2-4d02-bea5-8dd4658095b0", "turn_index": 9}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , when will the event finish ?", "tgt": "(plan (^(CalendarEvent) Create :object (& (& (& (CalendarEvent.eventName_? (?= \" free discussion \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (?= (Today))) (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))) (CalendarEvent.attendees_? (Contact.person_? (Person.name_? (?= \" Rachel \"))))) (CalendarEvent.location_? (?= \" Legendary Republic \")))))", "idx": "14049", "datum_id": {"dialogue_id": "9aa8de24-17c7-4cbb-af07-8f4ce1a6fc13", "turn_index": 0}}
{"user_turn_0": "Hey assistant , when will the event finish ?", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals endDateTime", "user_turn_1": "Schedule free discussion with Rachel for 2 PM today in Legendary Republic on the calendar", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.endDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 7L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "14050", "datum_id": {"dialogue_id": "9aa8de24-17c7-4cbb-af07-8f4ce1a6fc13", "turn_index": 1}}
{"user_turn_0": "Yes you are right", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM price equals 135", "user_turn_1": "I actually prefer the flight which departure 4:20 PM and I would like to have business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Amsterdam \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday)))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "14056", "datum_id": {"dialogue_id": "c16c8ad2-f8b4-40fc-96b9-5746ba6b464d", "turn_index": 2}}
{"user_turn_0": "I actually prefer the flight which departure 4:20 PM and I would like to have business class", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM price equals 125", "user_turn_1": "This one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "14057", "datum_id": {"dialogue_id": "c16c8ad2-f8b4-40fc-96b9-5746ba6b464d", "turn_index": 3}}
{"user_turn_0": "I want the one that leaves at 1 PM", "agent_turn_0": "Root system prompt flight book object equals tripType", "user_turn_1": "YEs", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.tripType_? (?= (TripType.roundTrip)))))))", "idx": "14073", "datum_id": {"dialogue_id": "8059f454-836c-464e-a82d-ff4d0e714f79", "turn_index": 4}}
{"user_turn_0": "The 22nd", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM price equals 124", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "14075", "datum_id": {"dialogue_id": "8059f454-836c-464e-a82d-ff4d0e714f79", "turn_index": 6}}
{"user_turn_0": "I would prefer a restaurant with parking please", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Shining Gate", "user_turn_1": "Can you please book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Kitty City \"))))))", "idx": "14105", "datum_id": {"dialogue_id": "39ee4f39-0fd2-4bae-b619-d9693908dbe8", "turn_index": 6}}
{"user_turn_0": "How much does it cost per person", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 29", "user_turn_1": "Great , book me there at 4 pm", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (^((Constraint String)) refer))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "14111", "datum_id": {"dialogue_id": "9da42b6c-d1af-481a-916c-1764d1016c83", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , to 07810142276", "tgt": "(plan (do (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (meridiem_? (?= (Meridiem.PM)))))))) (^(Message) Create :object (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))))))", "idx": "14114", "datum_id": {"dialogue_id": "679d73f4-6b37-4b9d-b799-967e590ce2aa", "turn_index": 0}}
{"user_turn_0": "Hi my assistant , to 07810142276", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals endDateTime", "user_turn_1": "When will your event end ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.endDateTime_? (& (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 8L))) (meridiem_? (?= (Meridiem.PM))))) (DateTime.date_? (?= (Tomorrow)))))))))", "idx": "14115", "datum_id": {"dialogue_id": "679d73f4-6b37-4b9d-b799-967e590ce2aa", "turn_index": 1}}
{"user_turn_0": "When will your event end ?", "agent_turn_0": "Root system inform calendarEvent create Completed prompt message create recipients", "user_turn_1": "Okay , I created your event . Who would you like to send it to ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (& x0 (Message.recipients_? (Contact.phoneNumber_? (?= \" 07810142276 \")))))))", "idx": "14116", "datum_id": {"dialogue_id": "679d73f4-6b37-4b9d-b799-967e590ce2aa", "turn_index": 2}}
{"user_turn_0": "I want another hotel with three stars ratings", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals The Hot Springs price equals 160", "user_turn_1": "What is the rating for the hotel ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.rating_? (^(Number) always)))))", "idx": "14138", "datum_id": {"dialogue_id": "f437eac4-413d-45f4-bfe3-5a63cb87e9af", "turn_index": 3}}
{"user_turn_0": "I need another hotel with a lower price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Peninsula price equals 142", "user_turn_1": "Great , book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Ritz-Carlton \"))))))", "idx": "14140", "datum_id": {"dialogue_id": "f437eac4-413d-45f4-bfe3-5a63cb87e9af", "turn_index": 5}}
{"user_turn_0": "Will you change the check in date to Monday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is prepayment needed ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "14143", "datum_id": {"dialogue_id": "f437eac4-413d-45f4-bfe3-5a63cb87e9af", "turn_index": 8}}
{"user_turn_0": "Thanks , next for tomorrow , set me a reminder at 10:30 am", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Set up a reminder for 10:30", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.atDateTime \") (lambda (^(Constraint DateTime) x0) (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L))))))))", "idx": "14163", "datum_id": {"dialogue_id": "176262d2-ae43-405b-be0b-32ac9ceb38a8", "turn_index": 3}}
{"user_turn_0": "Hello , is there an event on my calendar that will be at Artist 's Sky ?", "agent_turn_0": "Root system inform calendarEvent find Existed", "user_turn_1": "Show me a walking route , please", "tgt": "(plan (^(Navigation) Find :object (& (Navigation.destination_? (Place.location_? (^((Constraint String)) refer))) (Navigation.transportationMode_? (?= (TransportationMode.Walking))))))", "idx": "14166", "datum_id": {"dialogue_id": "e05f32d5-e464-47bc-a45f-f9f863a9e53d", "turn_index": 1}}
{"user_turn_0": "I 'd rather go to a different place that has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Maple", "user_turn_1": "Do they take credit cards there ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "14171", "datum_id": {"dialogue_id": "e05f32d5-e464-47bc-a45f-f9f863a9e53d", "turn_index": 6}}
{"user_turn_0": "Do they take credit cards there ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Okay , make the reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Interknack \"))))))", "idx": "14172", "datum_id": {"dialogue_id": "e05f32d5-e464-47bc-a45f-f9f863a9e53d", "turn_index": 7}}
{"user_turn_0": "Three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Change the check in date to Wednesday place", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.startDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Wednesday)))))", "idx": "14185", "datum_id": {"dialogue_id": "4a217c43-ce33-4f14-8a46-dd82dca475aa", "turn_index": 3}}
{"user_turn_0": "Grill", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dim Summit", "user_turn_1": "Can you tell me if the restaurant has outdoor seats", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "14190", "datum_id": {"dialogue_id": "27a60c62-b03a-40dc-bc51-c68afb698b84", "turn_index": 3}}
{"user_turn_0": "Can you tell me if the restaurant has outdoor seats", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "14191", "datum_id": {"dialogue_id": "27a60c62-b03a-40dc-bc51-c68afb698b84", "turn_index": 4}}
{"user_turn_0": "Yes book it", "agent_turn_0": "Root system inform calendarEvent create Completed restaurant book Completed", "user_turn_1": "book the The Shining Gate restaurant for me on Saturday 11:30 o'clock and add it to calendar", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (Restaurant.restaurantName_? (?= \" The Shining Gate \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L))))))))))))", "idx": "14199", "datum_id": {"dialogue_id": "e2ccfe40-f574-4744-a5c6-8afc202c6d0b", "turn_index": 4}}
{"user_turn_0": "ok book it", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM", "user_turn_1": "ok book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "14202", "datum_id": {"dialogue_id": "6280fd5d-4cb9-4201-a9eb-a3892f66d326", "turn_index": 2}}
{"user_turn_0": "Does the hotel have laundry", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "14227", "datum_id": {"dialogue_id": "e1452da6-80c4-43bf-b737-807191ed0c75", "turn_index": 2}}
{"user_turn_0": "Tell me where my calendar event with John is being held ?", "agent_turn_0": "Root system inform calendarEvent find focus equals location equals Cityplace", "user_turn_1": "What 's the weather looking like over there ?", "tgt": "(plan (^(WeatherReport) Find :object (WeatherReport.location_? (^((Constraint String)) refer))))", "idx": "14233", "datum_id": {"dialogue_id": "83d9bd81-aa58-414a-b4ad-eeac81f9230a", "turn_index": 2}}
{"user_turn_0": "No , next I will go to Madrid on Sunday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 5 object equals nextDepartureDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM price equals 134", "user_turn_1": "This one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "14243", "datum_id": {"dialogue_id": "4a54f006-9840-4ce0-a791-aae65c01d523", "turn_index": 5}}
{"user_turn_0": "Does the hotel have private bathrooms ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "14255", "datum_id": {"dialogue_id": "1f25a098-1681-4aeb-adc2-52b8ee171077", "turn_index": 4}}
{"user_turn_0": "One", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Change the checkout date to the 24th please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.endDateTime \") (lambda (^(Constraint DateTime) x0) (DateTime.date_? (Date.day_? (?= (Day.apply 24L)))))))", "idx": "14259", "datum_id": {"dialogue_id": "1f25a098-1681-4aeb-adc2-52b8ee171077", "turn_index": 8}}
{"user_turn_0": "Book it", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "I want It booked from May 11th to the 16th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 11L)))) (month_? (Date.month_? (?= (May)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 16L)))))))))))", "idx": "14271", "datum_id": {"dialogue_id": "b26a06f3-aa11-4bbf-9237-ce886c8b3ef1", "turn_index": 2}}
{"user_turn_0": "I would like to have three double rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "14274", "datum_id": {"dialogue_id": "b26a06f3-aa11-4bbf-9237-ce886c8b3ef1", "turn_index": 5}}
{"user_turn_0": "What class is it ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "I prefer the 2:20PM flight and I prefer to have business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Edinburgh \"))) (Flight.departureDateTime_? (& (^((Constraint (List DateTime))) refer) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.passengers_? (?= 4))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "14284", "datum_id": {"dialogue_id": "38a9a950-3468-4950-b6c2-b4bc43f259d5", "turn_index": 3}}
{"user_turn_0": "Do I have Grocery delivery held in The Globe scheduled on my calendar", "agent_turn_0": "Root system inform calendarEvent find Existed", "user_turn_1": "How is the weather in Southampton today", "tgt": "(plan (^(WeatherReport) Find :object (& (WeatherReport.location_? (?= \" Southampton \")) (WeatherReport.atDateTime_? (DateTime.date_? (?= (Today)))))))", "idx": "14307", "datum_id": {"dialogue_id": "46e69d98-28da-42ec-93be-79c5997f563b", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , will you be departing from Liverpool ?", "tgt": "(plan (^(Flight) Book :object (& (Flight.destination_? (Place.location_? (?= \" Glasgow \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 11L))))) (List.exists_? (DateTime.time_? (?<= (someSalient (& (Time.hour_? (?= (Hour.apply 5L))) (Time.minute_? (?= (Minute.apply 30L)))))))))))))", "idx": "14308", "datum_id": {"dialogue_id": "5cef9478-738e-4680-9f9b-4f8f3da07ad2", "turn_index": 0}}
{"user_turn_0": "Hi there , will you be departing from Liverpool ?", "agent_turn_0": "Root system prompt flight book object equals source inform flight find object equals source equals location equals Liverpool", "user_turn_1": "I found two flights on your departure date . The cheapest one costs 145 pounds and is at 2:40 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.source_? (Place.location_? (?= \" Manchester \")))))))", "idx": "14309", "datum_id": {"dialogue_id": "5cef9478-738e-4680-9f9b-4f8f3da07ad2", "turn_index": 1}}
{"user_turn_0": "I found two flights on your departure date . The cheapest one costs 145 pounds and is at 2:40 PM", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM price equals 145", "user_turn_1": "Book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "14310", "datum_id": {"dialogue_id": "5cef9478-738e-4680-9f9b-4f8f3da07ad2", "turn_index": 2}}
{"user_turn_0": "Is that one direct ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Alright , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "14316", "datum_id": {"dialogue_id": "4ee61dfc-84c8-4d9f-a5e1-e1001fc0e59a", "turn_index": 3}}
{"user_turn_0": "Does that include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Book it , regardless", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "14322", "datum_id": {"dialogue_id": "718f5907-860e-403a-86bb-8a38eedfa6ae", "turn_index": 3}}
{"user_turn_0": "I just need one room and type is n't important", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "What if I checked in on Tuesday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "14326", "datum_id": {"dialogue_id": "718f5907-860e-403a-86bb-8a38eedfa6ae", "turn_index": 7}}
{"user_turn_0": "I prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capricorn", "user_turn_1": "What kind of food does it serve ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.foodType_? (^(FoodType) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "14341", "datum_id": {"dialogue_id": "0aa6b4d0-6b6d-4317-8ce0-d188fed4ca91", "turn_index": 3}}
{"user_turn_0": "I wonder which of the restaurants serve Spanish food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kiwi Sea", "user_turn_1": "Does the restaurant have parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "14343", "datum_id": {"dialogue_id": "0aa6b4d0-6b6d-4317-8ce0-d188fed4ca91", "turn_index": 5}}
{"user_turn_0": "Does the restaurant have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "That 's fine . Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Floq \"))))))", "idx": "14344", "datum_id": {"dialogue_id": "0aa6b4d0-6b6d-4317-8ce0-d188fed4ca91", "turn_index": 6}}
{"user_turn_0": "On the 28th", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "14358", "datum_id": {"dialogue_id": "0536560a-95a5-4af9-a36a-37834405977d", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , what 's the price range of that Jurassic Pork joint ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.priceRange_? (^(PriceRange) always)) :object (Restaurant.restaurantName_? (?= \" Jurassic Pork \"))))", "idx": "14360", "datum_id": {"dialogue_id": "adc1347d-8301-476e-8d7b-0b8e04ed55ad", "turn_index": 0}}
{"user_turn_0": "Let 's do that", "agent_turn_0": "Root systen inform restaurant book Completed", "user_turn_1": "Next task , now be a pal and send that booking to Mr Hemmings", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Hemmings \")) (Person.namePrefix_? (?= \" Mr \"))))) (Message.textContent_? (?= (^(String Restaurant) reference (^(Restaurant) always)))))))", "idx": "14364", "datum_id": {"dialogue_id": "adc1347d-8301-476e-8d7b-0b8e04ed55ad", "turn_index": 4}}
{"user_turn_0": "From Leeds", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 1 meridiem equals PM price equals 138", "user_turn_1": "I would actually like the one that departures at 3:20 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "14367", "datum_id": {"dialogue_id": "23ad6ac0-3951-4f47-9da2-a21ee8c8752a", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , when does my flight leave ?", "tgt": "(plan (^(Flight) Find :focus (Flight.departureDateTime_? (^((List DateTime)) always)) :object (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (?= (Today)))))))", "idx": "14427", "datum_id": {"dialogue_id": "1024589c-74e8-4f1c-a961-80336c721b4c", "turn_index": 0}}
{"user_turn_0": "I need a reservation for five people", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Okay , change the reservation to Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Friday))))))", "idx": "14433", "datum_id": {"dialogue_id": "1024589c-74e8-4f1c-a961-80336c721b4c", "turn_index": 6}}
{"user_turn_0": "Is that a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Alright , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "14437", "datum_id": {"dialogue_id": "ee0b2f0e-6c30-4a68-bd0e-36da2f2b4856", "turn_index": 2}}
{"user_turn_0": "Alright , book it", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM price equals 210", "user_turn_1": "That one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "14438", "datum_id": {"dialogue_id": "ee0b2f0e-6c30-4a68-bd0e-36da2f2b4856", "turn_index": 3}}
{"user_turn_0": "Coventry", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM", "user_turn_1": "It sounds fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "14447", "datum_id": {"dialogue_id": "27cb1bd3-4c5d-4674-8455-e92b6d8b870f", "turn_index": 2}}
{"user_turn_0": "Hmm , Saloon would be good", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals Laurel Street", "user_turn_1": "Change the destination to The African Waistcoat", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" The African Waistcoat \"))))", "idx": "14459", "datum_id": {"dialogue_id": "19d628dc-340b-4f78-ae23-00b1f9747c90", "turn_index": 3}}
{"user_turn_0": "Hi my assistant , is there a weekly event on my calendar ?", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Create one", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.listOffset_? (?= 1))))", "idx": "14463", "datum_id": {"dialogue_id": "d02af2bf-b88a-43e2-8fc7-701ade7e6b0e", "turn_index": 1}}
{"user_turn_0": "I would prefer a different hotel that has a 3-star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Ballyfin price equals 201", "user_turn_1": "Does this hotel have a car park ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasParking_? (^(Boolean) always)))))", "idx": "14472", "datum_id": {"dialogue_id": "80f3545a-aadf-49c8-b366-993f34af0fa0", "turn_index": 5}}
{"user_turn_0": "Does this hotel have a car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "I would like to book this hotel", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Bourbon Bliss \"))))))", "idx": "14473", "datum_id": {"dialogue_id": "80f3545a-aadf-49c8-b366-993f34af0fa0", "turn_index": 6}}
{"user_turn_0": "I would like one room but I do n't care what type of room it is", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "I want the check out day to be changed to Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Thursday))))))", "idx": "14475", "datum_id": {"dialogue_id": "80f3545a-aadf-49c8-b366-993f34af0fa0", "turn_index": 8}}
{"user_turn_0": "At 1 PM", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "Can you delete the next event on my calendar too ?", "tgt": "(plan (^(CalendarEvent) Delete :object (CalendarEvent.listOffset_? (?= 1))))", "idx": "14480", "datum_id": {"dialogue_id": "50a091e3-6d0b-4049-89cb-fde4c1aee857", "turn_index": 3}}
{"user_turn_0": "Do you know which of those restaurants have at least a two star rating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Shining Gate", "user_turn_1": "What 's the address of the place ? Hopefully it is n't too far", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "14492", "datum_id": {"dialogue_id": "e52c8c86-2b33-4fa8-861c-fb32b5ea01b9", "turn_index": 5}}
{"user_turn_0": "No , Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I want to 3:50 PM departure", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "14495", "datum_id": {"dialogue_id": "5e33f510-90fe-452b-9855-4cf9a9d9cfa7", "turn_index": 2}}
{"user_turn_0": "Does the hotel have fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "14502", "datum_id": {"dialogue_id": "6265f702-0a28-4cfe-b9af-592e56747581", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i want to book a cheap hotel . Check in today and check out 15th .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 15L))))))))))", "idx": "14513", "datum_id": {"dialogue_id": "b7030be1-7060-4dfe-ab50-d5f1d0522547", "turn_index": 0}}
{"user_turn_0": "Does the hotel have private bath room ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "14516", "datum_id": {"dialogue_id": "b7030be1-7060-4dfe-ab50-d5f1d0522547", "turn_index": 3}}
{"user_turn_0": "Can I have 3 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you change the check out date to Saturday please ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Saturday))))))", "idx": "14519", "datum_id": {"dialogue_id": "b7030be1-7060-4dfe-ab50-d5f1d0522547", "turn_index": 6}}
{"user_turn_0": "I 'll be departing from Birmingham", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 12 minute equals 15 meridiem equals PM", "user_turn_1": "That 's fine . Book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "14528", "datum_id": {"dialogue_id": "8774d5c6-f169-49bc-90cd-42f2d3727464", "turn_index": 2}}
{"user_turn_0": "On public transport how long will it take me to reach 67 North Street ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 10", "user_turn_1": "Get a ticket for train that arrives prior to 67 North Street in Cardiff", "tgt": "(plan (^(Train) Book :object (& (Train.destination_? (Place.location_? (?= \" Cardiff \"))) (Train.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (& (Time.hour_? (?= (Hour.apply 8L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "14534", "datum_id": {"dialogue_id": "1e3b4db0-403c-4828-905d-60bbb7b74f4b", "turn_index": 3}}
{"user_turn_0": "Please", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Put Ice Hockey on my calendar and send it to Sebatian", "tgt": "(plan (do (^(CalendarEvent) Create :object (CalendarEvent.eventName_? (?= \" ice hockey \"))) (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Sebastian \")))) (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always))))))))", "idx": "14539", "datum_id": {"dialogue_id": "f20a2a11-3011-4014-a3e7-9d94ffa099cf", "turn_index": 3}}
{"user_turn_0": "I return Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM price equals 135", "user_turn_1": "That one is fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "14552", "datum_id": {"dialogue_id": "850f35c4-1ad8-4cba-89bf-5b8b64f8ba31", "turn_index": 6}}
{"user_turn_0": "I want a Chinese hotpot", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "Does it have any outdoor seating ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "14563", "datum_id": {"dialogue_id": "da6f95c5-f0f8-438f-9559-a3e40da5ea56", "turn_index": 4}}
{"user_turn_0": "Does it have any outdoor seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "Go ahead and book it ,", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Chipotle Grill \"))))))", "idx": "14564", "datum_id": {"dialogue_id": "da6f95c5-f0f8-438f-9559-a3e40da5ea56", "turn_index": 5}}
{"user_turn_0": "Saturday will work", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM", "user_turn_1": "Sounds good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "14571", "datum_id": {"dialogue_id": "787263a9-e8a0-43a3-9650-4b448cf96346", "turn_index": 4}}
{"user_turn_0": "It does n't matter as long as it has four star rating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flip Out", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "14576", "datum_id": {"dialogue_id": "1bda0b24-3c1c-439a-a526-7d8ac67e428d", "turn_index": 3}}
{"user_turn_0": "Looks good to me", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (^((Constraint Time)) refer))))))", "idx": "14583", "datum_id": {"dialogue_id": "1b15f993-7616-4dc3-a4a0-e5e5a7484104", "turn_index": 3}}
{"user_turn_0": "How do I get to 7193 South Evergreen Road from 6 John Street", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Give me directions to 9 Constitution Drive", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Navigation)) Path.apply \" object \") (lambda (^(Constraint Navigation) x0) (Navigation.destination_? (Place.location_? (?= \" 9 Constitution Drive \"))))))", "idx": "14589", "datum_id": {"dialogue_id": "adc44f15-76bb-4306-adba-86dcd9c64b34", "turn_index": 4}}
{"user_turn_0": "Hey assistant , what time is the train departing to Cambridge Central Station ?", "agent_turn_0": "Root system inform train find focus equals departureDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM", "user_turn_1": "About how far will it take to get to 2a Prebend Street by walking ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (& (Navigation.destination_? (Place.location_? (?= \" 2a Prebend Street \"))) (Navigation.transportationMode_? (?= (TransportationMode.Walking))))))", "idx": "14598", "datum_id": {"dialogue_id": "34896db6-aa6c-4341-9cc4-3452a0b18ada", "turn_index": 1}}
{"user_turn_0": "Just one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you change the check out date to Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.endDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Friday)))))", "idx": "14619", "datum_id": {"dialogue_id": "33a383a9-aabb-4400-b603-9fcaf56b4194", "turn_index": 3}}
{"user_turn_0": "From 9 AM to 6 PM", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Update reminder on Sunday at 2 o'clock to 3:30 PM", "tgt": "(plan (^(Reminder) Update :focus (Reminder.atDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))) :object (Reminder.atDateTime_? (& (DateTime.time_? (Time.hour_? (?= (Hour.apply 2L)))) (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday))))))))", "idx": "14625", "datum_id": {"dialogue_id": "891146d5-b6c6-4bb5-aea2-7aacbb1845cb", "turn_index": 4}}
{"user_turn_0": "I 'll be flying out of Liverpool", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "II like the one that departs at 2:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "14629", "datum_id": {"dialogue_id": "3dc5d893-a484-4a9a-a3f4-fb58fd0e7790", "turn_index": 3}}
{"user_turn_0": "Is this a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "OK . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "14633", "datum_id": {"dialogue_id": "68256d90-4955-495c-97d4-f865af2ddc8e", "turn_index": 2}}
{"user_turn_0": "Friday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM price equals 65", "user_turn_1": "That one is cool", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "14636", "datum_id": {"dialogue_id": "68256d90-4955-495c-97d4-f865af2ddc8e", "turn_index": 5}}
{"user_turn_0": "I do n't like any of these . Let me see restaurants that serve any kind of food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Lakeside Demon", "user_turn_1": "Sure", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Cityroom \"))))))", "idx": "14642", "datum_id": {"dialogue_id": "f06fe206-cd5e-431c-9bd0-2e49cbf2c69a", "turn_index": 4}}
{"user_turn_0": "Hey assistant , book me a hotel in Hillingdon for check in tomorrow and check out on the 23rd with a car park", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Hilton price equals 124", "user_turn_1": "I 'd rather have a different three star hotel", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.rating_? (?= 3))))))", "idx": "14704", "datum_id": {"dialogue_id": "3b62a137-7a61-4034-ace8-2661746c0d35", "turn_index": 1}}
{"user_turn_0": "I 'd still prefer a different hotel with moderate price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Blossomwell Resorts price equals 160", "user_turn_1": "Do they have free wifi", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasWifi_? (^(Boolean) always)))))", "idx": "14707", "datum_id": {"dialogue_id": "3b62a137-7a61-4034-ace8-2661746c0d35", "turn_index": 4}}
{"user_turn_0": "Do they have free wifi", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Hilton \"))))))", "idx": "14708", "datum_id": {"dialogue_id": "3b62a137-7a61-4034-ace8-2661746c0d35", "turn_index": 5}}
{"user_turn_0": "Is this flight a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "This looks good . I would like this flight booked for three passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.source_? (Place.location_? (?= \" Manchester \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 3))))))", "idx": "14732", "datum_id": {"dialogue_id": "92d726d5-1d6a-4e2a-a0ec-9f6121e7c3d4", "turn_index": 4}}
{"user_turn_0": "Hey , directions from The Bull Islington to 67 North Street", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Alter reminder at 2 o'clock today to 2 o'clock", "tgt": "(plan (^(Reminder) Update :focus (Reminder.atDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 2L))))) :object (Reminder.atDateTime_? (& (DateTime.time_? (Time.hour_? (?= (Hour.apply 2L)))) (DateTime.date_? (?= (Today)))))))", "idx": "14740", "datum_id": {"dialogue_id": "c7c8c9e3-8c4b-4ac5-bcc8-ed88d072e845", "turn_index": 1}}
{"user_turn_0": "Two", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does my reservation include free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "14750", "datum_id": {"dialogue_id": "115dea36-4845-4a21-9aa7-dd42fe991deb", "turn_index": 6}}
{"user_turn_0": "I prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Encino", "user_turn_1": "What kind of food does it serve ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.foodType_? (^(FoodType) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "14755", "datum_id": {"dialogue_id": "1ea4cf1f-b5e7-4c93-b389-b2268b3d51b3", "turn_index": 3}}
{"user_turn_0": "I wonder which of the restaurants serve Italian Cuisine", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "Does the restaurant have parking", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "14757", "datum_id": {"dialogue_id": "1ea4cf1f-b5e7-4c93-b389-b2268b3d51b3", "turn_index": 5}}
{"user_turn_0": "Does the restaurant have parking", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Empirica \"))))))", "idx": "14758", "datum_id": {"dialogue_id": "1ea4cf1f-b5e7-4c93-b389-b2268b3d51b3", "turn_index": 6}}
{"user_turn_0": "No , Lisbon is next and it will be on Saturday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 5 object equals nextDepartureDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM price equals 201", "user_turn_1": "This looks fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "14768", "datum_id": {"dialogue_id": "1e559359-e59f-459c-b64c-844bb215fd2d", "turn_index": 5}}
{"user_turn_0": "Does that hotel have laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Make the booking for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "14774", "datum_id": {"dialogue_id": "6efb6552-804b-41d9-a94b-3b233263a167", "turn_index": 4}}
{"user_turn_0": "Make the booking for me", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "From the 14th of December till the 20th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 14L)))) (month_? (Date.month_? (?= (December)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 20L)))))))))))", "idx": "14775", "datum_id": {"dialogue_id": "6efb6552-804b-41d9-a94b-3b233263a167", "turn_index": 5}}
{"user_turn_0": "Actually , revise the check in date to be on the 10th", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "I need to know if that booking supports free cancellation", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "14779", "datum_id": {"dialogue_id": "6efb6552-804b-41d9-a94b-3b233263a167", "turn_index": 9}}
{"user_turn_0": "Can I have 2 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to make a prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "14822", "datum_id": {"dialogue_id": "18a0681d-5688-44d8-a598-8caa5ff66fb5", "turn_index": 4}}
{"user_turn_0": "Actually can you change the check in date to Monday ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking support free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "14824", "datum_id": {"dialogue_id": "18a0681d-5688-44d8-a598-8caa5ff66fb5", "turn_index": 6}}
{"user_turn_0": "Hello , schedule a reminder for this morning 's event .", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "I need a reservation for 3 at 4 o'clock at the La Zilla restaurant", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.restaurantName_? (?= \" La Zilla \")) (Restaurant.tableSize_? (?= 3))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 4L))))))))))", "idx": "14827", "datum_id": {"dialogue_id": "8e857e26-6016-4176-b919-09b61474f18e", "turn_index": 1}}
{"user_turn_0": "I want one , I do n't care the type", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they provide free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "14836", "datum_id": {"dialogue_id": "df76b9b7-fb81-408f-b7b9-d67b7d97fd49", "turn_index": 4}}
{"user_turn_0": "It will be Aberdeen", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 1 meridiem equals PM", "user_turn_1": "That is great", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "14845", "datum_id": {"dialogue_id": "ecf6afd8-cdb9-448c-b4cd-2378d4250cff", "turn_index": 2}}
{"user_turn_0": "Schedule a reminder regarding my calendar event", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Here are the directions for how to get to your destination", "tgt": "(plan (^(Navigation) Find :object (& (Navigation.destination_? (Place.location_? (?= \" Haywood Way \"))) (Navigation.transportationMode_? (?= (TransportationMode.PublicTransportation))))))", "idx": "14870", "datum_id": {"dialogue_id": "1bb4c976-883c-443e-8477-9c815a1deef5", "turn_index": 2}}
{"user_turn_0": "Yes I 'll be returning on Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 12 minute equals 50 meridiem equals PM price equals 170", "user_turn_1": "Looks good , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "14877", "datum_id": {"dialogue_id": "89455bad-02d0-493a-9e83-c293ec1a15c4", "turn_index": 4}}
{"user_turn_0": "Does the hotel have fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "14882", "datum_id": {"dialogue_id": "4b0a1f1e-9aab-4d7d-8467-06b6e133897e", "turn_index": 3}}
{"user_turn_0": "Set it for 1 PM", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Next task , yes , reserve hotel that has fitness center . Trying to do regular work outs", "tgt": "(plan (^(Hotel) Book :object (Hotel.hasFitness_? (?= true))))", "idx": "14888", "datum_id": {"dialogue_id": "e5e4334a-2dae-4500-971a-5a246f5fa6f5", "turn_index": 3}}
{"user_turn_0": "That sounds good . Make it for 4:00 please", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Dang it , hmm . Okay how about you change the date to be on Sunday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))))))", "idx": "14904", "datum_id": {"dialogue_id": "a85d5033-a773-48fe-b6c8-c60fb5b87f2a", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , I need you to book a cab ride for me going to The African Waistcoat , and it needs to be for four people .", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.destination_? (Place.location_? (?= \" The African Waistcoat \"))) (Taxi.passengers_? (?= 4)))))", "idx": "14907", "datum_id": {"dialogue_id": "8e78761b-5122-42df-be8e-0834e9dc461f", "turn_index": 0}}
{"user_turn_0": "Hello assistant , how far away is the venue of the Far Away Feast on the calendar today", "agent_turn_0": "Root system inform navigation find focus equals distance equals number equals 7", "user_turn_1": "Send the tomorrow event to my son", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))))))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Son))))))))", "idx": "14913", "datum_id": {"dialogue_id": "06c6928d-9655-4c24-9d5a-2acff9120b15", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , get me a table at a restaurant in Modern Park . I 'm looking for something with no less than one star", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.location_? (?= \" Morden Park \")) (Restaurant.rating_? (?>= (someSalient (?= 1)))))))", "idx": "14922", "datum_id": {"dialogue_id": "b502039d-5fca-4b12-94c7-4c6a96a027e5", "turn_index": 0}}
{"user_turn_0": "Which of these serve Seafood ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Boiling Fence", "user_turn_1": "Yeah do that one . I need the reservation for 2 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Interknack \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "14924", "datum_id": {"dialogue_id": "b502039d-5fca-4b12-94c7-4c6a96a027e5", "turn_index": 2}}
{"user_turn_0": "I 'm leaving today", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "Try today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "14931", "datum_id": {"dialogue_id": "81423833-bade-4924-890d-7ddd123762ab", "turn_index": 3}}
{"user_turn_0": "It is a two hour event", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "Also please book a rest in Somerstown . I want to book it today at 11:30 AM . It should not be too expensive and they should serve Mexican food", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Somerstown \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM))))))))) (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Restaurant.foodType_? (?= (FoodType.Mexican))))))", "idx": "14938", "datum_id": {"dialogue_id": "d3f5efea-9019-4dd5-b344-0cdfbaf84115", "turn_index": 3}}
{"user_turn_0": "Book a different one with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floq", "user_turn_1": "How much is it per person normally ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "14940", "datum_id": {"dialogue_id": "d3f5efea-9019-4dd5-b344-0cdfbaf84115", "turn_index": 5}}
{"user_turn_0": "I 'll be returning on Thursday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM", "user_turn_1": "That works for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "14944", "datum_id": {"dialogue_id": "91a490cf-fc04-42ba-b102-ddb8213cd7d7", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , send the event on my calendar to my son", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Son))))) (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))))))", "idx": "14952", "datum_id": {"dialogue_id": "ee1d39e6-a304-427e-983a-72995890cbdd", "turn_index": 0}}
{"user_turn_0": "Hey assistant , can you send the event I have tomorrow to Ella ?", "agent_turn_0": "Root system prompt message create object equals recipients equals person equals nameHint", "user_turn_1": "Ella Blake", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Person)) Path.apply \" object.recipients.person \") (lambda (^(Constraint Person) x0) (& x0 (Person.nameHint_? (?= \" Blake \"))))))", "idx": "14958", "datum_id": {"dialogue_id": "66b76f6b-2568-4f9b-9004-9d023fd2e765", "turn_index": 1}}
{"user_turn_0": "No , I 'm departing from Liverpool", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM price equals 130", "user_turn_1": "That sounds fine . Book the flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "14964", "datum_id": {"dialogue_id": "a9cb3292-9974-4104-9cfa-0a5d5fdfd923", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , when will the event begin ?", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.dateTimeRange_? (DateTimeRange.duration_? (AppleDuration.hour_? (?= 1)))) (CalendarEvent.eventName_? (?= \" brainstorm session \")))))", "idx": "14975", "datum_id": {"dialogue_id": "43b12201-eda2-49ea-9e79-557fd97eeb09", "turn_index": 0}}
{"user_turn_0": "Hi my assistant , when will the event begin ?", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals startDateTime", "user_turn_1": "The event has been scheduled for you . Let me know if there 's anything else I can help you out with", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.startDateTime_? (& (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM))))) (DateTime.date_? (?= (Tomorrow)))))))))", "idx": "14976", "datum_id": {"dialogue_id": "43b12201-eda2-49ea-9e79-557fd97eeb09", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , did Dorothy call ?", "tgt": "(plan (^(PhoneCall) CheckExistence :object (PhoneCall.sender_? (Contact.person_? (Person.name_? (?= \" Dorothy \"))))))", "idx": "14985", "datum_id": {"dialogue_id": "793ec2c7-9bbe-4f4c-8d6f-ba88ba074a0a", "turn_index": 0}}
{"user_turn_0": "Next task , text them", "agent_turn_0": "Root system prompt message create object equals recipients equals person equals nameHint", "user_turn_1": "Dorothy Stewart", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Person)) Path.apply \" object.recipients.person \") (lambda (^(Constraint Person) x0) (& x0 (Person.nameHint_? (?= \" Stewart \"))))))", "idx": "14987", "datum_id": {"dialogue_id": "793ec2c7-9bbe-4f4c-8d6f-ba88ba074a0a", "turn_index": 2}}
{"user_turn_0": "Dorothy Stewart", "agent_turn_0": "Root system prompt message create object equals textContent", "user_turn_1": "Come home now is what I want to say", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (& x0 (Message.textContent_? (?= \" Come home now \"))))))", "idx": "14988", "datum_id": {"dialogue_id": "793ec2c7-9bbe-4f4c-8d6f-ba88ba074a0a", "turn_index": 3}}
{"user_turn_0": "Which airline is that one ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "Ok . I want the one at 1:20 pm", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "15000", "datum_id": {"dialogue_id": "9cc3be1b-bd16-44bb-a8c4-b59ce2e03d3d", "turn_index": 5}}
{"user_turn_0": "Does the restaurant take credit cards ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "15012", "datum_id": {"dialogue_id": "fd717af1-8626-434a-a1ee-6f45564802ec", "turn_index": 4}}
{"user_turn_0": "3:30 PM", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Try 6 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (Time.hour_? (?= (Hour.apply 6L))))))", "idx": "15014", "datum_id": {"dialogue_id": "fd717af1-8626-434a-a1ee-6f45564802ec", "turn_index": 6}}
{"user_turn_0": "I 'm departing from Birmingham", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM price equals 138", "user_turn_1": "I prefer the 2 PM departure . Make sure I have a seat in business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Dublin \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "15024", "datum_id": {"dialogue_id": "9a912f89-0655-41fe-ad7f-679c9bfdd8ba", "turn_index": 2}}
{"user_turn_0": "Yeah , yeah", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "How about a train to Bristol from Nottingham for Wednesday", "tgt": "(plan (^(Train) Book :object (& (& (Train.source_? (Place.location_? (?= \" Nottingham \"))) (Train.destination_? (Place.location_? (?= \" Bristol \")))) (Train.departureDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))))))", "idx": "15035", "datum_id": {"dialogue_id": "4558ee9e-0062-4f55-8961-988274a82f55", "turn_index": 3}}
{"user_turn_0": "And what 's the rating", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Please book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15055", "datum_id": {"dialogue_id": "c8598c8a-fba9-49ba-b563-1d7ae0c0049b", "turn_index": 3}}
{"user_turn_0": "the 20th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM price equals 170", "user_turn_1": "That one is fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "15070", "datum_id": {"dialogue_id": "6c647b98-e57d-4ca7-9adc-677237198e58", "turn_index": 6}}
{"user_turn_0": "I need three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Make the check in the 11th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 11L))))))", "idx": "15076", "datum_id": {"dialogue_id": "a3f20d24-c122-41ed-b434-5722b4f93348", "turn_index": 4}}
{"user_turn_0": "Make the check in the 11th", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you cancel for free ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "15077", "datum_id": {"dialogue_id": "a3f20d24-c122-41ed-b434-5722b4f93348", "turn_index": 5}}
{"user_turn_0": "Does the hotel have fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15098", "datum_id": {"dialogue_id": "8d744213-d416-430c-99e6-487da4196735", "turn_index": 3}}
{"user_turn_0": "Actually can you change the check in date to tomorrow", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait . Does the booking support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "15104", "datum_id": {"dialogue_id": "8d744213-d416-430c-99e6-487da4196735", "turn_index": 9}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i want to book a three star restaurant in Queen 's Park . The booking time is 5 PM today .", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.location_? (?= \" Queen's Park \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 5L))) (meridiem_? (?= (Meridiem.PM))))))))) (Restaurant.rating_? (?= 3)))))", "idx": "15117", "datum_id": {"dialogue_id": "a47dd0eb-8185-447c-825f-c076a2f75d02", "turn_index": 0}}
{"user_turn_0": "Indian food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floss and Joes", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "15119", "datum_id": {"dialogue_id": "a47dd0eb-8185-447c-825f-c076a2f75d02", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , book me a four star , not too pricey restating in Oxford Circus on February 20th at 11:00 please", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Oxford Circus \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (February))) (Date.day_? (?= (Day.apply 20L)))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 11L)))))))) (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Restaurant.rating_? (?= 4)))))", "idx": "15122", "datum_id": {"dialogue_id": "8982868c-7c02-4d8e-ae66-1907bd0fd541", "turn_index": 0}}
{"user_turn_0": "Hey , book me a four star , not too pricey restating in Oxford Circus on February 20th at 11:00 please", "agent_turn_0": "Root system prompt restaurant book object equals foodType", "user_turn_1": "I want good old American food", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.foodType_? (?= (FoodType.American)))))))", "idx": "15123", "datum_id": {"dialogue_id": "8982868c-7c02-4d8e-ae66-1907bd0fd541", "turn_index": 1}}
{"user_turn_0": "I want good old American food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Cityroom", "user_turn_1": "Sure , go ahead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "15124", "datum_id": {"dialogue_id": "8982868c-7c02-4d8e-ae66-1907bd0fd541", "turn_index": 2}}
{"user_turn_0": "Sure , go ahead", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Ok , can you change the booking to October 10", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (& (Date.month_? (?= (October))) (Date.day_? (?= (Day.apply 10L)))))))", "idx": "15125", "datum_id": {"dialogue_id": "8982868c-7c02-4d8e-ae66-1907bd0fd541", "turn_index": 3}}
{"user_turn_0": "None look good . Show me more options ? The food type does n't matter", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "What is the address ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "15133", "datum_id": {"dialogue_id": "9093819a-3833-4e0a-bd42-34c2d879defd", "turn_index": 5}}
{"user_turn_0": "What is the address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 6a Streatham Hill", "user_turn_1": "Book it for me tomorrow at 11 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Chipotle Grill \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 11L)))))))))))", "idx": "15134", "datum_id": {"dialogue_id": "9093819a-3833-4e0a-bd42-34c2d879defd", "turn_index": 6}}
{"user_turn_0": "What class ticket would you like ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "That 's fine . Lets book it ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "15140", "datum_id": {"dialogue_id": "262b5426-6738-4184-8e2d-1fbeddeb7517", "turn_index": 3}}
{"user_turn_0": "Yes , I 'm departing from London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I want the one which leaves at 3:20 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "15144", "datum_id": {"dialogue_id": "4e3f73b2-c676-4142-a757-a7fa3eefb62f", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , when does my train to Edinburg Waverley get in ?", "tgt": "(plan (^(Train) Find :focus (Train.arrivalDateTime_? (^(DateTime) always)) :object (Train.destination_? (Place.location_? (?= \" Edinburgh Waverley \")))))", "idx": "15158", "datum_id": {"dialogue_id": "66a1ab13-25f6-4c4a-b451-414dc9247307", "turn_index": 0}}
{"user_turn_0": "Somewhere not priced highly", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Spago", "user_turn_1": "How much does it usually cost per person ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "15164", "datum_id": {"dialogue_id": "66a1ab13-25f6-4c4a-b451-414dc9247307", "turn_index": 6}}
{"user_turn_0": "How much does it usually cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 63", "user_turn_1": "That works , make the reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Dim Summit \"))))))", "idx": "15165", "datum_id": {"dialogue_id": "66a1ab13-25f6-4c4a-b451-414dc9247307", "turn_index": 7}}
{"user_turn_0": "Is it a direct flight from : London Heathrow ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "All right . I 'd like to book this flight from London Heathrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "15174", "datum_id": {"dialogue_id": "2ae026d1-e981-4782-a4e4-bbae530723c0", "turn_index": 4}}
{"user_turn_0": "The one at 10 o'clock", "agent_turn_0": "Root system inform calendarEvent update Completed", "user_turn_1": "Thanks for the help . Text him", "tgt": "(plan (^(Message) Create :object (Message.recipients_? (^((Constraint Contact)) refer))))", "idx": "15190", "datum_id": {"dialogue_id": "6986377f-1c88-4aed-b21e-e92bfe13eb91", "turn_index": 2}}
{"user_turn_0": "I 'm leaving from Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 12 minute equals 25 meridiem equals PM", "user_turn_1": "No , get the one that leaves 3:45 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "15201", "datum_id": {"dialogue_id": "7a23f115-85ca-4623-89f1-4f339d02df4a", "turn_index": 2}}
{"user_turn_0": "No , get the one that leaves 3:45 PM", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM price equals 138", "user_turn_1": "Cool , looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "15202", "datum_id": {"dialogue_id": "7a23f115-85ca-4623-89f1-4f339d02df4a", "turn_index": 3}}
{"user_turn_0": "How can I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15216", "datum_id": {"dialogue_id": "41b2b9a2-d7a7-43e1-baf7-40817260c529", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , schedule Mobile car - wash with Mr. Hodges from now until 7 PM .", "tgt": "(plan (^(CalendarEvent) Create :object (& (& (CalendarEvent.eventName_? (?= \" Mobile car-wash \")) (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Now)))) (DateTimeRange.endDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 7L))) (meridiem_? (?= (Meridiem.PM))))))))) (CalendarEvent.attendees_? (Contact.person_? (& (Person.name_? (?= \" Hodges \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "15220", "datum_id": {"dialogue_id": "b804a20b-365b-460c-858c-3f7b7241a347", "turn_index": 0}}
{"user_turn_0": "Do me another favor . Let me make a phone call to my father", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "I need to book a restaurant that has parking and one star rating or above . Make sure it serves Italian cuisine", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.rating_? (?!= (someSalient (?= 0)))) (Restaurant.foodType_? (?= (FoodType.Italian)))) (Restaurant.hasParking_? (?= true)))))", "idx": "15229", "datum_id": {"dialogue_id": "1dbb17a9-f95d-49ed-bbe4-bc5a57b1559a", "turn_index": 4}}
{"user_turn_0": "Is laundry available ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it on my behalf", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15243", "datum_id": {"dialogue_id": "8824b072-f3f5-47ef-88c2-2a42a1e87ca4", "turn_index": 3}}
{"user_turn_0": "Book it on my behalf", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "From November 7th to the 9th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 7L)))) (month_? (Date.month_? (?= (November)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 9L)))))))))))", "idx": "15244", "datum_id": {"dialogue_id": "8824b072-f3f5-47ef-88c2-2a42a1e87ca4", "turn_index": 4}}
{"user_turn_0": "From November 7th to the 9th", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Can I check - in on Wednesday instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Wednesday))))))", "idx": "15245", "datum_id": {"dialogue_id": "8824b072-f3f5-47ef-88c2-2a42a1e87ca4", "turn_index": 5}}
{"user_turn_0": "One room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is free cancellation available ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "15247", "datum_id": {"dialogue_id": "8824b072-f3f5-47ef-88c2-2a42a1e87ca4", "turn_index": 7}}
{"user_turn_0": "Is breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15257", "datum_id": {"dialogue_id": "0d722c1a-9595-4636-a72b-3164722ef8ed", "turn_index": 3}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 12 minute equals 15 meridiem equals PM price equals 130", "user_turn_1": "Looks good to me . Please book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "15270", "datum_id": {"dialogue_id": "3f54a9ae-2362-45f9-a4a2-f4fab6c36c46", "turn_index": 5}}
{"user_turn_0": "What class is that flight ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "That works get that flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "15302", "datum_id": {"dialogue_id": "b5540ce7-c406-4d8b-a868-daa4376c97e4", "turn_index": 3}}
{"user_turn_0": "Make it for three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do you know if there 's free cancellation supported", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "15308", "datum_id": {"dialogue_id": "f9f1f19f-b55a-41b3-97e5-645d6492e107", "turn_index": 4}}
{"user_turn_0": "Do you know if there 's free cancellation supported", "agent_turn_0": "Root system inform hotel find focus equals freeCancellation equals True", "user_turn_1": "Can you actually adjust the check out date to be on Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Saturday))))))", "idx": "15309", "datum_id": {"dialogue_id": "f9f1f19f-b55a-41b3-97e5-645d6492e107", "turn_index": 5}}
{"user_turn_0": "yes , book it", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "Thanks , next set me a medical appointment reminder", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (CalendarEvent.eventName_? (?= \" medical appointment \")))))))", "idx": "15316", "datum_id": {"dialogue_id": "163430e9-6d0c-4f03-90c0-0979b3351401", "turn_index": 4}}
{"user_turn_0": "Hi there , how long does it take to get from 12 Hydean Way to 54 Islington Park Road walking .", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 30", "user_turn_1": "Do me another favor . Book me at Goat and Guru in Oxford Circus a table for 6 at 11 o'clock", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.restaurantName_? (?= \" Goat and Guru \")) (Restaurant.location_? (?= \" Oxford Circus \"))) (Restaurant.tableSize_? (?= 6))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 11L)))))))))", "idx": "15334", "datum_id": {"dialogue_id": "24da8a3a-f9a9-4212-80f9-d02c41e6a61f", "turn_index": 1}}
{"user_turn_0": "Somewhere at least three star rated and moderately priced", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Shangri-La price equals 160", "user_turn_1": "Is free Wi - Fi offered at the hotel ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasWifi_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "15342", "datum_id": {"dialogue_id": "2b9b5fa2-ccea-4dee-b12f-c661c9aec8a8", "turn_index": 4}}
{"user_turn_0": "Is free Wi - Fi offered at the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Make a reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15343", "datum_id": {"dialogue_id": "2b9b5fa2-ccea-4dee-b12f-c661c9aec8a8", "turn_index": 5}}
{"user_turn_0": "Which airline is it ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals British", "user_turn_1": "Book the flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "15359", "datum_id": {"dialogue_id": "f4e9a6cd-1a8f-4b12-8169-70bc587cb7e9", "turn_index": 4}}
{"user_turn_0": "Get me two rooms , I do n't care what kind of room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to pay now ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "15365", "datum_id": {"dialogue_id": "bec947dc-5ce7-4394-aef2-4d146027cd67", "turn_index": 4}}
{"user_turn_0": "Do any of these serve American food ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jurassic Pork", "user_turn_1": "Do they take credit ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "15376", "datum_id": {"dialogue_id": "3e785379-52eb-4769-8f1d-a1678318a896", "turn_index": 3}}
{"user_turn_0": "Do they take credit ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Cool . Let 's do it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flip Out \"))))))", "idx": "15377", "datum_id": {"dialogue_id": "3e785379-52eb-4769-8f1d-a1678318a896", "turn_index": 4}}
{"user_turn_0": "Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 11 minute equals 45 meridiem equals AM price equals 127", "user_turn_1": "Looks fine to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "15396", "datum_id": {"dialogue_id": "cec6da9f-e026-45d9-ad82-f1b3a51c8ebe", "turn_index": 5}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system inform train book Completed", "user_turn_1": "Next , can you send that flight to Mr. Dickens ?", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Dickens \")) (Person.namePrefix_? (?= \" Mr \"))))) (Message.textContent_? (?= (^(String Train) reference (^(Train) always)))))))", "idx": "15437", "datum_id": {"dialogue_id": "866ae828-6b6f-486c-98ee-034c7c711315", "turn_index": 4}}
{"user_turn_0": "No preference but make sure it fits four passengers", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals 415 Park Lane", "user_turn_1": "Change the destination to 7 Upper Street", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Place)) Path.apply \" object.destination \") (lambda (^(Constraint Place) x0) (Place.location_? (?= \" 7 Upper Street \")))))", "idx": "15460", "datum_id": {"dialogue_id": "6b238656-4268-43e8-b5a9-e65931a2fd4b", "turn_index": 2}}
{"user_turn_0": "What rating does it have ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Book it now", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15466", "datum_id": {"dialogue_id": "79be5dee-2b46-45b3-8f73-6d25b4fd2b56", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , is there a room type that you prefer ?", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" Wembley \")) (Hotel.hotelName_? (?= \" Dreamy Desert Suites \"))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (& (Date.day_? (?= (Day.apply 22L))) (Date.month_? (?= (February)))))))))))", "idx": "15470", "datum_id": {"dialogue_id": "7d0e7554-d8fe-46cb-9c92-d3e22a3cc8c6", "turn_index": 0}}
{"user_turn_0": "Hey , is there a room type that you prefer ?", "agent_turn_0": "Root system prompt hotel book object equals roomType", "user_turn_1": "How many rooms on your reservation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.roomType_? (List.exists_? (?= (RoomType.King))))))))", "idx": "15471", "datum_id": {"dialogue_id": "7d0e7554-d8fe-46cb-9c92-d3e22a3cc8c6", "turn_index": 1}}
{"user_turn_0": "Just need at least three stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jurassic Pork", "user_turn_1": "Is credit card accepted ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "15480", "datum_id": {"dialogue_id": "8829a31f-380f-4642-ac55-0b7bd4eb84a3", "turn_index": 5}}
{"user_turn_0": "I rather one with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flip Out", "user_turn_1": "That s good book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Hambone Martian \"))))))", "idx": "15482", "datum_id": {"dialogue_id": "8829a31f-380f-4642-ac55-0b7bd4eb84a3", "turn_index": 7}}
{"user_turn_0": "Hello assistant , how is the Capricorn restaurant rated ?", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 4", "user_turn_1": "Can you book it ?", "tgt": "(plan (^(Restaurant) Book :object (Restaurant.restaurantName_? (^((Constraint String)) refer))))", "idx": "15498", "datum_id": {"dialogue_id": "87d256da-4567-45bf-add9-9b130b59f902", "turn_index": 1}}
{"user_turn_0": "Give me directions to my event on Monday", "agent_turn_0": "Root system inform navigation find object equals destination equals location equals 14 Dagmar Passage", "user_turn_1": "What is the weather like there ?", "tgt": "(plan (^(WeatherReport) Find :object (WeatherReport.location_? (^((Constraint String)) refer))))", "idx": "15512", "datum_id": {"dialogue_id": "7e9cbd71-33ca-48e3-b768-14b40c66fe4f", "turn_index": 4}}
{"user_turn_0": "What is the average cost per person", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 32", "user_turn_1": "That 's fine . Book it for me at the 20th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Chipotle Grill \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 20L))))))))))", "idx": "15537", "datum_id": {"dialogue_id": "f1b98696-e05f-4110-8e22-540886849add", "turn_index": 4}}
{"user_turn_0": "Next task , add it to my calendar", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "create event the 18th on the calendar", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 18L))))))))", "idx": "15550", "datum_id": {"dialogue_id": "d3de8c46-0d97-483a-8bcc-811118be470a", "turn_index": 4}}
{"user_turn_0": "I prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone", "user_turn_1": "That 's fine . Book it for me for tomorrow please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Goat and Guru \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow)))))))))", "idx": "15568", "datum_id": {"dialogue_id": "17624019-0e64-4ef4-bb3e-ceae74c17520", "turn_index": 4}}
{"user_turn_0": "I wante to have three single rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Could you change the check out date to Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Friday))))))", "idx": "15581", "datum_id": {"dialogue_id": "1098ad07-a0e6-4b5c-9d07-2d89cc498c69", "turn_index": 4}}
{"user_turn_0": "On the 14th for 2 people", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "What about Tuesday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "15591", "datum_id": {"dialogue_id": "718ed414-43f8-4e6b-93cb-ef8fa6521d82", "turn_index": 3}}
{"user_turn_0": "Which airline is it ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals British", "user_turn_1": "That 's fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "15599", "datum_id": {"dialogue_id": "99c6ff6a-e3f9-4ffb-9661-caf2d3b6c85f", "turn_index": 4}}
{"user_turn_0": "do I have any missed calls from my brother", "agent_turn_0": "Root system inform phoneCall checkExistence Existed", "user_turn_1": "Thanks , also text him / her", "tgt": "(plan (^(Message) Create :object (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Brother)))))))", "idx": "15608", "datum_id": {"dialogue_id": "c4ead5f7-eb4f-4aab-af69-2f10652feb68", "turn_index": 4}}
{"user_turn_0": "Book 3 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "15620", "datum_id": {"dialogue_id": "0869bfc1-96c2-431f-b1dc-c791ab6cbb38", "turn_index": 6}}
{"user_turn_0": "Is it nonstop ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Great , get three tickets please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (& (Flight.class_? (?= (FlightClass.Economy))) (Flight.source_? (Place.location_? (?= \" London \")))) (Flight.destination_? (Place.location_? (?= \" Edinburgh \")))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (^((Constraint (List DateTime))) refer)))) (Flight.nextDestination_? (^((Constraint Place)) refer))) (Flight.nextDepartureDateTime_? (& (DateTime.date_? (^((Constraint Date)) refer)) (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))) (Flight.passengers_? (?= 3))))))", "idx": "15635", "datum_id": {"dialogue_id": "e20f1f98-0201-4ea5-b228-8f88ee8bab1e", "turn_index": 8}}
{"user_turn_0": "I would rather eat somewhere that has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flip Out", "user_turn_1": "Is there parking there ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "15641", "datum_id": {"dialogue_id": "4d19c378-4540-4d9c-b958-53b366004805", "turn_index": 4}}
{"user_turn_0": "Is there parking there ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Ok , go ahead and book it for me on Monday then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Bandits \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))))))))", "idx": "15642", "datum_id": {"dialogue_id": "4d19c378-4540-4d9c-b958-53b366004805", "turn_index": 5}}
{"user_turn_0": "My spring outing on Tuesday", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Do me another favor . Can you book me a hotel in Queen 's Park that 's not too expensive . I only want to stay for one night", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" Queen's Park \")) (Hotel.dateTimeRange_? (DateTimeRange.duration_? (AppleDuration.day_? (?= 1))))) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))))))", "idx": "15655", "datum_id": {"dialogue_id": "cc2ade91-34f3-49cd-b1d2-7439c0fd64ff", "turn_index": 2}}
{"user_turn_0": "What 's the rating of that hotel ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "Can you reserve me a room please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15657", "datum_id": {"dialogue_id": "cc2ade91-34f3-49cd-b1d2-7439c0fd64ff", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , book a hotel that is n't too expensive in Oxford Circus check - in today and check - out tomorrow .", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" Oxford Circus \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (?= (Tomorrow))))))) (Hotel.priceRange_? (?= (PriceRange.Moderate))))))", "idx": "15661", "datum_id": {"dialogue_id": "497c4fba-efc3-4db8-8295-de503ee0eda3", "turn_index": 0}}
{"user_turn_0": "Do they have private bathrooms ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15663", "datum_id": {"dialogue_id": "497c4fba-efc3-4db8-8295-de503ee0eda3", "turn_index": 2}}
{"user_turn_0": "Just one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually , change the check - out date to Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Thursday))))))", "idx": "15666", "datum_id": {"dialogue_id": "497c4fba-efc3-4db8-8295-de503ee0eda3", "turn_index": 5}}
{"user_turn_0": "Actually , change the check - out date to Thursday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they support free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "15667", "datum_id": {"dialogue_id": "497c4fba-efc3-4db8-8295-de503ee0eda3", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , make reservation to go to 1 Islington Green for 3 people .", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.destination_? (Place.location_? (?= \" 1 Islington Green \"))) (Taxi.passengers_? (?= 3)))))", "idx": "15669", "datum_id": {"dialogue_id": "7a64d486-c93d-4725-bf28-909be0332bf3", "turn_index": 0}}
{"user_turn_0": "When is the 3:30 PM train to Wimbledon coming ?", "agent_turn_0": "Root system inform train find focus equals arrivalDateTime equals time equals hour equals 10 minute equals 30", "user_turn_1": "When is the train to Cardiff coming ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (Train.destination_? (Place.location_? (?= \" Cardiff \"))))))", "idx": "15676", "datum_id": {"dialogue_id": "2846043f-9401-4bc1-9acd-fffc0719e4dd", "turn_index": 2}}
{"user_turn_0": "Give me the rating", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15680", "datum_id": {"dialogue_id": "2846043f-9401-4bc1-9acd-fffc0719e4dd", "turn_index": 6}}
{"user_turn_0": "Wait update the check in date to tomorrow", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they have free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "15685", "datum_id": {"dialogue_id": "2846043f-9401-4bc1-9acd-fffc0719e4dd", "turn_index": 11}}
{"user_turn_0": "Cabin class ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "I think the on that leaves at 2:20 PM works better , but I want business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Paris \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.departureDateTime_? (& (^((Constraint (List DateTime))) refer) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "15690", "datum_id": {"dialogue_id": "4103aaf5-d590-4dc3-86da-d9c4efd37ff5", "turn_index": 3}}
{"user_turn_0": "I think the on that leaves at 2:20 PM works better , but I want business class", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 1 meridiem equals PM price equals 127", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "15691", "datum_id": {"dialogue_id": "4103aaf5-d590-4dc3-86da-d9c4efd37ff5", "turn_index": 4}}
{"user_turn_0": "Hey assistant , what kind of rating does the Grand Hyatt hotel in Hillingdon have ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "How many rooms will you need ? Is there a room type preference ?", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.hotelName_? (?= \" Grand Hyatt \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday))))))))))", "idx": "15694", "datum_id": {"dialogue_id": "b413df2a-d085-4f75-b01c-679ced514d85", "turn_index": 1}}
{"user_turn_0": "Three single rooms , please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I need to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "15696", "datum_id": {"dialogue_id": "b413df2a-d085-4f75-b01c-679ced514d85", "turn_index": 3}}
{"user_turn_0": "What carbin class is it ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "That is okay . I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "15716", "datum_id": {"dialogue_id": "1ec578b3-854c-4ca3-bc44-2095a7398ae8", "turn_index": 3}}
{"user_turn_0": "And what is the weather today ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Rainy", "user_turn_1": "I want to book Capers with table for 6 people at 5 o'clock", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.restaurantName_? (?= \" Capers \")) (Restaurant.tableSize_? (?= 6))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 5L)))))))))", "idx": "15721", "datum_id": {"dialogue_id": "6d1df2eb-0c04-4ade-92a7-ee58e7d76cb8", "turn_index": 2}}
{"user_turn_0": "I want a hotel that has a low price range", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Peninsula price equals 201", "user_turn_1": "Are private bathrooms available in the hotel ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.privateBath_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "15738", "datum_id": {"dialogue_id": "c35ac94c-5024-4e9a-ae82-2690420e0d84", "turn_index": 4}}
{"user_turn_0": "Are private bathrooms available in the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Hyatt \"))))))", "idx": "15739", "datum_id": {"dialogue_id": "c35ac94c-5024-4e9a-ae82-2690420e0d84", "turn_index": 5}}
{"user_turn_0": "I need 3 rooms on my reservation", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "I want to switch the check in date to Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "15743", "datum_id": {"dialogue_id": "c35ac94c-5024-4e9a-ae82-2690420e0d84", "turn_index": 9}}
{"user_turn_0": "Which airline is it", "agent_turn_0": "Root system inform flight find focus equals airLine equals British", "user_turn_1": "I would like the one that leaves at 4:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "15749", "datum_id": {"dialogue_id": "59d22f8f-80da-4568-b536-855a2d9a5e23", "turn_index": 4}}
{"user_turn_0": "I think I 'd rather have one that does n't have zero stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Ballyfin price equals 65", "user_turn_1": "Do they have a fitness center at that one ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasFitness_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "15764", "datum_id": {"dialogue_id": "9d1b0e47-dc6d-4f6f-bec4-39d440f2e37a", "turn_index": 2}}
{"user_turn_0": "Do they have a fitness center at that one ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Cool , book that one , please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Green Acres \"))))))", "idx": "15765", "datum_id": {"dialogue_id": "9d1b0e47-dc6d-4f6f-bec4-39d440f2e37a", "turn_index": 3}}
{"user_turn_0": "Hey assistant , i want to make a reservation at Chinese restaurant with on - site parking .", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName location", "user_turn_1": "I want a star - rated restaurant in Old Ford", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.location_? (?= \" Old Ford \"))) (Restaurant.rating_? (?!= (someSalient (?= 0))))))))", "idx": "15796", "datum_id": {"dialogue_id": "3b68a10e-8e2a-41be-acdd-15eb3f5fd31c", "turn_index": 1}}
{"user_turn_0": "Does it have on - site parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Okay , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "15798", "datum_id": {"dialogue_id": "3b68a10e-8e2a-41be-acdd-15eb3f5fd31c", "turn_index": 3}}
{"user_turn_0": "Hi my assistant , let me see Point Presentation with my sister", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Do me another favor . Send my next event to my parents", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Parents))))))))", "idx": "15804", "datum_id": {"dialogue_id": "740c0d71-da65-4669-a4e2-f8ef69432fc5", "turn_index": 1}}
{"user_turn_0": "Something in Holland Park", "agent_turn_0": "Root system prompt hotel book object equals priceRange", "user_turn_1": "Something cheap with parking", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.priceRange_? (?= (PriceRange.Low)))) (Hotel.hasParking_? (?= true))))))", "idx": "15810", "datum_id": {"dialogue_id": "99688c73-09bd-4a64-bfc7-0db342d218ed", "turn_index": 2}}
{"user_turn_0": "What 's the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15812", "datum_id": {"dialogue_id": "99688c73-09bd-4a64-bfc7-0db342d218ed", "turn_index": 4}}
{"user_turn_0": "What are the directions there", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Can you please book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15818", "datum_id": {"dialogue_id": "761d4e5f-38ae-4013-9c85-80eb0e95c293", "turn_index": 3}}
{"user_turn_0": "I want three single rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I change the date back to 23rd for the check out date", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Day)) Path.apply \" object.dateTimeRange.endDateTime.date.day \") (lambda (^(Constraint Day) x0) (?= (Day.apply 23L)))))", "idx": "15821", "datum_id": {"dialogue_id": "761d4e5f-38ae-4013-9c85-80eb0e95c293", "turn_index": 6}}
{"user_turn_0": "Which airline is it ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals EasyJet", "user_turn_1": "That 's ok . I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "15827", "datum_id": {"dialogue_id": "24057362-2b29-41f5-b4dd-580d806fc4a2", "turn_index": 4}}
{"user_turn_0": "How can I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15839", "datum_id": {"dialogue_id": "7ada0b93-f61e-4737-85cf-90c3a03377fb", "turn_index": 3}}
{"user_turn_0": "Two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to make prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "15844", "datum_id": {"dialogue_id": "7ada0b93-f61e-4737-85cf-90c3a03377fb", "turn_index": 8}}
{"user_turn_0": "Do you know if this is a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Ok cool , please book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "15865", "datum_id": {"dialogue_id": "654754f5-baed-4dad-b3f1-8ecb68223a3b", "turn_index": 4}}
{"user_turn_0": "I have no preference but please make sure it fits two luggages", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals 100 Upper Street", "user_turn_1": "Please change the destination to 100 Upper Street", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" 100 Upper Street \"))))", "idx": "15870", "datum_id": {"dialogue_id": "e3432204-ad86-404b-ba1f-ca8ddbf194cd", "turn_index": 3}}
{"user_turn_0": "Paddington", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM", "user_turn_1": "That s good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "15904", "datum_id": {"dialogue_id": "230afd91-a28f-4ee5-ae32-4aefe0edeace", "turn_index": 4}}
{"user_turn_0": "That s good", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 4 meridiem equals PM", "user_turn_1": "That s good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "15905", "datum_id": {"dialogue_id": "230afd91-a28f-4ee5-ae32-4aefe0edeace", "turn_index": 5}}
{"user_turn_0": "Does the hotel have car parking ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15910", "datum_id": {"dialogue_id": "733e9199-f44e-49df-be92-f9f6d696fd9f", "turn_index": 3}}
{"user_turn_0": "Check in tomorrow and check out Wednesday", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Can I check in on the 6th instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 6L))))))", "idx": "15912", "datum_id": {"dialogue_id": "733e9199-f44e-49df-be92-f9f6d696fd9f", "turn_index": 5}}
{"user_turn_0": "Can I have 3 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "15914", "datum_id": {"dialogue_id": "733e9199-f44e-49df-be92-f9f6d696fd9f", "turn_index": 7}}
{"user_turn_0": "And how about the price range on that spot ?", "agent_turn_0": "Root system inform hotel find focus equals priceRange equals High", "user_turn_1": "Okay sounds baller enough for me . I need a king sized bed as well", "tgt": "(plan (^(Hotel) Book :object (& (^((Constraint Hotel)) refer) (Hotel.roomType_? (List.exists_? (?= (RoomType.King)))))))", "idx": "15918", "datum_id": {"dialogue_id": "73bb9d1c-4dd9-4374-8a68-835591c10417", "turn_index": 2}}
{"user_turn_0": "Wait , can I have 3 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do you know if the booking has free cancellation in case I change my mind ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "15921", "datum_id": {"dialogue_id": "73bb9d1c-4dd9-4374-8a68-835591c10417", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i need to book a low price pizza restaurant in Chelsea .", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Chelsea \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Today)))))) (Restaurant.priceRange_? (?= (PriceRange.Low)))) (Restaurant.foodType_? (?= (FoodType.Pizza))))))", "idx": "15923", "datum_id": {"dialogue_id": "e34ddaf4-0b92-44ab-afe1-5276624a0a49", "turn_index": 0}}
{"user_turn_0": "Look for one with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dim Summit", "user_turn_1": "What is the address ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "15926", "datum_id": {"dialogue_id": "e34ddaf4-0b92-44ab-afe1-5276624a0a49", "turn_index": 3}}
{"user_turn_0": "What is the address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 24 Empire Way", "user_turn_1": "Book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Kiwi Sea \"))))))", "idx": "15927", "datum_id": {"dialogue_id": "e34ddaf4-0b92-44ab-afe1-5276624a0a49", "turn_index": 4}}
{"user_turn_0": "I will be returning on Thursday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 4 meridiem equals PM", "user_turn_1": "Sounds great", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "15945", "datum_id": {"dialogue_id": "288b219e-7318-4e44-8515-b9451031883b", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , I need to book a hotel stay with an affordable price that has parking , and it needs to be for two nights .", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))) (Hotel.dateTimeRange_? (DateTimeRange.duration_? (AppleDuration.day_? (?= 2))))) (Hotel.hasParking_? (?= true)))))", "idx": "15959", "datum_id": {"dialogue_id": "02321155-dd24-465b-b833-fd44192599e6", "turn_index": 0}}
{"user_turn_0": "What rating do they have there ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Cool , let 's go on and book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "15962", "datum_id": {"dialogue_id": "02321155-dd24-465b-b833-fd44192599e6", "turn_index": 3}}
{"user_turn_0": "The 21st", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM price equals 134", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "15971", "datum_id": {"dialogue_id": "9e61d90c-8cd7-4931-97c1-92bf8515d540", "turn_index": 5}}
{"user_turn_0": "Does it have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "I want another one with lower pricing", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "15977", "datum_id": {"dialogue_id": "d1b14e3c-e736-4f9b-8208-880da949369c", "turn_index": 4}}
{"user_turn_0": "What is it rated ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "16023", "datum_id": {"dialogue_id": "481a4e83-5861-46f1-9b7c-2152e7b31a54", "turn_index": 3}}
{"user_turn_0": "I need two", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "16025", "datum_id": {"dialogue_id": "481a4e83-5861-46f1-9b7c-2152e7b31a54", "turn_index": 5}}
{"user_turn_0": "Do I need to prepay ?", "agent_turn_0": "Root system inform hotel find focus equals prePayment equals True", "user_turn_1": "No , change the check out to Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Friday))))))", "idx": "16026", "datum_id": {"dialogue_id": "481a4e83-5861-46f1-9b7c-2152e7b31a54", "turn_index": 6}}
{"user_turn_0": "No , change the check out to Friday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "No , I want to check in today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Today)))))", "idx": "16027", "datum_id": {"dialogue_id": "481a4e83-5861-46f1-9b7c-2152e7b31a54", "turn_index": 7}}
{"user_turn_0": "No , I want to check in today", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I need to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "16028", "datum_id": {"dialogue_id": "481a4e83-5861-46f1-9b7c-2152e7b31a54", "turn_index": 8}}
{"user_turn_0": "London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "The one that leaves at 1:40 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "16042", "datum_id": {"dialogue_id": "f28c9d2a-3c43-4e08-b3e0-f3ffa90af2af", "turn_index": 2}}
{"user_turn_0": "Let me get a place that has outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Bandits", "user_turn_1": "Sure , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Maple \"))))))", "idx": "16051", "datum_id": {"dialogue_id": "bc8bab47-715c-4831-a620-7c3187560759", "turn_index": 6}}
{"user_turn_0": "Hmm , which airline is that one ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals EasyJet", "user_turn_1": "Well actually no I think I 'll take the one that leaves at 3:40 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "16067", "datum_id": {"dialogue_id": "362ecbcc-7a7b-42d1-9665-acea93f2d5f1", "turn_index": 5}}
{"user_turn_0": "I want to update the health screening with my sister", "agent_turn_0": "Root system prompt calendarEvent update focus equals dateTimeRange equals startDateTime equals date", "user_turn_1": "The new date will be the 26th", "tgt": "(plan (revise (^(Unit) Path.apply \" Update \") (^((Constraint Date)) Path.apply \" focus.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 26L))))))", "idx": "16073", "datum_id": {"dialogue_id": "89541ae8-20dc-49ab-b28d-41ff42e43d29", "turn_index": 2}}
{"user_turn_0": "No , no , find one that has three stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Astro Resort price equals 178", "user_turn_1": "Do they have private bathrooms ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.privateBath_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "16079", "datum_id": {"dialogue_id": "48ac6c59-5077-42a0-b99f-671ba3e7896e", "turn_index": 3}}
{"user_turn_0": "Do they have private bathrooms ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Great ! Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Rose \"))))))", "idx": "16080", "datum_id": {"dialogue_id": "48ac6c59-5077-42a0-b99f-671ba3e7896e", "turn_index": 4}}
{"user_turn_0": "I do n't care . But I need wifi", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Ok , I 'll just check in on Monday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Monday))))))", "idx": "16082", "datum_id": {"dialogue_id": "48ac6c59-5077-42a0-b99f-671ba3e7896e", "turn_index": 6}}
{"user_turn_0": "Three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I pay now ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "16084", "datum_id": {"dialogue_id": "48ac6c59-5077-42a0-b99f-671ba3e7896e", "turn_index": 8}}
{"user_turn_0": "Yes . please", "agent_turn_0": "Root system inform train book Completed", "user_turn_1": "Thanks for the help . Yes , can you send a message with this order to Mr Ince ?", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Ince \")) (Person.namePrefix_? (?= \" Mr \"))))) (Message.textContent_? (?= (^(String Train) reference (^(Train) always)))))))", "idx": "16090", "datum_id": {"dialogue_id": "2eabcde1-e770-4382-9b13-adf5a3caee4c", "turn_index": 4}}
{"user_turn_0": "I will return on Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 11 minute equals 55 meridiem equals AM price equals 65", "user_turn_1": "That 's all right , please go ahead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 12L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "16097", "datum_id": {"dialogue_id": "b94fb3f2-cf3b-4db6-b27f-70c93c59ba5e", "turn_index": 6}}
{"user_turn_0": "I prefer the one at 4:45 PM", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "16102", "datum_id": {"dialogue_id": "cfdd0a97-9ca8-469a-bddb-3fa3f4e0f20c", "turn_index": 3}}
{"user_turn_0": "I want a table for 3 please", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Update the appointment date to tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Tomorrow)))))", "idx": "16114", "datum_id": {"dialogue_id": "a7adb8f1-2fa7-4640-86a9-cf609c75d03c", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , book a moderately priced hotel in Camden Town with parking .", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" Camden Town \")) (Hotel.dateTimeRange_? (DateTimeRange.duration_? (AppleDuration.day_? (?= 1))))) (Hotel.priceRange_? (?= (PriceRange.Moderate)))) (Hotel.hasParking_? (?= true)))))", "idx": "16121", "datum_id": {"dialogue_id": "d2ec0e61-b0f2-45be-86d9-ebf6a4b72c9a", "turn_index": 0}}
{"user_turn_0": "I 'd rather have a different five star rated hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Green Lushy Resorts price equals 156", "user_turn_1": "Does the hotel have parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "16124", "datum_id": {"dialogue_id": "d2ec0e61-b0f2-45be-86d9-ebf6a4b72c9a", "turn_index": 3}}
{"user_turn_0": "Does the hotel have parking ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Can you book it for me ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Obsidian Sky \"))))))", "idx": "16125", "datum_id": {"dialogue_id": "d2ec0e61-b0f2-45be-86d9-ebf6a4b72c9a", "turn_index": 4}}
{"user_turn_0": "Book one room", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Sorry , your room type is unavailable in your specified period", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Rejected))))))", "idx": "16129", "datum_id": {"dialogue_id": "d2ec0e61-b0f2-45be-86d9-ebf6a4b72c9a", "turn_index": 8}}
{"user_turn_0": "How would I get to that hotel ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Okay , make my reservation there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "16134", "datum_id": {"dialogue_id": "34773f14-1480-4cf5-b80a-ce29b2b8c6d0", "turn_index": 4}}
{"user_turn_0": "Book a table for 6", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Ok , change the time to 6:00", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (Time.hour_? (?= (Hour.apply 6L))))))", "idx": "16146", "datum_id": {"dialogue_id": "cd621199-85f0-412d-a40e-9b30d749d9c8", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i want to book a cheap restaurant with car parking for 10:30 o'clock .", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High))))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))))))) (Restaurant.hasParking_? (?= true)))))", "idx": "16148", "datum_id": {"dialogue_id": "61609ba4-dede-4ecf-a5be-a2da78d2a78d", "turn_index": 0}}
{"user_turn_0": "Does the restaurant have outdoor seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "16152", "datum_id": {"dialogue_id": "61609ba4-dede-4ecf-a5be-a2da78d2a78d", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , i need a reservation at a three - star hotel with a low price .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?= (PriceRange.Low))) (Hotel.rating_? (?>= (someSalient (?= 3)))))))", "idx": "16155", "datum_id": {"dialogue_id": "4655bb87-ab03-4f2e-9737-239dbdfbc6f2", "turn_index": 0}}
{"user_turn_0": "Does it have parking ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Alright , let 's do that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "16158", "datum_id": {"dialogue_id": "4655bb87-ab03-4f2e-9737-239dbdfbc6f2", "turn_index": 3}}
{"user_turn_0": "I need three rooms , and I do n't care about room type", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel for free ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "16162", "datum_id": {"dialogue_id": "4655bb87-ab03-4f2e-9737-239dbdfbc6f2", "turn_index": 7}}
{"user_turn_0": "Does it come with car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "16166", "datum_id": {"dialogue_id": "ee1fcb4b-055c-4d5f-a7c6-f1c5d1602849", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , modify reminder at 6:30", "tgt": "(plan (^(Reminder) Update :object (Reminder.atDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (?= (Minute.apply 30L))))))))", "idx": "16171", "datum_id": {"dialogue_id": "8a096330-7421-4c0a-bb38-61c797c80d91", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , will you be departing from Manchester ?", "tgt": "(plan (^(Train) Book :object (& (Train.destination_? (Place.location_? (?= \" Newcastle \"))) (Train.departureDateTime_? (DateTime.time_? (?>= (someSalient (& (Time.hour_? (?= (Hour.apply 9L))) (meridiem_? (?= (Meridiem.AM)))))))))))", "idx": "16181", "datum_id": {"dialogue_id": "fcca62ca-a789-46c3-a367-4fe9c54e8796", "turn_index": 0}}
{"user_turn_0": "Hi assistant , will you be departing from Manchester ?", "agent_turn_0": "Root system prompt train book object equals source inform train find object equals source equals location equals Manchester", "user_turn_1": "I found the following trains . How does the 3:30 PM train sound to you ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (Train.source_? (Place.location_? (?= \" Cardiff Central \")))))))", "idx": "16182", "datum_id": {"dialogue_id": "fcca62ca-a789-46c3-a367-4fe9c54e8796", "turn_index": 1}}
{"user_turn_0": "I found the following trains . How does the 3:30 PM train sound to you ?", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "16183", "datum_id": {"dialogue_id": "fcca62ca-a789-46c3-a367-4fe9c54e8796", "turn_index": 2}}
{"user_turn_0": "No , I am going to Frankfurt next on Thursday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 3 object equals nextDepartureDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM price equals 178", "user_turn_1": "That one is fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "16198", "datum_id": {"dialogue_id": "4e9c8647-54e8-49df-b509-b04b3e030494", "turn_index": 9}}
{"user_turn_0": "Yeah , I 'm coming back on Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM price equals 178", "user_turn_1": "That looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "16207", "datum_id": {"dialogue_id": "424a9fc1-9c8a-4c42-9ae3-975eb42424d6", "turn_index": 5}}
{"user_turn_0": "Which of the restaurants you found have a rating that is not zero stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jurassic Pork", "user_turn_1": "Do they have parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "16218", "datum_id": {"dialogue_id": "c8713006-e4c8-4961-a0e9-b622c70b1f2e", "turn_index": 4}}
{"user_turn_0": "Do they have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "That looks ok . Go ahead and book it for July 20th at 1 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Floq \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (July))) (Date.day_? (?= (Day.apply 20L)))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "16219", "datum_id": {"dialogue_id": "c8713006-e4c8-4961-a0e9-b622c70b1f2e", "turn_index": 5}}
{"user_turn_0": "No , make is for January 9th", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "How can I get to The African Waistcoat from 2A Prebend Street on public transport", "tgt": "(plan (^(Navigation) Find :object (& (& (Navigation.source_? (Place.location_? (?= \" 2a Prebend Street \"))) (Navigation.destination_? (Place.location_? (?= \" The African Waistcoat \")))) (Navigation.transportationMode_? (?= (TransportationMode.PublicTransportation))))))", "idx": "16224", "datum_id": {"dialogue_id": "6a31eecd-2e4d-4f8e-89bd-b65ca6d055e7", "turn_index": 2}}
{"user_turn_0": "How can I get to The African Waistcoat from 2A Prebend Street on public transport", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "What about from 415 Park Lane to 2A Prebend Street by public transport", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (& (& (Navigation.source_? (Place.location_? (?= \" 415 Park Lane \"))) (Navigation.destination_? (Place.location_? (?= \" 2a Prebend Street \")))) (Navigation.transportationMode_? (?= (TransportationMode.PublicTransportation))))))", "idx": "16225", "datum_id": {"dialogue_id": "6a31eecd-2e4d-4f8e-89bd-b65ca6d055e7", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i would like to book an affordable hotel close to my event .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))))))", "idx": "16232", "datum_id": {"dialogue_id": "dd120198-e38a-429c-bb24-9e208d4b432c", "turn_index": 0}}
{"user_turn_0": "Does it have a fitness center", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "16234", "datum_id": {"dialogue_id": "dd120198-e38a-429c-bb24-9e208d4b432c", "turn_index": 2}}
{"user_turn_0": "I would like two rooms with queen - sized beds", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Okay , change the check - in to Wednesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Wednesday))))))", "idx": "16237", "datum_id": {"dialogue_id": "dd120198-e38a-429c-bb24-9e208d4b432c", "turn_index": 5}}
{"user_turn_0": "Is there a new call from Mr Marshall ?", "agent_turn_0": "Root system inform phoneCall checkExistence Existed object equals atDateTime equals date definedValue equals Today", "user_turn_1": "Text him wish I was there", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (^((Constraint Contact)) refer)) (Message.textContent_? (?= \" wish I was there \")))))", "idx": "16241", "datum_id": {"dialogue_id": "dd812d9e-800d-468e-826c-5f45aa42e6c4", "turn_index": 2}}
{"user_turn_0": "Yes , send it", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Send out a message to 07931813650", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (Message.recipients_? (Contact.phoneNumber_? (?= \" 07931813650 \"))))))", "idx": "16243", "datum_id": {"dialogue_id": "dd812d9e-800d-468e-826c-5f45aa42e6c4", "turn_index": 4}}
{"user_turn_0": "I want something not too expensive", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Green Lushy Resorts price equals 173", "user_turn_1": "What does it have as a rating ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.rating_? (^(Number) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "16264", "datum_id": {"dialogue_id": "bab2351b-8c21-4f8c-b6fb-899a7b235c28", "turn_index": 5}}
{"user_turn_0": "Is breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "16288", "datum_id": {"dialogue_id": "18f63621-14d7-4fe5-9c24-9469f75360fd", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , book a cheap restaurant for Friday at 6:30 o'clock", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High))))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (?= (Minute.apply 30L)))))))))))", "idx": "16305", "datum_id": {"dialogue_id": "7b19a9ec-bd15-4af9-bd09-6f131e486b1d", "turn_index": 0}}
{"user_turn_0": "I prefer another restaurant with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone Martian", "user_turn_1": "Ok , book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flavoroso \"))))))", "idx": "16309", "datum_id": {"dialogue_id": "7b19a9ec-bd15-4af9-bd09-6f131e486b1d", "turn_index": 4}}
{"user_turn_0": "For 2", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Change the appointment date to Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.atDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Tuesday)))))", "idx": "16311", "datum_id": {"dialogue_id": "7b19a9ec-bd15-4af9-bd09-6f131e486b1d", "turn_index": 6}}
{"user_turn_0": "I prefer one with at least three stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Westin price equals 142", "user_turn_1": "Does it include breakfast ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "16322", "datum_id": {"dialogue_id": "89ba19d4-14a6-469c-a491-9c7d1c3353a5", "turn_index": 4}}
{"user_turn_0": "Does it include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Triton \"))))))", "idx": "16323", "datum_id": {"dialogue_id": "89ba19d4-14a6-469c-a491-9c7d1c3353a5", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , look up departure time for my train to Leads .", "tgt": "(plan (^(Train) Find :focus (Train.departureDateTime_? (^(DateTime) always)) :object (Train.destination_? (Place.location_? (?= \" Leeds \")))))", "idx": "16331", "datum_id": {"dialogue_id": "c7f40118-7dc8-4f88-a332-67d37f82e51b", "turn_index": 0}}
{"user_turn_0": "No , give me 3 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "change the check out to Friday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Friday))))))", "idx": "16342", "datum_id": {"dialogue_id": "a07925c3-6e99-459f-8d11-75fc418cf493", "turn_index": 5}}
{"user_turn_0": "I prefer chinese hotpot", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Joint", "user_turn_1": "Book it for May 15th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (& (Date.month_? (?= (May))) (Date.day_? (?= (Day.apply 15L)))))))))))", "idx": "16347", "datum_id": {"dialogue_id": "f7fc4566-3c77-4973-bd99-c18b135977f7", "turn_index": 3}}
{"user_turn_0": "No , from York", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM", "user_turn_1": "I 'd rather take the one at 3:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "16357", "datum_id": {"dialogue_id": "d04a932d-1c86-4729-98b8-7efa8b24f4b6", "turn_index": 2}}
{"user_turn_0": "Does the hotel have laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "16370", "datum_id": {"dialogue_id": "138e2487-20f0-4bc7-9ab7-9e2c4971e3b0", "turn_index": 4}}
{"user_turn_0": "One room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you change the check out date to Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Sunday))))))", "idx": "16373", "datum_id": {"dialogue_id": "138e2487-20f0-4bc7-9ab7-9e2c4971e3b0", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , is there anything listed for 10:30 AM on August 19th on the calendar ?", "tgt": "(plan (^(CalendarEvent) Find :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (& (Date.month_? (?= (August))) (Date.day_? (?= (Day.apply 19L))))) (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM))))))))))", "idx": "16417", "datum_id": {"dialogue_id": "31ae5101-db1d-4de7-a393-4824f855d15a", "turn_index": 0}}
{"user_turn_0": "Hey , is Women in CS from 2 to 6:30 still on my calendar ?", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Can you put it in there for me then ?", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.eventName_? (?= \" routine checkup \")) (CalendarEvent.location_? (?= \" The Purple Carlo \")))))", "idx": "16423", "datum_id": {"dialogue_id": "7b361572-454a-4c31-913b-174debbc43bd", "turn_index": 1}}
{"user_turn_0": "It should last for about 2 hours", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Thanks so much . Yeah put it in there . Can you also remind me about it ?", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (^(CalendarEvent) always))))))", "idx": "16426", "datum_id": {"dialogue_id": "7b361572-454a-4c31-913b-174debbc43bd", "turn_index": 4}}
{"user_turn_0": "I do n't like any of those choices . How about restaurants that serve Chinese food instead ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone Martian", "user_turn_1": "What is the average cost per person", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "16430", "datum_id": {"dialogue_id": "4507395e-01a6-4ac6-a245-0fcc3b304cd9", "turn_index": 3}}
{"user_turn_0": "I prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Lakeside Demon", "user_turn_1": "Does the restaurant have parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "16432", "datum_id": {"dialogue_id": "4507395e-01a6-4ac6-a245-0fcc3b304cd9", "turn_index": 5}}
{"user_turn_0": "Does the restaurant have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Great . Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "16433", "datum_id": {"dialogue_id": "4507395e-01a6-4ac6-a245-0fcc3b304cd9", "turn_index": 6}}
{"user_turn_0": "What carbin class is it ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "I actually prefer the flight which departures 2:30 PM and I would like to have business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" Leeds \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday)))))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "16454", "datum_id": {"dialogue_id": "e3621297-c69d-4d27-bbf2-7212e63df499", "turn_index": 2}}
{"user_turn_0": "Which cabin class ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "I 'd prefer the business class seat at 4:20 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.source_? (Place.location_? (?= \" London Heathrow \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "16460", "datum_id": {"dialogue_id": "8cdaaf1e-8a1c-4ec2-966c-babf827fce16", "turn_index": 3}}
{"user_turn_0": "Friday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 1 meridiem equals PM price equals 125", "user_turn_1": "Yes . please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "16463", "datum_id": {"dialogue_id": "8cdaaf1e-8a1c-4ec2-966c-babf827fce16", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , can you change where my event will be ?", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.location_? (^(String) always))))", "idx": "16465", "datum_id": {"dialogue_id": "245d736d-f9eb-43fd-8dbc-fe50f10a46ff", "turn_index": 0}}
{"user_turn_0": "Set it in Soho", "agent_turn_0": "Root system inform calendarEvent update Completed", "user_turn_1": "How can I get there if I walk ?", "tgt": "(plan (^(Navigation) Find :object (& (Navigation.destination_? (Place.location_? (^((Constraint String)) refer))) (Navigation.transportationMode_? (?= (TransportationMode.Walking))))))", "idx": "16468", "datum_id": {"dialogue_id": "245d736d-f9eb-43fd-8dbc-fe50f10a46ff", "turn_index": 3}}
{"user_turn_0": "I want a restaurant with outdoor seats please", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Boiling Fence", "user_turn_1": "Does the restaurant take credit card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "16480", "datum_id": {"dialogue_id": "79189ffb-eae3-469f-8e6b-f2de4b1d587e", "turn_index": 4}}
{"user_turn_0": "Does the restaurant take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "That 's fine . Book it for me at 10:30 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Emptia \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))))))))))", "idx": "16481", "datum_id": {"dialogue_id": "79189ffb-eae3-469f-8e6b-f2de4b1d587e", "turn_index": 5}}
{"user_turn_0": "what does the weather look like today", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cloudy", "user_turn_1": "Do me another favor . I 'd like to book an affordable restaurant on November the 6th at 6 PM", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.priceRange_? (?= (PriceRange.Low))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (November))) (Date.day_? (?= (Day.apply 6L)))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "16493", "datum_id": {"dialogue_id": "583742dd-8097-4390-8aa5-0a8a8720439e", "turn_index": 4}}
{"user_turn_0": "Do they have a car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Harborview \"))))))", "idx": "16513", "datum_id": {"dialogue_id": "a0f7bcbb-53da-447e-b5d2-cef2310ad719", "turn_index": 5}}
{"user_turn_0": "Three rooms , the type does n't matter", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is breakfast included ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "16525", "datum_id": {"dialogue_id": "d5fc24bf-3bb6-4de7-ae34-76c6281d461c", "turn_index": 6}}
{"user_turn_0": "Please change the departure day of my second trip to the 25th", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 3 object equals nextDepartureDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM price equals 125", "user_turn_1": "That one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (^((Constraint Hour)) refer)) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "16546", "datum_id": {"dialogue_id": "f174ea07-7775-4255-b7a5-028cb5c8c95e", "turn_index": 9}}
{"user_turn_0": "Ok . Can you give me directions to Starline Cabs by car ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Can you book me a ride ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint Taxi))) Path.apply \" object \") (lambda (^(Option (Constraint Taxi)) x0) (^(Taxi) Book$default$object))))", "idx": "16552", "datum_id": {"dialogue_id": "cf8af0de-56a9-4f11-94d8-8c31cfdaf1af", "turn_index": 4}}
{"user_turn_0": "How can I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "16556", "datum_id": {"dialogue_id": "8a383be5-f79b-40cd-842e-5e15eb5aafe7", "turn_index": 3}}
{"user_turn_0": "Book it for me please", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Can I check in on Monday instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Monday))))))", "idx": "16557", "datum_id": {"dialogue_id": "8a383be5-f79b-40cd-842e-5e15eb5aafe7", "turn_index": 4}}
{"user_turn_0": "I need two rooms please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "16559", "datum_id": {"dialogue_id": "8a383be5-f79b-40cd-842e-5e15eb5aafe7", "turn_index": 6}}
{"user_turn_0": "Hi my assistant , remind me to review the paycheck at 11 o'clock tomorrow", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "I 'd like to book a spot at a restaurant in Victoria at 10:30 . The restaurant needs to have a low price with at least three stars", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Victoria \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))))))) (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Restaurant.rating_? (?>= (someSalient (?= 3)))))))", "idx": "16562", "datum_id": {"dialogue_id": "1af9b068-bcda-442f-a3ff-08f02f969bed", "turn_index": 1}}
{"user_turn_0": "How much does that place cost", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 36", "user_turn_1": "That 's cool , book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Dingo \"))))))", "idx": "16567", "datum_id": {"dialogue_id": "1af9b068-bcda-442f-a3ff-08f02f969bed", "turn_index": 6}}
{"user_turn_0": "That 's cool , book that one", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Oh , alright . Change the time to tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (?= (Tomorrow))))))))", "idx": "16568", "datum_id": {"dialogue_id": "1af9b068-bcda-442f-a3ff-08f02f969bed", "turn_index": 7}}
{"user_turn_0": "Do they have a fitness center there ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "16579", "datum_id": {"dialogue_id": "5887957d-eb1a-4858-9c7b-9f6a12fcb709", "turn_index": 3}}
{"user_turn_0": "I need three rooms and the type does n't matter", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "First can you tell me if they have free cancellation", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "16581", "datum_id": {"dialogue_id": "5887957d-eb1a-4858-9c7b-9f6a12fcb709", "turn_index": 5}}
{"user_turn_0": "No , I will fly out of Liverpool", "agent_turn_0": "Root system prompt flight book object equals departureDateTime", "user_turn_1": "Before 7:30 Wednesday evening", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (List.exists_? (DateTime.time_? (?<= (someSalient (& (& (Time.hour_? (?= (Hour.apply 7L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))))))", "idx": "16595", "datum_id": {"dialogue_id": "3c3cff61-7704-4204-bfdb-184896cceed1", "turn_index": 2}}
{"user_turn_0": "Hello , create a reminder for the event today .", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Create a reminder for the event today", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "16613", "datum_id": {"dialogue_id": "98db6875-1bdd-4223-b8de-1a2ae62d715f", "turn_index": 1}}
{"user_turn_0": "Yes you are right", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM", "user_turn_1": "This one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "16616", "datum_id": {"dialogue_id": "98db6875-1bdd-4223-b8de-1a2ae62d715f", "turn_index": 4}}
{"user_turn_0": "Saturday please", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 4 minute equals 20 meridiem equals PM price equals 160", "user_turn_1": "This one looks fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "16633", "datum_id": {"dialogue_id": "bd260213-e642-403b-8183-b0049ee598dc", "turn_index": 6}}
{"user_turn_0": "Actually , I need two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel for free ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "16656", "datum_id": {"dialogue_id": "a3dbd4a7-2cea-4195-a992-867aac632293", "turn_index": 5}}
{"user_turn_0": "Please do", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Send a message to 07712350877", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (Message.recipients_? (Contact.phoneNumber_? (?= \" 07712350877 \"))))))", "idx": "16660", "datum_id": {"dialogue_id": "b6f36edd-0a08-459a-9d57-b83580eceacf", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i want to book a cheap hotel with car parking .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?= (PriceRange.Low))) (Hotel.hasParking_? (?= true)))))", "idx": "16675", "datum_id": {"dialogue_id": "6d568b02-ea06-4156-b662-95b4595ff277", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , please book a single room tomorrow with a low price range in Blackwall , and I 'd like to check out on Saturday", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" Blackwall \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday)))))))) (Hotel.priceRange_? (?= (PriceRange.Low)))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Single)))))))", "idx": "16697", "datum_id": {"dialogue_id": "484d078f-cb91-451d-a9e5-e144022f36c7", "turn_index": 0}}
{"user_turn_0": "Two rooms please", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "I 'd like to check in on Monday instead please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Monday))))))", "idx": "16700", "datum_id": {"dialogue_id": "484d078f-cb91-451d-a9e5-e144022f36c7", "turn_index": 3}}
{"user_turn_0": "I 'd like to check in on Monday instead please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they require a prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "16701", "datum_id": {"dialogue_id": "484d078f-cb91-451d-a9e5-e144022f36c7", "turn_index": 4}}
{"user_turn_0": "What 's my upcoming event location ?", "agent_turn_0": "Root system inform calendarEvent find focus equals location equals Flabbio", "user_turn_1": "How long will it take to arrive ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (Place.location_? (^((Constraint String)) refer)))))", "idx": "16707", "datum_id": {"dialogue_id": "c2f0aa9f-ea1b-47aa-a920-e57d37875737", "turn_index": 4}}
{"user_turn_0": "Tell me the address of the restaurant", "agent_turn_0": "Root system inform restaurant find focus equals address equals 60 Cross Street", "user_turn_1": "Book it for me today at 10", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" The Maple \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 10L)))))))))))", "idx": "16722", "datum_id": {"dialogue_id": "9c2e7fac-2406-4f8d-8f91-961ebbd2c8b3", "turn_index": 4}}
{"user_turn_0": "The destination is Belfast City and I plan to leave tomorrow", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "How about Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "16728", "datum_id": {"dialogue_id": "8423e657-7549-489f-a27d-a15bb689bee9", "turn_index": 2}}
{"user_turn_0": "I 'm in the mood for Thai food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Bandits", "user_turn_1": "Can you check if the restaurant has parking ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "16742", "datum_id": {"dialogue_id": "a491116b-2ff2-4087-bed1-2d5ccd4f4fa9", "turn_index": 4}}
{"user_turn_0": "Can you check if the restaurant has parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "It 's fine , let me book it for Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday))))))))))", "idx": "16743", "datum_id": {"dialogue_id": "a491116b-2ff2-4087-bed1-2d5ccd4f4fa9", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , here are the directiopns to your event at 7193 South Evergreen Road", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= \" Hammersmith \")) (Hotel.hotelName_? (?= \" River Park \")))))", "idx": "16762", "datum_id": {"dialogue_id": "bb213148-1597-43a8-9c5f-86da5add8ad5", "turn_index": 0}}
{"user_turn_0": "Hey , here are the directiopns to your event at 7193 South Evergreen Road", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "Sure , what days will you be staying ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))))))))", "idx": "16763", "datum_id": {"dialogue_id": "bb213148-1597-43a8-9c5f-86da5add8ad5", "turn_index": 1}}
{"user_turn_0": "Sure , what days will you be staying ?", "agent_turn_0": "Root system prompt hotel book object equals roomType rooms", "user_turn_1": "What kind of room do you need and how many ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.roomType_? (List.exists_? (?= (RoomType.Any))))) (Hotel.rooms_? (?= 1))))))", "idx": "16764", "datum_id": {"dialogue_id": "bb213148-1597-43a8-9c5f-86da5add8ad5", "turn_index": 2}}
{"user_turn_0": "What kind of room do you need and how many ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Ok , here is your booking information , shall I continue ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "16765", "datum_id": {"dialogue_id": "bb213148-1597-43a8-9c5f-86da5add8ad5", "turn_index": 3}}
{"user_turn_0": "Ok , here is your booking information , shall I continue ?", "agent_turn_0": "Root system inform hotel book Completed", "user_turn_1": "All done . I have booked the hotel for you", "tgt": "(plan (^(Navigation) Find :object (Navigation.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 21L)))))))))))", "idx": "16766", "datum_id": {"dialogue_id": "bb213148-1597-43a8-9c5f-86da5add8ad5", "turn_index": 4}}
{"user_turn_0": "What time does my event end which is on Thursday", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals endDateTime equals time equals hour equals 2 meridiem equals PM", "user_turn_1": "I need another favor . Can you set a reminder for me for that", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))", "idx": "16788", "datum_id": {"dialogue_id": "c7c1af30-727a-4225-b144-edcd101e960d", "turn_index": 4}}
{"user_turn_0": "Book a moderately priced hotel with a car park from Friday to Saturday", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "Something on Baker Street/", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.location_? (?= \" Baker Street \"))))))", "idx": "16791", "datum_id": {"dialogue_id": "24f8539c-c122-4440-a612-cbc495282c93", "turn_index": 2}}
{"user_turn_0": "I 'd rather have something with a four star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals The Watson price equals 170", "user_turn_1": "Do they have a car park ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "16794", "datum_id": {"dialogue_id": "24f8539c-c122-4440-a612-cbc495282c93", "turn_index": 5}}
{"user_turn_0": "Do they have a car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Blue Moon \"))))))", "idx": "16795", "datum_id": {"dialogue_id": "24f8539c-c122-4440-a612-cbc495282c93", "turn_index": 6}}
{"user_turn_0": "Three queen - sized beds", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel for free ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "16798", "datum_id": {"dialogue_id": "24f8539c-c122-4440-a612-cbc495282c93", "turn_index": 9}}
{"user_turn_0": "Can you tell me what cabin class is it ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "I 'd actually prefer the flight which departures 1:20 PM and I would like to have business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast City \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "16803", "datum_id": {"dialogue_id": "5ad00bed-9057-4eb0-86e9-94bd0011cc43", "turn_index": 3}}
{"user_turn_0": "Can I pay with credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Cool , book it for 4 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 4L))))))))))", "idx": "16809", "datum_id": {"dialogue_id": "b3a88e9c-4849-4f17-9702-b7ea091ddaf3", "turn_index": 3}}
{"user_turn_0": "what 's the airline", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "Fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "16822", "datum_id": {"dialogue_id": "a03e2a0a-b3d2-45b4-af6f-15aef3ffd9f2", "turn_index": 4}}
{"user_turn_0": "No , I 'll be going to Lisbon on Thursday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 5 object equals nextDepartureDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM price equals 155", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "16824", "datum_id": {"dialogue_id": "a03e2a0a-b3d2-45b4-af6f-15aef3ffd9f2", "turn_index": 6}}
{"user_turn_0": "No , chance the departure date for my second trip to Saturday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 3 object equals nextDepartureDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM price equals 156", "user_turn_1": "Okay", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "16826", "datum_id": {"dialogue_id": "a03e2a0a-b3d2-45b4-af6f-15aef3ffd9f2", "turn_index": 8}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , what time does my flight to Brussel arrive ?", "tgt": "(plan (^(Flight) Find :focus (Flight.arrivalDateTime_? (^(DateTime) always)) :object (& (Flight.flightNumber_? (?= \" BA350 \")) (Flight.destination_? (Place.location_? (?= \" Brussel \"))))))", "idx": "16828", "datum_id": {"dialogue_id": "c61adca9-a9d4-4af5-bb74-845b261f9c10", "turn_index": 0}}
{"user_turn_0": "You do n't have to ? Because I will head to Madrid on Sunday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 4 object equals nextDepartureDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM price equals 124", "user_turn_1": "It looks fine to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "16842", "datum_id": {"dialogue_id": "b74a43c7-4909-40a1-b9df-28c6ecce5169", "turn_index": 4}}
{"user_turn_0": "You know , let me change the departure date for my first trip to today", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM price equals 155", "user_turn_1": "It 's fine , please book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "16844", "datum_id": {"dialogue_id": "b74a43c7-4909-40a1-b9df-28c6ecce5169", "turn_index": 6}}
{"user_turn_0": "What time does Capstone Conference on the 23rd start ?", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals startDateTime equals time equals hour equals 2", "user_turn_1": "I need another favor . Set a reminder for the event", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (^(CalendarEvent) always))))))", "idx": "16868", "datum_id": {"dialogue_id": "dca8325c-c662-47d8-bedf-f87e4a123100", "turn_index": 2}}
{"user_turn_0": "I 'm leaving on Saturday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 2 object equals nextDepartureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM price equals 134", "user_turn_1": "I 'll take it !", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "16885", "datum_id": {"dialogue_id": "4d4c9992-ec84-4091-b28a-ccfbd8e36bbd", "turn_index": 4}}
{"user_turn_0": "Is there a missed call ?", "agent_turn_0": "Root system inform phoneCall checkExistence NotExisted", "user_turn_1": "Thanks for the help . Deliver a hi message", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (Message.textContent_? (?= \" Hi \")))))", "idx": "16891", "datum_id": {"dialogue_id": "13be8b67-ef05-4a1a-ac6e-262ba7f5f58d", "turn_index": 4}}
{"user_turn_0": "Find a different place that has five stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals The Hot Springs price equals 130", "user_turn_1": "Is there a fitness center there", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasFitness_? (^(Boolean) always)))))", "idx": "16895", "datum_id": {"dialogue_id": "8331de0e-c63d-4ae0-9895-323a16336375", "turn_index": 3}}
{"user_turn_0": "Is there a fitness center there", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Get me a room there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Harborview \"))))))", "idx": "16896", "datum_id": {"dialogue_id": "8331de0e-c63d-4ae0-9895-323a16336375", "turn_index": 4}}
{"user_turn_0": "The event will start at 9 AM on today", "agent_turn_0": "Root system offer calendarEvent create inform calendarEvent find Conflicted object equals eventName equals standup discussion", "user_turn_1": "Can you change the start time to 9 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Time)) Path.apply \" object.dateTimeRange.startDateTime.time \") (lambda (^(Constraint Time) x0) (Time.hour_? (?= (Hour.apply 9L))))))", "idx": "16902", "datum_id": {"dialogue_id": "868ca727-c34a-4511-a802-22b53ec65dd2", "turn_index": 2}}
{"user_turn_0": "Is breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "That 's fine , book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "16943", "datum_id": {"dialogue_id": "bef4cd6e-22c1-4b10-a322-75874a666150", "turn_index": 3}}
{"user_turn_0": "Can I have 2 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "16947", "datum_id": {"dialogue_id": "bef4cd6e-22c1-4b10-a322-75874a666150", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , send a message containing my event on the 12th to my parents .", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 12L))))))))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Parents))))))))", "idx": "16949", "datum_id": {"dialogue_id": "515d742c-cd70-4b32-bffb-2c6e8221e4c6", "turn_index": 0}}
{"user_turn_0": "How is Nottingham 's weather", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Sunny", "user_turn_1": "Schedule an event called forest tour starting now and ending at 6 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object \") (lambda (^(Constraint CalendarEvent) x0) (& (CalendarEvent.eventName_? (?= \" forest tour \")) (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Now)))) (DateTimeRange.endDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "16963", "datum_id": {"dialogue_id": "d9c71095-8e83-4748-8157-bb8493d7ac01", "turn_index": 4}}
{"user_turn_0": "Hey , i want to book a round trip flight from London to Edinburgh . The departure date is August 10th .", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM price equals 124", "user_turn_1": "I actually prefer the flight which departs at 1 PM and I would like to have economy class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" London \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "16977", "datum_id": {"dialogue_id": "6c0e3fbe-1e1e-4cb8-8ff0-63e3b1b04761", "turn_index": 1}}
{"user_turn_0": "Let me leave from Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM price equals 155", "user_turn_1": "That 'll work , I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "17005", "datum_id": {"dialogue_id": "3b306891-9c47-4b5b-8d29-ee14134350de", "turn_index": 2}}
{"user_turn_0": "Does the hotel have fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17042", "datum_id": {"dialogue_id": "0a4b0095-c1a7-4a52-89c2-2a1a704e4745", "turn_index": 4}}
{"user_turn_0": "Two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking support free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "17045", "datum_id": {"dialogue_id": "0a4b0095-c1a7-4a52-89c2-2a1a704e4745", "turn_index": 7}}
{"user_turn_0": "Two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "17052", "datum_id": {"dialogue_id": "c9535d6c-42a0-4318-954a-93f42790c479", "turn_index": 5}}
{"user_turn_0": "Hi assistant , i would like to book a taxi from Westgate House to 24 Empire Way for 4 people", "agent_turn_0": "Root system prompt taxi book object equals serviceType inform taxi find object equals serviceType equals listElementOne Saloon listElementTwo MPV listElementThree Executive", "user_turn_1": "I do n't care as long as it fits 4 people and 2 luggage", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Taxi)) Path.apply \" object \") (lambda (^(Constraint Taxi) x0) (& (& x0 (Taxi.serviceType_? (List.exists_? (?= (ServiceType.Any))))) (Taxi.luggages_? (?= 2))))))", "idx": "17055", "datum_id": {"dialogue_id": "18053bcb-73fc-4af6-a95f-a20bf36af96d", "turn_index": 1}}
{"user_turn_0": "How can I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17077", "datum_id": {"dialogue_id": "0b2e5d89-14fc-4d08-96d1-4fd11d796436", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , how long does it take to get from my current location to my scheduled event for this afternoon ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Afternoon))))))))))", "idx": "17091", "datum_id": {"dialogue_id": "21373aec-757c-4163-bf63-0c708d2b21a0", "turn_index": 0}}
{"user_turn_0": "Hi assistant , how long does it take to get from my current location to my scheduled event for this afternoon ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 10 object equals destination equals location equals 60 Cross Street", "user_turn_1": "how long will it tae to get from the Angel Central to 207 Upper Street by biking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Navigation)) Path.apply \" object \") (lambda (^(Constraint Navigation) x0) (& (& (Navigation.source_? (Place.location_? (?= \" Angel Central \"))) (Navigation.destination_? (Place.location_? (?= \" 207 Upper Street \")))) (Navigation.transportationMode_? (?= (TransportationMode.Biking)))))))", "idx": "17092", "datum_id": {"dialogue_id": "21373aec-757c-4163-bf63-0c708d2b21a0", "turn_index": 1}}
{"user_turn_0": "From London Tomorrow", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 11 minute equals 40 meridiem equals AM", "user_turn_1": "OK , can you book me a ticket for one passenger", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.destination_? (Place.location_? (?= \" Paris \"))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 1))))))", "idx": "17098", "datum_id": {"dialogue_id": "e6fbd2b2-6c80-4e2c-bc11-6b5d35ae2bfd", "turn_index": 2}}
{"user_turn_0": "Please book 2 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel the booking for free ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "17107", "datum_id": {"dialogue_id": "5b0fc65c-86e4-4187-ae68-0860b67490c1", "turn_index": 6}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 3 object equals returnDateTime equals time equals hour equals 11 minute equals 45 meridiem equals AM price equals 124", "user_turn_1": "I think I 'd rather have the one that 's at 2:00 in the afternoon", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "17115", "datum_id": {"dialogue_id": "bd4ea240-c6a5-4e0e-ae1b-cde6f5a4e6f9", "turn_index": 6}}
{"user_turn_0": "Hi there , place a call to 07773736049 .", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Create a message that says do we need bananas and send it", "tgt": "(plan (^(Message) Create :object (Message.textContent_? (?= \" do we need bananas \"))))", "idx": "17133", "datum_id": {"dialogue_id": "f9704afa-2e8c-4dc0-854c-5c8ba621f617", "turn_index": 1}}
{"user_turn_0": "Yes send it", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Please tell me how far away is 54 Islington Park Road", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (Navigation.destination_? (Place.location_? (?= \" 54 Islington Park Road \")))))", "idx": "17136", "datum_id": {"dialogue_id": "f9704afa-2e8c-4dc0-854c-5c8ba621f617", "turn_index": 4}}
{"user_turn_0": "Of course send it", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Can you please send message to 07917978313", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (Message.recipients_? (Contact.phoneNumber_? (?= \" 07917978313 \"))))))", "idx": "17146", "datum_id": {"dialogue_id": "49c3221e-57df-4148-9d6e-6b12e52b036e", "turn_index": 4}}
{"user_turn_0": "No , London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM price equals 130", "user_turn_1": "Okay , book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "17160", "datum_id": {"dialogue_id": "7596c8a7-ad33-4bbf-8ecf-01e7c6769b52", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , schedule a meeting for tomorrow with Mr. May.", "tgt": "(plan (^(CalendarEvent) Create :object (& (& (CalendarEvent.eventName_? (?= \" meeting \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))))) (CalendarEvent.attendees_? (Contact.person_? (& (Person.name_? (?= \" May \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "17168", "datum_id": {"dialogue_id": "8007eccb-b6f0-4164-ba58-f1f24b75b208", "turn_index": 0}}
{"user_turn_0": "Is it a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "That 's fine . Book this flight for three passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.source_? (Place.location_? (?= \" London \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 3))))))", "idx": "17176", "datum_id": {"dialogue_id": "ca18206d-a91d-4514-bc16-86f5d5500bc0", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , is there a hotel name or a specific area that you have in mind ?", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.rating_? (?>= (someSalient (?= 3)))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Single)))))))", "idx": "17184", "datum_id": {"dialogue_id": "f57f3249-80a3-4365-bd24-51b728d101d5", "turn_index": 0}}
{"user_turn_0": "Hello assistant , is there a hotel name or a specific area that you have in mind ?", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "Book me a single room in a hotel that has a rating of at least three stars", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.location_? (?= \" Middle Park \"))) (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "17185", "datum_id": {"dialogue_id": "f57f3249-80a3-4365-bd24-51b728d101d5", "turn_index": 1}}
{"user_turn_0": "Does the cost include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17187", "datum_id": {"dialogue_id": "f57f3249-80a3-4365-bd24-51b728d101d5", "turn_index": 3}}
{"user_turn_0": "I want to check in on September 15th actually", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is free cancellation supported ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "17191", "datum_id": {"dialogue_id": "f57f3249-80a3-4365-bd24-51b728d101d5", "turn_index": 7}}
{"user_turn_0": "Friday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM price equals 166", "user_turn_1": "This one looks ok", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "17197", "datum_id": {"dialogue_id": "8643b2b2-f95c-42d2-92fd-f2ce39761770", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , schedule Dry - Cleaning Pick - Up with Penelope at 11 AM at Unwind Ruled on the calendar", "tgt": "(plan (^(CalendarEvent) Create :object (& (& (& (CalendarEvent.eventName_? (?= \" Dry-Cleaning Pick-Up \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (meridiem_? (?= (Meridiem.AM)))))))) (CalendarEvent.attendees_? (Contact.person_? (Person.name_? (?= \" Penelope \"))))) (CalendarEvent.location_? (?= \" Unwind Ruled \")))))", "idx": "17204", "datum_id": {"dialogue_id": "d1624a91-2351-4ed0-999e-51a4650b030a", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , get rid of the calendar item at 2:30 PM on February 18th called Mobile car - wash .", "tgt": "(plan (^(CalendarEvent) Delete :object (& (CalendarEvent.eventName_? (?= \" Mobile car-wash \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (& (Date.month_? (?= (February))) (Date.day_? (?= (Day.apply 18L))))) (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "17227", "datum_id": {"dialogue_id": "c2ba0b04-3298-4d5d-a548-11a81c80f52b", "turn_index": 0}}
{"user_turn_0": "Is breakfast included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Go ahead and book", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17246", "datum_id": {"dialogue_id": "0eb426fc-dd33-4a9f-a52a-b1349d780876", "turn_index": 3}}
{"user_turn_0": "Look for one in Greenford", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Gogol", "user_turn_1": "Show me places that serve pizza", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.foodType_? (?= (FoodType.Pizza)))))))", "idx": "17253", "datum_id": {"dialogue_id": "840dbd89-12fa-4d86-806a-414206d3144e", "turn_index": 2}}
{"user_turn_0": "Show me places that serve pizza", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capricorn", "user_turn_1": "Looks good reserve me a table there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Gogol \"))))))", "idx": "17254", "datum_id": {"dialogue_id": "840dbd89-12fa-4d86-806a-414206d3144e", "turn_index": 3}}
{"user_turn_0": "I prefer another hotel with at least a one star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Diva price equals 119", "user_turn_1": "Is breakfast included in that price ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "17273", "datum_id": {"dialogue_id": "29e9cb82-5ade-4bca-8226-7dfdc9d2b360", "turn_index": 3}}
{"user_turn_0": "I prefer another low price hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Club Quarters price equals 124", "user_turn_1": "Is breakfast included in the price ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "17275", "datum_id": {"dialogue_id": "29e9cb82-5ade-4bca-8226-7dfdc9d2b360", "turn_index": 5}}
{"user_turn_0": "Is breakfast included in the price ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Parallel Tower \"))))))", "idx": "17276", "datum_id": {"dialogue_id": "29e9cb82-5ade-4bca-8226-7dfdc9d2b360", "turn_index": 6}}
{"user_turn_0": "How about the Bluebird Guesthouse hotel ? Is that available ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does this booking support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "17281", "datum_id": {"dialogue_id": "29e9cb82-5ade-4bca-8226-7dfdc9d2b360", "turn_index": 11}}
{"user_turn_0": "On Wednesday", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM price equals 150", "user_turn_1": "Sounds good . Please book that flight for one passenger", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.destination_? (Place.location_? (?= \" Belfast City \")))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 1))))))", "idx": "17292", "datum_id": {"dialogue_id": "6aa2d774-1959-4337-be7b-1446cdbafc8e", "turn_index": 4}}
{"user_turn_0": "Actually , I need the departure date of the second journey to be the 17th", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 4 object equals nextDepartureDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM price equals 201", "user_turn_1": "Looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "17297", "datum_id": {"dialogue_id": "6aa2d774-1959-4337-be7b-1446cdbafc8e", "turn_index": 9}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , where will you be departing from ?", "tgt": "(plan (^(Flight) Book :object (& (Flight.destination_? (Place.location_? (?= \" Belfast \"))) (Flight.tripType_? (?= (TripType.roundTrip))))))", "idx": "17337", "datum_id": {"dialogue_id": "294ec6b1-53b0-448e-a5f4-ce112fedf2c2", "turn_index": 0}}
{"user_turn_0": "Hello assistant , where will you be departing from ?", "agent_turn_0": "Root system prompt flight book object equals source", "user_turn_1": "What day will you be leaving ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.source_? (Place.location_? (?= \" London Heathrow \")))))))", "idx": "17338", "datum_id": {"dialogue_id": "294ec6b1-53b0-448e-a5f4-ce112fedf2c2", "turn_index": 1}}
{"user_turn_0": "Let 's book this thing", "agent_turn_0": "Root systen inform restaurant book Completed", "user_turn_1": "Do me another favor . Send that very same booking to my old man", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Father))))) (Message.textContent_? (?= (^(String Restaurant) reference (^(Restaurant) always)))))))", "idx": "17347", "datum_id": {"dialogue_id": "c2d459d9-38c0-4efd-a95c-74a9f1df95f6", "turn_index": 3}}
{"user_turn_0": "I prefer another hotel with five stars rating please", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Moody Moon price equals 150", "user_turn_1": "Does the hotel have laundry ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.laundry_? (^(Boolean) always)))))", "idx": "17363", "datum_id": {"dialogue_id": "3cb4c1f6-f2a2-4647-82e5-b1d5a4440105", "turn_index": 4}}
{"user_turn_0": "Does the hotel have laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Farmhouse Inn \"))))))", "idx": "17364", "datum_id": {"dialogue_id": "3cb4c1f6-f2a2-4647-82e5-b1d5a4440105", "turn_index": 5}}
{"user_turn_0": "Windermere", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 1 minute equals 40 meridiem equals PM", "user_turn_1": "I prefer the one at 4:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "17373", "datum_id": {"dialogue_id": "6311b0eb-af1e-49f2-8047-3b8a93812c04", "turn_index": 3}}
{"user_turn_0": "I would like the flight that leaves at 4:50 PM", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 3 meridiem equals PM price equals 210", "user_turn_1": "That works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "17382", "datum_id": {"dialogue_id": "6384f02b-9a78-4542-81e3-3b41997fd098", "turn_index": 2}}
{"user_turn_0": "I 'm coming back on Sunday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM", "user_turn_1": "I 'll take that one , thank you", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "17395", "datum_id": {"dialogue_id": "07c59fc0-6f35-4160-95a0-01acbf72ea10", "turn_index": 5}}
{"user_turn_0": "Remind me to review the paycheck at 5:30 PM", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Yes Today", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.atDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.date_? (?= (Today)))))))", "idx": "17404", "datum_id": {"dialogue_id": "366c8e59-7dd7-42ba-b52f-c604b68dd241", "turn_index": 2}}
{"user_turn_0": "I want a different one , that is not too expensive", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Dream Connect price equals 178", "user_turn_1": "Does it have a private bathroom ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.privateBath_? (^(Boolean) always)))))", "idx": "17410", "datum_id": {"dialogue_id": "11603e85-fc7d-4b23-b683-576a88142c7d", "turn_index": 3}}
{"user_turn_0": "Does it have a private bathroom ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Ace Hotel \"))))))", "idx": "17411", "datum_id": {"dialogue_id": "11603e85-fc7d-4b23-b683-576a88142c7d", "turn_index": 4}}
{"user_turn_0": "Yes on Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM price equals 127", "user_turn_1": "This one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "17421", "datum_id": {"dialogue_id": "4bca171f-add3-401e-9b03-7a465ef50a4d", "turn_index": 5}}
{"user_turn_0": "Hello assistant , is there an event in Soho scheduled", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Then make one", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.attendees_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Father)))))))", "idx": "17424", "datum_id": {"dialogue_id": "f731f2af-20c4-442c-983b-0999298efb08", "turn_index": 1}}
{"user_turn_0": "Is this flight a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Book two passengers for this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast City \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 2))))))", "idx": "17452", "datum_id": {"dialogue_id": "c0fc95be-0afb-4fa5-a3bc-1687a81c5713", "turn_index": 3}}
{"user_turn_0": "Also thank you ! Could you send it to Dan please ?", "agent_turn_0": "Root system prompt message create object equals recipients equals person equals nameHint", "user_turn_1": "Send it to Dan Martin", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Person)) Path.apply \" object.recipients.person \") (lambda (^(Constraint Person) x0) (& x0 (Person.nameHint_? (?= \" Martin \"))))))", "idx": "17458", "datum_id": {"dialogue_id": "a74f0bb2-edd0-4db7-a6d3-3eb95ee26e71", "turn_index": 2}}
{"user_turn_0": "What is the weather like today ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cloudy", "user_turn_1": "Send the event tomorrow to Hannah", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))))))) (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Hannah \")))))))", "idx": "17469", "datum_id": {"dialogue_id": "76d4fa6a-4b36-4dc6-9321-9cd9e417908c", "turn_index": 3}}
{"user_turn_0": "June 14th", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Can you also make one for this morning 's event ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.atDateTime \") (lambda (^(Constraint DateTime) x0) (?= (^(DateTime CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Morning))))))))))", "idx": "17479", "datum_id": {"dialogue_id": "324d5f31-7c23-466e-ba7d-867dc5749b57", "turn_index": 3}}
{"user_turn_0": "Give me a different restaurant that has outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dim Summit", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Floq \"))))))", "idx": "17489", "datum_id": {"dialogue_id": "d2c21fca-6595-4744-8b20-4a285ded46af", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , i would like to book flight goin to Belfast that will take EasyJey Airways .", "tgt": "(plan (^(Flight) Book :object (& (Flight.destination_? (Place.location_? (?= \" Belfast \"))) (Flight.airLine_? (?= \" EasyJet \")))))", "idx": "17492", "datum_id": {"dialogue_id": "36eca25d-168b-473b-8e2f-453fbc151cfa", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , book me a one way flight from Edinburgh departing tomorrow for one passenger please", "tgt": "(plan (^(Flight) Book :object (& (& (& (Flight.destination_? (Place.location_? (?= \" Edinburgh \"))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow)))))) (Flight.tripType_? (?= (TripType.oneWay)))) (Flight.passengers_? (?= 1)))))", "idx": "17500", "datum_id": {"dialogue_id": "2ccf0e60-453d-4315-b72b-39d9d7660091", "turn_index": 0}}
{"user_turn_0": "From London Heathrow", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 3 meridiem equals PM price equals 156", "user_turn_1": "Ok , I want to book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "17502", "datum_id": {"dialogue_id": "2ccf0e60-453d-4315-b72b-39d9d7660091", "turn_index": 2}}
{"user_turn_0": "Which serve German food ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Juniper Cloud", "user_turn_1": "OK . Book it for November 25th at 10:30 AM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" The Boiling Fence \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (November))) (Date.day_? (?= (Day.apply 25L)))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM))))))))))))", "idx": "17508", "datum_id": {"dialogue_id": "bda47010-c842-4cbf-9f37-5981586d55a5", "turn_index": 3}}
{"user_turn_0": "I will depart from Birmingham", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM", "user_turn_1": "I prefer the one at 4:20 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "17525", "datum_id": {"dialogue_id": "65b9ada2-12f3-4cad-8390-1029b5ba66d4", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i need a business class flight for two passengers from Liverppol .", "tgt": "(plan (^(Flight) Book :object (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.source_? (Place.location_? (?= \" Liverpool \")))) (Flight.passengers_? (?= 2)))))", "idx": "17536", "datum_id": {"dialogue_id": "f0aba88e-70b9-4eaa-8fa1-c9dcc129041a", "turn_index": 0}}
{"user_turn_0": "It 's Belfast", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "Try Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.departureDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Tuesday)))))", "idx": "17539", "datum_id": {"dialogue_id": "f0aba88e-70b9-4eaa-8fa1-c9dcc129041a", "turn_index": 3}}
{"user_turn_0": "Try Tuesday", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals listElementOne time equals hour equals 2 minute equals 40 meridiem equals PM listElementTwo time equals hour equals 4 minute equals 45 meridiem equals PM", "user_turn_1": "I 'll take the first one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "17540", "datum_id": {"dialogue_id": "f0aba88e-70b9-4eaa-8fa1-c9dcc129041a", "turn_index": 4}}
{"user_turn_0": "Does it have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Okay book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17546", "datum_id": {"dialogue_id": "d946f70b-5adb-4558-b7ed-bcf5b64cf4a9", "turn_index": 3}}
{"user_turn_0": "Hello , tell me how far away is from 61 Hill Street to 415 Park Lane", "agent_turn_0": "Root system inform navigation find focus equals distance equals number equals 5", "user_turn_1": "Thanks for the help . I want to book restaurant in Leicester Square with car park . The booking time is on the 4th at 4 PM", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.location_? (?= \" Leicester Square \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 4L))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))) (Restaurant.hasParking_? (?= true)))))", "idx": "17551", "datum_id": {"dialogue_id": "debfa5e5-5799-4c20-8be8-d4875253c89c", "turn_index": 1}}
{"user_turn_0": "It does n't matter as long as the rating is at least three stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Boiling Fence", "user_turn_1": "What is the average cost per person ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "17553", "datum_id": {"dialogue_id": "debfa5e5-5799-4c20-8be8-d4875253c89c", "turn_index": 3}}
{"user_turn_0": "What is the average cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 32", "user_turn_1": "That 's fine . Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (^((Constraint String)) refer))))))", "idx": "17554", "datum_id": {"dialogue_id": "debfa5e5-5799-4c20-8be8-d4875253c89c", "turn_index": 4}}
{"user_turn_0": "Hi my assistant , reserve a cab ride to location of my next calendar .", "agent_turn_0": "Root system prompt taxi book object equals destination inform calendarEvent find notExisted", "user_turn_1": "I will be going to 66 Park avenue", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Place)) Path.apply \" object.destination \") (lambda (^(Constraint Place) x0) (Place.location_? (?= \" 66 Park Avenue \")))))", "idx": "17559", "datum_id": {"dialogue_id": "265935a3-2334-438b-a180-43f5b654cf93", "turn_index": 1}}
{"user_turn_0": "7 PM", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "Do me another favor . Have my next event sent to Una", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))) (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Una \")))))))", "idx": "17567", "datum_id": {"dialogue_id": "92358bff-f701-4a9e-8424-b93c0f0bf22c", "turn_index": 4}}
{"user_turn_0": "I 'll fly out of London Heathrow", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I like the one that departs at 4:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "17570", "datum_id": {"dialogue_id": "7c2900a0-4f5a-4a89-952f-5045a57a1fd2", "turn_index": 2}}
{"user_turn_0": "Is this a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "I 'd rather have a flight that departs at 1:45 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "17589", "datum_id": {"dialogue_id": "a897c994-3cbe-4dda-96b2-8932b29ff1d1", "turn_index": 4}}
{"user_turn_0": "Let me do something else please , with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Beef Easy", "user_turn_1": "Sound good . I 'll take it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Dimple's \"))))))", "idx": "17602", "datum_id": {"dialogue_id": "1a15606e-dc55-400e-9653-7e021b2ec899", "turn_index": 3}}
{"user_turn_0": "None of them looks good . How about restaurants that serve German Food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals La Zilla", "user_turn_1": "Does the restaurant have parking ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "17611", "datum_id": {"dialogue_id": "447d9d24-8bbf-4876-9e8f-9f573361dd41", "turn_index": 5}}
{"user_turn_0": "Does the restaurant have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "That 's fine . Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Chipotle Grill \"))))))", "idx": "17612", "datum_id": {"dialogue_id": "447d9d24-8bbf-4876-9e8f-9f573361dd41", "turn_index": 6}}
{"user_turn_0": "Hi there , if I take public transportation , how far away is it from Haywood Way to The Bull Islington ?", "agent_turn_0": "Root system inform navigation find focus equals distance equals number equals 7", "user_turn_1": "Also okay thank you . Can you book me a hotel that 's cheap and has four stars please", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?= (PriceRange.Low))) (Hotel.rating_? (?= 4)))))", "idx": "17616", "datum_id": {"dialogue_id": "e830b7fc-b65f-4f28-828d-4fc29e4d17b7", "turn_index": 1}}
{"user_turn_0": "Is there free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Great , book me that one !", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17619", "datum_id": {"dialogue_id": "e830b7fc-b65f-4f28-828d-4fc29e4d17b7", "turn_index": 4}}
{"user_turn_0": "Hmmm , no hold on . Can I have 2 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait a second . If I want to cancel , do I have to pay an extra fee ? Or is it free ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "17623", "datum_id": {"dialogue_id": "e830b7fc-b65f-4f28-828d-4fc29e4d17b7", "turn_index": 8}}
{"user_turn_0": "Okay let me think . Yeah , I need to change the check in date to Monday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "No no no , I need to change the check in date to Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.dateTimeRange.startDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Tuesday)))))", "idx": "17625", "datum_id": {"dialogue_id": "e830b7fc-b65f-4f28-828d-4fc29e4d17b7", "turn_index": 10}}
{"user_turn_0": "Actually , I need a shared ride", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals Angel Central destination equals location equals Haywood Way", "user_turn_1": "That taxi has been booked for you", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "17632", "datum_id": {"dialogue_id": "8b88f63b-4add-4b05-bba3-12817389e7e3", "turn_index": 5}}
{"user_turn_0": "Table for 2 people , please", "agent_turn_0": "Root system prompt restaurant book object equals atDateTime", "user_turn_1": "6 o'clock on January 6th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (January))) (Date.day_? (?= (Day.apply 6L)))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 6L)))))))))))", "idx": "17636", "datum_id": {"dialogue_id": "e1ba7f9d-26c5-4e1f-8bbd-c7bfb15cec0e", "turn_index": 3}}
{"user_turn_0": "Yeah go right on ahead", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Would you send off my train schedule from Belfast to Bradford to Hannah", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (& (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Hannah \")))) (Message.textContent_? (?= (^(String Train) reference (& (Train.source_? (Place.location_? (?= \" Belfast \"))) (Train.destination_? (Place.location_? (?= \" Bradford \")))))))))))", "idx": "17650", "datum_id": {"dialogue_id": "177290a6-f1dc-4c8b-8e33-b7cc905495df", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , can you book a hotel that is n't too expensive with one room in the Queen 's Park . Book the check - in today and check - out on the 19th", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" Queen's Park \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 19L)))))))) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Single)))))))", "idx": "17653", "datum_id": {"dialogue_id": "39302e94-9733-4cb4-863d-1efd3c30c79b", "turn_index": 0}}
{"user_turn_0": "Find another hotel with four stars please", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Palm Bliss price equals 155", "user_turn_1": "Do they have laundry service ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.laundry_? (^(Boolean) always)))))", "idx": "17656", "datum_id": {"dialogue_id": "39302e94-9733-4cb4-863d-1efd3c30c79b", "turn_index": 3}}
{"user_turn_0": "Do they have laundry service ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Cool . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Hyatt \"))))))", "idx": "17657", "datum_id": {"dialogue_id": "39302e94-9733-4cb4-863d-1efd3c30c79b", "turn_index": 4}}
{"user_turn_0": "Just two", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually , change the check - out date to Friday instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Friday))))))", "idx": "17659", "datum_id": {"dialogue_id": "39302e94-9733-4cb4-863d-1efd3c30c79b", "turn_index": 6}}
{"user_turn_0": "Actually , change the check - out date to Friday instead", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to pay before hand ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "17660", "datum_id": {"dialogue_id": "39302e94-9733-4cb4-863d-1efd3c30c79b", "turn_index": 7}}
{"user_turn_0": "I need one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is breakfast also included ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "17674", "datum_id": {"dialogue_id": "18823b81-d34d-498e-a140-2559bd9b3745", "turn_index": 7}}
{"user_turn_0": "Hi assistant , book a 5 star hotel with parking .", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "Needs to be inexpensive and located in Paddington", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.location_? (?= \" Paddington \"))) (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "17677", "datum_id": {"dialogue_id": "dffac267-0aec-4c31-883d-890ef73ed00e", "turn_index": 1}}
{"user_turn_0": "Are there private bathrooms at the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Great . Please book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17679", "datum_id": {"dialogue_id": "dffac267-0aec-4c31-883d-890ef73ed00e", "turn_index": 3}}
{"user_turn_0": "Book me two single rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually change the check out date to the 27th instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 27L))))))", "idx": "17683", "datum_id": {"dialogue_id": "dffac267-0aec-4c31-883d-890ef73ed00e", "turn_index": 7}}
{"user_turn_0": "I 'll be departing from London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM price equals 138", "user_turn_1": "I 'd prefer the 1:45 PM departure please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "17688", "datum_id": {"dialogue_id": "0f1ff735-7f83-4a0f-af97-42be592d2bcc", "turn_index": 3}}
{"user_turn_0": "And how can I get there by bike ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Ok , how can I get from 7193 South Evergreen Road to The Body Shop in Upper Street", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Navigation)) Path.apply \" object \") (lambda (^(Constraint Navigation) x0) (& (Navigation.source_? (Place.location_? (?= \" 7193 South Evergreen Road \"))) (Navigation.destination_? (Place.location_? (?= \" The Body Shop in Upper Street \")))))))", "idx": "17694", "datum_id": {"dialogue_id": "72b9c027-fc03-44bc-af52-55169d1e3503", "turn_index": 3}}
{"user_turn_0": "Does the hotel have fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17703", "datum_id": {"dialogue_id": "aad6d403-7a73-458d-bf04-10544f2de2c1", "turn_index": 3}}
{"user_turn_0": "I have no preference but please make sure it fits one luggage", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals The Body Shop in Upper Street", "user_turn_1": "No , please revise the pick up point to b 76 Windsor Road", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Taxi)) Path.apply \" object \") (lambda (^(Constraint Taxi) x0) (& x0 (Taxi.source_? (Place.location_? (?= \" 76 Windsor Road \")))))))", "idx": "17708", "datum_id": {"dialogue_id": "1a0dc624-bf69-4ea5-8bfc-60b509bc1317", "turn_index": 2}}
{"user_turn_0": "No , please revise the pick up point to b 76 Windsor Road", "agent_turn_0": "Root system offer taxi book", "user_turn_1": "Please tell me how long that trip will be", "tgt": "(plan (^(Taxi) Find :focus (Taxi.travelTime_? (^(AppleDuration) always)) :object (?= (^(Taxi Dynamic) reference (^(Dynamic) always)))))", "idx": "17709", "datum_id": {"dialogue_id": "1a0dc624-bf69-4ea5-8bfc-60b509bc1317", "turn_index": 3}}
{"user_turn_0": "Does it have laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17724", "datum_id": {"dialogue_id": "049ad3e1-f5f9-4f57-8eae-f359289f5a7c", "turn_index": 3}}
{"user_turn_0": "I just need one", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Move the check in to Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "17728", "datum_id": {"dialogue_id": "049ad3e1-f5f9-4f57-8eae-f359289f5a7c", "turn_index": 7}}
{"user_turn_0": "Move the check in to Tuesday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel for free ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "17729", "datum_id": {"dialogue_id": "049ad3e1-f5f9-4f57-8eae-f359289f5a7c", "turn_index": 8}}
{"user_turn_0": "This one starts at 3 PM and ends at 8 PM", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "When does the 5 o'clock train to Paddigton get here ?", "tgt": "(plan (^(Train) Find :focus (Train.arrivalDateTime_? (^(DateTime) always)) :object (& (Train.destination_? (Place.location_? (?= \" Paddington \"))) (Train.departureDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 5L))))))))", "idx": "17733", "datum_id": {"dialogue_id": "bd8b4eb2-c0cf-40bf-b571-dfc3b726ab1b", "turn_index": 2}}
{"user_turn_0": "Find another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone", "user_turn_1": "Do they have outdoor seating ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "17748", "datum_id": {"dialogue_id": "96cec9b1-c5bd-4514-8eea-4cfafb0d6c2f", "turn_index": 7}}
{"user_turn_0": "Do they have outdoor seating ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals False", "user_turn_1": "That 's okay , book it anyway", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Stazione restaurant \"))))))", "idx": "17749", "datum_id": {"dialogue_id": "96cec9b1-c5bd-4514-8eea-4cfafb0d6c2f", "turn_index": 8}}
{"user_turn_0": "Book a table for 4", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Ok , change the time to 2:00", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (Time.hour_? (?= (Hour.apply 2L))))))", "idx": "17752", "datum_id": {"dialogue_id": "96cec9b1-c5bd-4514-8eea-4cfafb0d6c2f", "turn_index": 11}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , 5 miles .", "tgt": "(plan (^(CalendarEvent) Delete :object (& (CalendarEvent.eventName_? (?= \" Allstar Conference \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM))))))))))", "idx": "17770", "datum_id": {"dialogue_id": "888aa627-edb1-405a-93a1-b7cfc2d5dbb3", "turn_index": 0}}
{"user_turn_0": "Hi there , 5 miles .", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "I 'm afraid I could n't find this event anywhere on your calendar", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (Navigation.destination_? (Place.location_? (?= \" 4a Enterprise Way \")))))", "idx": "17771", "datum_id": {"dialogue_id": "888aa627-edb1-405a-93a1-b7cfc2d5dbb3", "turn_index": 1}}
{"user_turn_0": "I 'm leaving from London Heathrow", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I want the one leaving at 4:20 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "17780", "datum_id": {"dialogue_id": "f9256f53-5dc5-42f8-920f-2e02fe3aa2da", "turn_index": 2}}
{"user_turn_0": "I will depart from Nottingham", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 meridiem equals PM", "user_turn_1": "Yeah , that one sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "17791", "datum_id": {"dialogue_id": "9f3a3aa3-4fc0-4cfa-91c3-bc8a7b68ec2b", "turn_index": 2}}
{"user_turn_0": "Yeah , that one sounds good", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 4 minute equals 20 meridiem equals PM", "user_turn_1": "Yeah , go with that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "17792", "datum_id": {"dialogue_id": "9f3a3aa3-4fc0-4cfa-91c3-bc8a7b68ec2b", "turn_index": 3}}
{"user_turn_0": "Looks good", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM", "user_turn_1": "Yea that 's fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "17796", "datum_id": {"dialogue_id": "754b3528-2390-4a26-b242-803d019ec538", "turn_index": 2}}
{"user_turn_0": "From Newcastle", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM", "user_turn_1": "Looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "17801", "datum_id": {"dialogue_id": "9ab4f003-a200-47a5-b453-0c993a3dda50", "turn_index": 2}}
{"user_turn_0": "Looks good to me", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "17802", "datum_id": {"dialogue_id": "9ab4f003-a200-47a5-b453-0c993a3dda50", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , create Jamboree Party with Joshua for Thursday at 3 PM on the calendar", "tgt": "(plan (^(CalendarEvent) Create :object (& (& (CalendarEvent.eventName_? (?= \" Jamboree Party \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday)))) (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM))))))))) (CalendarEvent.attendees_? (Contact.person_? (Person.name_? (?= \" Joshua \")))))))", "idx": "17804", "datum_id": {"dialogue_id": "105dce3d-7a38-41dd-ba3d-423426bf8490", "turn_index": 0}}
{"user_turn_0": "What airline is that on ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "I 'd rather do the one at 1:20 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "17826", "datum_id": {"dialogue_id": "5b186446-f62a-4a0d-9947-01724d1e1bf1", "turn_index": 2}}
{"user_turn_0": "That 's fine . Book it for me at 6:30 PM", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Change the appointment to 4 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (Time.hour_? (?= (Hour.apply 4L))))))", "idx": "17853", "datum_id": {"dialogue_id": "a74198d2-f3d1-4b2d-8a47-669cd1a208d5", "turn_index": 4}}
{"user_turn_0": "Do they have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Alright , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "17861", "datum_id": {"dialogue_id": "7a267a14-8609-4e1b-88fd-0ac8098ce717", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , book Kitty City for 4 PM and create an event for it .", "tgt": "(plan (do (^(Restaurant) Book :object (& (Restaurant.restaurantName_? (?= \" Kitty City \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))) (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (?= (^(DateTimeRange Restaurant) reference (^(Restaurant) always)))))))", "idx": "17866", "datum_id": {"dialogue_id": "7c590d33-b59f-49fa-9336-30c158b127ac", "turn_index": 0}}
{"user_turn_0": "Thanks so much . Create a reminder for my event", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Create a reminder for my event today", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object.atDateTime \") (lambda (^(Constraint CalendarEvent) x0) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today))))))))", "idx": "17870", "datum_id": {"dialogue_id": "7c590d33-b59f-49fa-9336-30c158b127ac", "turn_index": 4}}
{"user_turn_0": "Hi assistant , i need to get a plane ticket leaving from Manchester", "agent_turn_0": "Root system prompt flight book object equals destination", "user_turn_1": "I will be going to Eden Burger and I need two tickets", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& x0 (Flight.destination_? (Place.location_? (?= \" Edinburgh \")))) (Flight.passengers_? (?= 2))))))", "idx": "17878", "datum_id": {"dialogue_id": "308b718f-5df3-4328-b1bc-843740bc93a0", "turn_index": 1}}
{"user_turn_0": "From Cambridge central station", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM", "user_turn_1": "Get me the 2:30 pm one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "17889", "datum_id": {"dialogue_id": "ca88ed08-7f30-4b56-a005-179c196d3aec", "turn_index": 2}}
{"user_turn_0": "Get me the 2:30 pm one", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM", "user_turn_1": "That works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "17890", "datum_id": {"dialogue_id": "ca88ed08-7f30-4b56-a005-179c196d3aec", "turn_index": 3}}
{"user_turn_0": "OK , book it for me", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Update time to 2", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (& x0 (meridiem_? (?= (Meridiem.PM)))))))", "idx": "17894", "datum_id": {"dialogue_id": "0d4e4464-2262-4b99-9a96-bd2125f5458e", "turn_index": 2}}
{"user_turn_0": "I need one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the hotel have breakfast ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "17909", "datum_id": {"dialogue_id": "74fdb476-18df-47b7-b3ad-c979275e96f1", "turn_index": 7}}
{"user_turn_0": "Is there a car park in the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Bourbon Bliss \"))))))", "idx": "17916", "datum_id": {"dialogue_id": "b7b87a55-e623-4ba8-a889-6480f9a3653b", "turn_index": 5}}
{"user_turn_0": "I need one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "I want to switch the check in date to today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "17920", "datum_id": {"dialogue_id": "b7b87a55-e623-4ba8-a889-6480f9a3653b", "turn_index": 9}}
{"user_turn_0": "Yes , that is correct", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM", "user_turn_1": "2:20 PM is good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (Train.departureDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "17924", "datum_id": {"dialogue_id": "c6c6da33-e2d2-438c-a47a-620e250efe14", "turn_index": 2}}
{"user_turn_0": "I prefer another hotel with low price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Lucia price equals 178", "user_turn_1": "What 's the rating ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.rating_? (^(Number) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "17932", "datum_id": {"dialogue_id": "597abebb-052b-4094-85ca-5b394ff61767", "turn_index": 5}}
{"user_turn_0": "Is there laundry at the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Make the reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "17936", "datum_id": {"dialogue_id": "aac5f51f-26cc-4bab-974f-3df8f90c95e7", "turn_index": 3}}
{"user_turn_0": "Any kind of room , just need one", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is breakfast provided ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "17939", "datum_id": {"dialogue_id": "aac5f51f-26cc-4bab-974f-3df8f90c95e7", "turn_index": 6}}
{"user_turn_0": "Is breakfast provided ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Make a reservation at the hotel", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "17940", "datum_id": {"dialogue_id": "aac5f51f-26cc-4bab-974f-3df8f90c95e7", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , forward tomorrow 's event to Diana", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))))))) (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Diana \")))))))", "idx": "17946", "datum_id": {"dialogue_id": "b7e0a6f6-3c97-4853-a50d-0a7d30e63ae0", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , book me a table for 6 people at Floq on the 21st .", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.restaurantName_? (?= \" Floq \")) (Restaurant.tableSize_? (?= 6))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 21L)))))))))", "idx": "17962", "datum_id": {"dialogue_id": "29827b86-d16d-4aa6-83be-303544e6ab21", "turn_index": 0}}
{"user_turn_0": "Book it", "agent_turn_0": "Root systen inform restaurant book Completed", "user_turn_1": "Book me a restaurant that has a car park and serves Thai food", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (Restaurant.foodType_? (?= (FoodType.Thai))) (Restaurant.hasParking_? (?= true))))))", "idx": "17965", "datum_id": {"dialogue_id": "29827b86-d16d-4aa6-83be-303544e6ab21", "turn_index": 3}}
{"user_turn_0": "I 'd like for it to be for a Sushi restaurant that ins't too expensive", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Spago", "user_turn_1": "Sure , get me a table there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "17987", "datum_id": {"dialogue_id": "929d9220-55cb-43a8-8101-7d12be1cebc1", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , i need to book a hotel with a star rating of at least three stars and I want a queen sized bed", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.rating_? (?>= (someSalient (?= 3)))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Queen)))))))", "idx": "18006", "datum_id": {"dialogue_id": "3440cb86-ae84-4683-857b-909afe4eed94", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , 5 PM .", "tgt": "(plan (^(Train) Find :focus (Train.arrivalDateTime_? (^(DateTime) always)) :object (Train.destination_? (Place.location_? (?= \" Liverpool Street \")))))", "idx": "18018", "datum_id": {"dialogue_id": "2060cfa5-f9ff-443f-8324-68ae7f89b614", "turn_index": 0}}
{"user_turn_0": "Please tell me the address of that place", "agent_turn_0": "Root system inform restaurant find focus equals address equals The Body Shop in Upper Street", "user_turn_1": "Looks good to me . Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Canton Silk \"))))))", "idx": "18033", "datum_id": {"dialogue_id": "bc12f6ef-d89f-4501-8e2c-9ed479179607", "turn_index": 4}}
{"user_turn_0": "Belfast", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM", "user_turn_1": "Yeah that looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "18049", "datum_id": {"dialogue_id": "b0f212e6-5562-4c6f-af22-bf177bbb4413", "turn_index": 2}}
{"user_turn_0": "I want to eat Chinese hotpot", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Empirica", "user_turn_1": "Give me the address to the restaurant", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "18070", "datum_id": {"dialogue_id": "e60e089e-d1b4-44d2-8f84-2e47ffb81240", "turn_index": 3}}
{"user_turn_0": "Give me the address to the restaurant", "agent_turn_0": "Root system inform restaurant find focus equals address equals Camden Passage", "user_turn_1": "All right , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Empirica \"))))))", "idx": "18071", "datum_id": {"dialogue_id": "e60e089e-d1b4-44d2-8f84-2e47ffb81240", "turn_index": 4}}
{"user_turn_0": "What airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals British", "user_turn_1": "Okay , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "18078", "datum_id": {"dialogue_id": "8694f14d-2346-4d98-9ee7-c950e4b1add4", "turn_index": 3}}
{"user_turn_0": "Is there an event every Wednesday on the calendar ?", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Schedule one", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.listOffset_? (?= 1))))", "idx": "18084", "datum_id": {"dialogue_id": "abad188d-8d83-433e-b0ad-23bed78a8efe", "turn_index": 3}}
{"user_turn_0": "What carbin class is it ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "That 's ok . I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "18089", "datum_id": {"dialogue_id": "907e3208-7803-41ba-a312-b332d2d1cbb0", "turn_index": 3}}
{"user_turn_0": "Yes on Friday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 3 meridiem equals PM price equals 142", "user_turn_1": "This one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "18091", "datum_id": {"dialogue_id": "907e3208-7803-41ba-a312-b332d2d1cbb0", "turn_index": 5}}
{"user_turn_0": "I want to know where is my calendar event with Thomas held", "agent_turn_0": "Root system inform calendarEvent find focus equals location equals Aldgate", "user_turn_1": "What is the weather going to be at Aldgate", "tgt": "(plan (^(WeatherReport) Find :object (WeatherReport.location_? (?= \" Aldgate \"))))", "idx": "18106", "datum_id": {"dialogue_id": "d910170c-e77b-44d7-8aa0-4e0fb8d8dcde", "turn_index": 3}}
{"user_turn_0": "What time is my reminder ?", "agent_turn_0": "Root system inform reminder find focus equals atDateTime equals time equals hour equals 11 minute equals 30 meridiem equals AM", "user_turn_1": "Create a reminder for the 6th event", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.atDateTime \") (lambda (^(Constraint DateTime) x0) (?= (^(DateTime CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 6L)))))))))))", "idx": "18112", "datum_id": {"dialogue_id": "393500f2-b557-4156-ab6d-5802e8ac522a", "turn_index": 4}}
{"user_turn_0": "Hi my assistant , schedule an event called Personal fitness trainer then send the details to Mr Bailey", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange", "user_turn_1": "It 's at 9:00 in the morning on the 18th", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object \") (lambda (^(Constraint CalendarEvent) x0) (& x0 (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 18L)))) (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 9L))) (meridiem_? (?= (Meridiem.AM))))))))))))", "idx": "18114", "datum_id": {"dialogue_id": "176c90ac-de8f-4e34-9707-798f281263d5", "turn_index": 1}}
{"user_turn_0": "Hey assistant , call 07924846814", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Book a restaurant that serves grill , moderate pricing and located in Greenford for Sunday", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Greenford \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday))))))) (Restaurant.priceRange_? (?= (PriceRange.Moderate)))) (Restaurant.foodType_? (?= (FoodType.Grill))))))", "idx": "18124", "datum_id": {"dialogue_id": "9336660c-473b-483b-a553-33fcf34e3f91", "turn_index": 1}}
{"user_turn_0": "I prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jurassic Pork", "user_turn_1": "Does the restaurant take credit card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "18127", "datum_id": {"dialogue_id": "9336660c-473b-483b-a553-33fcf34e3f91", "turn_index": 4}}
{"user_turn_0": "Does the restaurant take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Shining Gate \"))))))", "idx": "18128", "datum_id": {"dialogue_id": "9336660c-473b-483b-a553-33fcf34e3f91", "turn_index": 5}}
{"user_turn_0": "Thanks for the help . Can you text her ?", "agent_turn_0": "Root system prompt message create object equals recipients equals person equals nameHint", "user_turn_1": "It 's Carol Coleman", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Person)) Path.apply \" object.recipients.person \") (lambda (^(Constraint Person) x0) (& x0 (Person.nameHint_? (?= \" Coleman \"))))))", "idx": "18135", "datum_id": {"dialogue_id": "6a7dea6e-c29e-4b38-ad24-0f7034d7ba61", "turn_index": 2}}
{"user_turn_0": "How 's Glasgow 's weather tomorrow", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cold", "user_turn_1": "How long will it take me to get to my next event ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1)))))))", "idx": "18167", "datum_id": {"dialogue_id": "8c1ce142-bc64-4795-9c5e-905e0cf6963e", "turn_index": 3}}
{"user_turn_0": "How long will it take me to get to my next event ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 20", "user_turn_1": "I need another favor . I need a hotel in Tottenham today through July 26th that is n't too expensive", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" Tottenham \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (& (Date.day_? (?= (Day.apply 26L))) (Date.month_? (?= (July))))))))) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))))))", "idx": "18168", "datum_id": {"dialogue_id": "8c1ce142-bc64-4795-9c5e-905e0cf6963e", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i need a hotel near my event that is't too expensive .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))))))", "idx": "18175", "datum_id": {"dialogue_id": "89b69256-42f0-4e94-b082-b51015f1576e", "turn_index": 0}}
{"user_turn_0": "Does it have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "18177", "datum_id": {"dialogue_id": "89b69256-42f0-4e94-b082-b51015f1576e", "turn_index": 2}}
{"user_turn_0": "I need three rooms of any type", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Change the check date to the 21st", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Day)) Path.apply \" object.dateTimeRange.endDateTime.date.day \") (lambda (^(Constraint Day) x0) (?= (Day.apply 21L)))))", "idx": "18181", "datum_id": {"dialogue_id": "89b69256-42f0-4e94-b082-b51015f1576e", "turn_index": 6}}
{"user_turn_0": "Hello , i need a reminder for my next event .", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "How long does it take to get to that location ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1)))))))", "idx": "18194", "datum_id": {"dialogue_id": "f5822619-0e02-461f-865d-0a9e081d78eb", "turn_index": 1}}
{"user_turn_0": "How long does it take to get to that location ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 25 object equals destination equals location equals Ash Grove Industrial Park", "user_turn_1": "How far is it from 12 Hydean Way to Camden passage by car ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (& (& (Navigation.source_? (Place.location_? (?= \" 12 Hydean Way \"))) (Navigation.destination_? (Place.location_? (?= \" Camden Passage \")))) (Navigation.transportationMode_? (?= (TransportationMode.Driving))))))", "idx": "18195", "datum_id": {"dialogue_id": "f5822619-0e02-461f-865d-0a9e081d78eb", "turn_index": 2}}
{"user_turn_0": "I would like to check in tomorrow and check out on Sunday", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Revise my check in time to be on Tuesday please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "18221", "datum_id": {"dialogue_id": "f760e011-321d-4dc8-bb23-99356c090a07", "turn_index": 4}}
{"user_turn_0": "Book 2 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Make the check out date Sunday instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Sunday))))))", "idx": "18230", "datum_id": {"dialogue_id": "2c45a026-83bb-493f-8518-26d4c4eb5af0", "turn_index": 6}}
{"user_turn_0": "I will return on Friday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "18236", "datum_id": {"dialogue_id": "16295c52-3254-44a9-ba03-042a865ce043", "turn_index": 4}}
{"user_turn_0": "Can I have 2 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "18245", "datum_id": {"dialogue_id": "1230fb75-0493-4d34-b9ba-ac00aea22469", "turn_index": 7}}
{"user_turn_0": "Sunday I 'll come back", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM price equals 134", "user_turn_1": "That one looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (^((Constraint Hour)) refer)) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "18258", "datum_id": {"dialogue_id": "deb3f655-30d9-4442-9f08-86f46f4fbcd0", "turn_index": 4}}
{"user_turn_0": "Hello assistant , book a hotel in Holland Park", "agent_turn_0": "Root system prompt hotel book object equals priceRange", "user_turn_1": "No it does n't matter as long as it has three stars", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.priceRange_? (?= (PriceRange.Any)))) (Hotel.rating_? (?= 3))))))", "idx": "18261", "datum_id": {"dialogue_id": "9e8b699d-6a06-4e96-b211-73d86822bb47", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , here are my findings . A good option appears to be Dream Connect hotel . It costs 155 pounds a night .", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" Somerstown \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 4L)))))))) (Hotel.priceRange_? (?= (PriceRange.Moderate)))) (Hotel.hasParking_? (?= true)))))", "idx": "18268", "datum_id": {"dialogue_id": "02057644-e7bd-44ea-9870-79761ce22260", "turn_index": 0}}
{"user_turn_0": "Hi my assistant , here are my findings . A good option appears to be Dream Connect hotel . It costs 155 pounds a night .", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Dream Connect price equals 155", "user_turn_1": "Book me a hotel in Somerstown that has a moderate price range and a car park . I want to check in today and check out on the 4th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "18269", "datum_id": {"dialogue_id": "02057644-e7bd-44ea-9870-79761ce22260", "turn_index": 1}}
{"user_turn_0": "I need two rooms on my reservation", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I need to make a prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "18272", "datum_id": {"dialogue_id": "02057644-e7bd-44ea-9870-79761ce22260", "turn_index": 4}}
{"user_turn_0": "Does the hotel have fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "18282", "datum_id": {"dialogue_id": "2f799d2a-b0c2-44d0-b6bf-d6ead273704e", "turn_index": 3}}
{"user_turn_0": "Two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "18286", "datum_id": {"dialogue_id": "2f799d2a-b0c2-44d0-b6bf-d6ead273704e", "turn_index": 7}}
{"user_turn_0": "Does that place have car parking ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Make that booking for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "18292", "datum_id": {"dialogue_id": "cf3f6c96-1a2d-44c9-92ff-90dfb2c55ba5", "turn_index": 4}}
{"user_turn_0": "Leaving on the 10th after 10:30 AM", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM price equals 166", "user_turn_1": "Let 's book this flight for one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.source_? (Place.location_? (?= \" London Heathrow \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 1))))))", "idx": "18300", "datum_id": {"dialogue_id": "c15f79d2-3b3b-471e-8457-bb6ea2cee3b6", "turn_index": 2}}
{"user_turn_0": "Hey assistant I need you to set up a reminder for Sunday 's event .", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "And how long is it going to take the my medical appointment ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.eventName_? (?= \" medical appointment \")))))))", "idx": "18309", "datum_id": {"dialogue_id": "3ce2fea6-d70b-4e1a-9c20-ee9b275fbcd9", "turn_index": 1}}
{"user_turn_0": "Hey , schedule a reminder for my calendar event .", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Make a reminder for tomorrow 's event", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object.atDateTime \") (lambda (^(Constraint CalendarEvent) x0) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow))))))))", "idx": "18314", "datum_id": {"dialogue_id": "fde75572-aec6-416b-b37d-061cdca4b374", "turn_index": 1}}
{"user_turn_0": "Tell me the hotel 's star rating", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "I want to book it then", "tgt": "(plan (^(Hotel) Book :object (^((Constraint Hotel)) refer)))", "idx": "18317", "datum_id": {"dialogue_id": "fde75572-aec6-416b-b37d-061cdca4b374", "turn_index": 4}}
{"user_turn_0": "Hi assistant , what 's the Interknack restaurant rated", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 5", "user_turn_1": "I 'd like to book it for 3 PM", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.restaurantName_? (^((Constraint String)) refer)) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "18324", "datum_id": {"dialogue_id": "4b3dab6c-a7b5-43f4-9b9b-ecb74c5e2a94", "turn_index": 1}}
{"user_turn_0": "What kind of food does it serve ?", "agent_turn_0": "Root system inform restaurant find focus equals foodType equals Japanese Cuisine", "user_turn_1": "Can you book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "18332", "datum_id": {"dialogue_id": "50784dbd-1232-4cc9-8b1c-5e9d151a785e", "turn_index": 4}}
{"user_turn_0": "St Pancras", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM", "user_turn_1": "I 'll take it !", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "18338", "datum_id": {"dialogue_id": "88fa9e83-2829-4248-9f70-06bb74e67376", "turn_index": 2}}
{"user_turn_0": "I 'll take it !", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM", "user_turn_1": "It looks great to me !", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "18339", "datum_id": {"dialogue_id": "88fa9e83-2829-4248-9f70-06bb74e67376", "turn_index": 3}}
{"user_turn_0": "What 's Manchester 's weather today ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Rainy", "user_turn_1": "What 's going on at 2:30 PM on my calendar ?", "tgt": "(plan (^(CalendarEvent) Find :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "18348", "datum_id": {"dialogue_id": "8bd9b0d8-0f6a-4a77-835b-59f0618c18a0", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , encino restaurant what is the rating ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.rating_? (^(Number) always)) :object (Restaurant.restaurantName_? (?= \" Encino \"))))", "idx": "18383", "datum_id": {"dialogue_id": "4d914a40-f49d-42f3-80a2-4e23fe1eb57f", "turn_index": 0}}
{"user_turn_0": "I would like another restaurant with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone Martian", "user_turn_1": "Does this restaurant have parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "18393", "datum_id": {"dialogue_id": "1331b4eb-cfdb-4990-8711-76e3f675a54c", "turn_index": 4}}
{"user_turn_0": "Which of these restaurants has a rating four stars ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Maple", "user_turn_1": "Does this restaurant take credit cards ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "18395", "datum_id": {"dialogue_id": "1331b4eb-cfdb-4990-8711-76e3f675a54c", "turn_index": 6}}
{"user_turn_0": "Does this restaurant take credit cards ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "This looks fine . Please book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Bard's Bench \"))))))", "idx": "18396", "datum_id": {"dialogue_id": "1331b4eb-cfdb-4990-8711-76e3f675a54c", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , 1 mile .", "tgt": "(plan (^(Navigation) Find :focus (Navigation.distance_? (^(Distance) always)) :object (& (Navigation.destination_? (Place.location_? (?= \" Haywood Way \"))) (Navigation.transportationMode_? (?= (TransportationMode.Walking))))))", "idx": "18399", "datum_id": {"dialogue_id": "fc96bc7e-a49f-4331-b435-1a54668d2163", "turn_index": 0}}
{"user_turn_0": "Is there a new call for me from my love ?", "agent_turn_0": "Root system inform phoneCall checkExistence NotExisted", "user_turn_1": "Thanks for the help . Text my love to say let 's go", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Love))))) (Message.textContent_? (?= \" let's go \")))))", "idx": "18401", "datum_id": {"dialogue_id": "fc96bc7e-a49f-4331-b435-1a54668d2163", "turn_index": 2}}
{"user_turn_0": "I want another with a moderate price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Green Lushy Resorts price equals 127", "user_turn_1": "Does it have laundry ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.laundry_? (^(Boolean) always)))))", "idx": "18412", "datum_id": {"dialogue_id": "1d0ce139-f5da-44bb-b9fd-b1a11048425f", "turn_index": 3}}
{"user_turn_0": "I want another with at least two star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Ace Hotel price equals 201", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Palm Bliss \"))))))", "idx": "18414", "datum_id": {"dialogue_id": "1d0ce139-f5da-44bb-b9fd-b1a11048425f", "turn_index": 5}}
{"user_turn_0": "Yes . please", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "Change my weekly event on Saturday to begin at 4 PM", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))) :object (CalendarEvent.recurrenceUnit_? (RecurrenceUnit.dayOfWeek_? (?= (Saturday))))))", "idx": "18422", "datum_id": {"dialogue_id": "5c6d89d6-c6fc-4068-96aa-2a3ec8a74c88", "turn_index": 3}}
{"user_turn_0": "I prefer another hotel with not zero star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Four Seasons price equals 170", "user_turn_1": "Does the hotel have laundry", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.laundry_? (^(Boolean) always)))))", "idx": "18438", "datum_id": {"dialogue_id": "0e8b4e2a-d7cc-474e-be53-c8d038760b77", "turn_index": 4}}
{"user_turn_0": "Does the hotel have laundry", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" InterContinental \"))))))", "idx": "18439", "datum_id": {"dialogue_id": "0e8b4e2a-d7cc-474e-be53-c8d038760b77", "turn_index": 5}}
{"user_turn_0": "How about the Ace Hotel hotel instead", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is breakfast included ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "18444", "datum_id": {"dialogue_id": "0e8b4e2a-d7cc-474e-be53-c8d038760b77", "turn_index": 10}}
{"user_turn_0": "Give me a hotel that has a rating of at least two stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Blue Moon price equals 155", "user_turn_1": "Does the cost include breakfast ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "18449", "datum_id": {"dialogue_id": "2e904c41-869c-4558-aa84-0fbc5f4fa3b8", "turn_index": 3}}
{"user_turn_0": "Does the cost include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Blossomwell Resorts \"))))))", "idx": "18450", "datum_id": {"dialogue_id": "2e904c41-869c-4558-aa84-0fbc5f4fa3b8", "turn_index": 4}}
{"user_turn_0": "Book it", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "18456", "datum_id": {"dialogue_id": "953bbf79-5356-46a3-b2fd-6be304436254", "turn_index": 2}}
{"user_turn_0": "Book it", "agent_turn_0": "Root system inform train book Completed", "user_turn_1": "Check weather in Exacter today", "tgt": "(plan (^(WeatherReport) Find :object (& (WeatherReport.location_? (?= \" Exeter \")) (WeatherReport.atDateTime_? (DateTime.date_? (?= (Today)))))))", "idx": "18458", "datum_id": {"dialogue_id": "953bbf79-5356-46a3-b2fd-6be304436254", "turn_index": 4}}
{"user_turn_0": "Yes . please", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Send my 4 o'clock event to Mr Arnold", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 4L))))))))) (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Arnold \")) (Person.namePrefix_? (?= \" Mr \")))))))))", "idx": "18472", "datum_id": {"dialogue_id": "3a587eb5-bfc5-452e-8fa0-7a1cf12694d3", "turn_index": 3}}
{"user_turn_0": "Yes . please", "agent_turn_0": "Root system inform flight book Completed", "user_turn_1": "Find out the rating of Goat and Guru restaurant", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.rating_? (^(Number) always)) :object (Restaurant.restaurantName_? (?= \" Goat and Guru \"))))", "idx": "18478", "datum_id": {"dialogue_id": "d09043b9-27fe-434c-97b1-2e24224d11c0", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , here are my findings . A good option appears to be River Park hotel . It costs 145 pounds a night .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= \" Wembley Park \")) (Hotel.priceRange_? (?= (PriceRange.Moderate))))))", "idx": "18479", "datum_id": {"dialogue_id": "489a48e0-65a2-40ae-b3b1-a306016739ae", "turn_index": 0}}
{"user_turn_0": "Yes , there are private bathrooms in the hotel", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "18481", "datum_id": {"dialogue_id": "489a48e0-65a2-40ae-b3b1-a306016739ae", "turn_index": 2}}
{"user_turn_0": "I need two rooms . I do n't care about the room type", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is free cancellation supported ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "18484", "datum_id": {"dialogue_id": "489a48e0-65a2-40ae-b3b1-a306016739ae", "turn_index": 5}}
{"user_turn_0": "Hey , i 'd like to book a Chinese restaurant with a car park please", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName location", "user_turn_1": "I 'd like a one star rating or better in Queensbury", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.location_? (?= \" Queensbury \"))) (Restaurant.rating_? (?>= (someSalient (?= 1))))))))", "idx": "18487", "datum_id": {"dialogue_id": "c4d26a6c-0243-4d00-80c7-926beb1f5b2e", "turn_index": 1}}
{"user_turn_0": "What 's the address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals The Body Shop in Upper Street", "user_turn_1": "That 's perfect , please book that for me today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Encino \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Today)))))))))", "idx": "18489", "datum_id": {"dialogue_id": "c4d26a6c-0243-4d00-80c7-926beb1f5b2e", "turn_index": 3}}
{"user_turn_0": "Give me directions there", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "18500", "datum_id": {"dialogue_id": "985dfeb4-b092-4841-98c8-ded901d5bcb7", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , book an affordable hotel from February 5th to the 8th with parking in Grahame Park .", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" Grahame Park \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 5L))))) (DateTimeRange.endDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 8L)))) (month_? (Date.month_? (?= (February))))))))) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Hotel.hasParking_? (?= true)))))", "idx": "18516", "datum_id": {"dialogue_id": "b536a664-417e-4d08-a23a-cf2cb200f957", "turn_index": 0}}
{"user_turn_0": "I 'd rather have a different hotel with a three star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals The Hot Springs price equals 156", "user_turn_1": "Is free Wi - Fi available at the hotel ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasWifi_? (^(Boolean) always)))))", "idx": "18519", "datum_id": {"dialogue_id": "b536a664-417e-4d08-a23a-cf2cb200f957", "turn_index": 3}}
{"user_turn_0": "Is free Wi - Fi available at the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Please make the booking", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" The Watson \"))))))", "idx": "18520", "datum_id": {"dialogue_id": "b536a664-417e-4d08-a23a-cf2cb200f957", "turn_index": 4}}
{"user_turn_0": "Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM price equals 138", "user_turn_1": "That works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "18529", "datum_id": {"dialogue_id": "103865b5-1b18-479d-9c65-dfd871d63fc7", "turn_index": 6}}
{"user_turn_0": "From Peterborough", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 20 meridiem equals PM", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "18538", "datum_id": {"dialogue_id": "5b38a524-745f-42d3-a897-7083cdc3e16d", "turn_index": 2}}
{"user_turn_0": "Is there a car park in the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "18545", "datum_id": {"dialogue_id": "5feca769-4d6e-4620-94aa-fee45da61dda", "turn_index": 4}}
{"user_turn_0": "Hello , how do I get from 6a Streatham Hill to Tie the Knot ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Do me another favor . Book a cheap restaurant at 4:00", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.priceRange_? (?= (PriceRange.Low))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 4L)))))))))", "idx": "18566", "datum_id": {"dialogue_id": "81f55f9c-7210-4cbc-9686-8b54085bcd1e", "turn_index": 1}}
{"user_turn_0": "Do me another favor . Book a cheap restaurant at 4:00", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName location", "user_turn_1": "In New Cross that 's at least 1 star", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.location_? (?= \" New Cross \"))) (Restaurant.rating_? (?>= (someSalient (?= 1))))))))", "idx": "18567", "datum_id": {"dialogue_id": "81f55f9c-7210-4cbc-9686-8b54085bcd1e", "turn_index": 2}}
{"user_turn_0": "I 'd prefer a place with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone Martian", "user_turn_1": "Does it have parking ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "18571", "datum_id": {"dialogue_id": "81f55f9c-7210-4cbc-9686-8b54085bcd1e", "turn_index": 6}}
{"user_turn_0": "Does it have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Then , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "18572", "datum_id": {"dialogue_id": "81f55f9c-7210-4cbc-9686-8b54085bcd1e", "turn_index": 7}}
{"user_turn_0": "What cabin class is this for ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "OK , let 's book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "18579", "datum_id": {"dialogue_id": "d1656a62-4cf9-4d55-a3a9-b9179febddab", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , what time will by Away we gold end on my calendar ?", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.endDateTime_? (^(DateTime) always))) :object (CalendarEvent.eventName_? (?= \" Away we golf \"))))", "idx": "18583", "datum_id": {"dialogue_id": "aea210f9-4b0f-4f11-8911-5b187dc752f8", "turn_index": 0}}
{"user_turn_0": "Thanks so much . Make me a reminder for that time , because I 'll probably forget", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Remind me today", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.atDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.date_? (?= (Today)))))))", "idx": "18585", "datum_id": {"dialogue_id": "aea210f9-4b0f-4f11-8911-5b187dc752f8", "turn_index": 2}}
{"user_turn_0": "What hotels are in the area ?", "agent_turn_0": "Root system inform hotel find", "user_turn_1": "Give me directions from 29 Highgate Lane to 234 University Street on foot", "tgt": "(plan (^(Navigation) Find :object (& (& (Navigation.source_? (Place.location_? (?= \" 29 Highgate Lane \"))) (Navigation.destination_? (Place.location_? (?= \" 234 University Street \")))) (Navigation.transportationMode_? (?= (TransportationMode.Walking))))))", "idx": "18591", "datum_id": {"dialogue_id": "3a098c42-0da3-4d03-b212-df8959922927", "turn_index": 2}}
{"user_turn_0": "Hello , i 'd love to book Dingo in Middle Park for 5 people for the 16th at 1:30 PM .", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Ok , could you change the appointment date to today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Today)))))", "idx": "18601", "datum_id": {"dialogue_id": "0fbb6598-690f-4827-b9b9-238dd8a3fc2d", "turn_index": 1}}
{"user_turn_0": "Does this hotel have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Okay , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "18608", "datum_id": {"dialogue_id": "d268eadc-fe5a-40b2-bfab-735a0e641e5e", "turn_index": 3}}
{"user_turn_0": "Does the cost include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "18621", "datum_id": {"dialogue_id": "f7f1c01b-dc94-4c29-a2fd-cdaaa23015e7", "turn_index": 3}}
{"user_turn_0": "Book it", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "I 'm staying from January 16th until the 17th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 16L)))) (month_? (Date.month_? (?= (January)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 17L)))))))))))", "idx": "18622", "datum_id": {"dialogue_id": "f7f1c01b-dc94-4c29-a2fd-cdaaa23015e7", "turn_index": 4}}
{"user_turn_0": "Hi assistant , where is the location for my calendar event from 2 PM to 6 PM ?", "agent_turn_0": "Root system inform calendarEvent find focus equals location equals Marylebone", "user_turn_1": "Approximately how long does it take to arrive there ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (Place.location_? (^((Constraint String)) refer)))))", "idx": "18631", "datum_id": {"dialogue_id": "abc0a5b2-c006-4e2e-99b3-15b15ae2eab5", "turn_index": 1}}
{"user_turn_0": "How 's the weather ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Rainy", "user_turn_1": "Do I have any messages for Mr. Hill this morning ?", "tgt": "(plan (^(Message) CheckExistence :object (& (Message.sender_? (Contact.person_? (& (Person.name_? (?= \" Hill \")) (Person.namePrefix_? (?= \" Mr \"))))) (Message.atDateTime_? (DateTime.time_? (?= (Morning)))))))", "idx": "18633", "datum_id": {"dialogue_id": "abc0a5b2-c006-4e2e-99b3-15b15ae2eab5", "turn_index": 3}}
{"user_turn_0": "Please do", "agent_turn_0": "Root system inform calendarEvent create Completed restaurant book Completed", "user_turn_1": "I need another favor . I 'd like to get a hotel reservation at Strawberry Hill for today through Saturday and I do n't want it to be too expensive", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" Strawberry Hill \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday)))))))) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High))))))))", "idx": "18641", "datum_id": {"dialogue_id": "1584af8f-fded-4ef5-b563-8f1d3cae6a3b", "turn_index": 3}}
{"user_turn_0": "It will start at 11:30 AM on the 7th", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Thanks , also i need that event shared with my son please", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Son))))))))", "idx": "18645", "datum_id": {"dialogue_id": "6a336a4f-4812-45c6-a744-7f89ba1527b0", "turn_index": 2}}
{"user_turn_0": "Leicester", "agent_turn_0": "Root system prompt train book object equals departureDateTime", "user_turn_1": "I w ill leave on the 16th of October and would like to arrive by 9:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& (& x0 (Train.departureDateTime_? (DateTime.date_? (& (Date.month_? (?= (October))) (Date.day_? (?= (Day.apply 16L))))))) (Train.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (& (Time.hour_? (?= (Hour.apply 9L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "18650", "datum_id": {"dialogue_id": "60a5e9b8-69a6-4639-8c0c-dd40465e9f5c", "turn_index": 2}}
{"user_turn_0": "I will be returning on Thursday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM", "user_turn_1": "Sounds good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "18653", "datum_id": {"dialogue_id": "60a5e9b8-69a6-4639-8c0c-dd40465e9f5c", "turn_index": 5}}
{"user_turn_0": "Hey , please tell me when my Conference on Domain - Specific Languages finishes tomorrow , according to my calendar .", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals endDateTime equals time equals hour equals 2", "user_turn_1": "Next task , set a reminder for me at that time please", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 2L)))))))", "idx": "18678", "datum_id": {"dialogue_id": "dfb91e97-1047-4d1f-8dfb-cac5f8f3354f", "turn_index": 1}}
{"user_turn_0": "Does the hotel have private bath room ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it !", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "18686", "datum_id": {"dialogue_id": "5965842f-7e54-490b-8cc5-09b164951791", "turn_index": 4}}
{"user_turn_0": "Yes . please", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "Monday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Monday))))))", "idx": "18698", "datum_id": {"dialogue_id": "ecc57f77-9028-47aa-bb6c-8daf7166050c", "turn_index": 2}}
{"user_turn_0": "Give me a different hotel that does n't have a zero star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Club Quarters price equals 65", "user_turn_1": "Are there private bathrooms in the hotel ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.privateBath_? (^(Boolean) always)))))", "idx": "18717", "datum_id": {"dialogue_id": "737c6636-76c8-4087-9cb5-7cf9d2419a1e", "turn_index": 4}}
{"user_turn_0": "Are there private bathrooms in the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Obsidian Sky \"))))))", "idx": "18718", "datum_id": {"dialogue_id": "737c6636-76c8-4087-9cb5-7cf9d2419a1e", "turn_index": 5}}
{"user_turn_0": "I need two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is free cancellation supported ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "18723", "datum_id": {"dialogue_id": "737c6636-76c8-4087-9cb5-7cf9d2419a1e", "turn_index": 10}}
{"user_turn_0": "On what airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "Book this flight for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "18728", "datum_id": {"dialogue_id": "3cd94f86-fb84-495f-9788-d82cf1f29f67", "turn_index": 3}}
{"user_turn_0": "Is there a car park in the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "18754", "datum_id": {"dialogue_id": "1ba5fa9b-f47c-4590-bacd-7de539508c13", "turn_index": 3}}
{"user_turn_0": "Is it direct ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Yes , book it for 3 passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" London Heathrow \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday)))))) (Flight.passengers_? (?= 3))))))", "idx": "18763", "datum_id": {"dialogue_id": "997756fe-d1e8-4d8f-b2ca-f2117a03a420", "turn_index": 2}}
{"user_turn_0": "Make a booking there for me . Make sure I have a king size bed", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "I 'll be staying there from May 15 to the 18th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 15L))))) (DateTimeRange.endDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 18L)))) (month_? (Date.month_? (?= (May))))))))))))", "idx": "18774", "datum_id": {"dialogue_id": "2dd410fc-031b-41cb-b24d-0f5bacf6f096", "turn_index": 3}}
{"user_turn_0": "Reserve two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "I need to make a prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "18776", "datum_id": {"dialogue_id": "2dd410fc-031b-41cb-b24d-0f5bacf6f096", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , four Stars", "tgt": "(plan (^(Hotel) Find :focus (Hotel.rating_? (^(Number) always)) :object (& (Hotel.hotelName_? (?= \" Renaissance \")) (Hotel.location_? (?= \" Holland Park \")))))", "idx": "18778", "datum_id": {"dialogue_id": "ab721312-421f-4776-b702-6d7a9dcadca4", "turn_index": 0}}
{"user_turn_0": "Hi my assistant , four Stars", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Go ahead and book it", "tgt": "(plan (^(Hotel) Book :object (Hotel.hotelName_? (?= \" Renaissance \"))))", "idx": "18779", "datum_id": {"dialogue_id": "ab721312-421f-4776-b702-6d7a9dcadca4", "turn_index": 1}}
{"user_turn_0": "Three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "18783", "datum_id": {"dialogue_id": "ab721312-421f-4776-b702-6d7a9dcadca4", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , where will you be departing from ?", "tgt": "(plan (^(Flight) Book :object (& (& (Flight.destination_? (Place.location_? (?= \" Dublin \"))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))))) (Flight.tripType_? (?= (TripType.oneWay))))))", "idx": "18785", "datum_id": {"dialogue_id": "fca688fc-1947-47fa-ab42-817a57e03753", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , where will you be departing from ?", "tgt": "(plan (^(Flight) Book :object (& (& (Flight.destination_? (Place.location_? (?= \" Brussel \"))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 5L))))))) (Flight.tripType_? (?= (TripType.oneWay))))))", "idx": "18790", "datum_id": {"dialogue_id": "95b35a77-cb71-4c9a-a4df-218a372e7fdc", "turn_index": 0}}
{"user_turn_0": "Hello , where will you be departing from ?", "agent_turn_0": "Root system prompt flight book object equals source", "user_turn_1": "I found four flights on your departure date . The cheapest one costs 150 pounds and departs at 3:45 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.source_? (Place.location_? (?= \" London \")))))))", "idx": "18791", "datum_id": {"dialogue_id": "95b35a77-cb71-4c9a-a4df-218a372e7fdc", "turn_index": 1}}
{"user_turn_0": "Can you see when my next event will begin ?", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals startDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM", "user_turn_1": "Next task , i need to set a reminder at the time", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))", "idx": "18815", "datum_id": {"dialogue_id": "51de9ba9-f726-4a9c-b121-fb49c5097ce3", "turn_index": 3}}
{"user_turn_0": "Book the taxi", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "What table size do you want ?", "tgt": "(plan (do (^(Restaurant) Book :object (& (Restaurant.restaurantName_? (?= \" Interknack \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (April))) (Date.day_? (?= (Day.apply 21L)))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L)))))))))) (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (?= (^(DateTimeRange Restaurant) reference (^(Restaurant) always)))))))", "idx": "18825", "datum_id": {"dialogue_id": "59c2d894-08c3-4c06-8340-1e4fb92e41bf", "turn_index": 3}}
{"user_turn_0": "What table size do you want ?", "agent_turn_0": "Root system prompt restaurant book object equals tableSize", "user_turn_1": "Here 's your order . Would you like me to submit it now ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.tableSize_? (?= 4))))))", "idx": "18826", "datum_id": {"dialogue_id": "59c2d894-08c3-4c06-8340-1e4fb92e41bf", "turn_index": 4}}
{"user_turn_0": "Friday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM price equals 150", "user_turn_1": "Ok , looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "18831", "datum_id": {"dialogue_id": "685c7aa8-ab7b-43a7-9801-180f67f04a35", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , proceed ahead with the booking .", "tgt": "(plan (^(Flight) Book :object (& (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" Liverpool \")))) (Flight.destination_? (Place.location_? (?= \" Glasgow \")))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (?= (Today))))))))", "idx": "18833", "datum_id": {"dialogue_id": "e256b71d-7067-4213-9f47-4168cb2a6700", "turn_index": 0}}
{"user_turn_0": "Hey assistant , proceed ahead with the booking .", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 2 meridiem equals PM price equals 125", "user_turn_1": "Here 's your flight order information . Would you like me to proceed ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" Liverpool \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "18834", "datum_id": {"dialogue_id": "e256b71d-7067-4213-9f47-4168cb2a6700", "turn_index": 1}}
{"user_turn_0": "Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM price equals 160", "user_turn_1": "I prefer the 1:45 PM departure . Make sure I get an economy class seat", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "18836", "datum_id": {"dialogue_id": "e256b71d-7067-4213-9f47-4168cb2a6700", "turn_index": 3}}
{"user_turn_0": "I prefer the 1:45 PM departure . Make sure I get an economy class seat", "agent_turn_0": "Root system offer flight book", "user_turn_1": "I found two flights on your departure date . The cheapest one costs 125 pounds and leaves at 2 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "18837", "datum_id": {"dialogue_id": "e256b71d-7067-4213-9f47-4168cb2a6700", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , book a cheap hotel for tomorrow through the 22nd .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?= (PriceRange.Low))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 22L))))))))))", "idx": "18853", "datum_id": {"dialogue_id": "fe154043-5bd6-4eb1-bee9-f93dea309fef", "turn_index": 0}}
{"user_turn_0": "Does that include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "18856", "datum_id": {"dialogue_id": "fe154043-5bd6-4eb1-bee9-f93dea309fef", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , is there a price range that you prefer ?", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" Leicester Square \")) (Hotel.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))))) (Hotel.hasParking_? (?= true)))))", "idx": "18859", "datum_id": {"dialogue_id": "a35b9344-609a-4d75-80ab-f9d89b762ab9", "turn_index": 0}}
{"user_turn_0": "I want a hotel that has a low price range and that has a rating of at least two stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Crescent Resort price equals 127", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "18861", "datum_id": {"dialogue_id": "a35b9344-609a-4d75-80ab-f9d89b762ab9", "turn_index": 2}}
{"user_turn_0": "One queen sized bed , please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "I want to switch the check out date to Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Saturday))))))", "idx": "18864", "datum_id": {"dialogue_id": "a35b9344-609a-4d75-80ab-f9d89b762ab9", "turn_index": 5}}
{"user_turn_0": "Are there any calls for me from Mr Henderson ?", "agent_turn_0": "Root system inform phoneCall checkExistence NotExisted", "user_turn_1": "Call Mr Henderson please", "tgt": "(plan (^(PhoneCall) Create :object (PhoneCall.recipients_? (Contact.person_? (& (Person.name_? (?= \" Henderson \")) (Person.namePrefix_? (?= \" Mr \")))))))", "idx": "18868", "datum_id": {"dialogue_id": "d1f2cd45-d3d1-4ab2-ad1d-76397298bd79", "turn_index": 2}}
{"user_turn_0": "Hi there , please add Mr Buchland to the one hour long event that is on my calendar .", "agent_turn_0": "Root system inform calendarEvent update Completed", "user_turn_1": "Text him for me", "tgt": "(plan (^(Message) Create :object (Message.recipients_? (^((Constraint Contact)) refer))))", "idx": "18877", "datum_id": {"dialogue_id": "5f155faf-8efc-46d6-8d2b-0b7127cb7e94", "turn_index": 1}}
{"user_turn_0": "Hello , please tell me the rating of the Fairmont hotel .", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "I want the booking to be for a single room and a Wednesday check in", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.hotelName_? (^((Constraint String)) refer)) (Hotel.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Single)))))))", "idx": "18887", "datum_id": {"dialogue_id": "145f979c-88a2-4dcc-a6be-51f0ab32e8a8", "turn_index": 1}}
{"user_turn_0": "May I have two rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "I need to know if that booking supports free cancellation", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "18890", "datum_id": {"dialogue_id": "145f979c-88a2-4dcc-a6be-51f0ab32e8a8", "turn_index": 4}}
{"user_turn_0": "I need to know if that booking supports free cancellation", "agent_turn_0": "Root system inform hotel find focus equals freeCancellation equals False", "user_turn_1": "Actually I need the check out to be Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "18891", "datum_id": {"dialogue_id": "145f979c-88a2-4dcc-a6be-51f0ab32e8a8", "turn_index": 5}}
{"user_turn_0": "Is that a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Sure thing . Make this booking for one passenger", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.destination_? (Place.location_? (?= \" Dublin \")))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 1))))))", "idx": "18902", "datum_id": {"dialogue_id": "da2fd701-a1d0-4984-a069-7f0bbb74ef97", "turn_index": 4}}
{"user_turn_0": "What 's it rated ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Great book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "18913", "datum_id": {"dialogue_id": "de994e44-096a-4a6e-b69b-3ed4b5f65f40", "turn_index": 4}}
{"user_turn_0": "It does n't matter as long as there is wifi", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Can I check in on Tuesday instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "18916", "datum_id": {"dialogue_id": "de994e44-096a-4a6e-b69b-3ed4b5f65f40", "turn_index": 7}}
{"user_turn_0": "Wait I need two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "18918", "datum_id": {"dialogue_id": "de994e44-096a-4a6e-b69b-3ed4b5f65f40", "turn_index": 9}}
{"user_turn_0": "I prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone Martian", "user_turn_1": "Can you book it on my behalf please ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Stazione restaurant \"))))))", "idx": "18923", "datum_id": {"dialogue_id": "739adbf0-7a12-4e26-b80b-c6911d9eda6e", "turn_index": 3}}
{"user_turn_0": "Can you book it on my behalf please ?", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Okay , change the appointment date to Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday)))))))))", "idx": "18924", "datum_id": {"dialogue_id": "739adbf0-7a12-4e26-b80b-c6911d9eda6e", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , schedule Home Cleaning Service with Mr Ferguson tomorrow at 10:30 AM on my calendar .", "tgt": "(plan (^(CalendarEvent) Create :object (& (& (CalendarEvent.eventName_? (?= \" Home Cleaning Service \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (?= (Tomorrow))) (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM))))))))) (CalendarEvent.attendees_? (Contact.person_? (& (Person.name_? (?= \" Ferguson \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "18927", "datum_id": {"dialogue_id": "5a54afc7-26d8-4942-b440-621a0cb5fbd6", "turn_index": 0}}
{"user_turn_0": "Hi there , tell me the rating of the Diva hotel .", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Book me a double room there for one night", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.hotelName_? (^((Constraint String)) refer)) (Hotel.dateTimeRange_? (DateTimeRange.duration_? (AppleDuration.day_? (?= 1))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Double)))))))", "idx": "18933", "datum_id": {"dialogue_id": "79cf4bfe-fd78-47d7-a032-40e6eeb2b2f7", "turn_index": 1}}
{"user_turn_0": "I need one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I need to make a prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "18937", "datum_id": {"dialogue_id": "79cf4bfe-fd78-47d7-a032-40e6eeb2b2f7", "turn_index": 5}}
{"user_turn_0": "The 27th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 11 minute equals 50 meridiem equals AM price equals 135", "user_turn_1": "Sounds good , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "18954", "datum_id": {"dialogue_id": "569b5e1e-241c-4627-9670-1f593b01e690", "turn_index": 5}}
{"user_turn_0": "Hi my assistant , what is the rating of Beef Easy restaurant", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 4", "user_turn_1": "Can you make me a reservation there for four people", "tgt": "(plan (^(Restaurant) Book :object (& (^((Constraint Restaurant)) refer) (Restaurant.tableSize_? (?= 4)))))", "idx": "18957", "datum_id": {"dialogue_id": "9859c39e-0bae-4b60-acc5-6bae06aedba8", "turn_index": 1}}
{"user_turn_0": "Thanks , next can you text him ?", "agent_turn_0": "Root system prompt message create object equals textContent", "user_turn_1": "The text will be is it a llama or an alpaca", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (& x0 (Message.textContent_? (?= \" is it a llama or an alpaca \"))))))", "idx": "18978", "datum_id": {"dialogue_id": "d8cc417f-0ba2-4e4e-97bf-e12af50f37ca", "turn_index": 2}}
{"user_turn_0": "Yes , I do n't want a restaurant with a high price range", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Box", "user_turn_1": "Is parking offered at the restaurant ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "18993", "datum_id": {"dialogue_id": "fa375629-8adc-49f5-8e95-ec2c64441e30", "turn_index": 6}}
{"user_turn_0": "Is parking offered at the restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Lakeside Demon \"))))))", "idx": "18994", "datum_id": {"dialogue_id": "fa375629-8adc-49f5-8e95-ec2c64441e30", "turn_index": 7}}
{"user_turn_0": "Do they do laundry there ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "OK , let 's book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "19016", "datum_id": {"dialogue_id": "e94068e0-ab0f-4e67-ac7d-e15e0ac4d9ec", "turn_index": 3}}
{"user_turn_0": "Just one", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Before you do , let 's change the date for check in to the 10th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 10L))))))", "idx": "19021", "datum_id": {"dialogue_id": "e94068e0-ab0f-4e67-ac7d-e15e0ac4d9ec", "turn_index": 8}}
{"user_turn_0": "Select the one with five stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals River Park price equals 210", "user_turn_1": "Rating please", "tgt": "(plan (^(Hotel) Find :focus (Hotel.rating_? (^(Number) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "19025", "datum_id": {"dialogue_id": "e9e7ad50-7dc9-408e-bd13-1cef51b6a77f", "turn_index": 2}}
{"user_turn_0": "Rating please", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Ballyfin \"))))))", "idx": "19026", "datum_id": {"dialogue_id": "e9e7ad50-7dc9-408e-bd13-1cef51b6a77f", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , is there a hotel name or a specific area that you have in mind ?", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.rating_? (?>= (someSalient (?= 2)))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Single))))) (Hotel.hasParking_? (?= true)))))", "idx": "19030", "datum_id": {"dialogue_id": "dfa353f7-4102-42d9-a109-46e6696e9d94", "turn_index": 0}}
{"user_turn_0": "Hello assistant , is there a hotel name or a specific area that you have in mind ?", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "Here are my findings . A good option appears to be The Watson hotel . It costs 65 pounds a night", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.location_? (?= \" Grahame Park \"))) (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "19031", "datum_id": {"dialogue_id": "dfa353f7-4102-42d9-a109-46e6696e9d94", "turn_index": 1}}
{"user_turn_0": "Is there a fitness center in the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "19033", "datum_id": {"dialogue_id": "dfa353f7-4102-42d9-a109-46e6696e9d94", "turn_index": 3}}
{"user_turn_0": "I 'd rather a different place with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals La Zilla", "user_turn_1": "Fine . Let 's book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Cityroom \"))))))", "idx": "19043", "datum_id": {"dialogue_id": "c03fe584-d506-464c-8846-73aeefdef735", "turn_index": 5}}
{"user_turn_0": "Hi my assistant , tell me the rating of the Ritz - Carlton hotel .", "agent_turn_0": "Root system inform hotel find focus equals rating equals 4", "user_turn_1": "Book me a single room at the hotel for two nights . I want to check in Thursday", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.hotelName_? (^((Constraint String)) refer)) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday))))) (DateTimeRange.duration_? (AppleDuration.day_? (?= 2)))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Single)))))))", "idx": "19053", "datum_id": {"dialogue_id": "260154c8-9229-4ba5-8635-8463fd2a4ec5", "turn_index": 1}}
{"user_turn_0": "I need just one room , please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the hotel have breakfast ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "19056", "datum_id": {"dialogue_id": "260154c8-9229-4ba5-8635-8463fd2a4ec5", "turn_index": 4}}
{"user_turn_0": "How is the weather in Leeds ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cloudy", "user_turn_1": "How is the weather in Bradford ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint String)) Path.apply \" object.location \") (lambda (^(Constraint String) x0) (?= \" Bradford \"))))", "idx": "19060", "datum_id": {"dialogue_id": "2917df9e-9a2c-4cf3-b934-8c34e5881054", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , is there a car type that you prefer ? Your choices include Saloon , MPV and Executive .", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.source_? (Place.location_? (?= \" 61 Richmond Avenue \"))) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))))))", "idx": "19072", "datum_id": {"dialogue_id": "29cb9e53-c33e-4090-b651-5b4b7157dff2", "turn_index": 0}}
{"user_turn_0": "Hey assistant , is there a car type that you prefer ? Your choices include Saloon , MPV and Executive .", "agent_turn_0": "Root system prompt taxi book object equals serviceType inform taxi find object equals serviceType equals listElementOne Saloon listElementTwo MPV listElementThree Executive", "user_turn_1": "A taxi order has been created for you . Your destination is 100 Foregate Street , your event venue . Would you like me to submit the order now ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Taxi)) Path.apply \" object \") (lambda (^(Constraint Taxi) x0) (& (& x0 (Taxi.serviceType_? (List.exists_? (?= (ServiceType.Any))))) (Taxi.luggages_? (?= 1))))))", "idx": "19073", "datum_id": {"dialogue_id": "29cb9e53-c33e-4090-b651-5b4b7157dff2", "turn_index": 1}}
{"user_turn_0": "Does this hotel have laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Great , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "19080", "datum_id": {"dialogue_id": "c28f4368-cd00-49d7-b2d0-9a89a48ddefa", "turn_index": 3}}
{"user_turn_0": "I prefer another hotel with not zero star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals The Hot Springs price equals 135", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" River Park \"))))))", "idx": "19089", "datum_id": {"dialogue_id": "9570946c-6252-47ca-883f-a79d7c5f9ef0", "turn_index": 5}}
{"user_turn_0": "Three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need prepayment ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "19092", "datum_id": {"dialogue_id": "9570946c-6252-47ca-883f-a79d7c5f9ef0", "turn_index": 8}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , it has a moderate price range .", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.priceRange_? (^(PriceRange) always)) :object (& (Restaurant.restaurantName_? (?= \" Inheat \")) (Restaurant.location_? (?= \" Victoria \")))))", "idx": "19099", "datum_id": {"dialogue_id": "fc915337-db6d-4be0-88aa-b6a47cbe2fcf", "turn_index": 0}}
{"user_turn_0": "Hi there , it has a moderate price range .", "agent_turn_0": "Root system inform restaurant find focus equals priceRange equals Moderate", "user_turn_1": "Five stars", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.rating_? (^(Number) always)) :object (Restaurant.restaurantName_? (?= \" Inheat \"))))", "idx": "19100", "datum_id": {"dialogue_id": "fc915337-db6d-4be0-88aa-b6a47cbe2fcf", "turn_index": 1}}
{"user_turn_0": "Five stars", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 5", "user_turn_1": "Book a table for 4 people there", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.restaurantName_? (^((Constraint String)) refer)) (Restaurant.tableSize_? (?= 4)))))", "idx": "19101", "datum_id": {"dialogue_id": "fc915337-db6d-4be0-88aa-b6a47cbe2fcf", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , set up an event from 2:30 to 4:30 on the calendar .", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))))) (DateTimeRange.endDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 30L))))))))))", "idx": "19105", "datum_id": {"dialogue_id": "f047ebd4-b803-4652-b0e4-9ce2fc22418c", "turn_index": 0}}
{"user_turn_0": "Do they have a fitness center ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "19118", "datum_id": {"dialogue_id": "8fd5fe26-0824-460d-afd5-ea072e0a9070", "turn_index": 3}}
{"user_turn_0": "What carbin class is it ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "That 's ok . I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "19128", "datum_id": {"dialogue_id": "e630d26d-3ba5-4678-a014-4de2d819ea98", "turn_index": 2}}
{"user_turn_0": "I will return on the 17th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 4 object equals returnDateTime equals time equals hour equals 4 minute equals 20 meridiem equals PM price equals 124", "user_turn_1": "This one looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "19131", "datum_id": {"dialogue_id": "e630d26d-3ba5-4678-a014-4de2d819ea98", "turn_index": 5}}
{"user_turn_0": "Set up a taxi ride for me in a saloon type car that goes to 97 Church Road", "agent_turn_0": "Root system offer taxi book inform taxi find source equals location equals Laurel Street", "user_turn_1": "Edit the destination to be at Dexion House", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint String)) Path.apply \" object.destination.location \") (lambda (^(Constraint String) x0) (?= \" Dexion House \"))))", "idx": "19136", "datum_id": {"dialogue_id": "fbeb89dc-a2fe-4b70-8894-f380e325c9c6", "turn_index": 3}}
{"user_turn_0": "Is there car parking ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Let 's book it then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "19141", "datum_id": {"dialogue_id": "b047906f-1e06-4c1a-b229-00cc99295bfc", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , book me a table for 3 at the Jute Box on October 24th at 3:30 PM .", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.restaurantName_? (?= \" Jute Box \")) (Restaurant.tableSize_? (?= 3))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (October))) (Date.day_? (?= (Day.apply 24L)))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "19152", "datum_id": {"dialogue_id": "ffe02099-7d23-4267-9f01-e6b62c4b19d4", "turn_index": 0}}
{"user_turn_0": "What 's the address ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 397 Tallwood Court", "user_turn_1": "Book it for 3:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Floss and Joes \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "19162", "datum_id": {"dialogue_id": "f1dd9e9d-7472-4a03-bc0b-1603aabe8c60", "turn_index": 5}}
{"user_turn_0": "Does it come with a private bathroom ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "19168", "datum_id": {"dialogue_id": "c1c8a0c6-e238-4028-b2b6-0acc1ff2f919", "turn_index": 3}}
{"user_turn_0": "Any room type , and I need two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you make the check in Tuesday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "19170", "datum_id": {"dialogue_id": "c1c8a0c6-e238-4028-b2b6-0acc1ff2f919", "turn_index": 5}}
{"user_turn_0": "Derby is where I 'll be departing from", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 55 meridiem equals PM", "user_turn_1": "I like this one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (^((Constraint Train)) refer)))))", "idx": "19174", "datum_id": {"dialogue_id": "2476e2e3-6a39-43b7-b701-07aed0ed068d", "turn_index": 2}}
{"user_turn_0": "I 'll be returning on Friday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM", "user_turn_1": "That 's fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "19176", "datum_id": {"dialogue_id": "2476e2e3-6a39-43b7-b701-07aed0ed068d", "turn_index": 4}}
{"user_turn_0": "What is the address of that place ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals The African Waistcoat", "user_turn_1": "Looks good . Make the booking for me tomorrow at 6:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Flip Out \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "19195", "datum_id": {"dialogue_id": "1f4586df-fb11-467b-b3c7-23682d9e4b24", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , aM start time or PM start time ?", "tgt": "(plan (do (^(CalendarEvent) Create :object (CalendarEvent.eventName_? (?= \" Online English \"))) (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Bella \")))) (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always))))))))", "idx": "19198", "datum_id": {"dialogue_id": "43dd2055-6a78-4cfe-8324-ea9ad2a08255", "turn_index": 0}}
{"user_turn_0": "Hey assistant , aM start time or PM start time ?", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange", "user_turn_1": "For what time ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object \") (lambda (^(Constraint CalendarEvent) x0) (& x0 (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))))) (DateTimeRange.endDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "19199", "datum_id": {"dialogue_id": "43dd2055-6a78-4cfe-8324-ea9ad2a08255", "turn_index": 1}}
{"user_turn_0": "Yes , I would like it to be expensive", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floss and Joes", "user_turn_1": "Ok sure book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Flew Z \"))))))", "idx": "19218", "datum_id": {"dialogue_id": "f9421b45-52b2-4662-b9b8-ecc98438e4fe", "turn_index": 4}}
{"user_turn_0": "Hello assistant , i would like to book a hotel that is low in price for today . I check out on the 24th .", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "Find one in Strawberry Hill . Make sure it has at least a 1 star rating", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.location_? (?= \" Strawberry Hill \"))) (Hotel.rating_? (?>= (someSalient (?= 1))))))))", "idx": "19224", "datum_id": {"dialogue_id": "6c1c8ca7-dd34-4ea8-8d18-ba02eb0bfabc", "turn_index": 1}}
{"user_turn_0": "Book two rooms please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will breakfast be included ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "19235", "datum_id": {"dialogue_id": "e4a28bc2-79d2-4110-b10d-13dc91d958a4", "turn_index": 6}}
{"user_turn_0": "Do they have a car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Make the reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "19239", "datum_id": {"dialogue_id": "314bdae8-da13-41d6-a37b-cef13a9fb731", "turn_index": 2}}
{"user_turn_0": "Just one", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Am I allowed to cancel for free ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "19243", "datum_id": {"dialogue_id": "314bdae8-da13-41d6-a37b-cef13a9fb731", "turn_index": 6}}
{"user_turn_0": "Hey , please tell me when my train to Glasgow Queen Street is .", "agent_turn_0": "Root system inform train find focus equals departureDateTime equals time equals hour equals 10 meridiem equals AM", "user_turn_1": "Thanks for the help . I would like to make a hotel booking fora . low price near my event", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Hotel.priceRange_? (?= (PriceRange.Low))))))", "idx": "19246", "datum_id": {"dialogue_id": "53fe5db4-19e2-4988-9039-931b5225337b", "turn_index": 1}}
{"user_turn_0": "Does that place include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Make the booking for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "19248", "datum_id": {"dialogue_id": "53fe5db4-19e2-4988-9039-931b5225337b", "turn_index": 3}}
{"user_turn_0": "What are they rated ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Make a reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "19261", "datum_id": {"dialogue_id": "3c8b56e9-2c37-4b42-978e-5db5c75f9bdb", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i need to book a taxi that will go from 14 Dagmar passage to The Body Shop at Upper Street . There will be three passengers .", "tgt": "(plan (^(Taxi) Book :object (& (& (Taxi.source_? (Place.location_? (?= \" 14 Dagmar Passage \"))) (Taxi.destination_? (Place.location_? (?= \" The Body Shop in Upper Street \")))) (Taxi.passengers_? (?= 3)))))", "idx": "19271", "datum_id": {"dialogue_id": "3d299aa0-0d78-46c6-a0ad-ade2fdf39c08", "turn_index": 0}}
{"user_turn_0": "Yes , please book the taxi for me", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "Book a cheap hotel in Forest Hill with car parking . Check in today and check out tomorrow", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" Forest Hill \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (?= (Tomorrow))))))) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Hotel.hasParking_? (?= true)))))", "idx": "19291", "datum_id": {"dialogue_id": "3b1b0460-18ca-4a1a-a3a7-a448f1c6a667", "turn_index": 4}}
{"user_turn_0": "Two please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Change the check out date to the 28th please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Day)) Path.apply \" object.dateTimeRange.endDateTime.date.day \") (lambda (^(Constraint Day) x0) (?= (Day.apply 28L)))))", "idx": "19296", "datum_id": {"dialogue_id": "c2a77ece-e0f3-4c8c-8ff1-c2f6dd6ae8cf", "turn_index": 3}}
{"user_turn_0": "I do n't like any of those . I need more options . Food type does not matter", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capricorn", "user_turn_1": "Tell me the address of that place", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "19301", "datum_id": {"dialogue_id": "ac1fc8e5-1bbf-40fd-9963-7356bf0c1736", "turn_index": 3}}
{"user_turn_0": "Tell me the address of that place", "agent_turn_0": "Root system inform restaurant find focus equals address equals Little Bat", "user_turn_1": "Sounds good . Please book it for me on the 16th of July at 11 AM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Godka \"))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (July))) (Date.day_? (?= (Day.apply 16L)))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (meridiem_? (?= (Meridiem.AM))))))))))))", "idx": "19302", "datum_id": {"dialogue_id": "ac1fc8e5-1bbf-40fd-9963-7356bf0c1736", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , book me a table for 3 people there .", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.rating_? (^(Number) always)) :object (& (Restaurant.restaurantName_? (?= \" Floss and Joes \")) (Restaurant.location_? (?= \" Queensbury \")))))", "idx": "19305", "datum_id": {"dialogue_id": "3f11dfca-4637-40bf-befb-edb19ed3eb9c", "turn_index": 0}}
{"user_turn_0": "Hey assistant , book me a table for 3 people there .", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 1", "user_turn_1": "One star", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.restaurantName_? (?= \" Floss and Joes \")) (Restaurant.tableSize_? (?= 3)))))", "idx": "19306", "datum_id": {"dialogue_id": "3f11dfca-4637-40bf-befb-edb19ed3eb9c", "turn_index": 1}}
{"user_turn_0": "2 PM on February 21st", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Switch the appointment date to April 10th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (& (Date.month_? (?= (April))) (Date.day_? (?= (Day.apply 10L)))))))", "idx": "19309", "datum_id": {"dialogue_id": "3f11dfca-4637-40bf-befb-edb19ed3eb9c", "turn_index": 4}}
{"user_turn_0": "Correct !", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM", "user_turn_1": "I 'd prefer the 4:45 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "19313", "datum_id": {"dialogue_id": "ac886ea4-0ee3-4594-a4fa-cc45cfc5afdd", "turn_index": 2}}
{"user_turn_0": "I 'd like to return on Sunday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM", "user_turn_1": "That 's fine thank you", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "19315", "datum_id": {"dialogue_id": "ac886ea4-0ee3-4594-a4fa-cc45cfc5afdd", "turn_index": 4}}
{"user_turn_0": "Morning", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Thanks for the help . Get me a table at a Holland Park Indian restaurant on the 14th at 4 PM", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.location_? (?= \" Holland Park \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 14L))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))) (Restaurant.foodType_? (?= (FoodType.Indian))))))", "idx": "19320", "datum_id": {"dialogue_id": "8d5548bf-e93b-4492-a1f1-01dcc5abebf9", "turn_index": 3}}
{"user_turn_0": "Yes , I 'll be departing from Liverpool", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM price equals 170", "user_turn_1": "Book the flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "19325", "datum_id": {"dialogue_id": "d9a5b254-8390-44b1-95a6-ba90417d533b", "turn_index": 3}}
{"user_turn_0": "It will go on for two hours", "agent_turn_0": "Root system inform calendarEvent create Completed", "user_turn_1": "Thanks . I also need the event shared with Mr Hunter", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Hunter \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "19348", "datum_id": {"dialogue_id": "00fce993-7623-41b9-acf0-2638f8b80afb", "turn_index": 3}}
{"user_turn_0": "how far away is the location of the Away we golf event", "agent_turn_0": "Root system inform navigation find focus equals distance equals number equals 3", "user_turn_1": "I want to book a hotel from the 7th of November to the 9th of November in Paddington", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= \" Paddington \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 7L))))) (DateTimeRange.endDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 9L)))) (month_? (Date.month_? (?= (November)))))))))))", "idx": "19353", "datum_id": {"dialogue_id": "4364e5dd-cdd3-4edf-8393-423cea69d4c9", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , book me a spot at a low price restaurant with parking and make the booking time on the 9th at 10 o'clock", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.priceRange_? (?= (PriceRange.Low))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 9L))))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 10L)))))))) (Restaurant.hasParking_? (?= true)))))", "idx": "19356", "datum_id": {"dialogue_id": "82abb19d-c4c6-45e0-8dd1-cee8ba0b93ea", "turn_index": 0}}
{"user_turn_0": "Do they have laundry services ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "19364", "datum_id": {"dialogue_id": "c35393fe-78de-4760-aec9-65b391be101c", "turn_index": 3}}
{"user_turn_0": "I 'd like two rooms please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Please modify the check out date to the 21st", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Day)) Path.apply \" object.dateTimeRange.endDateTime.date.day \") (lambda (^(Constraint Day) x0) (?= (Day.apply 21L)))))", "idx": "19367", "datum_id": {"dialogue_id": "c35393fe-78de-4760-aec9-65b391be101c", "turn_index": 6}}
{"user_turn_0": "Get it for today at 5", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Change it to the 20th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 20L))))))", "idx": "19372", "datum_id": {"dialogue_id": "d6ddb9ab-0bcd-4747-8b4d-9a0a07bfd5ec", "turn_index": 3}}
{"user_turn_0": "I do n't like any of what you found me . I want to see more options . I do n't care about the food type", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flavoroso", "user_turn_1": "Tell me the average cost per person at this restaurant", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "19380", "datum_id": {"dialogue_id": "968d52ef-fcc2-4075-b9b4-c38eef55211e", "turn_index": 5}}
{"user_turn_0": "Tell me the average cost per person at this restaurant", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 35", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Boiling Fence \"))))))", "idx": "19381", "datum_id": {"dialogue_id": "968d52ef-fcc2-4075-b9b4-c38eef55211e", "turn_index": 6}}
{"user_turn_0": "Hey assistant , what is price range of the restaurant called Floss and Joes ?", "agent_turn_0": "Root system inform restaurant find focus equals priceRange equals High", "user_turn_1": "I want to book a table for 2 there", "tgt": "(plan (^(Restaurant) Book :object (& (^((Constraint Restaurant)) refer) (Restaurant.tableSize_? (?= 2)))))", "idx": "19386", "datum_id": {"dialogue_id": "8425e706-6a3a-410c-89ae-c906bd367000", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , 10:30 AM .", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.endDateTime_? (^(DateTime) always))) :object (& (CalendarEvent.eventName_? (?= \" Career Cast \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow))))))))", "idx": "19390", "datum_id": {"dialogue_id": "ebf95ad9-b52f-49af-82d7-33c06041281a", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , i want to send the event that I have on April the 14th to Mr Hodges", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (& (Date.day_? (?= (Day.apply 14L))) (Date.month_? (?= (April)))))))))) (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Hodges \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "19395", "datum_id": {"dialogue_id": "34773173-4ad0-4478-bece-2ff8968c97c5", "turn_index": 0}}
{"user_turn_0": "Stansted Airport", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 55 meridiem equals PM", "user_turn_1": "That one sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (^((Constraint Train)) refer)))))", "idx": "19399", "datum_id": {"dialogue_id": "34773173-4ad0-4478-bece-2ff8968c97c5", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , book a hotel a star - rating near the event I have next .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))) (Hotel.rating_? (?!= (someSalient (?= 0)))))))", "idx": "19430", "datum_id": {"dialogue_id": "5c363f9e-dfc6-48af-8091-8ba2abc047b4", "turn_index": 0}}
{"user_turn_0": "I want another place with a moderate price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals The Hot Springs price equals 166", "user_turn_1": "Does it have free wifi", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasWifi_? (^(Boolean) always)))))", "idx": "19433", "datum_id": {"dialogue_id": "5c363f9e-dfc6-48af-8091-8ba2abc047b4", "turn_index": 3}}
{"user_turn_0": "Does it have free wifi", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Odysse Suites \"))))))", "idx": "19434", "datum_id": {"dialogue_id": "5c363f9e-dfc6-48af-8091-8ba2abc047b4", "turn_index": 4}}
{"user_turn_0": "I 'd rather have a different moderately priced hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Green Acres price equals 210", "user_turn_1": "Make the booking for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Green Lushy Resorts \"))))))", "idx": "19442", "datum_id": {"dialogue_id": "e3bf38ae-c483-4a16-b58d-c0078ffcf94a", "turn_index": 3}}
{"user_turn_0": "The 24th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM price equals 150", "user_turn_1": "Perfect . I 'll do that one please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "19454", "datum_id": {"dialogue_id": "4863ca95-2697-49dd-b345-7bffbc3e9119", "turn_index": 6}}
{"user_turn_0": "I want it to be located at Hillingdon", "agent_turn_0": "Root system prompt restaurant book object equals priceRange", "user_turn_1": "A moderate price range", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.priceRange_? (?= (PriceRange.Moderate)))))))", "idx": "19458", "datum_id": {"dialogue_id": "36dbb833-9346-41c5-aa3c-1abcd6bd768a", "turn_index": 2}}
{"user_turn_0": "I would like another place that offers outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Shining Gate", "user_turn_1": "Does that place have parking ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "19460", "datum_id": {"dialogue_id": "36dbb833-9346-41c5-aa3c-1abcd6bd768a", "turn_index": 4}}
{"user_turn_0": "What does it cost per person on average ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 65", "user_turn_1": "Sounds good ; book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Beef Easy \"))))))", "idx": "19464", "datum_id": {"dialogue_id": "36dbb833-9346-41c5-aa3c-1abcd6bd768a", "turn_index": 8}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , i found the following restaurants that fit your criteria . A good option appears to be Chipotle Grill .", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Queensbury \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 11L)))))))) (Restaurant.priceRange_? (?= (PriceRange.Low)))) (Restaurant.foodType_? (?= (FoodType.Thai))))))", "idx": "19493", "datum_id": {"dialogue_id": "2f2572cc-6729-4db3-bede-841555daccf9", "turn_index": 0}}
{"user_turn_0": "Hi assistant , i found the following restaurants that fit your criteria . A good option appears to be Chipotle Grill .", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Chipotle Grill", "user_turn_1": "35 pounds", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "19494", "datum_id": {"dialogue_id": "2f2572cc-6729-4db3-bede-841555daccf9", "turn_index": 1}}
{"user_turn_0": "I do n't like any of what you found me . Are there restaurants that serve pizza ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flip Out", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Chipotle Grill \"))))))", "idx": "19498", "datum_id": {"dialogue_id": "2f2572cc-6729-4db3-bede-841555daccf9", "turn_index": 5}}
{"user_turn_0": "Is laundry available ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "19507", "datum_id": {"dialogue_id": "16941302-01d7-4090-b755-5446034ddc61", "turn_index": 6}}
{"user_turn_0": "Hey , have I put formula one every week on the calendar ?", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Can you create it then ?", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.eventName_? (?= \" spring outing \")) (CalendarEvent.recurrenceUnit_? (RecurrenceUnit.dayOfWeek_? (?= (Thursday)))))))", "idx": "19513", "datum_id": {"dialogue_id": "762007b8-19b5-410c-acdb-2efcd5bd2608", "turn_index": 1}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM price equals 135", "user_turn_1": "I 'd like to book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "19524", "datum_id": {"dialogue_id": "e0651caf-7c63-4b5c-99f2-cec2f0d64597", "turn_index": 2}}
{"user_turn_0": "Hello , i would like to book a low priced hotel with car parking .", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "I want the hotel to be at Green park", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.location_? (?= \" Green Park \"))))))", "idx": "19528", "datum_id": {"dialogue_id": "95117bec-ca25-41bf-a7a0-8bf6ba6209e9", "turn_index": 1}}
{"user_turn_0": "Does that come with breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Please make the booking for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "19530", "datum_id": {"dialogue_id": "95117bec-ca25-41bf-a7a0-8bf6ba6209e9", "turn_index": 3}}
{"user_turn_0": "I 'd rather have a different hotel with at least a three star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Four Seasons price equals 119", "user_turn_1": "Make the booking", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Parallel Tower \"))))))", "idx": "19565", "datum_id": {"dialogue_id": "489f72bb-fdaa-432e-ba62-f22518794f9c", "turn_index": 4}}
{"user_turn_0": "Can you book 3 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually , change the check in date to tomorrow instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (?= (Tomorrow)))))", "idx": "19567", "datum_id": {"dialogue_id": "489f72bb-fdaa-432e-ba62-f22518794f9c", "turn_index": 6}}
{"user_turn_0": "Actually , change the check in date to tomorrow instead", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel my booking for free ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "19568", "datum_id": {"dialogue_id": "489f72bb-fdaa-432e-ba62-f22518794f9c", "turn_index": 7}}
{"user_turn_0": "I want another hotel . Make sure it has at least a one star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Vitale price equals 201", "user_turn_1": "Give me the rating", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.rating_? (^(Number) always)))))", "idx": "19575", "datum_id": {"dialogue_id": "2eb58eb8-560a-45de-8f1f-052d6350cea5", "turn_index": 5}}
{"user_turn_0": "Give me the rating", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Embassy Suites \"))))))", "idx": "19576", "datum_id": {"dialogue_id": "2eb58eb8-560a-45de-8f1f-052d6350cea5", "turn_index": 6}}
{"user_turn_0": "Two please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they let you cancel for free ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "19580", "datum_id": {"dialogue_id": "2eb58eb8-560a-45de-8f1f-052d6350cea5", "turn_index": 10}}
{"user_turn_0": "Friday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM price equals 210", "user_turn_1": "I like that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "19587", "datum_id": {"dialogue_id": "e7698d4f-da58-4353-a608-3a5d021bc64d", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , book this flight .", "tgt": "(plan (^(Flight) Book :object (& (& (& (Flight.tripType_? (?= (TripType.roundTrip))) (Flight.source_? (Place.location_? (?= \" London Heathrow \")))) (Flight.destination_? (Place.location_? (?= \" Brussel \")))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow))))))))", "idx": "19589", "datum_id": {"dialogue_id": "1470362b-cd4e-4c64-8571-1d9358caf79c", "turn_index": 0}}
{"user_turn_0": "Hi there , book this flight .", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM price equals 156", "user_turn_1": "Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "19590", "datum_id": {"dialogue_id": "1470362b-cd4e-4c64-8571-1d9358caf79c", "turn_index": 1}}
{"user_turn_0": "Sunday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime", "user_turn_1": "Book me a round trip flight from London Heathrow to Brussel for tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))))))", "idx": "19591", "datum_id": {"dialogue_id": "1470362b-cd4e-4c64-8571-1d9358caf79c", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , if you take the shortest path , 45 minutes .", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Afternoon))))))))))", "idx": "19618", "datum_id": {"dialogue_id": "7d2d3c38-fff8-4e6f-a853-d4e2c7740836", "turn_index": 0}}
{"user_turn_0": "Hi my assistant , if you take the shortest path , 45 minutes .", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 45", "user_turn_1": "AM start time or PM start time ?", "tgt": "(plan (^(CalendarEvent) Create :object (& (& (CalendarEvent.eventName_? (?= \" media interview \")) (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 12L))) (Time.minute_? (?= (Minute.apply 30L)))))) (DateTimeRange.endDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM))))))))) (CalendarEvent.attendees_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Son))))))))", "idx": "19619", "datum_id": {"dialogue_id": "7d2d3c38-fff8-4e6f-a853-d4e2c7740836", "turn_index": 1}}
{"user_turn_0": "How much does it cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 43", "user_turn_1": "Great , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (^((Constraint String)) refer))))))", "idx": "19626", "datum_id": {"dialogue_id": "d0e2ac99-dac6-41b5-9bd9-14de0d93b3ee", "turn_index": 3}}
{"user_turn_0": "I want a table for 6", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Alright , update the appointment date to today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (?= (Today))))))))", "idx": "19628", "datum_id": {"dialogue_id": "d0e2ac99-dac6-41b5-9bd9-14de0d93b3ee", "turn_index": 5}}
{"user_turn_0": "Hi there , when will flight HO347 take off ?", "agent_turn_0": "Root system inform flight find focus equals departureDateTime equals time equals hour equals 11 minute equals 30", "user_turn_1": "Change the date of next calendar event to June 19th on my calendar please", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (& (Date.month_? (?= (June))) (Date.day_? (?= (Day.apply 19L))))))) :object (CalendarEvent.listOffset_? (?= 1))))", "idx": "19631", "datum_id": {"dialogue_id": "3407f5a8-851c-42ba-9134-5698401c9f97", "turn_index": 1}}
{"user_turn_0": "Italian Cuisine", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Cityroom", "user_turn_1": "Does the restaurant have outdoor seats ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "19635", "datum_id": {"dialogue_id": "3407f5a8-851c-42ba-9134-5698401c9f97", "turn_index": 5}}
{"user_turn_0": "Does it have laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "19657", "datum_id": {"dialogue_id": "d36347bb-69f9-425b-89e6-fe9e913667b4", "turn_index": 4}}
{"user_turn_0": "Try checking in today", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel for free ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "19662", "datum_id": {"dialogue_id": "d36347bb-69f9-425b-89e6-fe9e913667b4", "turn_index": 9}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , will you be departing from Leeds ?", "tgt": "(plan (^(Flight) Book :object (& (Flight.destination_? (Place.location_? (?= \" Glasgow \"))) (Flight.tripType_? (?= (TripType.oneWay))))))", "idx": "19686", "datum_id": {"dialogue_id": "98fa57fc-9ac2-475e-a794-fa8ab06dc7cc", "turn_index": 0}}
{"user_turn_0": "And its rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 5", "user_turn_1": "Let 's book that place", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "19694", "datum_id": {"dialogue_id": "bc862215-85d7-4957-8514-ce093ca9a439", "turn_index": 3}}
{"user_turn_0": "I will be leaving from Waterloo", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM", "user_turn_1": "That 's fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "19706", "datum_id": {"dialogue_id": "699d6529-2be6-4a64-8f0f-080894787840", "turn_index": 3}}
{"user_turn_0": "I 'll be returning on Sunday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM", "user_turn_1": "I like that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "19709", "datum_id": {"dialogue_id": "699d6529-2be6-4a64-8f0f-080894787840", "turn_index": 6}}
{"user_turn_0": "I 'm leaving from Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 4 minute equals 20 meridiem equals PM price equals 170", "user_turn_1": "I want the one at 4:45 PM though", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "19726", "datum_id": {"dialogue_id": "004e46fa-6250-47c0-96a8-b3dc4f8e0869", "turn_index": 2}}
{"user_turn_0": "I 'm going to return on Saturday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM price equals 199", "user_turn_1": "That works for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "19729", "datum_id": {"dialogue_id": "004e46fa-6250-47c0-96a8-b3dc4f8e0869", "turn_index": 5}}
{"user_turn_0": "Is a car park available ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it on my behalf", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "19735", "datum_id": {"dialogue_id": "c317d7cc-85d6-4aa5-bf0c-6a82b2ad4e6e", "turn_index": 4}}
{"user_turn_0": "Does that place offer laundry service ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Okay , please make that booking for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "19747", "datum_id": {"dialogue_id": "b3319cd6-0f8b-4b24-942f-21c5fb34450c", "turn_index": 3}}
{"user_turn_0": "Just one", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they provide free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "19751", "datum_id": {"dialogue_id": "b3319cd6-0f8b-4b24-942f-21c5fb34450c", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , does the cost include breakfast ?", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday))))))))))", "idx": "19753", "datum_id": {"dialogue_id": "4c0f10f5-0e99-482e-8bd7-d156c64b9d3e", "turn_index": 0}}
{"user_turn_0": "Hi assistant , does the cost include breakfast ?", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Hyatt price equals 138", "user_turn_1": "Here are my findings . A good option appears to be Hyatt hotel . It costs 138 pounds a night", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "19754", "datum_id": {"dialogue_id": "4c0f10f5-0e99-482e-8bd7-d156c64b9d3e", "turn_index": 1}}
{"user_turn_0": "Tell me how to get there", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Hyatt \"))))))", "idx": "19758", "datum_id": {"dialogue_id": "4c0f10f5-0e99-482e-8bd7-d156c64b9d3e", "turn_index": 5}}
{"user_turn_0": "Hello assistant , tell me where is my calendar event with Mr Roberts held", "agent_turn_0": "Root system inform calendarEvent find focus equals location equals The Globe", "user_turn_1": "How long will it take to get there ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (Place.location_? (^((Constraint String)) refer)))))", "idx": "19762", "datum_id": {"dialogue_id": "b9bf7356-b9d4-49c7-9fea-0f4c5ce2f875", "turn_index": 1}}
{"user_turn_0": "I would like another restaurant with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Godka", "user_turn_1": "Does this restaurant take credit cards ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "19767", "datum_id": {"dialogue_id": "b9bf7356-b9d4-49c7-9fea-0f4c5ce2f875", "turn_index": 6}}
{"user_turn_0": "I want another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capers", "user_turn_1": "Does this restaurant take credit cards ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "19769", "datum_id": {"dialogue_id": "b9bf7356-b9d4-49c7-9fea-0f4c5ce2f875", "turn_index": 8}}
{"user_turn_0": "Does this restaurant take credit cards ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "This is fine , book it for Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" The Boiling Fence \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday))))))))))", "idx": "19770", "datum_id": {"dialogue_id": "b9bf7356-b9d4-49c7-9fea-0f4c5ce2f875", "turn_index": 9}}
{"user_turn_0": "Let me know if I have can two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does this booking support free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "19777", "datum_id": {"dialogue_id": "22b16d55-7439-4108-958f-28cc173b4e97", "turn_index": 3}}
{"user_turn_0": "Does this booking support free cancellation ?", "agent_turn_0": "Root system inform hotel find focus equals freeCancellation equals True", "user_turn_1": "Actually , I need to revise the check in date to be on Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "19778", "datum_id": {"dialogue_id": "22b16d55-7439-4108-958f-28cc173b4e97", "turn_index": 4}}
{"user_turn_0": "Hey , make me a reminder about the event .", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals startDateTime equals time equals hour equals 3", "user_turn_1": "Next task , 3 o'clock", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (?= (^(DateTime CalendarEvent) reference (^(CalendarEvent) always))))))", "idx": "19782", "datum_id": {"dialogue_id": "b84e45b1-836f-4abe-9d45-27db60b7f61f", "turn_index": 1}}
{"user_turn_0": "Next task , 3 o'clock", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Next task , is there a restaurant name or a preferred location that you have in mind ?", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.priceRange_? (?= (PriceRange.High))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 14L))))))) (Restaurant.foodType_? (?= (FoodType.American))))))", "idx": "19783", "datum_id": {"dialogue_id": "b84e45b1-836f-4abe-9d45-27db60b7f61f", "turn_index": 2}}
{"user_turn_0": "Next task , is there a restaurant name or a preferred location that you have in mind ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName location", "user_turn_1": "I want a restaurant in Green Park that does n't have a rating of zero stars", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.location_? (?= \" Green Park \"))) (Restaurant.rating_? (?!= (someSalient (?= 0))))))))", "idx": "19784", "datum_id": {"dialogue_id": "b84e45b1-836f-4abe-9d45-27db60b7f61f", "turn_index": 3}}
{"user_turn_0": "Hey , what 's the rating of Kiwi Sea in Tower Hill", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 3", "user_turn_1": "What 's their price range ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.priceRange_? (^(PriceRange) always)) :object (Restaurant.restaurantName_? (?= \" Kiwi Sea \"))))", "idx": "19802", "datum_id": {"dialogue_id": "592c26f8-9e35-41ff-bd15-bdb494d48d1b", "turn_index": 1}}
{"user_turn_0": "They do n't look good to me . What about Indian cuisine ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "OK . Book it at 10:30 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Chipotle Grill \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))))))))))", "idx": "19813", "datum_id": {"dialogue_id": "9da2f7d3-2367-464e-8603-ac65bfb6be75", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , i found the following restaurants that fit your criteria . A good option appears to be Kitty City .", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Liverpool Street \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM)))))))) (Restaurant.priceRange_? (?= (PriceRange.Moderate)))) (Restaurant.hasParking_? (?= true)))))", "idx": "19816", "datum_id": {"dialogue_id": "0fd2b687-a660-4e18-aa22-2b07e13e8640", "turn_index": 0}}
{"user_turn_0": "Hello , i found the following restaurants that fit your criteria . A good option appears to be Kitty City .", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Kitty City", "user_turn_1": "Yes , the restaurant has parking", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "19817", "datum_id": {"dialogue_id": "0fd2b687-a660-4e18-aa22-2b07e13e8640", "turn_index": 1}}
{"user_turn_0": "Yes , the restaurant has parking", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "19818", "datum_id": {"dialogue_id": "0fd2b687-a660-4e18-aa22-2b07e13e8640", "turn_index": 2}}
{"user_turn_0": "Table for 3 people", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Switch my appointment time to 6 PM then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hour)) Path.apply \" object.atDateTime.time.hour \") (lambda (^(Constraint Hour) x0) (?= (Hour.apply 6L)))))", "idx": "19820", "datum_id": {"dialogue_id": "0fd2b687-a660-4e18-aa22-2b07e13e8640", "turn_index": 4}}
{"user_turn_0": "No , I 'm goin to Berlin on Friday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 2 object equals nextDepartureDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM price equals 150", "user_turn_1": "That 's alright with me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "19828", "datum_id": {"dialogue_id": "865ed368-8f06-43c5-b1b1-9a9299f336d8", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i want to book a cheap hotel in Grahame Park with car parking . Check in today and check out 14th .", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" Grahame Park \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 14L)))))))) (Hotel.priceRange_? (?= (PriceRange.Low)))) (Hotel.hasParking_? (?= true)))))", "idx": "19835", "datum_id": {"dialogue_id": "3b53f493-f3c2-4ae8-b34d-69bd55bf8a31", "turn_index": 0}}
{"user_turn_0": "I prefer a hotel with four star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Bourbon Bliss price equals 150", "user_turn_1": "Does the hotel have private bath room ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.privateBath_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "19837", "datum_id": {"dialogue_id": "3b53f493-f3c2-4ae8-b34d-69bd55bf8a31", "turn_index": 2}}
{"user_turn_0": "Does the hotel have private bath room ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Vitale \"))))))", "idx": "19838", "datum_id": {"dialogue_id": "3b53f493-f3c2-4ae8-b34d-69bd55bf8a31", "turn_index": 3}}
{"user_turn_0": "What 's the weather like there ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cloudy", "user_turn_1": "What is the weather in Sheffield ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint String)) Path.apply \" object.location \") (lambda (^(Constraint String) x0) (?= \" Sheffield \"))))", "idx": "19845", "datum_id": {"dialogue_id": "bbd97fcb-9994-4975-aeec-a70f52254d30", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , make reservation for a cab going to salon .", "tgt": "(plan (^(Taxi) Book :object (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.eventName_? (?= \" salon \")))))))", "idx": "19853", "datum_id": {"dialogue_id": "9c9e9394-128c-4a91-9c9b-7ce85f8b8d8c", "turn_index": 0}}
{"user_turn_0": "Hello , is there a routine checkup in Maple Leaf scheduled ?", "agent_turn_0": "Root system inform calendarEvent find Existed", "user_turn_1": "When does my train to Oxford arrive ?", "tgt": "(plan (^(Train) Find :focus (Train.arrivalDateTime_? (^(DateTime) always)) :object (Train.destination_? (Place.location_? (?= \" Oxford station \")))))", "idx": "19877", "datum_id": {"dialogue_id": "b92cb555-7ca2-4b49-85fd-bd8a33f0d903", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , 1 PM .", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (^(DateTime) always))) :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Morning)))))))", "idx": "19882", "datum_id": {"dialogue_id": "6e7a2256-9d00-4b34-a50b-6d33609414a9", "turn_index": 0}}
{"user_turn_0": "Hello assistant , 1 PM .", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals startDateTime equals time equals hour equals 1 meridiem equals PM", "user_turn_1": "Do me another favor . Make me a reminder for that time", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM))))))))", "idx": "19883", "datum_id": {"dialogue_id": "6e7a2256-9d00-4b34-a50b-6d33609414a9", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , 10 AM .", "tgt": "(plan (^(Train) Find :focus (Train.arrivalDateTime_? (^(DateTime) always)) :object (& (Train.destination_? (Place.location_? (?= \" Brighton station \"))) (Train.departureDateTime_? (DateTime.date_? (& (Date.month_? (?= (May))) (Date.day_? (?= (Day.apply 11L)))))))))", "idx": "19893", "datum_id": {"dialogue_id": "b5f5721e-8450-462e-96a7-745909debf8e", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , for what time ?", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.eventName_? (?= \" doctor's appointment \")) (CalendarEvent.recurrenceUnit_? (RecurrenceUnit.dayOfWeek_? (?= (Sunday)))))))", "idx": "19910", "datum_id": {"dialogue_id": "f4645b6b-5056-4031-a63f-10a703328170", "turn_index": 0}}
{"user_turn_0": "Hello assistant , for what time ?", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange", "user_turn_1": "When will the event finish ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object \") (lambda (^(Constraint CalendarEvent) x0) (& x0 (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (?= (Tomorrow))) (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L))))))))))))", "idx": "19911", "datum_id": {"dialogue_id": "f4645b6b-5056-4031-a63f-10a703328170", "turn_index": 1}}
{"user_turn_0": "I do n't like these . Let me go with other restaurants that serve pizza", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Joint", "user_turn_1": "OK , let me book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Juniper Cloud \"))))))", "idx": "19929", "datum_id": {"dialogue_id": "b3a538a7-1eab-4b3e-a0c5-41c184525518", "turn_index": 3}}
{"user_turn_0": "Does the hotel have parking ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "I 'd rather have a different cheap hotel", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.priceRange_? (?= (PriceRange.Low)))))))", "idx": "19944", "datum_id": {"dialogue_id": "78919d42-f3f2-428f-9784-2ec40043465a", "turn_index": 3}}
{"user_turn_0": "I 'd rather have a different cheap hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Rose price equals 156", "user_turn_1": "Does the hotel have parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "19945", "datum_id": {"dialogue_id": "78919d42-f3f2-428f-9784-2ec40043465a", "turn_index": 4}}
{"user_turn_0": "Does the hotel have parking ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" River Park \"))))))", "idx": "19946", "datum_id": {"dialogue_id": "78919d42-f3f2-428f-9784-2ec40043465a", "turn_index": 5}}
{"user_turn_0": "Is there a private bathroom ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Obsidian Sky \"))))))", "idx": "19954", "datum_id": {"dialogue_id": "20219606-f1bb-4c5b-b5f4-78267dc39a3f", "turn_index": 5}}
{"user_turn_0": "Two rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you change the check out date to Saturday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Saturday))))))", "idx": "19959", "datum_id": {"dialogue_id": "20219606-f1bb-4c5b-b5f4-78267dc39a3f", "turn_index": 10}}
{"user_turn_0": "How do I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "19969", "datum_id": {"dialogue_id": "c9b6cf16-9e18-4cbf-a029-335d8f46d8fb", "turn_index": 2}}
{"user_turn_0": "I want two rooms . The type does n't matter", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Wait , update the check out date to Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Saturday))))))", "idx": "19971", "datum_id": {"dialogue_id": "c9b6cf16-9e18-4cbf-a029-335d8f46d8fb", "turn_index": 4}}
{"user_turn_0": "Wait , update the check out date to Sunday", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "19972", "datum_id": {"dialogue_id": "c9b6cf16-9e18-4cbf-a029-335d8f46d8fb", "turn_index": 5}}
{"user_turn_0": "Hi there , i want to know how far away is it from 8063 Lake View to 21 Parkfield Street by public transportation", "agent_turn_0": "Root system inform navigation find focus equals distance equals number equals 6", "user_turn_1": "Can you tell me the distance from 29 Alexander Road to 29 Alexander Road", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Navigation)) Path.apply \" object \") (lambda (^(Constraint Navigation) x0) (& (Navigation.source_? (Place.location_? (?= \" 29 Alexander Road \"))) (Navigation.destination_? (Place.location_? (?= \" 29 Alexander Road \")))))))", "idx": "19975", "datum_id": {"dialogue_id": "eb440c09-ad26-4fdb-bba3-27ccee6c1848", "turn_index": 1}}
{"user_turn_0": "Is there any missed calls from Anne", "agent_turn_0": "Root system inform phoneCall checkExistence NotExisted", "user_turn_1": "Call him / her", "tgt": "(plan (^(PhoneCall) Create :object (PhoneCall.recipients_? (^((Constraint Contact)) refer))))", "idx": "19978", "datum_id": {"dialogue_id": "eb440c09-ad26-4fdb-bba3-27ccee6c1848", "turn_index": 4}}
{"user_turn_0": "Does the hotel have car park ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Ok , book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "19991", "datum_id": {"dialogue_id": "46333859-a7e9-4483-a953-89a1aec3f652", "turn_index": 2}}
{"user_turn_0": "Can I have 3 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does the booking support free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "19994", "datum_id": {"dialogue_id": "46333859-a7e9-4483-a953-89a1aec3f652", "turn_index": 5}}
{"user_turn_0": "Book one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to pay beforehand ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "20011", "datum_id": {"dialogue_id": "ed4f8a8a-ac35-402e-b728-dfcceaf10d36", "turn_index": 5}}
{"user_turn_0": "Can you find me a four - star hotel please", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Westin price equals 160", "user_turn_1": "Do they have a car parked there ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasParking_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "20016", "datum_id": {"dialogue_id": "b50990f0-9e44-4120-8c42-157dc9c00fdc", "turn_index": 3}}
{"user_turn_0": "Do they have a car parked there ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Candlewood Suites \"))))))", "idx": "20017", "datum_id": {"dialogue_id": "b50990f0-9e44-4120-8c42-157dc9c00fdc", "turn_index": 4}}
{"user_turn_0": "I do n't care about the room type but I will need three rooms", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "If I check in on Tuesday will that change things ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "20019", "datum_id": {"dialogue_id": "b50990f0-9e44-4120-8c42-157dc9c00fdc", "turn_index": 6}}
{"user_turn_0": "Does it have a private bath room ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "20024", "datum_id": {"dialogue_id": "f1866d6c-a65f-4264-9031-efb581013a23", "turn_index": 3}}
{"user_turn_0": "I do n't care , but I need wifi", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Try for a Tuesday check in instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "20027", "datum_id": {"dialogue_id": "f1866d6c-a65f-4264-9031-efb581013a23", "turn_index": 6}}
{"user_turn_0": "Hi assistant , can you give me directions to 8063 Lake View by car ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "What will the weather be like today ?", "tgt": "(plan (^(WeatherReport) Find :object (WeatherReport.atDateTime_? (DateTime.date_? (?= (Today))))))", "idx": "20031", "datum_id": {"dialogue_id": "d0c03cf4-41aa-4cc6-b1f4-76f0a8784288", "turn_index": 1}}
{"user_turn_0": "Yeah , I want to eat somewhere expensive", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floq", "user_turn_1": "Does it have seating outside ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "20036", "datum_id": {"dialogue_id": "d0c03cf4-41aa-4cc6-b1f4-76f0a8784288", "turn_index": 6}}
{"user_turn_0": "Does it have seating outside ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "Ok , book me a table please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Encino \"))))))", "idx": "20037", "datum_id": {"dialogue_id": "d0c03cf4-41aa-4cc6-b1f4-76f0a8784288", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , i 'll be departing from London .", "tgt": "(plan (^(Flight) Book :object (& (& (Flight.destination_? (Place.location_? (?= \" Belfast City \"))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow)))))) (Flight.tripType_? (?= (TripType.roundTrip))))))", "idx": "20046", "datum_id": {"dialogue_id": "3615f434-790d-4b4f-b48d-d899aa2dc22f", "turn_index": 0}}
{"user_turn_0": "Hey , i 'll be departing from London .", "agent_turn_0": "Root system prompt flight book object equals source", "user_turn_1": "Book a round trip flight to Belfast City for tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.source_? (Place.location_? (?= \" London \")))))))", "idx": "20047", "datum_id": {"dialogue_id": "3615f434-790d-4b4f-b48d-d899aa2dc22f", "turn_index": 1}}
{"user_turn_0": "Is the flight a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Book this flight for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "20049", "datum_id": {"dialogue_id": "3615f434-790d-4b4f-b48d-d899aa2dc22f", "turn_index": 3}}
{"user_turn_0": "How can I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "20067", "datum_id": {"dialogue_id": "2ea2bf7c-490d-4573-9922-941b98885f4e", "turn_index": 4}}
{"user_turn_0": "Which of the restaurants serve Thai Food ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Goat and Guru", "user_turn_1": "Does this restaurant have outdoor seats ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "20080", "datum_id": {"dialogue_id": "6a21202b-f1d7-4bbf-80a5-2cc9593844b8", "turn_index": 3}}
{"user_turn_0": "Does this restaurant have outdoor seats ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "This is fine , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Emptia \"))))))", "idx": "20081", "datum_id": {"dialogue_id": "6a21202b-f1d7-4bbf-80a5-2cc9593844b8", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , what 's the price range of Jute Joint ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.priceRange_? (^(PriceRange) always)) :object (Restaurant.restaurantName_? (?= \" Jute Joint \"))))", "idx": "20084", "datum_id": {"dialogue_id": "a169c754-ba09-4329-a119-a42045507adc", "turn_index": 0}}
{"user_turn_0": "Hello assistant , what 's the price range of Jute Joint ?", "agent_turn_0": "Root system inform restaurant find focus equals priceRange equals Low", "user_turn_1": "Book it for 3", "tgt": "(plan (^(Restaurant) Book :object (& (^((Constraint Restaurant)) refer) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 3L)))))))))", "idx": "20085", "datum_id": {"dialogue_id": "a169c754-ba09-4329-a119-a42045507adc", "turn_index": 1}}
{"user_turn_0": "Book it for 3", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Could you change the time to 4", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hour)) Path.apply \" object.atDateTime.time.hour \") (lambda (^(Constraint Hour) x0) (?= (Hour.apply 4L)))))", "idx": "20086", "datum_id": {"dialogue_id": "a169c754-ba09-4329-a119-a42045507adc", "turn_index": 2}}
{"user_turn_0": "Leeds", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM price equals 166", "user_turn_1": "I 'd rather leave at 2 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "20092", "datum_id": {"dialogue_id": "6ef96544-d6f6-4e40-bbd7-a8f3fd50850b", "turn_index": 3}}
{"user_turn_0": "I want to know what the weather will be tomorrow in Edinburgh", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cloudy", "user_turn_1": "What will the weather be in Leicester tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint String)) Path.apply \" object.location \") (lambda (^(Constraint String) x0) (?= \" Leicester \"))))", "idx": "20098", "datum_id": {"dialogue_id": "6c106464-9ef8-41c2-9b2a-d8dda0f79d32", "turn_index": 4}}
{"user_turn_0": "Hey assistant , can you show me my upcoming train to Nottingham", "agent_turn_0": "Root system inform train find", "user_turn_1": "Thanks for the help . Can you send my next event to Caroline", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.listOffset_? (?= 1))))) (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Caroline \")))))))", "idx": "20135", "datum_id": {"dialogue_id": "38af2a69-e7c4-4556-96de-52b8c76c5f16", "turn_index": 1}}
{"user_turn_0": "Send it please", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Thanks , also add to my calendar an event at 9:30 AM", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 9L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM)))))))))", "idx": "20138", "datum_id": {"dialogue_id": "38af2a69-e7c4-4556-96de-52b8c76c5f16", "turn_index": 4}}
{"user_turn_0": "Is that a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "I would actually prefer the flight that departs at 1:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "20154", "datum_id": {"dialogue_id": "1be693fb-4fb6-40fa-96a6-3d9e33f8756f", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , i want to book an inexpensive restaurant for tomorrow ; it should have car parking .", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.priceRange_? (?= (PriceRange.Low))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow)))))) (Restaurant.hasParking_? (?= true)))))", "idx": "20164", "datum_id": {"dialogue_id": "1ef3b7a4-5e32-44b9-90b9-7e32dcd4d6d8", "turn_index": 0}}
{"user_turn_0": "I prefer something with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capricorn", "user_turn_1": "What is the address to this location ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "20169", "datum_id": {"dialogue_id": "1ef3b7a4-5e32-44b9-90b9-7e32dcd4d6d8", "turn_index": 5}}
{"user_turn_0": "What is the address to this location ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals 60 Cross Street", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Canton Silk \"))))))", "idx": "20170", "datum_id": {"dialogue_id": "1ef3b7a4-5e32-44b9-90b9-7e32dcd4d6d8", "turn_index": 6}}
{"user_turn_0": "Book it", "agent_turn_0": "Root system prompt restaurant book object equals atDateTime equals time", "user_turn_1": "They are no open at that time", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM))))))))))", "idx": "20171", "datum_id": {"dialogue_id": "1ef3b7a4-5e32-44b9-90b9-7e32dcd4d6d8", "turn_index": 7}}
{"user_turn_0": "They are no open at that time", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Change it to tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "20172", "datum_id": {"dialogue_id": "1ef3b7a4-5e32-44b9-90b9-7e32dcd4d6d8", "turn_index": 8}}
{"user_turn_0": "Give me a different restaurant that has outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jurassic Pork", "user_turn_1": "Is credit card accepted at the restaurant ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "20199", "datum_id": {"dialogue_id": "5437489d-18e7-4775-8254-84d08eaaff88", "turn_index": 4}}
{"user_turn_0": "Is credit card accepted at the restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Shining Gate \"))))))", "idx": "20200", "datum_id": {"dialogue_id": "5437489d-18e7-4775-8254-84d08eaaff88", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , i prefer the 4 PM one .", "tgt": "(plan (^(Train) Book :object (& (& (Train.source_? (Place.location_? (?= \" Reading \"))) (Train.destination_? (Place.location_? (?= \" Windermere \")))) (Train.departureDateTime_? (DateTime.time_? (?>= (someSalient (& (& (Time.hour_? (?= (Hour.apply 7L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM)))))))))))", "idx": "20217", "datum_id": {"dialogue_id": "bbb5fbd5-df0c-48e4-8295-9e72be4c73d0", "turn_index": 0}}
{"user_turn_0": "Hi my assistant , i prefer the 4 PM one .", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM", "user_turn_1": "Book me a train from Reading to Windermere after 7:30 AM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "20218", "datum_id": {"dialogue_id": "bbb5fbd5-df0c-48e4-8295-9e72be4c73d0", "turn_index": 1}}
{"user_turn_0": "Friday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM", "user_turn_1": "I like it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "20221", "datum_id": {"dialogue_id": "bbb5fbd5-df0c-48e4-8295-9e72be4c73d0", "turn_index": 4}}
{"user_turn_0": "Hi assistant , can you put a 2 PM event on my calendar and make a reminder for it too ?", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals endDateTime", "user_turn_1": "3 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.duration_? (AppleDuration.hour_? (?= 1)))))))", "idx": "20237", "datum_id": {"dialogue_id": "c67cd9ae-ffb9-470b-8451-496ac1450dfa", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i would like to book the Juniper Cloud restaurant for me and please add it to my calendar", "tgt": "(plan (do (^(Restaurant) Book :object (Restaurant.restaurantName_? (?= \" The Juniper Cloud \"))) (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (?= (^(DateTimeRange Restaurant) reference (^(Restaurant) always)))))))", "idx": "20246", "datum_id": {"dialogue_id": "0f8edabc-d1e1-4c1a-b391-607da3fbe63a", "turn_index": 0}}
{"user_turn_0": "I prefer another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Capers", "user_turn_1": "Does the restaurant have parking", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "20260", "datum_id": {"dialogue_id": "46a50d63-8b59-43ae-a9ed-ec0d6fb1a81e", "turn_index": 3}}
{"user_turn_0": "Does the restaurant have parking", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Dingo \"))))))", "idx": "20261", "datum_id": {"dialogue_id": "46a50d63-8b59-43ae-a9ed-ec0d6fb1a81e", "turn_index": 4}}
{"user_turn_0": "3 o'clock", "agent_turn_0": "Root system inform restaurant find notExisted object equals atDateTime", "user_turn_1": "Ok , can you change the appointment time to 2 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hour)) Path.apply \" object.atDateTime.time.hour \") (lambda (^(Constraint Hour) x0) (?= (Hour.apply 2L)))))", "idx": "20263", "datum_id": {"dialogue_id": "46a50d63-8b59-43ae-a9ed-ec0d6fb1a81e", "turn_index": 6}}
{"user_turn_0": "Leaving from London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM price equals 201", "user_turn_1": "I want the one leaving at 3:40 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "20269", "datum_id": {"dialogue_id": "923ba42a-e340-4b05-8853-97ef519dd59c", "turn_index": 3}}
{"user_turn_0": "Yeah go ahead", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Thanks , also set up Away we golf starting at 10:30 o'clock for 45 minutes on the calendar", "tgt": "(plan (^(CalendarEvent) Create :object (& (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))))) (DateTimeRange.duration_? (AppleDuration.minute_? (?= 45))))) (CalendarEvent.eventName_? (?= \" Away we golf \")))))", "idx": "20287", "datum_id": {"dialogue_id": "a17b7fb4-f86a-4f11-8fa0-b261915dbf96", "turn_index": 3}}
{"user_turn_0": "I want to eat Mexican food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone Martian", "user_turn_1": "Give me the address", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "20292", "datum_id": {"dialogue_id": "b5b501a8-cdd8-44cc-8310-40f3ae334643", "turn_index": 3}}
{"user_turn_0": "Give me the address", "agent_turn_0": "Root system inform restaurant find focus equals address equals 97 Church Road", "user_turn_1": "Go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Hambone Martian \"))))))", "idx": "20293", "datum_id": {"dialogue_id": "b5b501a8-cdd8-44cc-8310-40f3ae334643", "turn_index": 4}}
{"user_turn_0": "What will the average cost per person be ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 42", "user_turn_1": "Sounds good to me . Book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (^((Constraint String)) refer))))))", "idx": "20306", "datum_id": {"dialogue_id": "9383fdf3-c877-4241-9357-bf60e089814a", "turn_index": 4}}
{"user_turn_0": "A table for two please", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "What if you edit the appointment date to the 15th of January ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.atDateTime.date \") (lambda (^(Constraint Date) x0) (& (Date.month_? (?= (January))) (Date.day_? (?= (Day.apply 15L)))))))", "idx": "20309", "datum_id": {"dialogue_id": "9383fdf3-c877-4241-9357-bf60e089814a", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , i want to book a business class flight to Edenburgh", "tgt": "(plan (^(Flight) Book :object (& (Flight.class_? (?= (FlightClass.Business))) (Flight.destination_? (Place.location_? (?= \" Edinburgh \"))))))", "idx": "20311", "datum_id": {"dialogue_id": "c4887df6-0a18-499b-b4e3-b3c80f95046b", "turn_index": 0}}
{"user_turn_0": "Get me one that does not have a high price", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dingo", "user_turn_1": "Do they have parking there ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "20332", "datum_id": {"dialogue_id": "6c985c77-03bc-4d6b-8cc8-d9776b83ad4f", "turn_index": 3}}
{"user_turn_0": "Get me another one that has outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dimple\u2019s", "user_turn_1": "Do they take card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "20334", "datum_id": {"dialogue_id": "6c985c77-03bc-4d6b-8cc8-d9776b83ad4f", "turn_index": 5}}
{"user_turn_0": "Do they take card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Alright then book it for 3 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Dingo \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 3L))))))))))", "idx": "20335", "datum_id": {"dialogue_id": "6c985c77-03bc-4d6b-8cc8-d9776b83ad4f", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , 9 AM . It 'll end at 7 PM .", "tgt": "(plan (do (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday))))))) (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Sister))))) (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always))))))))", "idx": "20343", "datum_id": {"dialogue_id": "67126611-e7f7-4e37-866a-8d07679a742f", "turn_index": 0}}
{"user_turn_0": "Hi there , 9 AM . It 'll end at 7 PM .", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals startDateTime equals time", "user_turn_1": "What 's the start time ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))) (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 9L))) (meridiem_? (?= (Meridiem.AM))))))) (DateTimeRange.endDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 7L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "20344", "datum_id": {"dialogue_id": "67126611-e7f7-4e37-866a-8d07679a742f", "turn_index": 1}}
{"user_turn_0": "Hello , order a taxi to 397 Tallwood Court .", "agent_turn_0": "Root system prompt taxi book object equals serviceType inform taxi find object equals serviceType equals listElementOne Saloon listElementTwo MPV listElementThree Executive", "user_turn_1": "Does n't matter , as long as tow luggages fit", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Taxi)) Path.apply \" object \") (lambda (^(Constraint Taxi) x0) (& (& x0 (Taxi.serviceType_? (List.exists_? (?= (ServiceType.Any))))) (Taxi.luggages_? (?= 2))))))", "idx": "20359", "datum_id": {"dialogue_id": "d8cb7f69-f523-474d-afed-df2e608e70b5", "turn_index": 1}}
{"user_turn_0": "Yes , book it", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "I need to reserve a restaurant with moderate pricing and two stars , in Baker Street , for tomorrow at 5:30 PM", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.location_? (?= \" Baker Street \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 5L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Restaurant.priceRange_? (?= (PriceRange.Moderate)))) (Restaurant.rating_? (?>= (someSalient (?= 2)))))))", "idx": "20362", "datum_id": {"dialogue_id": "d8cb7f69-f523-474d-afed-df2e608e70b5", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , book a cheap three star restaurant at 11:30 AM", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.priceRange_? (?= (PriceRange.Low))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM)))))))) (Restaurant.rating_? (?= 3)))))", "idx": "20387", "datum_id": {"dialogue_id": "50692f70-09c3-4d27-8483-9169669e29af", "turn_index": 0}}
{"user_turn_0": "For 2", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Change the appointment time to 2 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.atDateTime.time \") (lambda (^(Constraint Time) x0) (Time.hour_? (?= (Hour.apply 2L))))))", "idx": "20391", "datum_id": {"dialogue_id": "50692f70-09c3-4d27-8483-9169669e29af", "turn_index": 4}}
{"user_turn_0": "Does it come with a private bathroom ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Okay , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "20402", "datum_id": {"dialogue_id": "8081d288-8b1a-4f19-91c0-fa0e90a08d9b", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , i 'd like to book a one star or better for tomorrow at 1:30 PM", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.rating_? (?>= (someSalient (?= 1)))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "20430", "datum_id": {"dialogue_id": "0992c744-09f7-48ef-94e8-8dfb452d3132", "turn_index": 0}}
{"user_turn_0": "I 'd prefer a place with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Empirica", "user_turn_1": "About how much will it cost per person", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "20435", "datum_id": {"dialogue_id": "0992c744-09f7-48ef-94e8-8dfb452d3132", "turn_index": 5}}
{"user_turn_0": "About how much will it cost per person", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 43", "user_turn_1": "That 's perfect please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Maple \"))))))", "idx": "20436", "datum_id": {"dialogue_id": "0992c744-09f7-48ef-94e8-8dfb452d3132", "turn_index": 6}}
{"user_turn_0": "Does it take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "That 's fine I guess . Go ahead and book it for 2 PM tomorrow", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "20442", "datum_id": {"dialogue_id": "1947d752-6c7b-4528-b3ee-59a6138b366b", "turn_index": 3}}
{"user_turn_0": "Does it have free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "20449", "datum_id": {"dialogue_id": "e6ba6cb0-25a6-4e9b-8f70-baad79f38fd2", "turn_index": 4}}
{"user_turn_0": "Table for 3 people", "agent_turn_0": "Root system inform restaurant find notExisted object equals tableSize", "user_turn_1": "Switch the appointment date to Thursday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.atDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday)))))))))", "idx": "20460", "datum_id": {"dialogue_id": "752432b5-be01-47e9-b91e-71a05e35147e", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , i have completed your order .", "tgt": "(plan (^(Flight) Book :object (& (& (& (Flight.source_? (Place.location_? (?= \" London \"))) (Flight.destination_? (Place.location_? (?= \" Amsterdam \")))) (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow)))))) (Flight.tripType_? (?= (TripType.oneWay))))))", "idx": "20473", "datum_id": {"dialogue_id": "00e65869-dc3d-456e-931e-2afc9ca70569", "turn_index": 0}}
{"user_turn_0": "Hey assistant , i have completed your order .", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 1 minute equals 50 meridiem equals PM price equals 199", "user_turn_1": "Here 's your flight order information . Would you like me to proceed ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.source_? (Place.location_? (?= \" London \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.tripType_? (?= (TripType.oneWay)))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "20474", "datum_id": {"dialogue_id": "00e65869-dc3d-456e-931e-2afc9ca70569", "turn_index": 1}}
{"user_turn_0": "Here 's your flight order information . Would you like me to proceed ?", "agent_turn_0": "Root system offer flight book", "user_turn_1": "Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint TripType)) Path.apply \" object.tripType \") (lambda (^(Constraint TripType) x0) (?= (TripType.roundTrip)))))", "idx": "20475", "datum_id": {"dialogue_id": "00e65869-dc3d-456e-931e-2afc9ca70569", "turn_index": 2}}
{"user_turn_0": "I found five flights on your departure date . The cheapest one costs 199 pounds and leaves at 1:50 PM", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 11 minute equals 50 meridiem equals AM price equals 150", "user_turn_1": "The following ticket order has been created for you . Would you like me to submit it now ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "20477", "datum_id": {"dialogue_id": "00e65869-dc3d-456e-931e-2afc9ca70569", "turn_index": 4}}
{"user_turn_0": "The following ticket order has been created for you . Would you like me to submit it now ?", "agent_turn_0": "Root system offer flight book", "user_turn_1": "When will you be back ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "20478", "datum_id": {"dialogue_id": "00e65869-dc3d-456e-931e-2afc9ca70569", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , can you book a MPV taxi from 7615 Eagle Lane to Ash Grove Industrial Park ?", "tgt": "(plan (^(Taxi) Book :object (& (& (Taxi.serviceType_? (List.exists_? (?= (ServiceType.MPV)))) (Taxi.source_? (Place.location_? (?= \" 7615 Eagle Lane \")))) (Taxi.destination_? (Place.location_? (?= \" Ash Grove Industrial Park \"))))))", "idx": "20479", "datum_id": {"dialogue_id": "0220016b-c4a2-46c0-8584-cfc8f3218154", "turn_index": 0}}
{"user_turn_0": "Would that happen to be a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Book it , pronto", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "20487", "datum_id": {"dialogue_id": "8a805f82-4586-495e-ba0b-ea6c3ff830b2", "turn_index": 3}}
{"user_turn_0": "That 's right , for the 19th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 12 minute equals 40 meridiem equals PM price equals 142", "user_turn_1": "Okay , I want that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 15L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "20489", "datum_id": {"dialogue_id": "8a805f82-4586-495e-ba0b-ea6c3ff830b2", "turn_index": 5}}
{"user_turn_0": "I do n't care as long as I get wifi", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Ok can you make my check in on Monday instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Monday))))))", "idx": "20494", "datum_id": {"dialogue_id": "24a48762-4c72-4506-9f4c-13f05ceb3f02", "turn_index": 3}}
{"user_turn_0": "Is there parking at the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Ok , book me a room there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "20511", "datum_id": {"dialogue_id": "ac369267-51e6-4d6f-b053-73fceb026a49", "turn_index": 2}}
{"user_turn_0": "Can you make sure to book me 3 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you change my check out day to be on Sunday instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Sunday))))))", "idx": "20513", "datum_id": {"dialogue_id": "ac369267-51e6-4d6f-b053-73fceb026a49", "turn_index": 4}}
{"user_turn_0": "Can you change my check out day to be on Sunday instead ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there free cancellation at the hotel ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "20514", "datum_id": {"dialogue_id": "ac369267-51e6-4d6f-b053-73fceb026a49", "turn_index": 5}}
{"user_turn_0": "Is that a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Sounds good . Please book that flight for two passengers please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.destination_? (Place.location_? (?= \" Dublin \")))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 1L))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.passengers_? (?= 2))))))", "idx": "20525", "datum_id": {"dialogue_id": "490ed8bb-9175-4729-8250-ce0e9a5ecc9b", "turn_index": 4}}
{"user_turn_0": "Does that place have a private bathroom ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Make the booking for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "20541", "datum_id": {"dialogue_id": "c03cbc3a-d002-4984-8a0d-00892954cf10", "turn_index": 3}}
{"user_turn_0": "Two", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does that include breakfast ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "20545", "datum_id": {"dialogue_id": "c03cbc3a-d002-4984-8a0d-00892954cf10", "turn_index": 7}}
{"user_turn_0": "Does that include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Sure , book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Option (Constraint ConfirmStatus))) Path.apply \" confirmation \") (lambda (^(Option (Constraint ConfirmStatus)) x0) (Some (?= (ConfirmStatus.Accepted))))))", "idx": "20546", "datum_id": {"dialogue_id": "c03cbc3a-d002-4984-8a0d-00892954cf10", "turn_index": 8}}
{"user_turn_0": "What airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "I want the 2:40 PM flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "20566", "datum_id": {"dialogue_id": "1cc7e773-e932-4ec2-b360-58f98470337c", "turn_index": 3}}
{"user_turn_0": "Find a different place that has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Dimple\u2019s", "user_turn_1": "Does it have parking ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "20576", "datum_id": {"dialogue_id": "2b8f9f29-9e3f-42ac-a6fd-e9192e3b85de", "turn_index": 4}}
{"user_turn_0": "Find a different place with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Spago", "user_turn_1": "Does it take credit cards", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "20578", "datum_id": {"dialogue_id": "2b8f9f29-9e3f-42ac-a6fd-e9192e3b85de", "turn_index": 6}}
{"user_turn_0": "Does it take credit cards", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Then book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Shining Gate \"))))))", "idx": "20579", "datum_id": {"dialogue_id": "2b8f9f29-9e3f-42ac-a6fd-e9192e3b85de", "turn_index": 7}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , will you be departing from London ?", "tgt": "(plan (^(Flight) Book :object (& (Flight.class_? (?= (FlightClass.Business))) (Flight.airLine_? (?= \" EasyJet \")))))", "idx": "20582", "datum_id": {"dialogue_id": "844db6e2-aba7-44ec-a947-c2f32a52d990", "turn_index": 0}}
{"user_turn_0": "Hey assistant , create a reminder for Thursday 's event .", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Do I have a Saturday event called robotic competition ?", "tgt": "(plan (^(CalendarEvent) CheckExistence :object (& (CalendarEvent.eventName_? (?= \" robotic competition \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday)))))))))", "idx": "20589", "datum_id": {"dialogue_id": "62fe480b-8a60-4e0e-acb5-02b14bcf1bf7", "turn_index": 1}}
{"user_turn_0": "I will leave from London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I want the 2:40 PM flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "20592", "datum_id": {"dialogue_id": "62fe480b-8a60-4e0e-acb5-02b14bcf1bf7", "turn_index": 4}}
{"user_turn_0": "Yes , book it", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "Can you book a table at Interknack in Hadley Wood for 5 people at 7:30 ?", "tgt": "(plan (^(Restaurant) Book :object (& (& (& (Restaurant.restaurantName_? (?= \" Interknack \")) (Restaurant.location_? (?= \" Hadley Wood \"))) (Restaurant.tableSize_? (?= 5))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 7L))) (Time.minute_? (?= (Minute.apply 30L))))))))))", "idx": "20627", "datum_id": {"dialogue_id": "fba30c7a-7286-453c-ad07-be0571e21bfc", "turn_index": 4}}
{"user_turn_0": "Thank you . Can you check if I have mountain tour tomorrow on my calendar ?", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Okay , create it then", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 9L))))) (DateTimeRange.endDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (^((Constraint Minute)) refer)))))))))", "idx": "20630", "datum_id": {"dialogue_id": "415b50f9-a985-4bcc-a11a-b65f35534fd3", "turn_index": 2}}
{"user_turn_0": "Is it direct ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "That works get me two tickets", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Brussel \"))) (Flight.airLine_? (?= \" EasyJet \"))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (^((Constraint (List DateTime))) refer)))) (Flight.class_? (?= (FlightClass.Economy)))) (Flight.passengers_? (?= 2))))))", "idx": "20652", "datum_id": {"dialogue_id": "40fbc349-67b6-49b2-949c-9ecb25701469", "turn_index": 4}}
{"user_turn_0": "I actually would prefer another restaurant with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Flip Out", "user_turn_1": "Do you know if the restaurant take credit card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "20659", "datum_id": {"dialogue_id": "e1e7bdf1-3987-437d-b0c3-e74e7c6c7922", "turn_index": 4}}
{"user_turn_0": "Do you know if the restaurant take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "That 's fine please book", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Goat and Guru \"))))))", "idx": "20660", "datum_id": {"dialogue_id": "e1e7bdf1-3987-437d-b0c3-e74e7c6c7922", "turn_index": 5}}
{"user_turn_0": "I 'm ready , please submit it for me", "agent_turn_0": "Root system inform flight book Completed", "user_turn_1": "Do me another favor . I want to send this flight order to Mr. Michell", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Mitchell \")) (Person.namePrefix_? (?= \" Mr \"))))) (Message.textContent_? (?= (^(String Flight) reference (^(Flight) always)))))))", "idx": "20677", "datum_id": {"dialogue_id": "1a784d48-aa0d-4e36-9d82-faa1f7703901", "turn_index": 4}}
{"user_turn_0": "Hello , who is attending my event from 9:30 to 11 ?", "agent_turn_0": "Root system inform calendarEvent find focus equals attendees equals person equals relationshipType equals Sister", "user_turn_1": "Add her to the standup discussion", "tgt": "(plan (^(CalendarEvent) Create :focus (CalendarEvent.attendees_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Sister))))) :object (CalendarEvent.eventName_? (?= \" standup discussion \"))))", "idx": "20679", "datum_id": {"dialogue_id": "b6002dbf-ea22-4c34-8561-5d56aca195cf", "turn_index": 1}}
{"user_turn_0": "I would like two rooms of any type please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel for free if I change my mind ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "20689", "datum_id": {"dialogue_id": "45bb59d9-7180-4a5d-89f0-7490729088c3", "turn_index": 6}}
{"user_turn_0": "I need directions to my next event", "agent_turn_0": "Root system inform navigation find object equals destination equals location equals 66 Park Avenue", "user_turn_1": "What kind of weather should I expect there ?", "tgt": "(plan (^(WeatherReport) Find :object (WeatherReport.location_? (?= \" Spacious Union Square \"))))", "idx": "20700", "datum_id": {"dialogue_id": "4bd86928-bea3-4d9c-bdf0-b298f6bb0b01", "turn_index": 4}}
{"user_turn_0": "Hey assistant , make reservation in hotel that has parking available . Reserve single room .", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "Make it in Modern Park", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.location_? (?= \" Morden Park \"))))))", "idx": "20702", "datum_id": {"dialogue_id": "2301e6ec-add1-4501-acd6-049e6f667434", "turn_index": 1}}
{"user_turn_0": "I would rather book a different one with moderate prices", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Triton price equals 135", "user_turn_1": "Is there free wifi ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasWifi_? (^(Boolean) always)))))", "idx": "20705", "datum_id": {"dialogue_id": "2301e6ec-add1-4501-acd6-049e6f667434", "turn_index": 4}}
{"user_turn_0": "I would rather stay in hotel with three star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Four Seasons price equals 173", "user_turn_1": "Is there free wifi ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "20707", "datum_id": {"dialogue_id": "2301e6ec-add1-4501-acd6-049e6f667434", "turn_index": 6}}
{"user_turn_0": "Is there free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Go ahead and reserve it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Candlewood Suites \"))))))", "idx": "20708", "datum_id": {"dialogue_id": "2301e6ec-add1-4501-acd6-049e6f667434", "turn_index": 7}}
{"user_turn_0": "Does it have access to laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Please book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "20716", "datum_id": {"dialogue_id": "bdfa4b23-156e-4982-8452-235a8edc2cf5", "turn_index": 3}}
{"user_turn_0": "Please call Mr Harris", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "I need another favor . I 'd like to book a train to Jersey before 8 PM", "tgt": "(plan (^(Train) Book :object (& (Train.destination_? (Place.location_? (?= \" Jersey \"))) (Train.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (Time.hour_? (?= (Hour.apply 8L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "20728", "datum_id": {"dialogue_id": "cb354e25-4a17-4523-8fdb-53c606553883", "turn_index": 3}}
{"user_turn_0": "Where is my team building with my father ?", "agent_turn_0": "Root system inform calendarEvent find focus equals location equals Maverick", "user_turn_1": "How long to get there", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (Place.location_? (^((Constraint String)) refer)))))", "idx": "20734", "datum_id": {"dialogue_id": "934567c9-0ee4-4ff1-8db4-ec4a909020d0", "turn_index": 4}}
{"user_turn_0": "I would prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Spago", "user_turn_1": "What;s the average per person cost ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.averageCost_? (^(Number) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "20754", "datum_id": {"dialogue_id": "98505f05-7d2f-44c1-9f66-cf693b7e3e5f", "turn_index": 4}}
{"user_turn_0": "What;s the average per person cost ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 36", "user_turn_1": "This is good , book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Bandits \"))))))", "idx": "20755", "datum_id": {"dialogue_id": "98505f05-7d2f-44c1-9f66-cf693b7e3e5f", "turn_index": 5}}
{"user_turn_0": "Tell me what airline runs that flight", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "I would actually prefer the one that departs at 2:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "20763", "datum_id": {"dialogue_id": "69611603-510e-4624-b245-49497fbcf146", "turn_index": 4}}
{"user_turn_0": "Sure , for the 27th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 1 meridiem equals PM price equals 160", "user_turn_1": "Looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "20765", "datum_id": {"dialogue_id": "69611603-510e-4624-b245-49497fbcf146", "turn_index": 6}}
{"user_turn_0": "Hey assistant , place a call for me", "agent_turn_0": "Root system prompt phoneCall create object equals recipients", "user_turn_1": "Make it to my soon", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Option (Constraint PhoneCall))) Path.apply \" object \") (lambda (^(Option (Constraint PhoneCall)) x0) (Some (PhoneCall.recipients_? (Contact.person_? (Person.relationshipType_? (?= (RelationshipType.Son)))))))))", "idx": "20773", "datum_id": {"dialogue_id": "d7b69fcc-1f5b-4e60-a8da-51d5b3384b7a", "turn_index": 1}}
{"user_turn_0": "Tell me what 's the weather", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Sunny", "user_turn_1": "Make the price range low", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.priceRange_? (^(PriceRange) always)) :object (Restaurant.restaurantName_? (?= \" Dim Summit \"))))", "idx": "20776", "datum_id": {"dialogue_id": "d7b69fcc-1f5b-4e60-a8da-51d5b3384b7a", "turn_index": 4}}
{"user_turn_0": "From Leeds", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM", "user_turn_1": "Looks fine to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "20779", "datum_id": {"dialogue_id": "032582aa-4e9c-4430-b664-19aabf4df245", "turn_index": 2}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 4 object equals nextDepartureDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM price equals 138", "user_turn_1": "Okay , that one is fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "20802", "datum_id": {"dialogue_id": "655897c3-4181-48b1-9f3f-807d51c46415", "turn_index": 7}}
{"user_turn_0": "Wait , change the departure date of the first trip to the 7th", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM price equals 178", "user_turn_1": "Okay , I want that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "20804", "datum_id": {"dialogue_id": "655897c3-4181-48b1-9f3f-807d51c46415", "turn_index": 9}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , book a departure flight for tomorrow before 6:30 PM to Belfast City .", "tgt": "(plan (^(Flight) Book :object (& (Flight.destination_? (Place.location_? (?= \" Belfast City \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (?<= (someSalient (& (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))))", "idx": "20827", "datum_id": {"dialogue_id": "19f4b875-1bef-4b2a-b890-f7f963ff0180", "turn_index": 0}}
{"user_turn_0": "I will depart from London Heathrow", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 3 minute equals 40 meridiem equals PM price equals 199", "user_turn_1": "Okay , I want that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "20829", "datum_id": {"dialogue_id": "19f4b875-1bef-4b2a-b890-f7f963ff0180", "turn_index": 2}}
{"user_turn_0": "Also i want a round trip flight from London to Amsterdam departing Monday and returning Friday", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "Try Wednesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DayOfWeek)) Path.apply \" object.departureDateTime.date.dayOfWeek \") (lambda (^(Constraint DayOfWeek) x0) (?= (Wednesday)))))", "idx": "20834", "datum_id": {"dialogue_id": "a3d8be8b-9e70-41ea-8190-dd51f831d9c3", "turn_index": 2}}
{"user_turn_0": "Which airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals EasyJet", "user_turn_1": "I want this one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "20857", "datum_id": {"dialogue_id": "e8237b1f-d9f9-4c7f-a13b-fe36e9a6d7a6", "turn_index": 2}}
{"user_turn_0": "I want direction to this morning 's event", "agent_turn_0": "Root system inform navigation find object equals destination equals location equals 2a Prebend Street", "user_turn_1": "What the weather like over there", "tgt": "(plan (^(WeatherReport) Find :object (WeatherReport.location_? (^((Constraint String)) refer))))", "idx": "20873", "datum_id": {"dialogue_id": "ea2577c9-a6af-443f-9e08-1c67750fdea6", "turn_index": 3}}
{"user_turn_0": "What the weather like over there", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cold", "user_turn_1": "Thanks so much . I want a table for 4 PM on April 23rd and restaurant in West Wickham that 's pretty cheap", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.location_? (?= \" West Wickham \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (April))) (Date.day_? (?= (Day.apply 23L)))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))) (Restaurant.priceRange_? (?= (PriceRange.Low))))))", "idx": "20874", "datum_id": {"dialogue_id": "ea2577c9-a6af-443f-9e08-1c67750fdea6", "turn_index": 4}}
{"user_turn_0": "Yes . please", "agent_turn_0": "Root system inform calendarEvent create Completed restaurant book Completed", "user_turn_1": "Thanks so much . I want to book a cheap Thai restaurant at 5 PM", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.priceRange_? (?= (PriceRange.Low))) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 5L))) (meridiem_? (?= (Meridiem.PM)))))))) (Restaurant.foodType_? (?= (FoodType.Thai))))))", "idx": "20879", "datum_id": {"dialogue_id": "1806854b-44de-4757-b88f-0446bab00121", "turn_index": 4}}
{"user_turn_0": "Hey assistant , i 'd like to book a queen - sized bed in a hotel in Chelsea . I 'm checking in tomorrow and checking out Sunday", "agent_turn_0": "Root system prompt hotel book object equals priceRange", "user_turn_1": "I do n't care , I just want a three star hotel", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.priceRange_? (?= (PriceRange.Any)))) (Hotel.rating_? (?= 3))))))", "idx": "20886", "datum_id": {"dialogue_id": "5fbd989c-648c-4dce-8f01-c9a35f47e8aa", "turn_index": 1}}
{"user_turn_0": "Is there free wifi ?", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "20888", "datum_id": {"dialogue_id": "5fbd989c-648c-4dce-8f01-c9a35f47e8aa", "turn_index": 3}}
{"user_turn_0": "Can you check the Chestnut Tree hotel for availability ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I need to pay now ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "20891", "datum_id": {"dialogue_id": "5fbd989c-648c-4dce-8f01-c9a35f47e8aa", "turn_index": 6}}
{"user_turn_0": "Which of these have higher than zero stars ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "Do they have parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "20913", "datum_id": {"dialogue_id": "44b36ff5-ed3f-4974-9873-d6be1ab486a3", "turn_index": 3}}
{"user_turn_0": "Do they have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Ok , go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Godka \"))))))", "idx": "20914", "datum_id": {"dialogue_id": "44b36ff5-ed3f-4974-9873-d6be1ab486a3", "turn_index": 4}}
{"user_turn_0": "Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "The one leaving at 2:20 PM works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "20930", "datum_id": {"dialogue_id": "966aa1ea-eb13-40b0-a541-4a56b8e51dc6", "turn_index": 2}}
{"user_turn_0": "Monday after 8 AM", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 1 minute equals 20 meridiem equals PM price equals 119", "user_turn_1": "I 'd like to book this flight for three passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Edinburgh \"))) (Flight.tripType_? (?= (TripType.oneWay)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 3))))))", "idx": "20942", "datum_id": {"dialogue_id": "7ebd65a1-a69c-4bec-ab46-85593bd8598c", "turn_index": 3}}
{"user_turn_0": "What airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals British", "user_turn_1": "That works , get me a ticket", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "20954", "datum_id": {"dialogue_id": "931f47e6-93b0-4c28-a267-ccb854a33822", "turn_index": 2}}
{"user_turn_0": "Amsterdam , for one please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM price equals 166", "user_turn_1": "Book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "20963", "datum_id": {"dialogue_id": "c6cc60f1-b363-4b2a-8345-c8f2742e3544", "turn_index": 3}}
{"user_turn_0": "Yes purchase that ticket", "agent_turn_0": "Root system inform train book Completed", "user_turn_1": "Thanks , next i would like to book a restaurant located in Hammersmith for the 12th at 10AM", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.location_? (?= \" Hammersmith \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 12L))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (meridiem_? (?= (Meridiem.AM)))))))))))", "idx": "20974", "datum_id": {"dialogue_id": "cf8f3fe9-8bfa-4436-bbc2-bbaa7bcfdd5a", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , is there a price range that you prefer ?", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.location_? (?= \" London Bridge \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 22L)))))))) (Hotel.rating_? (?= 5)))))", "idx": "20990", "datum_id": {"dialogue_id": "ffa869b9-076e-4a67-909e-e9073401a267", "turn_index": 0}}
{"user_turn_0": "I want a hotel that has a moderate price range and parking", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Fresh Wave Resort price equals 199", "user_turn_1": "Does the cost include breakfast ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "20992", "datum_id": {"dialogue_id": "ffa869b9-076e-4a67-909e-e9073401a267", "turn_index": 2}}
{"user_turn_0": "Does the cost include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "20993", "datum_id": {"dialogue_id": "ffa869b9-076e-4a67-909e-e9073401a267", "turn_index": 3}}
{"user_turn_0": "I want to change my check in date to September 12th", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is free cancellation supported ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "20997", "datum_id": {"dialogue_id": "ffa869b9-076e-4a67-909e-e9073401a267", "turn_index": 7}}
{"user_turn_0": "The event is ending at 4:30 PM today", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "Also send my event for tomorrow to Mr GIll", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))))))) (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Gill \")) (Person.namePrefix_? (?= \" Mr \"))))))))", "idx": "21002", "datum_id": {"dialogue_id": "a41996b0-5b31-4bf6-869a-ef7c8ba808ab", "turn_index": 3}}
{"user_turn_0": "Three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does it come with free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "21017", "datum_id": {"dialogue_id": "b9a783d2-d7d8-41cd-a4e4-9547161d8f67", "turn_index": 8}}
{"user_turn_0": "Just 3", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to prepay it ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "21027", "datum_id": {"dialogue_id": "ce2c9c03-3fb2-4aa1-ad40-b87f070eecd8", "turn_index": 3}}
{"user_turn_0": "Okay , book it", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "Book a taxi to take me to the event venue I have this morning/", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Taxi)) Path.apply \" object \") (lambda (^(Constraint Taxi) x0) (Taxi.destination_? (?= (^(Place CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (?= (Morning)))))))))))", "idx": "21058", "datum_id": {"dialogue_id": "ef70a4ae-4fc4-4a0d-b934-19563c3d7d77", "turn_index": 4}}
{"user_turn_0": "Get me a different place with three stars", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Ace Hotel price equals 65", "user_turn_1": "What kind of rating does it have ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.rating_? (^(Number) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "21062", "datum_id": {"dialogue_id": "1fba1f9b-aae9-4e53-9037-fd8d1446162b", "turn_index": 3}}
{"user_turn_0": "What kind of rating does it have ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "That 's good enough for me . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Moody Moon \"))))))", "idx": "21063", "datum_id": {"dialogue_id": "1fba1f9b-aae9-4e53-9037-fd8d1446162b", "turn_index": 4}}
{"user_turn_0": "Yes price range should be not high price and the restaurant should have American Food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Chipotle Grill", "user_turn_1": "Does the restaurant have outdoor seats ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "21071", "datum_id": {"dialogue_id": "a20092ad-eb0f-4b83-9cd8-d9b9697f44e9", "turn_index": 2}}
{"user_turn_0": "I prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Chipotle Grill", "user_turn_1": "Does the restaurant have parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "21073", "datum_id": {"dialogue_id": "a20092ad-eb0f-4b83-9cd8-d9b9697f44e9", "turn_index": 4}}
{"user_turn_0": "Does the restaurant have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "21074", "datum_id": {"dialogue_id": "a20092ad-eb0f-4b83-9cd8-d9b9697f44e9", "turn_index": 5}}
{"user_turn_0": "I have no preference , as long as it has not zero stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Juniper Cloud", "user_turn_1": "That 's fine . Book it for me at tomorrow at 10:30 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (^((Constraint Restaurant)) refer)) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (?= (Tomorrow)))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L))))))))))))", "idx": "21093", "datum_id": {"dialogue_id": "5d8ff892-97ae-4dc0-92cf-bc6b962cb16e", "turn_index": 4}}
{"user_turn_0": "Are there laundry services at the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "21102", "datum_id": {"dialogue_id": "b7bf42b1-169a-4df3-929e-4feed7e65ecb", "turn_index": 2}}
{"user_turn_0": "Are there private bathrooms ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Okay , reserve it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "21108", "datum_id": {"dialogue_id": "9a62c737-760f-42e0-a6ca-9aea2526d914", "turn_index": 3}}
{"user_turn_0": "I only need one , any type is fine", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "21111", "datum_id": {"dialogue_id": "9a62c737-760f-42e0-a6ca-9aea2526d914", "turn_index": 6}}
{"user_turn_0": "Can you tell me how long the journey will be ?", "agent_turn_0": "Root system inform flight find focus equals duration equals hour equals 1 minute equals 10", "user_turn_1": "Ok cool , please book this flight for three passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast City \"))) (Flight.airLine_? (?= \" EasyJet \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (^((Constraint (List DateTime))) refer)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 3))))))", "idx": "21117", "datum_id": {"dialogue_id": "410cbb9f-d43e-4b7c-8762-f18deb587301", "turn_index": 4}}
{"user_turn_0": "Does that include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals False", "user_turn_1": "Okay book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "21132", "datum_id": {"dialogue_id": "c2c406bb-8963-49e7-994d-3917403227e4", "turn_index": 2}}
{"user_turn_0": "Can I have 2 rooms ?", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Can I check in on Tuesday instead ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "21134", "datum_id": {"dialogue_id": "c2c406bb-8963-49e7-994d-3917403227e4", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , i want to arrive in Peterborough from Peterborough before 9:30 PM .", "tgt": "(plan (^(Train) Book :object (& (& (Train.source_? (Place.location_? (?= \" Peterborough \"))) (Train.destination_? (Place.location_? (?= \" Peterborough \")))) (Train.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (& (Time.hour_? (?= (Hour.apply 9L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "21136", "datum_id": {"dialogue_id": "8f044364-d9ac-4a7b-b6df-ad6c5bb9b054", "turn_index": 0}}
{"user_turn_0": "I 'm coming back the 28th", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 2 minute equals 30 meridiem equals PM", "user_turn_1": "Okay", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "21140", "datum_id": {"dialogue_id": "8f044364-d9ac-4a7b-b6df-ad6c5bb9b054", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , if you take the shortest path , 45 minutes .", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (& (Navigation.destination_? (Place.location_? (?= \" 7 Barrow Point Avenue \"))) (Navigation.transportationMode_? (?= (TransportationMode.Walking))))))", "idx": "21148", "datum_id": {"dialogue_id": "164a7dd8-8e9b-492e-b08e-c3c042335ab5", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , i need to book a table at a cheap restaurant with Italian cuisine for 6:30 on the 15th .", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.priceRange_? (?= (PriceRange.Low))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 15L))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (?= (Minute.apply 30L))))))))) (Restaurant.foodType_? (?= (FoodType.Italian))))))", "idx": "21154", "datum_id": {"dialogue_id": "9c20eaeb-cc67-440c-ba89-00d1d0736e7e", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi my assistant , is there a price range that you prefer ?", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.location_? (?= \" Ealing \")) (Hotel.rating_? (?>= (someSalient (?= 3)))))))", "idx": "21159", "datum_id": {"dialogue_id": "e91ed53c-9c8e-450d-9ef0-030597eacab1", "turn_index": 0}}
{"user_turn_0": "Hi my assistant , is there a price range that you prefer ?", "agent_turn_0": "Root system prompt hotel book object equals priceRange", "user_turn_1": "Here are my findings . A good option appears to be Renaissance hotel . It costs 135 pounds a night", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.priceRange_? (?= (PriceRange.Any)))) (Hotel.hasParking_? (?= true))))))", "idx": "21160", "datum_id": {"dialogue_id": "e91ed53c-9c8e-450d-9ef0-030597eacab1", "turn_index": 1}}
{"user_turn_0": "Here are my findings . A good option appears to be Renaissance hotel . It costs 135 pounds a night", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Renaissance price equals 135", "user_turn_1": "Does the cost include breakfast ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasBreakfast_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "21161", "datum_id": {"dialogue_id": "e91ed53c-9c8e-450d-9ef0-030597eacab1", "turn_index": 2}}
{"user_turn_0": "Does the cost include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "21162", "datum_id": {"dialogue_id": "e91ed53c-9c8e-450d-9ef0-030597eacab1", "turn_index": 3}}
{"user_turn_0": "Check on August 13", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM price equals 170", "user_turn_1": "Can you give me a ticket on the flight that leaves at 3:40 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "21171", "datum_id": {"dialogue_id": "f9aa99f7-5581-43fc-8791-e0d5b01bbe48", "turn_index": 4}}
{"user_turn_0": "Yes , check weather in Swansea", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cloudy", "user_turn_1": "And what is the forecast in Belfast", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint String)) Path.apply \" object.location \") (lambda (^(Constraint String) x0) (?= \" Belfast \"))))", "idx": "21182", "datum_id": {"dialogue_id": "8ab05396-705e-4fb9-b5fe-6f43995e6d34", "turn_index": 4}}
{"user_turn_0": "How am I supposed to get to 22 North Ridge Park by bike ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "How long will it take to get to Haywood Way by walking ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (& (Navigation.destination_? (Place.location_? (?= \" Haywood Way \"))) (Navigation.transportationMode_? (?= (TransportationMode.Walking))))))", "idx": "21185", "datum_id": {"dialogue_id": "58809d31-ac97-4742-80ab-d745aa69bd64", "turn_index": 2}}
{"user_turn_0": "What is the star rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "21214", "datum_id": {"dialogue_id": "366fb222-2e9c-4792-8585-b41fc69620ef", "turn_index": 4}}
{"user_turn_0": "I need 3 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is prepayment required ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "21218", "datum_id": {"dialogue_id": "366fb222-2e9c-4792-8585-b41fc69620ef", "turn_index": 8}}
{"user_turn_0": "Hi there , set a reminder for the event . I have today .", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Show me inexpensive hotels", "tgt": "(plan (^(Hotel) Find :object (Hotel.priceRange_? (?= (PriceRange.Low)))))", "idx": "21234", "datum_id": {"dialogue_id": "3d8a169c-896c-4a28-9376-f071d5a48384", "turn_index": 1}}
{"user_turn_0": "Three rooms please", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Is there free cancelation at the hotel ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "21243", "datum_id": {"dialogue_id": "7d22b26c-35e4-41a0-99c3-01073e36e080", "turn_index": 4}}
{"user_turn_0": "Can you actually change my check in day to be tomorrow ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "No , I want to change my checkout to be on the 23rd", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Day)) Path.apply \" object.dateTimeRange.endDateTime.date.day \") (lambda (^(Constraint Day) x0) (?= (Day.apply 23L)))))", "idx": "21245", "datum_id": {"dialogue_id": "7d22b26c-35e4-41a0-99c3-01073e36e080", "turn_index": 6}}
{"user_turn_0": "Alright", "agent_turn_0": "Root systen inform restaurant book Completed", "user_turn_1": "I 'd like to make a 4 PM reservation on July 14th at a moderately priced restaurant in Hammersmith", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& (Restaurant.location_? (?= \" Hammersmith \")) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (July))) (Date.day_? (?= (Day.apply 14L)))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))) (Restaurant.priceRange_? (?= (PriceRange.Moderate)))))))", "idx": "21250", "datum_id": {"dialogue_id": "f64f1537-530d-49c5-9025-6913b7ef6716", "turn_index": 3}}
{"user_turn_0": "I want to arrive by 9 PM on February 13th", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM", "user_turn_1": "That looks good to me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (^((Constraint DateTime)) refer)))))", "idx": "21254", "datum_id": {"dialogue_id": "1fef844d-937d-4834-ad56-2ae772782060", "turn_index": 2}}
{"user_turn_0": "No , I changed my mind , I 'll take the one that serves Italian food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Box", "user_turn_1": "Where is it located ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "21268", "datum_id": {"dialogue_id": "71bfd49c-2e7c-440a-adfa-495c521b4fb7", "turn_index": 5}}
{"user_turn_0": "Where is it located ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals Little Bat", "user_turn_1": "Sounds good , please book it for February 28", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Floss and Joes \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (& (Date.month_? (?= (February))) (Date.day_? (?= (Day.apply 28L)))))))))))", "idx": "21269", "datum_id": {"dialogue_id": "71bfd49c-2e7c-440a-adfa-495c521b4fb7", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , 4 o'clock .", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (^(DateTime) always))) :object (& (CalendarEvent.eventName_? (?= \" Open Houses \")) (CalendarEvent.attendees_? (Contact.person_? (Person.name_? (?= \" Trevor \")))))))", "idx": "21273", "datum_id": {"dialogue_id": "93339b5d-0587-4d92-9d95-a904d0309967", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , book a cheap hotel for today and check - out on Wednesday with a single room .", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.priceRange_? (?= (PriceRange.Low))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday)))))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Single)))))))", "idx": "21278", "datum_id": {"dialogue_id": "e8284094-748a-45dd-af39-ae59153a48f5", "turn_index": 0}}
{"user_turn_0": "Can you book it for 3 rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to pay ahead of time ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "21282", "datum_id": {"dialogue_id": "e8284094-748a-45dd-af39-ae59153a48f5", "turn_index": 4}}
{"user_turn_0": "Hi my assistant , book a table at a restaurant on Baker Street for July 24th .", "agent_turn_0": "Root system prompt restaurant book object equals priceRange", "user_turn_1": "Does n't matter as long as it 's got at least one star", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.priceRange_? (?= (PriceRange.Any)))) (Restaurant.rating_? (?!= (someSalient (?= 0))))))))", "idx": "21305", "datum_id": {"dialogue_id": "2f216ab2-a5bf-4f22-ad8f-e440bc52f16d", "turn_index": 1}}
{"user_turn_0": "What 's the average cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 43", "user_turn_1": "That 's fine . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (^((Constraint String)) refer))))))", "idx": "21308", "datum_id": {"dialogue_id": "2f216ab2-a5bf-4f22-ad8f-e440bc52f16d", "turn_index": 4}}
{"user_turn_0": "I want a different one with at least a two star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals The Watson price equals 145", "user_turn_1": "Does it have a gym ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasFitness_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "21315", "datum_id": {"dialogue_id": "6c427b77-63d7-4f98-8406-e91e25a4a2cc", "turn_index": 3}}
{"user_turn_0": "Does it have a gym ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Parallel Tower \"))))))", "idx": "21316", "datum_id": {"dialogue_id": "6c427b77-63d7-4f98-8406-e91e25a4a2cc", "turn_index": 4}}
{"user_turn_0": "I need 2 rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Edit my check out to the 25th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 25L))))))", "idx": "21318", "datum_id": {"dialogue_id": "6c427b77-63d7-4f98-8406-e91e25a4a2cc", "turn_index": 6}}
{"user_turn_0": "Edit my check out to the 25th", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can I cancel for free ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "21319", "datum_id": {"dialogue_id": "6c427b77-63d7-4f98-8406-e91e25a4a2cc", "turn_index": 7}}
{"user_turn_0": "Can I see which airline it is associated with ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "Actually , let me go with the one leaving at 4 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "21338", "datum_id": {"dialogue_id": "bb16b9c7-4fb9-400f-8ec9-0f49b2f299e9", "turn_index": 5}}
{"user_turn_0": "I need two rooms . I do n't care about the room type", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Will I need to make a prepayment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "21353", "datum_id": {"dialogue_id": "b26d0c41-7fa4-4265-914f-bfc013f832d7", "turn_index": 8}}
{"user_turn_0": "What 's the weather going to be like tomorrow in Coventry ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Cloudy", "user_turn_1": "How 's the weather in Glasgow today , then ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint WeatherReport)) Path.apply \" object \") (lambda (^(Constraint WeatherReport) x0) (& (WeatherReport.location_? (?= \" Glasgow \")) (WeatherReport.atDateTime_? (DateTime.date_? (?= (Today))))))))", "idx": "21364", "datum_id": {"dialogue_id": "15cf8c38-e59c-4a80-8b4b-424c6493009f", "turn_index": 4}}
{"user_turn_0": "Hey assistant , can you provide the rating for The Maple restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 4", "user_turn_1": "I would like to book it on the 4th please", "tgt": "(plan (^(Restaurant) Book :object (& (^((Constraint Restaurant)) refer) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 4L)))))))))", "idx": "21366", "datum_id": {"dialogue_id": "46afab6a-dfe4-4b13-80e2-db5d6fbca57a", "turn_index": 1}}
{"user_turn_0": "Hello , i need to book a restaurant in Hillingdon with car park . The booking time is at October 11th 6 o'clock", "agent_turn_0": "Root system prompt restaurant book object equals foodType", "user_turn_1": "As long as the price range is not high price then it does not matter", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.foodType_? (?= (FoodType.Any)))) (Restaurant.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))))))", "idx": "21389", "datum_id": {"dialogue_id": "f63f6b0c-c789-4143-b193-70ca7a0ce590", "turn_index": 1}}
{"user_turn_0": "I want another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone", "user_turn_1": "This looks fine , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Shining Gate \"))))))", "idx": "21391", "datum_id": {"dialogue_id": "f63f6b0c-c789-4143-b193-70ca7a0ce590", "turn_index": 3}}
{"user_turn_0": "Departing from Liverpool", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM price equals 134", "user_turn_1": "Get me one ticket", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast City \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (^((Constraint (List DateTime))) refer)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 1))))))", "idx": "21418", "datum_id": {"dialogue_id": "eed105c8-77dc-467c-9da3-7d05157fabae", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , book a moderate priced restaurant for 3:30 PM", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.location_? (?= \" Wembley \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))) (Restaurant.priceRange_? (?= (PriceRange.Moderate))))))", "idx": "21421", "datum_id": {"dialogue_id": "7bd24421-33ff-47bf-b693-b05c33171d32", "turn_index": 0}}
{"user_turn_0": "Which of these restaurants do n't have zero stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Joint", "user_turn_1": "Does the restaurant take credit card ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "21424", "datum_id": {"dialogue_id": "7bd24421-33ff-47bf-b693-b05c33171d32", "turn_index": 3}}
{"user_turn_0": "I prefer another restaurant with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals The Shining Gate", "user_turn_1": "What is the address of the restaurant ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "21426", "datum_id": {"dialogue_id": "7bd24421-33ff-47bf-b693-b05c33171d32", "turn_index": 5}}
{"user_turn_0": "I prefer another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Spago", "user_turn_1": "What is the address of the restaurant ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "21428", "datum_id": {"dialogue_id": "7bd24421-33ff-47bf-b693-b05c33171d32", "turn_index": 7}}
{"user_turn_0": "What is the address of the restaurant ?", "agent_turn_0": "Root system inform restaurant find focus equals address equals Westgate House", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Floss and Joes \"))))))", "idx": "21429", "datum_id": {"dialogue_id": "7bd24421-33ff-47bf-b693-b05c33171d32", "turn_index": 8}}
{"user_turn_0": "It 's going to Monday before 7:30 PM sometime", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 5 object equals departureDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM price equals 150", "user_turn_1": "I think I 'd rather the one that leaves at 1:20 PM . Get me business class , too", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.source_? (Place.location_? (?= \" Leeds \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "21445", "datum_id": {"dialogue_id": "166fc527-d2f1-4c46-86ee-e3c407e8e30f", "turn_index": 3}}
{"user_turn_0": "Hi there , is there an event in Shoreditch ?", "agent_turn_0": "Root system inform calendarEvent find Existed", "user_turn_1": "How long to get there ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (Place.location_? (^((Constraint String)) refer)))))", "idx": "21450", "datum_id": {"dialogue_id": "2a740d26-5449-4c28-830a-18b13a9fb293", "turn_index": 1}}
{"user_turn_0": "Is it direct ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Ok , I want to book it for three people", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Edinburgh \"))) (Flight.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.class_? (?= (FlightClass.Business)))) (Flight.passengers_? (?= 3))))))", "idx": "21458", "datum_id": {"dialogue_id": "cf91305f-f9e6-4241-853d-fd75dee16c97", "turn_index": 4}}
{"user_turn_0": "How long will it take to get there ?", "agent_turn_0": "Root system inform navigation find focus equals travelTime equals minutes equals 15", "user_turn_1": "Do me another favor . I would like to book a room with a king sized bed", "tgt": "(plan (^(Hotel) Book :object (Hotel.roomType_? (List.exists_? (?= (RoomType.King))))))", "idx": "21477", "datum_id": {"dialogue_id": "d051350c-6f35-4ff1-91c3-acd1ca1e345e", "turn_index": 2}}
{"user_turn_0": "One that is n't too high in price , and make sure it has parking there", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals The Fresco price equals 130", "user_turn_1": "Book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "21480", "datum_id": {"dialogue_id": "d051350c-6f35-4ff1-91c3-acd1ca1e345e", "turn_index": 5}}
{"user_turn_0": "I will be checking in today and checking out on Friday", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Then what about checking in today ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "21482", "datum_id": {"dialogue_id": "d051350c-6f35-4ff1-91c3-acd1ca1e345e", "turn_index": 7}}
{"user_turn_0": "I 'm departing from London Heathrow", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 3 minute equals 30 meridiem equals PM price equals 150", "user_turn_1": "I want the one leaving at 4:20 PM , and I want business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast \"))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (?= (Today)))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.passengers_? (?= 1))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "21487", "datum_id": {"dialogue_id": "d467905f-7356-4147-bb82-ca103eab1b34", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , is Private school application from 3 to 6 PM on my calendar ?", "tgt": "(plan (^(CalendarEvent) CheckExistence :object (& (CalendarEvent.eventName_? (?= \" Private school application \")) (CalendarEvent.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 3L))))) (DateTimeRange.endDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "21506", "datum_id": {"dialogue_id": "832a01c7-275d-4031-9de9-72a34919dc63", "turn_index": 0}}
{"user_turn_0": "Swansea", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM", "user_turn_1": "Sounds good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& x0 (^((Constraint Train)) refer)))))", "idx": "21513", "datum_id": {"dialogue_id": "cfd139d6-b13d-4403-afa1-8f77a8571721", "turn_index": 2}}
{"user_turn_0": "Is the flight a direct one", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "I want the one departing at 4:50 PM instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "21542", "datum_id": {"dialogue_id": "1c23209c-024b-4233-8540-afa2bb1d9fee", "turn_index": 6}}
{"user_turn_0": "Does it offer free wifi", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Please book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "21558", "datum_id": {"dialogue_id": "a96aebde-ebc0-4775-9db0-96ddf00935fe", "turn_index": 3}}
{"user_turn_0": "Just 3", "agent_turn_0": "Root system inform hotel find notExisted", "user_turn_1": "Ok , can you check Monday then ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.startDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Monday))))))", "idx": "21563", "datum_id": {"dialogue_id": "a96aebde-ebc0-4775-9db0-96ddf00935fe", "turn_index": 8}}
{"user_turn_0": "Hello , what is the price range of Kitty City restaurant in Bloomsbury", "agent_turn_0": "Root system inform restaurant find focus equals priceRange equals Low", "user_turn_1": "what 's the rating", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.rating_? (^(Number) always)) :object (Restaurant.restaurantName_? (?= \" Kitty City \"))))", "idx": "21566", "datum_id": {"dialogue_id": "dffc2365-5b52-4385-bb8f-451bc09aa391", "turn_index": 1}}
{"user_turn_0": "I want a restaurant that has a moderate price range and a rating of four stars", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Chipotle Grill", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "21573", "datum_id": {"dialogue_id": "650835a8-bf2e-4b2e-926e-771983511e0f", "turn_index": 2}}
{"user_turn_0": "The 19th", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 4 minute equals 50 meridiem equals PM price equals 170", "user_turn_1": "Perfect . I 'll take it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (^((Constraint Minute)) refer))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "21582", "datum_id": {"dialogue_id": "99ec64cd-3e55-4ba7-8614-01d9014e7d57", "turn_index": 6}}
{"user_turn_0": "What cabin class is it ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "Actually I want the one leaving at 3:45 PM and get me business class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (& (Flight.destination_? (Place.location_? (?= \" Paris \"))) (Flight.tripType_? (?= (TripType.roundTrip)))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday)))))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "21587", "datum_id": {"dialogue_id": "281d37b1-4422-4d5d-84e1-d3bfa10c58ee", "turn_index": 3}}
{"user_turn_0": "I will be leaving from Birmingham", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM price equals 130", "user_turn_1": "Okay , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "21597", "datum_id": {"dialogue_id": "876fb941-e875-4223-b533-7ebb92bea642", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , four stars .", "tgt": "(plan (^(Hotel) Find :focus (Hotel.rating_? (^(Number) always)) :object (& (Hotel.hotelName_? (?= \" Chestnut Tree \")) (Hotel.location_? (?= \" Green Park \")))))", "idx": "21615", "datum_id": {"dialogue_id": "c047f53a-0b8b-4c52-bdcb-e8b65983b5f0", "turn_index": 0}}
{"user_turn_0": "Will it be a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Sure thing ! I 'd like to book that flight please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "21631", "datum_id": {"dialogue_id": "79eac4d3-9241-4433-bbe6-186913060401", "turn_index": 5}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i need a hotel in Oakwood today through Friday that is n't too expensive with a king sized bed .", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" Oakwood \")) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday)))))))) (Hotel.priceRange_? (?!= (someSalient (?= (PriceRange.High)))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.King)))))))", "idx": "21636", "datum_id": {"dialogue_id": "089bf170-e3c0-4ff8-b8d7-8e365c57d20f", "turn_index": 0}}
{"user_turn_0": "Does it have laundry ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "21638", "datum_id": {"dialogue_id": "089bf170-e3c0-4ff8-b8d7-8e365c57d20f", "turn_index": 2}}
{"user_turn_0": "No , I need three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "No , make the check in today", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "21640", "datum_id": {"dialogue_id": "089bf170-e3c0-4ff8-b8d7-8e365c57d20f", "turn_index": 4}}
{"user_turn_0": "Change it to Kissmet", "agent_turn_0": "Root system inform calendarEvent update Completed", "user_turn_1": "How long do you think it 'll take me to get there ?", "tgt": "(plan (^(Navigation) Find :focus (Navigation.travelTime_? (^(AppleDuration) always)) :object (Navigation.destination_? (Place.location_? (^((Constraint String)) refer)))))", "idx": "21649", "datum_id": {"dialogue_id": "186e0829-1274-4106-adfb-af9499e10d76", "turn_index": 2}}
{"user_turn_0": "Headed to Dublin", "agent_turn_0": "Root system prompt flight book object equals departureDateTime", "user_turn_1": "I will leave on May 9th after 10 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (May))) (Date.day_? (?= (Day.apply 9L)))))) (List.exists_? (DateTime.time_? (?>= (someSalient (Time.hour_? (?= (Hour.apply 10L)))))))))))))", "idx": "21675", "datum_id": {"dialogue_id": "b8e0f448-837a-4629-9138-6fce40fc1853", "turn_index": 2}}
{"user_turn_0": "Get me another one , one htat has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jurassic Pork", "user_turn_1": "How much does it cost per person on average ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "21686", "datum_id": {"dialogue_id": "2902ebb4-c3a6-433c-9011-77232d93e9ac", "turn_index": 3}}
{"user_turn_0": "Which of these serve American food ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Goat and Guru", "user_turn_1": "Do they take card ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.takeCreditCard_? (^(Boolean) always)))))", "idx": "21689", "datum_id": {"dialogue_id": "2902ebb4-c3a6-433c-9011-77232d93e9ac", "turn_index": 6}}
{"user_turn_0": "Do they take card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals False", "user_turn_1": "Make the reservation there anyway", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Chipotle Grill \"))))))", "idx": "21690", "datum_id": {"dialogue_id": "2902ebb4-c3a6-433c-9011-77232d93e9ac", "turn_index": 7}}
{"user_turn_0": "Are there any message from my parents", "agent_turn_0": "Root system inform message checkExistence Existed", "user_turn_1": "Schedule a Status Update Meeting with Benjamin at 10 o'clock at the Legendary Hall on the calendar", "tgt": "(plan (^(CalendarEvent) Create :object (& (& (& (CalendarEvent.eventName_? (?= \" Status Update Meetings \")) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 10L))))))) (CalendarEvent.attendees_? (Contact.person_? (Person.name_? (?= \" Benjamin \"))))) (CalendarEvent.location_? (?= \" Legendary Hall \")))))", "idx": "21697", "datum_id": {"dialogue_id": "75c6e4f2-443b-46bf-b971-66151378ee63", "turn_index": 3}}
{"user_turn_0": "Next task , i would like to book a round trip flight from London to Brussel ; departure date is March 15th", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "Ok . How about Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "21705", "datum_id": {"dialogue_id": "7829ae92-52b4-4b5b-a99b-551f8b955c23", "turn_index": 4}}
{"user_turn_0": "Hey , what time does the event called team building coffee end today .", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals endDateTime equals time equals hour equals 2", "user_turn_1": "Next , set a reminder for that", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 2L)))))))", "idx": "21708", "datum_id": {"dialogue_id": "e3e1a888-e64a-4081-ac18-164a79177783", "turn_index": 1}}
{"user_turn_0": "Next , set a reminder for that", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Create one for the event I have tomorrow too", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.atDateTime \") (lambda (^(Constraint DateTime) x0) (?= (^(DateTime CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow))))))))))", "idx": "21709", "datum_id": {"dialogue_id": "e3e1a888-e64a-4081-ac18-164a79177783", "turn_index": 2}}
{"user_turn_0": "Hey assistant , please tell me what is the rating of the The Boiling Fence restaurant .", "agent_turn_0": "Root system inform restaurant find focus equals rating equals 3", "user_turn_1": "I would like to book it for table for 3 people please", "tgt": "(plan (^(Restaurant) Book :object (& (^((Constraint Restaurant)) refer) (Restaurant.tableSize_? (?= 3)))))", "idx": "21718", "datum_id": {"dialogue_id": "1601dbd3-c6c1-419e-9bee-845f73a64143", "turn_index": 1}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , book a cheaper hotel .", "tgt": "(plan (^(Hotel) Book :object (Hotel.priceRange_? (?= (PriceRange.Low)))))", "idx": "21722", "datum_id": {"dialogue_id": "85610971-1e97-47a6-b051-2368fcd4dfeb", "turn_index": 0}}
{"user_turn_0": "Hello assistant , book a cheaper hotel .", "agent_turn_0": "Root system prompt hotel book object equals location hotelName", "user_turn_1": "In Bedforshire with at least 2 stars", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& (& x0 (Hotel.location_? (?= \" Bedfordshire \"))) (Hotel.rating_? (?>= (someSalient (?= 2))))))))", "idx": "21723", "datum_id": {"dialogue_id": "85610971-1e97-47a6-b051-2368fcd4dfeb", "turn_index": 1}}
{"user_turn_0": "What is the rating ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "Book it then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "21725", "datum_id": {"dialogue_id": "85610971-1e97-47a6-b051-2368fcd4dfeb", "turn_index": 3}}
{"user_turn_0": "Change the check in date to Wednesday actually", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to pay up front ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "21730", "datum_id": {"dialogue_id": "85610971-1e97-47a6-b051-2368fcd4dfeb", "turn_index": 8}}
{"user_turn_0": "I want to leave on June the 7th before 8 PM", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM price equals 178", "user_turn_1": "I would prefer the one that departs at 4:50 PM in economy class", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.destination_? (Place.location_? (?= \" Belfast City \"))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Economy)))))))", "idx": "21735", "datum_id": {"dialogue_id": "eb6c2603-91d0-4d7c-b6cd-61e69d9c4b50", "turn_index": 3}}
{"user_turn_0": "London Heathrow", "agent_turn_0": "Root system prompt flight book object equals departureDateTime", "user_turn_1": "I want to leave on the eighth after 8 o'clock", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 8L))))) (List.exists_? (DateTime.time_? (?>= (someSalient (Time.hour_? (?= (Hour.apply 8L)))))))))))))", "idx": "21740", "datum_id": {"dialogue_id": "9a9200f1-246d-4b3d-80c7-efecb98955c2", "turn_index": 2}}
{"user_turn_0": "Is that in economy class or business class ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "Book me for that flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "21742", "datum_id": {"dialogue_id": "9a9200f1-246d-4b3d-80c7-efecb98955c2", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , send a message for me", "tgt": "(plan (^(Message) Create))", "idx": "21746", "datum_id": {"dialogue_id": "698be493-3440-4f20-a828-f19e117a85f6", "turn_index": 0}}
{"user_turn_0": "Yes , send it", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Send a message to 07923166661", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (Message.recipients_? (Contact.phoneNumber_? (?= \" 07923166661 \"))))))", "idx": "21755", "datum_id": {"dialogue_id": "f7b225f1-e457-4450-b87f-7404e41464e3", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , i want to book the Sheraton hotel in Forest Hill from December 12th to the 18th and I want a queen sized bed", "tgt": "(plan (^(Hotel) Book :object (& (& (& (Hotel.location_? (?= \" Forest Hill \")) (Hotel.hotelName_? (?= \" Sheraton \"))) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 12L)))) (month_? (Date.month_? (?= (December)))))) (DateTimeRange.endDateTime_? (DateTime.date_? (Date.day_? (?= (Day.apply 18L)))))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Queen)))))))", "idx": "21773", "datum_id": {"dialogue_id": "c1ccb2f4-b824-4909-9570-ce584440a06c", "turn_index": 0}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 1 minute equals 30 meridiem equals PM price equals 170", "user_turn_1": "Okay , I 'll book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "21780", "datum_id": {"dialogue_id": "10a89c32-4524-4e17-b66e-b56345c36312", "turn_index": 2}}
{"user_turn_0": "I 'd like it to be a moderately priced Chinese food restaurant", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jute Box", "user_turn_1": "Do they take credit cards ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.takeCreditCard_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "21788", "datum_id": {"dialogue_id": "e2381a00-d317-4d5a-9102-bf521efc3797", "turn_index": 5}}
{"user_turn_0": "Sunday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 meridiem equals PM", "user_turn_1": "Great", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (^((Constraint Time)) refer))))))", "idx": "21795", "datum_id": {"dialogue_id": "04517cf9-de7a-4b13-a7a7-e3e04990d7b5", "turn_index": 6}}
{"user_turn_0": "Do they offer laundry services ?", "agent_turn_0": "Root system inform hotel find focus equals laundry equals True", "user_turn_1": "Please book that for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Farmhouse Inn \"))))))", "idx": "21805", "datum_id": {"dialogue_id": "f28ad854-52b2-4f2a-aa18-b658c2bd13f8", "turn_index": 8}}
{"user_turn_0": "I would like to go with another hotel that has five stars rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Dreamy Desert Suites price equals 125", "user_turn_1": "I assume it has car parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "21819", "datum_id": {"dialogue_id": "2a3300bd-5611-474c-b407-e363747afb42", "turn_index": 5}}
{"user_turn_0": "I assume it has car parking ?", "agent_turn_0": "Root system inform hotel find focus equals hasParking equals True", "user_turn_1": "Then it 's fine , please book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Shangri-La \"))))))", "idx": "21820", "datum_id": {"dialogue_id": "2a3300bd-5611-474c-b407-e363747afb42", "turn_index": 6}}
{"user_turn_0": "I want another hotel with a three - star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Green Lushy Resorts price equals 65", "user_turn_1": "Book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Moody Moon \"))))))", "idx": "21827", "datum_id": {"dialogue_id": "bfdd24f8-c1cc-4866-9d42-708da12a68cc", "turn_index": 4}}
{"user_turn_0": "Try Green Acres Hotel/", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I have to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "21831", "datum_id": {"dialogue_id": "bfdd24f8-c1cc-4866-9d42-708da12a68cc", "turn_index": 8}}
{"user_turn_0": "The 10:30 train to Wimbledon arrives at what time ?", "agent_turn_0": "Root system inform train find focus equals arrivalDateTime equals time equals hour equals 5", "user_turn_1": "The 7:30 train to Edinburgh arrives at what time ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Train)) Path.apply \" object \") (lambda (^(Constraint Train) x0) (& (Train.destination_? (Place.location_? (?= \" Edinburgh \"))) (Train.departureDateTime_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 7L))) (Time.minute_? (?= (Minute.apply 30L))))))))))", "idx": "21846", "datum_id": {"dialogue_id": "04dd0fac-6329-40f4-9760-235424b80368", "turn_index": 2}}
{"user_turn_0": "Hello assistant , i need a round trip plane ticket to Amsterdam from London .", "agent_turn_0": "Root system prompt flight book object equals departureDateTime", "user_turn_1": "Sometime prior to 6:30 PM on November 8", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (November))) (Date.day_? (?= (Day.apply 8L)))))) (List.exists_? (DateTime.time_? (?<= (someSalient (& (& (Time.hour_? (?= (Hour.apply 6L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))))))", "idx": "21851", "datum_id": {"dialogue_id": "206a73cc-4fa8-4a2f-9c0c-ce1db5ad3f45", "turn_index": 1}}
{"user_turn_0": "Thursday", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 5 object equals returnDateTime equals time equals hour equals 2 minute equals 40 meridiem equals PM price equals 155", "user_turn_1": "That works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "21854", "datum_id": {"dialogue_id": "206a73cc-4fa8-4a2f-9c0c-ce1db5ad3f45", "turn_index": 4}}
{"user_turn_0": "Is it direct ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Book this one then", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "21860", "datum_id": {"dialogue_id": "658aff86-fb32-4d2e-b0ca-4e5992a4b34c", "turn_index": 4}}
{"user_turn_0": "How can I get there ?", "agent_turn_0": "Root system inform navigation find", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "21877", "datum_id": {"dialogue_id": "1540bd4d-3db8-4b32-9b4e-1f7001e9ead3", "turn_index": 4}}
{"user_turn_0": "Three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do I need to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "21881", "datum_id": {"dialogue_id": "1540bd4d-3db8-4b32-9b4e-1f7001e9ead3", "turn_index": 8}}
{"user_turn_0": "Do I need to prepay ?", "agent_turn_0": "Root system inform hotel find focus equals prePayment equals True", "user_turn_1": "Can you change the check out date to Thursday ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Thursday))))))", "idx": "21882", "datum_id": {"dialogue_id": "1540bd4d-3db8-4b32-9b4e-1f7001e9ead3", "turn_index": 9}}
{"user_turn_0": "No , sorry , I need you to change that to a round trip", "agent_turn_0": "Root system prompt flight book object equals returnDateTime", "user_turn_1": "sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.returnDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))))))", "idx": "21894", "datum_id": {"dialogue_id": "5bd7aafc-1ef6-4f9f-810f-d9ae43746be5", "turn_index": 4}}
{"user_turn_0": "Yea please be a doll and send", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Thanks for the help . Oh , and I also want to book a train before 10:30 PM to Wimbledon", "tgt": "(plan (^(Train) Book :object (& (Train.destination_? (Place.location_? (?= \" Wimbledon \"))) (Train.arrivalDateTime_? (DateTime.time_? (?<= (someSalient (& (& (Time.hour_? (?= (Hour.apply 10L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "21911", "datum_id": {"dialogue_id": "c53ada5d-68b0-464d-bffa-8ebc717ae91c", "turn_index": 4}}
{"user_turn_0": "Yes please", "agent_turn_0": "Root system inform reminder delete Completed", "user_turn_1": "Thanks , also ok . Where will you departure from ?", "tgt": "(plan (^(Train) Book :object (& (Train.source_? (Place.location_? (?= \" Bristol \"))) (Train.destination_? (Place.location_? (?= \" Belfast \"))))))", "idx": "21916", "datum_id": {"dialogue_id": "b5cdb09d-2ed4-47c6-9bc7-50ee04506548", "turn_index": 4}}
{"user_turn_0": "Does the restaurant have outdoor seats ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "That 's fine . Book it for me today please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Encino \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Today)))))))))", "idx": "21935", "datum_id": {"dialogue_id": "34d9b842-d31b-4739-9740-fa1d904145bd", "turn_index": 7}}
{"user_turn_0": "Yes , send", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Remind me to take my laptop with me", "tgt": "(plan (^(Reminder) Create :object (Reminder.reminderContent_? (?= \" take my laptop with me \"))))", "idx": "21950", "datum_id": {"dialogue_id": "5e792a91-8c88-4e93-a5a0-7126fe0017e8", "turn_index": 4}}
{"user_turn_0": "I prefer another hotel with four stars rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Candlewood Suites price equals 119", "user_turn_1": "Is fitness center available ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.hasFitness_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "21953", "datum_id": {"dialogue_id": "6728df8e-8b6c-4af0-8255-4f44d4ceddbd", "turn_index": 2}}
{"user_turn_0": "Is fitness center available ?", "agent_turn_0": "Root system inform hotel find focus equals hasFitness equals True", "user_turn_1": "Book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Etiquette Suites \"))))))", "idx": "21954", "datum_id": {"dialogue_id": "6728df8e-8b6c-4af0-8255-4f44d4ceddbd", "turn_index": 3}}
{"user_turn_0": "I need one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Tell me is breakfast included ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "21959", "datum_id": {"dialogue_id": "6728df8e-8b6c-4af0-8255-4f44d4ceddbd", "turn_index": 8}}
{"user_turn_0": "Is it a direct flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "That 's fine . Book this one for four passengers", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.class_? (?= (FlightClass.Business))) (Flight.source_? (Place.location_? (?= \" London \")))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.passengers_? (?= 4))))))", "idx": "21964", "datum_id": {"dialogue_id": "f48a1c50-38b7-4fd9-a12d-7f414072f32b", "turn_index": 3}}
{"user_turn_0": "I 'd prefer Japanese Cuisine and with rating that 's not a zero star", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Acacia Saint", "user_turn_1": "Tell me what is the address of the restaurant", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.address_? (^(String) always)))))", "idx": "21973", "datum_id": {"dialogue_id": "70106947-2214-4833-8ee5-e1ff2da332a0", "turn_index": 7}}
{"user_turn_0": "Tell me what is the address of the restaurant", "agent_turn_0": "Root system inform restaurant find focus equals address equals 61 Hill Street", "user_turn_1": "Ok fine , book it for me on September 21st", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (?= \" Jute Box \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (& (Date.month_? (?= (September))) (Date.day_? (?= (Day.apply 21L)))))))))))", "idx": "21974", "datum_id": {"dialogue_id": "70106947-2214-4833-8ee5-e1ff2da332a0", "turn_index": 8}}
{"user_turn_0": "I will be leaving on Tuesday", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 4 object equals departureDateTime equals time equals hour equals 3 meridiem equals PM price equals 138", "user_turn_1": "I would rather take the flight that leaves at 4:45 PM , and make sure you can get business class tickets", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.source_? (Place.location_? (?= \" Birmingham \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 4))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM))))))))) (Flight.class_? (?= (FlightClass.Business)))))))", "idx": "21980", "datum_id": {"dialogue_id": "59e05c27-ffc0-44a8-ae82-ad7ec6215640", "turn_index": 2}}
{"user_turn_0": "I will be retuning on Thursday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM", "user_turn_1": "That works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "22001", "datum_id": {"dialogue_id": "00e9649b-7f5d-4379-98a8-77384e6846ea", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Book my flight to Paris", "tgt": "(plan (^(Flight) Book :object (Flight.destination_? (Place.location_? (?= \" Paris \")))))", "idx": "22008", "datum_id": {"dialogue_id": "600390fa-fcaa-11ea-ace2-acde48001122", "turn_index": 0}}
{"user_turn_0": "Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "I 'll take the flight at 4:00 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 4L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "22016", "datum_id": {"dialogue_id": "e3b0d300-b778-446a-a2b1-592acf3870cc", "turn_index": 2}}
{"user_turn_0": "Do they have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "That 's good then . Please book it for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "22022", "datum_id": {"dialogue_id": "90cfd521-68b1-4128-a421-871b3c301c53", "turn_index": 2}}
{"user_turn_0": "Is there any event on Saturday on my calendar", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Great book the flight on Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.departureDateTime_? (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Saturday))))))))))", "idx": "22028", "datum_id": {"dialogue_id": "6007de08-fcaa-11ea-8543-acde48001122", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , do away with the message from Mr Ross this morning .", "tgt": "(plan (^(Message) Delete :object (& (Message.sender_? (Contact.person_? (& (Person.name_? (?= \" Ross \")) (Person.namePrefix_? (?= \" Mr \"))))) (Message.atDateTime_? (DateTime.time_? (?= (Morning)))))))", "idx": "22042", "datum_id": {"dialogue_id": "2782defd-4056-45a1-a3de-cb803afce905", "turn_index": 0}}
{"user_turn_0": "Ok looks good book it", "agent_turn_0": "Root system inform taxi book Completed", "user_turn_1": "Send tomorrows event to Carolyn", "tgt": "(plan (^(Message) Create :object (& (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Tomorrow)))))))) (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Carolyn \")))))))", "idx": "22052", "datum_id": {"dialogue_id": "4c2cdef4-3b01-4b38-addc-1ad4848b395f", "turn_index": 4}}
{"user_turn_0": "Can you book me a flight from London Heathrow to Edinburgh please", "agent_turn_0": "Root system prompt flight book object equals departureDateTime", "user_turn_1": "Are there any event which has been schedule at 2 PM that day ?", "tgt": "(plan (^(CalendarEvent) Find :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday)))) (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "22054", "datum_id": {"dialogue_id": "600b939a-fcaa-11ea-9fa7-acde48001122", "turn_index": 1}}
{"user_turn_0": "Are there any event which has been schedule at 2 PM that day ?", "agent_turn_0": "Root system inform calendarEvent find object equals eventName equals Mystery Shopping", "user_turn_1": "Then book my flight later than 2 PM on Wednesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday))))) (List.exists_? (DateTime.time_? (?>= (someSalient (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))))))", "idx": "22055", "datum_id": {"dialogue_id": "600b939a-fcaa-11ea-9fa7-acde48001122", "turn_index": 2}}
{"user_turn_0": "Is this a nonstop flight ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "Ok , book this flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "22065", "datum_id": {"dialogue_id": "aca738a7-6e26-4790-a41c-45d63177733e", "turn_index": 2}}
{"user_turn_0": "Do any of these serve American food ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Beef Easy", "user_turn_1": "Can you give me their address ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "22073", "datum_id": {"dialogue_id": "756f1425-5c65-4e1c-9a7a-102c816bb67d", "turn_index": 3}}
{"user_turn_0": "No , let 's find with outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals La Zilla", "user_turn_1": "Give me their address", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "22076", "datum_id": {"dialogue_id": "756f1425-5c65-4e1c-9a7a-102c816bb67d", "turn_index": 6}}
{"user_turn_0": "Give me their address", "agent_turn_0": "Root system inform restaurant find focus equals address equals 7 Barrow Point Avenue", "user_turn_1": "OK , let 's book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Maple \"))))))", "idx": "22077", "datum_id": {"dialogue_id": "756f1425-5c65-4e1c-9a7a-102c816bb67d", "turn_index": 7}}
{"user_turn_0": "Is there any Tuesday event on the calendar", "agent_turn_0": "Root system inform calendarEvent find object equals eventName equals Private Investigation dateTimeRange equals startDateTime equals date equals dayOfWeek equals Tuesday time equals hour equals 2 meridiem equals PM", "user_turn_1": "Book my flight after 2 PM on the same day", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& x0 (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (List.exists_? (DateTime.time_? (?>= (someSalient (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))))))", "idx": "22082", "datum_id": {"dialogue_id": "600f6c4a-fcaa-11ea-a96a-acde48001122", "turn_index": 2}}
{"user_turn_0": "Brussel", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM price equals 134", "user_turn_1": "That 's good , book that flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "22088", "datum_id": {"dialogue_id": "3af656b5-410f-4988-88e7-24bf683df834", "turn_index": 3}}
{"user_turn_0": "Can you please check for me if I have any other event on 2 PM Tuesday", "agent_turn_0": "Root system inform calendarEvent find object equals eventName equals Mystery Shopping", "user_turn_1": "OK , schedule my new event at 6 PM same day", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.startDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "22092", "datum_id": {"dialogue_id": "601220ac-fcaa-11ea-8dcb-acde48001122", "turn_index": 2}}
{"user_turn_0": "I 'd rather have another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jurassic Pork", "user_turn_1": "Give me the address of this place", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "22097", "datum_id": {"dialogue_id": "ddc9e6fa-e9cf-482c-b820-b31541b9ad01", "turn_index": 4}}
{"user_turn_0": "Wait , get me another place with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Godka", "user_turn_1": "Do they have parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "22099", "datum_id": {"dialogue_id": "ddc9e6fa-e9cf-482c-b820-b31541b9ad01", "turn_index": 6}}
{"user_turn_0": "Do they have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Great , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Dim Summit \"))))))", "idx": "22100", "datum_id": {"dialogue_id": "ddc9e6fa-e9cf-482c-b820-b31541b9ad01", "turn_index": 7}}
{"user_turn_0": "Which airline ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals British", "user_turn_1": "I want the one leaving at 2:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "22108", "datum_id": {"dialogue_id": "a8211b5c-38d9-476c-9ec7-b77c49d9d01a", "turn_index": 4}}
{"user_turn_0": "Can you book me a hotel near Northwood", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals Renaissance 199", "user_turn_1": "Please book the Renaissance hotel for me", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Renaissance \"))))))", "idx": "22111", "datum_id": {"dialogue_id": "601546c6-fcaa-11ea-9d4c-acde48001122", "turn_index": 1}}
{"user_turn_0": "Please book the Renaissance hotel for me", "agent_turn_0": "Root system prompt hotel book object equals dateTimeRange", "user_turn_1": "Which day does my calendar event Challenge Yourself happen ?", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (^(DateTime) always))) :object (CalendarEvent.eventName_? (?= \" Challenge Yourself \"))))", "idx": "22112", "datum_id": {"dialogue_id": "601546c6-fcaa-11ea-9d4c-acde48001122", "turn_index": 2}}
{"user_turn_0": "Which day does my calendar event Challenge Yourself happen ?", "agent_turn_0": "Root system inform calendarEvent find focus equals startDateTime equals date equals dayOfWeek equals Tuesday", "user_turn_1": "Book my hotel on Tuesday and I will stay for one night", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (DateTimeRange.duration_? (AppleDuration.day_? (?= 1)))))))))", "idx": "22113", "datum_id": {"dialogue_id": "601546c6-fcaa-11ea-9d4c-acde48001122", "turn_index": 3}}
{"user_turn_0": "I got a message from my daughter this morning . Please delete it", "agent_turn_0": "Root system inform message find notExisted object equals sender", "user_turn_1": "I have an event on my calendar called Smart Card Research . When is it ?", "tgt": "(plan (^(CalendarEvent) Find :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (^(DateTime) always))) :object (& (CalendarEvent.eventName_? (?= \" Smart Card Research \")) (CalendarEvent.attendees_? (Contact.person_? (Person.name_? (?= \" David \")))))))", "idx": "22120", "datum_id": {"dialogue_id": "18f4917a-3449-4bf2-9c2a-7610d943dd31", "turn_index": 4}}
{"user_turn_0": "What class is it ?", "agent_turn_0": "Root system inform flight find focus equals class equals Economy", "user_turn_1": "Ok , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "22125", "datum_id": {"dialogue_id": "f1363c63-fb48-4d93-a3b2-64b351955ef4", "turn_index": 2}}
{"user_turn_0": "Do I have any other event at 6 PM on that day ?", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Schedule my new event at 6 PM on Saturday", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.startDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "22131", "datum_id": {"dialogue_id": "601779da-fcaa-11ea-99cd-acde48001122", "turn_index": 2}}
{"user_turn_0": "I would like to create on my calendar the we together outdoors at Sunday", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals startDateTime equals time", "user_turn_1": "Are there any event which has been schedule at 2 PM that day ?", "tgt": "(plan (^(CalendarEvent) Find :object (& (CalendarEvent.eventName_? (^((Constraint String)) refer)) (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))) (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))))", "idx": "22145", "datum_id": {"dialogue_id": "6019b1e6-fcaa-11ea-aa10-acde48001122", "turn_index": 1}}
{"user_turn_0": "Are there any event which has been schedule at 2 PM that day ?", "agent_turn_0": "Root system inform calendarEvent find notExisted", "user_turn_1": "Sounds great ! Please schedule 2 PM for me on Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.startDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "22146", "datum_id": {"dialogue_id": "6019b1e6-fcaa-11ea-aa10-acde48001122", "turn_index": 2}}
{"user_turn_0": "Can you check for me if I have any event on 2 PM Tuesday", "agent_turn_0": "Root system inform calendarEvent find object equals eventName equals auditing session", "user_turn_1": "move it to Sunday", "tgt": "(plan (^(CalendarEvent) Update :focus (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (Date.dayOfWeek_? (?= (Sunday)))))) :object (^((Constraint CalendarEvent)) refer)))", "idx": "22149", "datum_id": {"dialogue_id": "601c5298-fcaa-11ea-8045-acde48001122", "turn_index": 2}}
{"user_turn_0": "move it to Sunday", "agent_turn_0": "Root system inform calendarEvent update Completed", "user_turn_1": "Schedule my new event at 2 PM Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTime)) Path.apply \" object.dateTimeRange.startDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "22150", "datum_id": {"dialogue_id": "601c5298-fcaa-11ea-8045-acde48001122", "turn_index": 3}}
{"user_turn_0": "What 's the airline", "agent_turn_0": "Root system inform flight find focus equals airLine equals Ryanair", "user_turn_1": "I 'd prefer the one at 1:45 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "22164", "datum_id": {"dialogue_id": "10efac04-315e-4f50-bc03-f03ad5d2e2c5", "turn_index": 2}}
{"user_turn_0": "I 'd prefer the one at 1:45 PM", "agent_turn_0": "Root system prompt flight book object equals returnDateTime equals time inform flight find count equals 2 object equals returnDateTime equals time equals hour equals 3 minute equals 20 meridiem equals PM price equals 166", "user_turn_1": "Looks good", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (^((Constraint Hour)) refer)) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "22165", "datum_id": {"dialogue_id": "10efac04-315e-4f50-bc03-f03ad5d2e2c5", "turn_index": 3}}
{"user_turn_0": "I want another restaurant with outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floss and Joes", "user_turn_1": "Does it have parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "22172", "datum_id": {"dialogue_id": "dc1a5751-09f2-4544-8a9d-8a71fa5cd15e", "turn_index": 5}}
{"user_turn_0": "Which restaurants have not zero rating star ?", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Stazione restaurant", "user_turn_1": "Does it have outdoor seats ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasOutdoorSeats_? (^(Boolean) always)))))", "idx": "22174", "datum_id": {"dialogue_id": "dc1a5751-09f2-4544-8a9d-8a71fa5cd15e", "turn_index": 7}}
{"user_turn_0": "Does it have outdoor seats ?", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Inheat \"))))))", "idx": "22175", "datum_id": {"dialogue_id": "dc1a5751-09f2-4544-8a9d-8a71fa5cd15e", "turn_index": 8}}
{"user_turn_0": "Just 2", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does it have free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "22192", "datum_id": {"dialogue_id": "88643b47-dddc-4d51-abbb-8f87264cf396", "turn_index": 6}}
{"user_turn_0": "What is the price of it ?", "agent_turn_0": "Root system inform flight find focus equals price equals 134", "user_turn_1": "Sounds good ! Go ahead and book it for one passenger", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (Flight.source_? (Place.location_? (?= \" Leeds \"))) (Flight.destination_? (^((Constraint Place)) refer))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (^((Constraint Date)) refer))) (^((Constraint (List DateTime))) refer)))) (Flight.passengers_? (?= 1))))))", "idx": "22217", "datum_id": {"dialogue_id": "9b648d8d-1c32-4129-9e3d-cebe634ae512", "turn_index": 2}}
{"user_turn_0": "Hello assistant , can I see the hotels around ?", "agent_turn_0": "Root system inform hotel find", "user_turn_1": "Yes , I need to book a hotel rated three stars . Check in date September 23rd , staying for three nights", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.rating_? (?= 3)) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (& (Date.month_? (?= (September))) (Date.day_? (?= (Day.apply 23L)))))) (DateTimeRange.duration_? (AppleDuration.day_? (?= 3))))))))", "idx": "22221", "datum_id": {"dialogue_id": "a83ff061-c393-4722-a20e-f52d9e513d1e", "turn_index": 1}}
{"user_turn_0": "Three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do you know if I need to prepay ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "22226", "datum_id": {"dialogue_id": "a83ff061-c393-4722-a20e-f52d9e513d1e", "turn_index": 6}}
{"user_turn_0": "I 'd rather a different restaurant that has outdoor seating", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Goat and Guru", "user_turn_1": "Make a reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Floq \"))))))", "idx": "22236", "datum_id": {"dialogue_id": "e9b85d0b-1d66-49cf-bcc1-a7df1276dce8", "turn_index": 8}}
{"user_turn_0": "What airline is it ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals EasyJet", "user_turn_1": "That 's cool . Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "22244", "datum_id": {"dialogue_id": "547909f2-64a7-4ed7-bf43-7e9e612d412f", "turn_index": 5}}
{"user_turn_0": "I would like another restaurant with parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone", "user_turn_1": "Does this restaurant have parking ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "22268", "datum_id": {"dialogue_id": "d4f97c0e-7e37-4d2b-a52f-0c51e0aeed4b", "turn_index": 4}}
{"user_turn_0": "Does this restaurant have parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "This is good , book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Gogol \"))))))", "idx": "22269", "datum_id": {"dialogue_id": "d4f97c0e-7e37-4d2b-a52f-0c51e0aeed4b", "turn_index": 5}}
{"user_turn_0": "Can you give me the weather status in Exeter tomorrow ?", "agent_turn_0": "Root system inform weatherReport find object equals weatherTypes equals Rainy", "user_turn_1": "Can you show me a way to go to 6A Streatham Hill by bike ?", "tgt": "(plan (^(Navigation) Find :object (& (Navigation.destination_? (Place.location_? (?= \" 6a Streatham Hill \"))) (Navigation.transportationMode_? (?= (TransportationMode.Biking))))))", "idx": "22287", "datum_id": {"dialogue_id": "5a6528c1-d3a7-4fd6-8fe7-d6c046e60b9e", "turn_index": 3}}
{"user_turn_0": "Yes send it", "agent_turn_0": "Root system inform message create Completed", "user_turn_1": "Also can you book me a saloon taxi going from the African Waistcoat to 12 Hydean Way", "tgt": "(plan (^(Taxi) Book :object (& (& (Taxi.serviceType_? (List.exists_? (?= (ServiceType.Saloon)))) (Taxi.source_? (Place.location_? (?= \" The African Waistcoat \")))) (Taxi.destination_? (Place.location_? (?= \" 12 Hydean Way \"))))))", "idx": "22292", "datum_id": {"dialogue_id": "24ace6da-7936-4cd5-a216-6551501c125b", "turn_index": 3}}
{"user_turn_0": "Yes , that 's fine", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 1 minute equals 45 meridiem equals PM", "user_turn_1": "Yes , I 'll take it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "22296", "datum_id": {"dialogue_id": "fca5c04c-e9af-47e0-977c-dffc02e93880", "turn_index": 2}}
{"user_turn_0": "Hi there , can you make a reminder for today 's event please ?", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Is there a message from 07805624777 ?", "tgt": "(plan (^(Message) CheckExistence :object (Message.recipients_? (Contact.phoneNumber_? (?= \" 07805624777 \")))))", "idx": "22311", "datum_id": {"dialogue_id": "df7eb278-3b90-42c7-a87e-bf476064d103", "turn_index": 1}}
{"user_turn_0": "Can you make a calendar event for 3:00 and make a reminder for it too please ?", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals endDateTime", "user_turn_1": "it is 4:00", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.duration_? (AppleDuration.hour_? (?= 1)))))))", "idx": "22314", "datum_id": {"dialogue_id": "df7eb278-3b90-42c7-a87e-bf476064d103", "turn_index": 4}}
{"user_turn_0": "Next , can you create a reminder for this event ?", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Set a reminder for the event", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "22349", "datum_id": {"dialogue_id": "f6ae52e9-7593-4bc7-b700-07096bbce6b2", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , please make reservation in Blackwall , make sure it has parking space . I want to make reservation for tomorrow .", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.location_? (?= \" Blackwall \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Tomorrow)))))) (Restaurant.hasParking_? (?= true)))))", "idx": "22364", "datum_id": {"dialogue_id": "cc4cb5d5-7bb0-4ec5-8ce3-5bda0c3f939b", "turn_index": 0}}
{"user_turn_0": "Hello assistant , i would like to book a restaurant in Temple that is not high priced .", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Floss and Joes", "user_turn_1": "Please tell me which of those places are rated with at least one star", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.rating_? (?>= (someSalient (?= 1))))))))", "idx": "22379", "datum_id": {"dialogue_id": "3a6235d5-1310-4467-9330-6b600821fc14", "turn_index": 1}}
{"user_turn_0": "Please tell me which of those places are rated with at least one star", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Hambone", "user_turn_1": "Does that restaurant offer outdoor seating ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "22380", "datum_id": {"dialogue_id": "3a6235d5-1310-4467-9330-6b600821fc14", "turn_index": 2}}
{"user_turn_0": "Which of those places offers Italian Cuisine", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Bandits", "user_turn_1": "Does that place offer parking ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.hasParking_? (^(Boolean) always)))))", "idx": "22383", "datum_id": {"dialogue_id": "3a6235d5-1310-4467-9330-6b600821fc14", "turn_index": 5}}
{"user_turn_0": "Does that place offer parking ?", "agent_turn_0": "Root system inform restaurant find focus equals hasParking equals True", "user_turn_1": "Sure . Book it for me please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Floss and Joes \"))))))", "idx": "22384", "datum_id": {"dialogue_id": "3a6235d5-1310-4467-9330-6b600821fc14", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , is there a car type that you prefer ? Your choices include Saloon , MPV and Executive .", "tgt": "(plan (^(Taxi) Book :object (& (Taxi.destination_? (Place.location_? (?= \" 83 Upper Street \"))) (Taxi.passengers_? (?= 3)))))", "idx": "22390", "datum_id": {"dialogue_id": "fecb46a3-f061-496e-a6e0-0ac0579c68ee", "turn_index": 0}}
{"user_turn_0": "Hello assistant , is there a car type that you prefer ? Your choices include Saloon , MPV and Executive .", "agent_turn_0": "Root system prompt taxi book object equals serviceType inform taxi find object equals serviceType equals listElementOne Saloon listElementTwo MPV listElementThree Executive", "user_turn_1": "Book a taxi for three passengers to 83 Upper Street", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Taxi)) Path.apply \" object \") (lambda (^(Constraint Taxi) x0) (& (& x0 (Taxi.serviceType_? (List.exists_? (?= (ServiceType.Any))))) (Taxi.luggages_? (?= 2))))))", "idx": "22391", "datum_id": {"dialogue_id": "fecb46a3-f061-496e-a6e0-0ac0579c68ee", "turn_index": 1}}
{"user_turn_0": "Christopher", "agent_turn_0": "Root system prompt message create object equals textContent", "user_turn_1": "where are you ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Message)) Path.apply \" object \") (lambda (^(Constraint Message) x0) (& x0 (Message.textContent_? (?= \" where are you \"))))))", "idx": "22397", "datum_id": {"dialogue_id": "b10b7ea6-ad92-4ce6-867b-7089bce3a340", "turn_index": 2}}
{"user_turn_0": "About how much does it cost per person ?", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 36", "user_turn_1": "That works , make a reservation for 5:30 PM on March 9th", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& (& x0 (Restaurant.restaurantName_? (^((Constraint String)) refer))) (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (& (Date.month_? (?= (March))) (Date.day_? (?= (Day.apply 9L)))))) (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 5L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "22409", "datum_id": {"dialogue_id": "786ccad2-42ad-455d-b2e2-4299af45d690", "turn_index": 4}}
{"user_turn_0": "Which airline is it ?", "agent_turn_0": "Root system inform flight find focus equals airLine equals Eastern", "user_turn_1": "I actually prefer the one departing at 3:30 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "22418", "datum_id": {"dialogue_id": "cbcc5925-f71b-4bb1-a54f-48697a31ec5c", "turn_index": 5}}
{"user_turn_0": "Is breakfast also included ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Good , book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "22424", "datum_id": {"dialogue_id": "e5d5a860-cc58-45fe-8bba-417580c2bd1a", "turn_index": 3}}
{"user_turn_0": "I need three rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Does this booking support free cancellation ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.freeCancellation_? (^(Boolean) always)))))", "idx": "22429", "datum_id": {"dialogue_id": "e5d5a860-cc58-45fe-8bba-417580c2bd1a", "turn_index": 8}}
{"user_turn_0": "What rating does it have ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "22461", "datum_id": {"dialogue_id": "1335e8ba-04b6-4ee1-bd6e-abff1a420316", "turn_index": 3}}
{"user_turn_0": "Let me go with three single rooms", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you check if I need to make an advance payment ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.prePayment_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "22472", "datum_id": {"dialogue_id": "9ed6e48b-30bf-4a05-877e-5891f3909053", "turn_index": 6}}
{"user_turn_0": "Can you check if I need to make an advance payment ?", "agent_turn_0": "Root system inform hotel find focus equals prePayment equals True", "user_turn_1": "Let me change the checkout date to Saturday instead", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "22473", "datum_id": {"dialogue_id": "9ed6e48b-30bf-4a05-877e-5891f3909053", "turn_index": 7}}
{"user_turn_0": "London Heathrow", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 2 object equals departureDateTime equals time equals hour equals 4 minute equals 30 meridiem equals PM price equals 127", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (^((Constraint Time)) refer))))", "idx": "22487", "datum_id": {"dialogue_id": "af92051c-4e09-4ad6-a0e4-857d19663418", "turn_index": 2}}
{"user_turn_0": "Friday", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 3 object equals nextDepartureDateTime equals time equals hour equals 3 minute equals 50 meridiem equals PM price equals 145", "user_turn_1": "This one works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 45L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "22496", "datum_id": {"dialogue_id": "b58e0cfc-9ac3-4967-a51e-12f7f984e173", "turn_index": 6}}
{"user_turn_0": "How long will that flight be ?", "agent_turn_0": "Root system inform flight find focus equals duration equals hour equals 1 minute equals 10", "user_turn_1": "It 's fine , get me one ticket , please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Flight)) Path.apply \" object \") (lambda (^(Constraint Flight) x0) (& (& (& (& (Flight.class_? (?= (FlightClass.Economy))) (Flight.destination_? (Place.location_? (?= \" Brussel \")))) (Flight.departureDateTime_? (& (List.exists_? (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday))))) (^((Constraint (List DateTime))) refer)))) (Flight.source_? (^((Constraint Place)) refer))) (Flight.passengers_? (?= 1))))))", "idx": "22508", "datum_id": {"dialogue_id": "b655f40d-6c36-4d7a-b020-69cd6050f11f", "turn_index": 3}}
{"user_turn_0": "Can you call Kimberly ?", "agent_turn_0": "Root system inform phoneCall create Completed", "user_turn_1": "Can you call 07924846814 for me ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint Contact)) Path.apply \" object.recipients \") (lambda (^(Constraint Contact) x0) (Contact.phoneNumber_? (?= \" 07924846814 \")))))", "idx": "22521", "datum_id": {"dialogue_id": "e8f7b4a9-d419-42a6-8a63-e726dfa366c7", "turn_index": 2}}
{"user_turn_0": "What rating does it got ?", "agent_turn_0": "Root system inform hotel find focus equals rating equals 3", "user_turn_1": "I would like to book a room with a queen sized bed for two nights starting January 26th", "tgt": "(plan (^(Hotel) Book :object (& (& (Hotel.hotelName_? (^((Constraint String)) refer)) (Hotel.dateTimeRange_? (& (DateTimeRange.startDateTime_? (DateTime.date_? (& (Date.month_? (?= (January))) (Date.day_? (?= (Day.apply 26L)))))) (DateTimeRange.duration_? (AppleDuration.day_? (?= 2)))))) (Hotel.roomType_? (List.exists_? (?= (RoomType.Queen)))))))", "idx": "22537", "datum_id": {"dialogue_id": "6832c64b-7e27-4e33-b0fb-b7a222d1eda8", "turn_index": 2}}
{"user_turn_0": "Three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Do they have free cancellation ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.freeCancellation_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "22539", "datum_id": {"dialogue_id": "6832c64b-7e27-4e33-b0fb-b7a222d1eda8", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , book DImple 's restaurant today in Queen 's Park .", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.location_? (?= \" Queen's Park \")) (Restaurant.restaurantName_? (?= \" Dimple's \"))) (Restaurant.atDateTime_? (List.exists_? (DateTime.date_? (?= (Today))))))))", "idx": "22546", "datum_id": {"dialogue_id": "743e7ae5-78e6-470c-9d2f-165503be5c44", "turn_index": 0}}
{"user_turn_0": "Hello assistant , pull up the message sent to 07712350877 .", "agent_turn_0": "Root system inform message find", "user_turn_1": "Thanks , also can you book The Lakeside Demon restaurant in King 's Cross ?", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.location_? (?= \" King's Cross \")) (Restaurant.restaurantName_? (?= \" The Lakeside Demon \")))))", "idx": "22567", "datum_id": {"dialogue_id": "b3aa37a2-3b1f-4a36-b39f-6dc3c024de19", "turn_index": 1}}
{"user_turn_0": "There are n't any stops , right ?", "agent_turn_0": "Root system inform flight find focus equals stops equals 0", "user_turn_1": "That works , get the tickets", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (^((Constraint (List DateTime))) refer)))))", "idx": "22576", "datum_id": {"dialogue_id": "27207020-9880-4c3e-89cf-74f6b33f7658", "turn_index": 5}}
{"user_turn_0": "Do you know if the hotel has free wifi", "agent_turn_0": "Root system inform hotel find focus equals hasWifi equals True", "user_turn_1": "Please book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "22581", "datum_id": {"dialogue_id": "b90452ad-2b5f-4b95-9ae8-2ce2af531c1f", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello assistant , i need an economy class ticket for a flight going to Belfast city", "tgt": "(plan (^(Flight) Book :object (& (Flight.class_? (?= (FlightClass.Economy))) (Flight.destination_? (Place.location_? (?= \" Belfast City \"))))))", "idx": "22604", "datum_id": {"dialogue_id": "b788ee51-b07a-4cb1-8101-c5abdffc37eb", "turn_index": 0}}
{"user_turn_0": "Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time inform flight find count equals 3 object equals departureDateTime equals time equals hour equals 2 meridiem equals PM price equals 138", "user_turn_1": "I would rather take the 4:20 PM flight", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 4L))) (Time.minute_? (?= (Minute.apply 20L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "22607", "datum_id": {"dialogue_id": "b788ee51-b07a-4cb1-8101-c5abdffc37eb", "turn_index": 3}}
{"user_turn_0": "I want Italian Cuisine", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "Where is it location", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.address_? (^(String) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "22614", "datum_id": {"dialogue_id": "3b5532a0-f50e-4992-8fb9-5aa6cce7e094", "turn_index": 3}}
{"user_turn_0": "Where is it location", "agent_turn_0": "Root system inform restaurant find focus equals address equals 21 Parkfield Street", "user_turn_1": "Good , book it please", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Inheat \"))))))", "idx": "22615", "datum_id": {"dialogue_id": "3b5532a0-f50e-4992-8fb9-5aa6cce7e094", "turn_index": 4}}
{"user_turn_0": "For 6 please", "agent_turn_0": "Root system prompt restaurant book object equals atDateTime", "user_turn_1": "At 2 PM on the seventh", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.atDateTime_? (& (List.exists_? (DateTime.date_? (Date.day_? (?= (Day.apply 7L))))) (List.exists_? (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 2L))) (meridiem_? (?= (Meridiem.PM))))))))))))", "idx": "22617", "datum_id": {"dialogue_id": "3b5532a0-f50e-4992-8fb9-5aa6cce7e094", "turn_index": 6}}
{"user_turn_0": "Okay , what 's the rating of the place", "agent_turn_0": "Root system inform hotel find focus equals rating equals 2", "user_turn_1": "Yea please book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "22627", "datum_id": {"dialogue_id": "d8812f77-0364-43ae-a11d-8dac91bcf6df", "turn_index": 3}}
{"user_turn_0": "Wait , can I have two rooms ?", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you actually change the check out to on the 25h", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.day_? (?= (Day.apply 25L))))))", "idx": "22630", "datum_id": {"dialogue_id": "d8812f77-0364-43ae-a11d-8dac91bcf6df", "turn_index": 6}}
{"user_turn_0": "Does the restaurant take credit card ?", "agent_turn_0": "Root system inform restaurant find focus equals takeCreditCard equals True", "user_turn_1": "Alright book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Lakeside Demon \"))))))", "idx": "22647", "datum_id": {"dialogue_id": "8a6ed0d6-37a7-45cb-9237-5871d2752ccb", "turn_index": 4}}
{"user_turn_0": "Can you remind me about the event please", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "Please add a reminder for my next event", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint CalendarEvent)) Path.apply \" object.atDateTime \") (lambda (^(Constraint CalendarEvent) x0) (CalendarEvent.listOffset_? (?= 1)))))", "idx": "22655", "datum_id": {"dialogue_id": "c1dce0c7-ece6-4c90-8186-50f5375fcba0", "turn_index": 4}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , i want today 's event sent to Mr Black .", "tgt": "(plan (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (& (Person.name_? (?= \" Black \")) (Person.namePrefix_? (?= \" Mr \"))))) (Message.textContent_? (?= (^(String CalendarEvent) reference (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (?= (Today)))))))))))", "idx": "22666", "datum_id": {"dialogue_id": "cf6b474c-099c-44fd-9df6-b57e11c8b1bf", "turn_index": 0}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey , can you give directions to 4 Compton Aveny by walking ?", "tgt": "(plan (^(Navigation) Find :object (& (Navigation.destination_? (Place.location_? (?= \" 4 Compton Avenue \"))) (Navigation.transportationMode_? (?= (TransportationMode.Walking))))))", "idx": "22677", "datum_id": {"dialogue_id": "c07e2804-4ded-42c1-8c1d-12825bf9bbad", "turn_index": 0}}
{"user_turn_0": "I will be going to Madrid on Sunday , not coming back", "agent_turn_0": "Root system prompt flight book object equals nextDepartureDateTime equals time inform flight find count equals 3 object equals nextDepartureDateTime equals time equals hour equals 4 minute equals 20 meridiem equals PM price equals 124", "user_turn_1": "OK , it loos fine", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.nextDepartureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "22684", "datum_id": {"dialogue_id": "c07e2804-4ded-42c1-8c1d-12825bf9bbad", "turn_index": 7}}
{"user_turn_0": "Book one room", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Actually , I changed my mind . Can you change my check - out date to Sunday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.dateTimeRange.endDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Sunday))))))", "idx": "22694", "datum_id": {"dialogue_id": "f30b09e5-5892-4b1a-82ad-bbb110837de8", "turn_index": 3}}
{"user_turn_0": "Are there private bathrooms in the hotel ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Make a reservation", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "22715", "datum_id": {"dialogue_id": "8ecb22f9-c6f6-4e44-b039-72bd45dc3072", "turn_index": 3}}
{"user_turn_0": "The 15th and book for one passenger please", "agent_turn_0": "Root system inform flight find notExisted", "user_turn_1": "Tuesday", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Date)) Path.apply \" object.departureDateTime.date \") (lambda (^(Constraint Date) x0) (Date.dayOfWeek_? (?= (Tuesday))))))", "idx": "22723", "datum_id": {"dialogue_id": "b1618945-1f12-4888-9827-cf05bf2a7493", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hey assistant , whip me up an event to be at 3 PM on the 14 and add it to my reminders .", "tgt": "(plan (do (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.day_? (?= (Day.apply 14L)))) (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM))))))))) (^(Reminder) Create :object (Reminder.reminderContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))))))", "idx": "22727", "datum_id": {"dialogue_id": "a8671a5c-db66-4d0a-b5f0-d04b30740465", "turn_index": 0}}
{"user_turn_0": "It 'll last for 45 minutes", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "When 's the BA350 going to come in ?", "tgt": "(plan (^(Flight) Find :focus (Flight.arrivalDateTime_? (^(DateTime) always)) :object (Flight.flightNumber_? (?= \" BA350 \"))))", "idx": "22729", "datum_id": {"dialogue_id": "a8671a5c-db66-4d0a-b5f0-d04b30740465", "turn_index": 2}}
{"user_turn_0": "Saturday", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 4 minute equals 45 meridiem equals PM", "user_turn_1": "Okay sure", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 1L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "22740", "datum_id": {"dialogue_id": "cb5bd40c-103d-4ded-baa5-2b8295f159b5", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hello , what 's the event 's end time ?", "tgt": "(plan (do (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (& (DateTime.date_? (Date.dayOfWeek_? (?= (Tuesday)))) (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 11L))) (Time.minute_? (?= (Minute.apply 30L)))) (meridiem_? (?= (Meridiem.AM))))))))) (^(Reminder) Create :object (Reminder.reminderContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))))))", "idx": "22753", "datum_id": {"dialogue_id": "0615940a-9698-43ca-863c-a7ca580eba13", "turn_index": 0}}
{"user_turn_0": "Hello , what 's the event 's end time ?", "agent_turn_0": "Root system prompt calendarEvent create object equals dateTimeRange equals endDateTime", "user_turn_1": "Schedule a calendar event for Tuesday at 11:30 AM and have it added to reminder", "tgt": "(plan (revise (^(Unit) Path.apply \" Create \") (^((Constraint DateTimeRange)) Path.apply \" object.dateTimeRange \") (lambda (^(Constraint DateTimeRange) x0) (& x0 (DateTimeRange.endDateTime_? (& (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 8L))) (meridiem_? (?= (Meridiem.PM))))) (DateTime.date_? (Date.day_? (?= (Day.apply 24L))))))))))", "idx": "22754", "datum_id": {"dialogue_id": "0615940a-9698-43ca-863c-a7ca580eba13", "turn_index": 1}}
{"user_turn_0": "Schedule a calendar event for Tuesday at 11:30 AM and have it added to reminder", "agent_turn_0": "Root system inform calendarEvent create Completed reminder create Completed", "user_turn_1": "The reminder has been created for you", "tgt": "(plan (^(Reminder) Create :object (& (Reminder.reminderContent_? (?= \" buy the ticket \")) (Reminder.atDateTime_? (& (DateTime.time_? (& (Time.hour_? (?= (Hour.apply 6L))) (meridiem_? (?= (Meridiem.PM))))) (DateTime.date_? (& (Date.month_? (?= (January))) (Date.day_? (?= (Day.apply 9L))))))))))", "idx": "22755", "datum_id": {"dialogue_id": "0615940a-9698-43ca-863c-a7ca580eba13", "turn_index": 2}}
{"user_turn_0": "The reminder has been created for you", "agent_turn_0": "Root system inform reminder create Completed", "user_turn_1": "For what time ?", "tgt": "(plan (^(CalendarEvent) Create :object (CalendarEvent.location_? (?= \" Kissmet \"))))", "idx": "22756", "datum_id": {"dialogue_id": "0615940a-9698-43ca-863c-a7ca580eba13", "turn_index": 3}}
{"user_turn_0": "Can you find me a three star hotel", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Candlewood Suites price equals 134", "user_turn_1": "Do they have private bathrooms there ?", "tgt": "(plan (^(Hotel) Find :focus (Hotel.privateBath_? (^(Boolean) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "22770", "datum_id": {"dialogue_id": "252e8c09-6c17-44eb-b7dc-27353e4ccd2e", "turn_index": 4}}
{"user_turn_0": "Do they have private bathrooms there ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Go ahead and book me there", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Chestnut Tree \"))))))", "idx": "22771", "datum_id": {"dialogue_id": "252e8c09-6c17-44eb-b7dc-27353e4ccd2e", "turn_index": 5}}
{"user_turn_0": "Three", "agent_turn_0": "Root system offer hotel book", "user_turn_1": "Can you check if I need to pre - pay first", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.prePayment_? (^(Boolean) always)))))", "idx": "22774", "datum_id": {"dialogue_id": "252e8c09-6c17-44eb-b7dc-27353e4ccd2e", "turn_index": 8}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , book a hotel room that is not zero stars and has a low price .", "tgt": "(plan (^(Hotel) Book :object (& (Hotel.priceRange_? (?= (PriceRange.Low))) (Hotel.rating_? (?!= (someSalient (?= 0)))))))", "idx": "22776", "datum_id": {"dialogue_id": "22e49b9b-bc82-4d74-be7c-761df71ff722", "turn_index": 0}}
{"user_turn_0": "Does that one have private bathrooms ?", "agent_turn_0": "Root system inform hotel find focus equals privateBath equals True", "user_turn_1": "Book that one", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (^((Constraint String)) refer))))))", "idx": "22779", "datum_id": {"dialogue_id": "22e49b9b-bc82-4d74-be7c-761df71ff722", "turn_index": 3}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "OK assistant , let me book a restaurant at 3 o'clock that serves Italian cuisine in Northwick park .", "tgt": "(plan (^(Restaurant) Book :object (& (& (Restaurant.location_? (?= \" Northwick Park \")) (Restaurant.atDateTime_? (List.exists_? (DateTime.time_? (Time.hour_? (?= (Hour.apply 3L))))))) (Restaurant.foodType_? (?= (FoodType.Italian))))))", "idx": "22785", "datum_id": {"dialogue_id": "25db780a-fc97-4393-8853-62423fed7183", "turn_index": 0}}
{"user_turn_0": "Let me go with another restaurant that has outdoor seats", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Inheat", "user_turn_1": "Can you check if it has outdoor seats ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasOutdoorSeats_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "22788", "datum_id": {"dialogue_id": "25db780a-fc97-4393-8853-62423fed7183", "turn_index": 3}}
{"user_turn_0": "I need to pick another restaurant that has parking", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Emptia", "user_turn_1": "Please check if it has outdoor seats", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^(Unit) Path.apply \"  \") (lambda (^Unit x0) x0)))", "idx": "22790", "datum_id": {"dialogue_id": "25db780a-fc97-4393-8853-62423fed7183", "turn_index": 5}}
{"user_turn_0": "Please check if it has outdoor seats", "agent_turn_0": "Root system inform restaurant find focus equals hasOutdoorSeats equals True", "user_turn_1": "Cool ! Please go ahead and book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" The Maple \"))))))", "idx": "22791", "datum_id": {"dialogue_id": "25db780a-fc97-4393-8853-62423fed7183", "turn_index": 6}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi there , i prefer to reserve restaurant near my event for party of 5 .", "tgt": "(plan (^(Restaurant) Book :object (& (Restaurant.location_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always)))) (Restaurant.tableSize_? (?= 5)))))", "idx": "22809", "datum_id": {"dialogue_id": "b24eb00f-39af-4a6d-b1cb-c2a8bbc729de", "turn_index": 0}}
{"user_turn_0": "What type of food is served ?", "agent_turn_0": "Root system inform restaurant find focus equals foodType equals Chinese hotpot", "user_turn_1": "Can you book it on my behalf please ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (^((Constraint Restaurant)) refer)))))", "idx": "22811", "datum_id": {"dialogue_id": "b24eb00f-39af-4a6d-b1cb-c2a8bbc729de", "turn_index": 2}}
{"user_turn_0": null, "agent_turn_0": null, "user_turn_1": "Hi assistant , what 's the event 's start time ?", "tgt": "(plan (do (^(CalendarEvent) Create :object (CalendarEvent.dateTimeRange_? (DateTimeRange.startDateTime_? (DateTime.date_? (& (Date.month_? (?= (April))) (Date.day_? (?= (Day.apply 22L)))))))) (^(Message) Create :object (& (Message.recipients_? (Contact.person_? (Person.name_? (?= \" Eric \")))) (Message.textContent_? (?= (^(String CalendarEvent) reference (^(CalendarEvent) always))))))))", "idx": "22815", "datum_id": {"dialogue_id": "08e25293-90c0-413d-af04-ef29e72f21a4", "turn_index": 0}}
{"user_turn_0": "London", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "The one leaving at 2:40 PM works", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint (List DateTime))) Path.apply \" object.departureDateTime \") (lambda (^(Constraint (List DateTime)) x0) (& x0 (List.exists_? (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 40L)))) (meridiem_? (?= (Meridiem.PM))))))))))", "idx": "22823", "datum_id": {"dialogue_id": "71ec391d-4dc8-41e2-9641-b79eb838b459", "turn_index": 3}}
{"user_turn_0": "From Leicester", "agent_turn_0": "Root system prompt train book object equals departureDateTime equals time inform train find object equals departureDateTime equals time equals hour equals 2 minute equals 50 meridiem equals PM", "user_turn_1": "I like the one at 3:50 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.departureDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 3L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "22828", "datum_id": {"dialogue_id": "bd4f6947-066d-4e93-8af1-c2d182a94635", "turn_index": 2}}
{"user_turn_0": "I like the one at 3:50 PM", "agent_turn_0": "Root system prompt train book object equals returnDateTime inform train find object equals returnDateTime equals time equals hour equals 3 minute equals 45 meridiem equals PM", "user_turn_1": "Yeah , I do", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint DateTime)) Path.apply \" object.returnDateTime \") (lambda (^(Constraint DateTime) x0) (& x0 (DateTime.time_? (& (& (Time.hour_? (?= (Hour.apply 2L))) (Time.minute_? (?= (Minute.apply 50L)))) (meridiem_? (?= (Meridiem.PM)))))))))", "idx": "22829", "datum_id": {"dialogue_id": "bd4f6947-066d-4e93-8af1-c2d182a94635", "turn_index": 3}}
{"user_turn_0": "I 'd prefer a hotel with a moderate price", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Odysse Suites price equals 155", "user_turn_1": "what 's it rated", "tgt": "(plan (^(Hotel) Find :focus (Hotel.rating_? (^(Number) always)) :object (?= (^(Hotel Dynamic) reference (^(Dynamic) always)))))", "idx": "22839", "datum_id": {"dialogue_id": "bdd48197-abd3-46b0-9e06-504a15a3df7f", "turn_index": 2}}
{"user_turn_0": "I 'd like another hotel with a four star rating", "agent_turn_0": "Root system prompt hotel book object equals hotelName inform hotel find object equals hotelName equals Westin price equals 134", "user_turn_1": "Does it include breakfast ?", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Hotel)) Path.apply \" focus \") (lambda (^(Constraint Hotel) x0) (Hotel.hasBreakfast_? (^(Boolean) always)))))", "idx": "22841", "datum_id": {"dialogue_id": "bdd48197-abd3-46b0-9e06-504a15a3df7f", "turn_index": 4}}
{"user_turn_0": "Does it include breakfast ?", "agent_turn_0": "Root system inform hotel find focus equals hasBreakfast equals True", "user_turn_1": "Book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Hotel)) Path.apply \" object \") (lambda (^(Constraint Hotel) x0) (& x0 (Hotel.hotelName_? (?= \" Ace Hotel \"))))))", "idx": "22842", "datum_id": {"dialogue_id": "bdd48197-abd3-46b0-9e06-504a15a3df7f", "turn_index": 5}}
{"user_turn_0": "I 'd like a high priced Indian restaurant please", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Encino", "user_turn_1": "Do they have parking ?", "tgt": "(plan (^(Restaurant) Find :focus (Restaurant.hasParking_? (^(Boolean) always)) :object (?= (^(Restaurant Dynamic) reference (^(Dynamic) always)))))", "idx": "22852", "datum_id": {"dialogue_id": "12912f6f-51ff-4e66-994f-17b523182281", "turn_index": 5}}
{"user_turn_0": "From Manchester", "agent_turn_0": "Root system prompt flight book object equals departureDateTime equals time", "user_turn_1": "The one at 3 PM", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Time)) Path.apply \" object.departureDateTime.time \") (lambda (^(Constraint Time) x0) (& (Time.hour_? (?= (Hour.apply 3L))) (meridiem_? (?= (Meridiem.PM)))))))", "idx": "22860", "datum_id": {"dialogue_id": "552c8532-b57d-4d4b-acd0-268e46f39330", "turn_index": 2}}
{"user_turn_0": "Hello , what time does my calendar event start on Monday ?", "agent_turn_0": "Root system inform calendarEvent find focus equals dateTimeRange equals startDateTime equals time equals hour equals 11 minute equals 30", "user_turn_1": "Do me another favor . set a reminder for me for that", "tgt": "(plan (^(Reminder) Create :object (Reminder.atDateTime_? (^((Constraint DateTime)) refer))))", "idx": "22881", "datum_id": {"dialogue_id": "84d9df22-6a45-461d-82e1-459040900584", "turn_index": 1}}
{"user_turn_0": "What is the price range of the restaurant called Jurassic Pork ?", "agent_turn_0": "Root system inform restaurant find focus equals priceRange equals High", "user_turn_1": "Book a table there for me", "tgt": "(plan (^(Restaurant) Book :object (^((Constraint Restaurant)) refer)))", "idx": "22888", "datum_id": {"dialogue_id": "f53f0dd4-ec22-4021-80e6-b6f5ebf080cc", "turn_index": 3}}
{"user_turn_0": "I like Grill food", "agent_turn_0": "Root system prompt restaurant book object equals restaurantName inform restaurant find object equals restaurantName equals Jurassic Pork", "user_turn_1": "Give me the average cost per person", "tgt": "(plan (revise (^(Unit) Path.apply \" Find \") (^((Constraint Restaurant)) Path.apply \" focus \") (lambda (^(Constraint Restaurant) x0) (Restaurant.averageCost_? (^(Number) always)))))", "idx": "22905", "datum_id": {"dialogue_id": "f5d80000-84aa-46e6-a828-ae7f172afb7a", "turn_index": 5}}
{"user_turn_0": "Give me the average cost per person", "agent_turn_0": "Root system inform restaurant find focus equals averageCost equals 43", "user_turn_1": "Ok fine , book it", "tgt": "(plan (revise (^(Unit) Path.apply \" Book \") (^((Constraint Restaurant)) Path.apply \" object \") (lambda (^(Constraint Restaurant) x0) (& x0 (Restaurant.restaurantName_? (?= \" Hambone Martian \"))))))", "idx": "22906", "datum_id": {"dialogue_id": "f5d80000-84aa-46e6-a828-ae7f172afb7a", "turn_index": 6}}
