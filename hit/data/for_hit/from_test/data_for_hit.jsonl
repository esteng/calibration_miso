{"gold_tgt": "( let ( x0 ( DateAtTimeWithDefaults ( NextDOW ( Saturday ) ) ( NumberAM 8L ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" 3k run \" ) ) ( Event.start_? ( ?= x0 ) ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x0 ( NumberPM 12L ) ) ) ) ) ) ) ) )", "bin": 0.22, "data_idx": 1941, "pred_tgts": ["(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" 5k run \")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 12L)))))))))", "(let (x0 (DateAtTimeWithDefaults (previousDayOfWeek (Today) (Saturday)) (NumberAM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" 5k run \")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 12L)))))))))", "(let (x0 (DateAtTimeWithDefaults (nextDayOfWeek (Today) (Saturday)) (NumberAM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" 5k run \")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 12L)))))))))"], "pred_translated": ["Set up a 5k run on Saturday from 8am to 12pm.", "I ran a 5k run last saturday from 8 am to 12 pm", "Add a 5k run on Saturday from 8:00 AM until 12:00 PM."], "distractor": "Pancakes."}
{"gold_tgt": "( let ( x0 ( DateAtTimeWithDefaults ( NextDOW ( Saturday ) ) ( NumberAM 8L ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" 3k run \" ) ) ( Event.start_? ( ?= x0 ) ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x0 ( NumberPM 12L ) ) ) ) ) ) ) ) )", "bin": 0.22, "data_idx": 1941, "pred_tgts": ["(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" 5k run \")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 12L)))))))))", "(let (x0 (DateAtTimeWithDefaults (previousDayOfWeek (Today) (Saturday)) (NumberAM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" 5k run \")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 12L)))))))))", "(let (x0 (DateAtTimeWithDefaults (nextDayOfWeek (Today) (Saturday)) (NumberAM 8L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" 5k run \")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 12L)))))))))"], "pred_translated": ["Set up a 5k run on Saturday from 8am to 12pm.", "I ran a 5k run last saturday from 8 am to 12 pm", "Add a 5k run on Saturday from 8:00 AM until 12:00 PM."], "distractor": "I need to change the date of my doctor's appointment"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" hike \" ) ) ( Event.start_? ( ?= ( NextTime ( HourMinuteMilitary 3L 30L ) ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Polly \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.27, "data_idx": 949, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" hike \")) (Event.start_? (?= (NextTime (HourMinuteMilitary 3L 45L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Polly \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" hike \")) (Event.start_? (?= (NextTime (HourMinuteMilitary 3L 59L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Polly \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" hike \")) (Event.start_? (?= (NextTime (HourMinuteMilitary 3L 0L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Polly \")))))))))))"], "pred_translated": ["Schedule a hike with Polly at 3:45.", "Add a hike with Polly at 359", "Add a hike with Polly at 0300"], "distractor": "And what about December 6th?"}
{"gold_tgt": "( Yield ( WeatherQueryApi ( AtPlace ( FindPlace ( LocationKeyphrase.apply \" Lake City, FL \" ) ) ) ( DateTime.date_? ( ?= ( Today ) ) ) ) )", "bin": 0.31, "data_idx": 594, "pred_tgts": ["(Yield (IsHighUV (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Lake City, FL \"))) (DateTime.date_? (?= (Today))))))", "(Yield (NeedsJacket (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Lake City, FL \"))) (DateTime.date_? (?= (Today))))))", "(Yield (WillSleet (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Lake City, FL \"))) (DateTime.date_? (?= (Today))))))"], "pred_translated": ["Should I wear sunscreen today in Lake City, FL?", "Should I wear a jacket today in Lake City, FL?", "Should I wear flip flops today in Lake City, FL?"], "distractor": "I need help with my calendar"}
{"gold_tgt": "( Yield ( WeatherQueryApi ( AtPlace ( FindPlace ( LocationKeyphrase.apply \" Lake City, FL \" ) ) ) ( DateTime.date_? ( ?= ( Today ) ) ) ) )", "bin": 0.31, "data_idx": 594, "pred_tgts": ["(Yield (IsHighUV (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Lake City, FL \"))) (DateTime.date_? (?= (Today))))))", "(Yield (NeedsJacket (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Lake City, FL \"))) (DateTime.date_? (?= (Today))))))", "(Yield (WillSleet (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Lake City, FL \"))) (DateTime.date_? (?= (Today))))))"], "pred_translated": ["Should I wear sunscreen today in Lake City, FL?", "Should I wear a jacket today in Lake City, FL?", "Should I wear flip flops today in Lake City, FL?"], "distractor": "Remind me of the first flight to london"}
{"gold_tgt": "( let ( x0 ( DateAtTimeWithDefaults ( Tomorrow ) ( NumberAM 6L ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.start_? ( ?= x0 ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x0 ( NumberPM 6L ) ) ) ) ) ( Event.showAs_? ( ?= ( ShowAsStatus.Busy ) ) ) ) ) ) ) )", "bin": 0.31, "data_idx": 76, "pred_tgts": ["(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberAM 6L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 10L))))) (Event.showAs_? (?= (ShowAsStatus.Busy))))))))", "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberAM 10L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 10L))))) (Event.showAs_? (?= (ShowAsStatus.Busy))))))))", "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 10L))))) (Event.showAs_? (?= (ShowAsStatus.Busy))))))))"], "pred_translated": ["Mark me as busy from 6 am to 10 pm tomorrow.", "Mark me as busy from 10 am to 10 pm tomorrow.", "Mark me as busy from 9am to 10pm tomorrow"], "distractor": "I don't know yet."}
{"gold_tgt": "( FenceScope )", "bin": 0.35, "data_idx": 3759, "pred_tgts": ["(FencePeopleQa)", "(FenceScope)", "(FenceAttendee)"], "pred_translated": ["Is Paige Ashworth in my address book?", "What is your name?", "Please schedule a meeting with the pope tomorrow."], "distractor": "Do I have any meetings on Tuesday afternoon?"}
{"gold_tgt": "( FenceScope )", "bin": 0.35, "data_idx": 3759, "pred_tgts": ["(FencePeopleQa)", "(FenceScope)", "(FenceAttendee)"], "pred_translated": ["Is Paige Ashworth in my address book?", "What is your name?", "Please schedule a meeting with the pope tomorrow."], "distractor": "Add an afterparty one hour after the Tea Party Rave"}
{"gold_tgt": "( FenceScope )", "bin": 0.35, "data_idx": 3759, "pred_tgts": ["(FencePeopleQa)", "(FenceScope)", "(FenceAttendee)"], "pred_translated": ["Is Paige Ashworth in my address book?", "What is your name?", "Please schedule a meeting with the pope tomorrow."], "distractor": "Decline the conference on Feb 29 2020 and say sorry I have a doctors"}
{"gold_tgt": "( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( Tomorrow ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) 0L ) )", "bin": 0.35, "data_idx": 9541, "pred_tgts": ["(FenceOther)", "(Yield (not (FenceOther)))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"], "pred_translated": ["Can you tell me the weather for tomorrow in Greenville, NC?", "Do I have any papers due this week?", "Do I have any meetings tomorrow?"], "distractor": "The 2nd one works."}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEventFromConstraint ( ^ ( Event ) EmptyStructConstraint ) ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.35, "data_idx": 4076, "pred_tgts": ["(FenceMultiAction)", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["The second one, but make it an hour.", "meet lawyer in tomorrow", "ok"], "distractor": "I need a movie night after 3 pm tomorrow"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( DateTime.date_? ( ?= ( NextDOW ( Tuesday ) ) ) ) ) ( Event.duration_? ( ?= ( toHours 3 ) ) ) ) ) ) )", "bin": 0.35, "data_idx": 6077, "pred_tgts": ["(FenceOther)", "(FenceDateTime)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))) (Event.duration_? (?= (toHours 3)))))))"], "pred_translated": ["Can you tell me the weather for tomorrow in Greenville, NC?", "Can you tell me when my next block of free time is?", "Book 3 hours for a meeting on Tuesday."], "distractor": "i need help with my calender"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" pack \" ) ) ( Event.start_? ( DateTimeConstraint ( Afternoon ) ( MD 1L ( May ) ) ) ) ) ) ) )", "bin": 0.35, "data_idx": 13023, "pred_tgts": ["(FenceOther)", "(FenceDateTime)", "(FenceSpecify)"], "pred_translated": ["How do I create an event?", "What about the rest of the week?", "Can you change the time for my dentist appointment?"], "distractor": "Schedule a lunch with Kim Possible, Elli Parker and their managers."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" pack \" ) ) ( Event.start_? ( DateTimeConstraint ( Afternoon ) ( MD 1L ( May ) ) ) ) ) ) ) )", "bin": 0.35, "data_idx": 13023, "pred_tgts": ["(FenceOther)", "(FenceDateTime)", "(FenceSpecify)"], "pred_translated": ["How do I create an event?", "What about the rest of the week?", "Can you change the time for my dentist appointment?"], "distractor": "make that 9-10:30"}
{"gold_tgt": "( FenceScope )", "bin": 0.35, "data_idx": 3759, "pred_tgts": ["(FencePeopleQa)", "(FenceScope)", "(FenceAttendee)"], "pred_translated": ["Is Paige Ashworth in my address book?", "What is your name?", "Please schedule a meeting with the pope tomorrow."], "distractor": "Thanks. And also delete my Private Interview from the Monday after this."}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEventFromConstraint ( ^ ( Event ) EmptyStructConstraint ) ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.35, "data_idx": 4076, "pred_tgts": ["(FenceMultiAction)", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["The second one, but make it an hour.", "meet lawyer in tomorrow", "ok"], "distractor": "Delete the tournament before the tournament."}
{"gold_tgt": "( Yield ( Event.location ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( Tomorrow ) ( Event.subject_? ( ?~= \" dinner \" ) ) ) ) ) ) ) )", "bin": 0.35, "data_idx": 5709, "pred_tgts": ["(FencePlaces)", "(FenceScope)", "(FenceOther)"], "pred_translated": ["Does the Olive Garden serve Italian cuisine?", "Does the Olive Garden serve food for children?", "Does the Olive Garden serve Italian cuisine?"], "distractor": "What about Sunday morning?"}
{"gold_tgt": "( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( Tomorrow ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) 0L ) )", "bin": 0.35, "data_idx": 9541, "pred_tgts": ["(FenceOther)", "(Yield (not (FenceOther)))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"], "pred_translated": ["Can you tell me the weather for tomorrow in Greenville, NC?", "Do I have any papers due this week?", "Do I have any meetings tomorrow?"], "distractor": "Yes April 25 works"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" pack \" ) ) ( Event.start_? ( DateTimeConstraint ( Afternoon ) ( MD 1L ( May ) ) ) ) ) ) ) )", "bin": 0.35, "data_idx": 13023, "pred_tgts": ["(FenceOther)", "(FenceDateTime)", "(FenceSpecify)"], "pred_translated": ["How do I create an event?", "What about the rest of the week?", "Can you change the time for my dentist appointment?"], "distractor": "Can you set it up for 8?"}
{"gold_tgt": "( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( Tomorrow ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) 0L ) )", "bin": 0.35, "data_idx": 9541, "pred_tgts": ["(FenceOther)", "(Yield (not (FenceOther)))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))) 0L))"], "pred_translated": ["Can you tell me the weather for tomorrow in Greenville, NC?", "Do I have any papers due this week?", "Do I have any meetings tomorrow?"], "distractor": "Do I have a meeting with Karen?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" afterparty \" ) ) ( Event.start_? ( ?= ( TimeAfterDateTime ( Event.end ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" Tea Party Rave \" ) ) ) ) ) ) ( HourMinuteMilitary 3L 30L ) ) ) ) ) ) ) )", "bin": 0.35, "data_idx": 7237, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" afterparty \")) (Event.start_? (?= (TimeAfterDateTime (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Tea Party Rave \")))))) (HourMinuteMilitary 3L 59L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" afterparty \")) (Event.start_? (?= (adjustByPeriodDuration (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Tea Party Rave \")))))) (PeriodDuration.apply :duration (toHours 1)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" afterparty \")) (Event.start_? (?= (TimeAfterDateTime (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Tea Party Rave \")))))) (HourMinuteMilitary 3L 30L))))))))"], "pred_translated": ["Create an afterparty at 0359 after Tea Party Rave", "Add an afterparty one hour after the Tea Party Rave", "Create an afterparty at 0330 after Tea Party Rave"], "distractor": "Can you add a note that says, \"Salt + Lime\"?"}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEventFromConstraint ( ^ ( Event ) EmptyStructConstraint ) ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.35, "data_idx": 4076, "pred_tgts": ["(FenceMultiAction)", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["The second one, but make it an hour.", "meet lawyer in tomorrow", "ok"], "distractor": "The one on the 3rd"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" paul \" ) ) ) ) ) ) ) ) ) )", "bin": 0.4, "data_idx": 711, "pred_tgts": ["(PleasantryCalendar)", "(FenceSpecify)", "(PleasantryAnythingElseCombined)"], "pred_translated": ["I need help with my calendar", "I need to change the date of my doctor's appointment", "no thanks"], "distractor": "What time is my third event in march?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" paul \" ) ) ) ) ) ) ) ) ) )", "bin": 0.4, "data_idx": 711, "pred_tgts": ["(PleasantryCalendar)", "(FenceSpecify)", "(PleasantryAnythingElseCombined)"], "pred_translated": ["I need help with my calendar", "I need to change the date of my doctor's appointment", "no thanks"], "distractor": "Can you change the time to 3:30pm"}
{"gold_tgt": "( Yield ( Event.start ( FindNumNextEvent ( Event.subject_? ( ?~= \" day off \" ) ) 1L ) ) )", "bin": 0.4, "data_idx": 1759, "pred_tgts": ["(FenceOther)", "(FenceDateTime)", "(FenceTriviaQa)"], "pred_translated": ["Can you tell me the weather for tomorrow in Greenville, NC?", "Can you tell me when my next block of free time is?", "How many months have 30 days?"], "distractor": "i need to update my calender"}
{"gold_tgt": "( FenceOther )", "bin": 0.4, "data_idx": 10498, "pred_tgts": ["(FenceSwitchTabs)", "(FenceScope)", "(FenceOther)"], "pred_translated": ["email fiona mason", "I need to know how to organize my personal calendar.", "How do you manage my calendar?"], "distractor": "I need to change the date of my doctor's appointment"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( MD 11L ( April ) ) ( NumberPM 8L ) ) ) ) ) ) )", "bin": 0.4, "data_idx": 6975, "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 8L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?= (DateAtTimeWithDefaults (MD 11L (April)) (NumberPM 8L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Thursday)) (NumberPM 8L)))))))"], "pred_translated": ["No, dinner should be at 8 pm on Thursday.", "No, the dinner is at 8pm on April 11.", "No, dinner should be at 8 pm on Thursday."], "distractor": "Will it rain during my picnic tomorrow?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( MDY 6L ( toMonth 4L ) ( Year.apply 2019L ) ) ( NumberPM 4L ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Paige Ashworth \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.4, "data_idx": 5917, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MDY 4L (toMonth 4L) (Year.apply 2019L)) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Paige Ashworth \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MDY 4L (toMonth 4L) (Year.apply 2019L)) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Paige Ashworth \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MDY 2L (toMonth 4L) (Year.apply 2019L)) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Paige Ashworth \")))))))))))"], "pred_translated": ["Please put the meeting 4/4/2019 at 4:00 PM with Paige Ashworth on my calendar.", "Please put the meeting 4/4/2019 at 4:00 PM with Paige Ashworth on my calendar.", "Please put the meeting 4/2/2019 at 4:00 PM with Paige Ashworth in my calendar"], "distractor": "What about on the 6th?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( MDY 6L ( toMonth 4L ) ( Year.apply 2019L ) ) ( NumberPM 4L ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Paige Ashworth \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.4, "data_idx": 5917, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MDY 4L (toMonth 4L) (Year.apply 2019L)) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Paige Ashworth \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MDY 4L (toMonth 4L) (Year.apply 2019L)) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Paige Ashworth \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MDY 2L (toMonth 4L) (Year.apply 2019L)) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Paige Ashworth \")))))))))))"], "pred_translated": ["Please put the meeting 4/4/2019 at 4:00 PM with Paige Ashworth on my calendar.", "Please put the meeting 4/4/2019 at 4:00 PM with Paige Ashworth on my calendar.", "Please put the meeting 4/2/2019 at 4:00 PM with Paige Ashworth in my calendar"], "distractor": "How much rain is Lafayette GA going to get"}
{"gold_tgt": "( FencePeopleQa )", "bin": 0.4, "data_idx": 5214, "pred_tgts": ["(FenceScope)", "(FencePeopleQa)", "(FenceAttendee)"], "pred_translated": ["How old are you?", "Why didn't Mom come to my birthday party?", "Please schedule a meeting with the pope tomorrow."], "distractor": "Who reports to me?"}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.4, "data_idx": 10155, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(DoNotConfirm)", "(FenceOther)"], "pred_translated": ["It's in the wide open!", "No", "Can you add a note that says, \"Salt + Lime\"?"], "distractor": "How did Alex respond to the picnic?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" paul \" ) ) ) ) ) ) ) ) ) )", "bin": 0.4, "data_idx": 711, "pred_tgts": ["(PleasantryCalendar)", "(FenceSpecify)", "(PleasantryAnythingElseCombined)"], "pred_translated": ["I need help with my calendar", "I need to change the date of my doctor's appointment", "no thanks"], "distractor": "When is Jobio's birthday?"}
{"gold_tgt": "( Yield ( FindManager ( FindManager ( toRecipient ( CurrentUser ) ) ) ) )", "bin": 0.4, "data_idx": 9998, "pred_tgts": ["(FencePeopleQa)", "(PleasantryAnythingElseCombined)", "(FenceScope)"], "pred_translated": ["Can you tell me who David's manager is?", "ok", "Who is my manager?"], "distractor": "yes"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" paul \" ) ) ) ) ) ) ) ) ) )", "bin": 0.4, "data_idx": 711, "pred_tgts": ["(PleasantryCalendar)", "(FenceSpecify)", "(PleasantryAnythingElseCombined)"], "pred_translated": ["I need help with my calendar", "I need to change the date of my doctor's appointment", "no thanks"], "distractor": "The duration should be for two hours."}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.4, "data_idx": 7773, "pred_tgts": ["(FenceScope)", "(FencePeopleQa)", "(FenceAttendee)"], "pred_translated": ["How old are you?", "Why didn't Mom come to my birthday party?", "Please schedule a meeting with the pope tomorrow."], "distractor": "Can you tell me the weather for tomorrow in Greenville, NC?"}
{"gold_tgt": "( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Karen \" ) ) ) ) ) ) ) 0L ) )", "bin": 0.44, "data_idx": 6125, "pred_tgts": ["(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Karen \"))))))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Karen \"))))))) 0L))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Karen \")))))))))"], "pred_translated": ["When is my meeting with Karen?", "Do I have a meeting with Karen?", "When is my meeting with Karen?"], "distractor": "ok"}
{"gold_tgt": "( FenceOther )", "bin": 0.44, "data_idx": 993, "pred_tgts": ["(FenceSpecify)", "(FenceOther)", "(FenceAttendee)"], "pred_translated": ["I need to update my meeting with Karl Boon", "Defer the meeting with Karl Boon", "Add Karl Boon to my address book"], "distractor": "Can you forward this contact to Bill?"}
{"gold_tgt": "( FenceOther )", "bin": 0.44, "data_idx": 825, "pred_tgts": ["(PleasantryCalendar)", "(FenceOther)", "(FenceSpecify)"], "pred_translated": ["I need help with my calendar", "How do I create a new event?", "I need to update my calendar"], "distractor": "I don't know yet."}
{"gold_tgt": "( Yield ( WeatherQueryApi ( AtPlace ( FindPlace ( LocationKeyphrase.apply \" 21048 \" ) ) ) ( ?= ( Now ) ) ) )", "bin": 0.44, "data_idx": 12951, "pred_tgts": ["(FenceOther)", "(FenceWeather)", "(FenceScope)"], "pred_translated": ["Can you tell me the weather for tomorrow in Greenville, NC?", "What causes hail?", "How old are you?"], "distractor": "Can you tell me the weather for tomorrow in Greenville, NC?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( EventAllDayForDateRange ( Event.subject_? ( ?= \" orientation \" ) ) ( ThisWeekend ) ) ) ) )", "bin": 0.44, "data_idx": 13149, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \" orientation \")) (Today)))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" orientation \")) (Event.start_? (DateTime.date_? (ThisWeekend)))) (Event.isAllDay_? (?= true))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \" orientation \")) (ThisWeekend)))))"], "pred_translated": ["Make me an all day orientation for today", "Make me an all day orientation for this weekend", "Make me an orientation for all weekend"], "distractor": "Add pool party at YMCA on Saturday from 1 pm to 5 pm."}
{"gold_tgt": "( Yield ( WeatherQueryApi ( AtPlace ( FindPlace ( LocationKeyphrase.apply \" 21048 \" ) ) ) ( ?= ( Now ) ) ) )", "bin": 0.44, "data_idx": 12951, "pred_tgts": ["(FenceOther)", "(FenceWeather)", "(FenceScope)"], "pred_translated": ["Can you tell me the weather for tomorrow in Greenville, NC?", "What causes hail?", "How old are you?"], "distractor": "I need to change the date of my doctor's appointment"}
{"gold_tgt": "( let ( x0 ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) ) ( do ( Yield x0 ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.showAs_? ( ?= ( ShowAsStatus.OutOfOffice ) ) ) ( EventAllDayStartingDateForPeriod ( ^ ( Event ) EmptyStructConstraint ) ( DateTime.date ( Event.start ( ^ ( Dynamic ) item x0 ) ) ) ( toDays 1 ) ) ) ) ) ) ) )", "bin": 0.44, "data_idx": 11, "pred_tgts": ["(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceDateTime))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceSpecify))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceOther))"], "pred_translated": ["Yes. Mark me out of office for the rest of the week.", "Yes. Mark me as out of office for the rest of the day.", "Yes. Mark me out of office for the rest of the day."], "distractor": "Do I have any conflicts with this meeting?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( EventAllDayForDateRange ( Event.subject_? ( ?= \" orientation \" ) ) ( ThisWeekend ) ) ) ) )", "bin": 0.44, "data_idx": 13149, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \" orientation \")) (Today)))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" orientation \")) (Event.start_? (DateTime.date_? (ThisWeekend)))) (Event.isAllDay_? (?= true))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \" orientation \")) (ThisWeekend)))))"], "pred_translated": ["Make me an all day orientation for today", "Make me an all day orientation for this weekend", "Make me an orientation for all weekend"], "distractor": "I need to change the time of the staff meeting."}
{"gold_tgt": "( Yield ( Event.attendees ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" doctor \" ) ) ) ) ) ) )", "bin": 0.44, "data_idx": 5068, "pred_tgts": ["(FenceAttendee)", "(FencePeopleQa)", "(FenceScope)"], "pred_translated": ["Where is my doctor's office located?", "Where is my doctor's office located?", "Where is the doctor's office located?"], "distractor": "Set up a recurring event for that event"}
{"gold_tgt": "( FenceDateTime )", "bin": 0.44, "data_idx": 12563, "pred_tgts": ["(FenceOther)", "(FenceDateTime)", "(FenceSpecify)"], "pred_translated": ["How do I create a calendar?", "What are my last two events on friday?", "Show me different times."], "distractor": "Remind me of the first flight to london"}
{"gold_tgt": "( FenceMultiAction )", "bin": 0.44, "data_idx": 7932, "pred_tgts": ["(FenceOther)", "(FenceMultiAction)", "(FenceConditional)"], "pred_translated": ["Can you re-add it for Monday the 26th?", "Cancel anything else I have going on that day", "If there is nothing else on my schedule that day, please cancel."], "distractor": "Schedule teh Lowes Lunch on Friday at 1:30 pm."}
{"gold_tgt": "( FenceOther )", "bin": 0.44, "data_idx": 6226, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(FenceAggregation)"], "pred_translated": ["Can you tell me the weather for tomorrow in Greenville, NC?", "I need to change the date of my doctor's appointment", "How many days do I have completely free next month?"], "distractor": "WHAT CAN I HELP IS CORRECT"}
{"gold_tgt": "( Yield ( Event.attendees ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" doctor \" ) ) ) ) ) ) )", "bin": 0.44, "data_idx": 5068, "pred_tgts": ["(FenceAttendee)", "(FencePeopleQa)", "(FenceScope)"], "pred_translated": ["Where is my doctor's office located?", "Where is my doctor's office located?", "Where is the doctor's office located?"], "distractor": "Add jog at brunch time."}
{"gold_tgt": "( Yield ( WeatherQueryApi ( AtPlace ( FindPlace ( LocationKeyphrase.apply \" Charleston, SC \" ) ) ) ( DateTime.date_? ( NextPeriod ( toDays 5 ) ) ) ) )", "bin": 0.44, "data_idx": 6199, "pred_tgts": ["(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Charleston, SC \"))) (DateTime.date_? (NextPeriod (toDays 2)))))", "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Charleston, SC \"))) (DateTime.date_? (NextPeriod (toDays 5)))))", "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Charleston, SC \"))) (DateTime.date_? (NextPeriod (toDays 32)))))"], "pred_translated": ["What will the weather be in Charleston, SC for the next 2 days?", "What will the five day forecast be in Charleston, SC", "What will the weather be 32 days in Charleston, SC"], "distractor": "Have the meeting go until 2:30 PM and mark me as Out of Office."}
{"gold_tgt": "( Yield ( Execute ( NewClobber ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ( ^ ( ( Constraint DateTime ) ) roleConstraint ( Path.apply \" time \" ) ) ( intension ( DateTimeConstraint ( ?= ( Noon ) ) ( Tomorrow ) ) ) ) ) )", "bin": 0.44, "data_idx": 13486, "pred_tgts": ["(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint DateTime)) roleConstraint (Path.apply \" time \")) (intension (?= (DateAtTimeWithDefaults (Tomorrow) (Noon)))))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^(Date) roleConstraint (Path.apply \" time \")) (extensionConstraint (^(Date) EmptyStructConstraint))) (intension (Noon)))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint DateTime)) roleConstraint (Path.apply \" time \")) (intension (Noon)))))"], "pred_translated": ["What about at noon tomorrow?", "What about at noon?", "What about at noon?"], "distractor": "1400 won't work anymore, let's go with 1500 for an hour."}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( EventOnDate ( ClosestDay ( Execute ( refer ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ( Day.apply 6L ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) )", "bin": 0.48, "data_idx": 3296, "pred_tgts": ["(FenceMultiAction)", "(FenceOther)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDay (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Day.apply 6L)) (^(Event) EmptyStructConstraint)))))"], "pred_translated": ["Display my meetings on November 5.", "Display calendar events for November 5.", "What about on the 6th?"], "distractor": "Schedule a meeting with him and his skip next week."}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.48, "data_idx": 10596, "pred_tgts": ["(FenceSpecify)", "(PleasantryAnythingElseCombined)", "(PleasantryCalendar)"], "pred_translated": ["Can you change the time on that", "ok", "I need help with my calendar"], "distractor": "Show me another timing to the meeting."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( MDY 5L ( toMonth 4L ) ( Year.apply 2019L ) ) ( NumberPM 4L ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Cecilia Waller \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.48, "data_idx": 5916, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MDY 2L (toMonth 4L) (Year.apply 2019L)) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cecilia Waller \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MDY 1L (toMonth 4L) (Year.apply 2019L)) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cecilia Waller \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MDY 6L (toMonth 4L) (Year.apply 2019L)) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cecilia Waller \")))))))))))"], "pred_translated": ["Please schedule a meeting with Cecilia Waller for 4/2/2019 at 4:00pm", "Please schedule a meeting with Cecilia Waller for 4/1/2019 at 4:00pm", "Please schedule a meeting with Cecilia Waller for 4/6/2019 at 4:00pm"], "distractor": "How much rain is Lafayette GA going to get"}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.48, "data_idx": 7154, "pred_tgts": ["(FenceSpecify)", "(PleasantryAnythingElseCombined)", "(FenceAttendee)"], "pred_translated": ["can you change the time", "rainbow unicorns", "put appointment with doctor"], "distractor": "Change my dental appointment from 3:00 to 3:30."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( Tomorrow ) ( NumberPM 2L ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( FindManager ( toRecipient ( CurrentUser ) ) ) ) ) ) ) ) )", "bin": 0.48, "data_idx": 11964, "pred_tgts": ["(FenceAttendee)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L)))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L)))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "I need to meet with my boss tomorrow around 2 pm", "Can you schedule a meeting with my boss tomorrow at 2 pm?"], "distractor": "I need a meeting with Jake, his boss, Elli and her boss on Wednesday."}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.48, "data_idx": 12010, "pred_tgts": ["(FenceOther)", "(PleasantryCalendar)", "(FenceSpecify)"], "pred_translated": ["Who is in my address book?", "what can you do?", "update my calender"], "distractor": "I want to change the date of my doctor appointment."}
{"gold_tgt": "( Yield ( AttendeeResponseStatus ( AttendeeFromEvent ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" picnic \" ) ) ) ) ) ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Alex \" ) ) ) ) ) ) ) )", "bin": 0.48, "data_idx": 8183, "pred_tgts": ["(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" picnic \"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Alex \")))))))) (ResponseStatusType.Accepted)))", "(Yield (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" picnic \"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Alex \"))))))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Alex \"))))))"], "pred_translated": ["Did Alex accept the invite to the picnic?", "How did Alex respond to the picnic?", "How about Alex?"], "distractor": "When will it rain next in Des Moines, WA?"}
{"gold_tgt": "( FindPlaceAtHere ( LocationKeyphrase.apply \" carpet cleaner \" ) ( AtPlace ( Here ) ) )", "bin": 0.48, "data_idx": 4252, "pred_tgts": ["(FenceScope)", "(FencePlaces)", "(FencePeopleQa)"], "pred_translated": ["How old are you?", "Where is the closest bathroom?", "Why didn't Mom come to my birthday party?"], "distractor": "make that 9-10am"}
{"gold_tgt": "( Yield ( AttendeeResponseStatus ( AttendeeFromEvent ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" picnic \" ) ) ) ) ) ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Alex \" ) ) ) ) ) ) ) )", "bin": 0.48, "data_idx": 8183, "pred_tgts": ["(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" picnic \"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Alex \")))))))) (ResponseStatusType.Accepted)))", "(Yield (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" picnic \"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Alex \"))))))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Alex \"))))))"], "pred_translated": ["Did Alex accept the invite to the picnic?", "How did Alex respond to the picnic?", "How about Alex?"], "distractor": "Change the location of the staff meeting tomorrow to Conference Room B."}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( EventOnDate ( ClosestDay ( Execute ( refer ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ( Day.apply 6L ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) )", "bin": 0.48, "data_idx": 3296, "pred_tgts": ["(FenceMultiAction)", "(FenceOther)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDay (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Day.apply 6L)) (^(Event) EmptyStructConstraint)))))"], "pred_translated": ["Display my meetings on November 5.", "Display calendar events for November 5.", "What about on the 6th?"], "distractor": "Can you schedule a meeting with my boss tomorrow at 2 pm?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" sales meeting \" ) ) ) ) ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( MD 21L ( November ) ) ( NumberPM 4L ) ) ) ) ) ) )", "bin": 0.48, "data_idx": 8017, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(FenceScope)"], "pred_translated": ["Why am I single?", "I need to change my meeting with Amanda.", "Why am I single?"], "distractor": "1400 won't work anymore, let's go with 1500 for an hour."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( MDY 5L ( toMonth 4L ) ( Year.apply 2019L ) ) ( NumberPM 4L ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Cecilia Waller \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.48, "data_idx": 5916, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MDY 2L (toMonth 4L) (Year.apply 2019L)) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cecilia Waller \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MDY 1L (toMonth 4L) (Year.apply 2019L)) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cecilia Waller \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (MDY 6L (toMonth 4L) (Year.apply 2019L)) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cecilia Waller \")))))))))))"], "pred_translated": ["Please schedule a meeting with Cecilia Waller for 4/2/2019 at 4:00pm", "Please schedule a meeting with Cecilia Waller for 4/1/2019 at 4:00pm", "Please schedule a meeting with Cecilia Waller for 4/6/2019 at 4:00pm"], "distractor": "Display calendar events for November 5."}
{"gold_tgt": "( FenceOther )", "bin": 0.48, "data_idx": 4895, "pred_tgts": ["(FencePeopleQa)", "(FenceOther)", "(FenceScope)"], "pred_translated": ["Why didn't Mom come to my birthday party?", "Can you tell me the weather for tomorrow in Greenville, NC?", "How old are you?"], "distractor": "I need to meet with Cher Roydon in an hour."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( EventAllDayOnDate ( Event.subject_? ( ?= \" Take Cooking Course \" ) ) ( NextDOW ( Wednesday ) ) ) ) ) )", "bin": 0.48, "data_idx": 6987, "pred_tgts": ["(FenceDateTime)", "(FenceOther)", "(FenceRecurring)"], "pred_translated": ["What do I have on my calendar for the rest of the week?", "Can you tell me what the weather will be like in Utica, NY?", "Please repeat this event for next week as well."], "distractor": "Will it rain during my picnic tomorrow?"}
{"gold_tgt": "( Yield ( Execute ( NewClobber ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ( & ( ^ ( LocationKeyphrase ) roleConstraint ( Path.apply \" place \" ) ) ( extensionConstraint ( ^ ( LocationKeyphrase ) AlwaysTrueConstraint ) ) ) ( intension ( LocationKeyphrase.apply \" Roseville \" ) ) ) ) )", "bin": 0.48, "data_idx": 5900, "pred_tgts": ["(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^(LocationKeyphrase) roleConstraint (Path.apply \" place \")) (extensionConstraint (^(LocationKeyphrase) AlwaysTrueConstraint))) (intension (LocationKeyphrase.apply \" Roseville Roseville \")))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^(LocationKeyphrase) roleConstraint (Path.apply \" place \")) (extensionConstraint (^(LocationKeyphrase) AlwaysTrueConstraint))) (intension (LocationKeyphrase.apply \" Roseville in Roseville \")))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^(LocationKeyphrase) roleConstraint (Path.apply \" place \")) (extensionConstraint (^(LocationKeyphrase) AlwaysTrueConstraint))) (intension (LocationKeyphrase.apply \" The Roseville \")))))"], "pred_translated": ["I am in Roseville Roseville", "What about Roseville in Roseville?", "The Roseville"], "distractor": "Do I have anything else besides training this week?"}
{"gold_tgt": "( FindPlaceAtHere ( LocationKeyphrase.apply \" carpet cleaner \" ) ( AtPlace ( Here ) ) )", "bin": 0.48, "data_idx": 4252, "pred_tgts": ["(FenceScope)", "(FencePlaces)", "(FencePeopleQa)"], "pred_translated": ["How old are you?", "Where is the closest bathroom?", "Why didn't Mom come to my birthday party?"], "distractor": "change the appointment on friday to 3:30 pm"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( NextDOW ( Thursday ) ) ( HourMinutePm 2L 30L ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Karl Boon \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.48, "data_idx": 992, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (HourMinutePm 3L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Karl Boon \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (HourMinutePm 2L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Karl Boon \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (HourMinutePm 6L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Karl Boon \")))))))))))"], "pred_translated": ["Schedule a meeting with Karl Boon on Thursday at 3:30 PM.", "Schedule a meeting with Karl Boon on Thursday at 2:30 PM.", "Schedule a meeting with Karl Boon on Thursday at 6:30 PM."], "distractor": "Yes June 5th at 11:00 AM - 11:30 AM"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( NextDOW ( Thursday ) ) ( HourMinutePm 2L 30L ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Karl Boon \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.48, "data_idx": 992, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (HourMinutePm 3L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Karl Boon \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (HourMinutePm 2L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Karl Boon \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (HourMinutePm 6L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Karl Boon \")))))))))))"], "pred_translated": ["Schedule a meeting with Karl Boon on Thursday at 3:30 PM.", "Schedule a meeting with Karl Boon on Thursday at 2:30 PM.", "Schedule a meeting with Karl Boon on Thursday at 6:30 PM."], "distractor": "The earlier the better"}
{"gold_tgt": "( Yield ( IsStormy ( WeatherQueryApi ( AtPlace ( FindPlace ( LocationKeyphrase.apply \" Houston \" ) ) ) ( ?= ( Now ) ) ) ) )", "bin": 0.48, "data_idx": 3783, "pred_tgts": ["(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Storming in Houston \"))) (?= (Now))))", "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \" Storming in Houston \")))", "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Houston in Houston \"))) (?= (Now))))"], "pred_translated": ["What is the weather like in Houston?", "Is there a storm in Houston?", "What is the weather like in Houston in Houston?"], "distractor": "Do I have any papers due this week?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( EventAllDayOnDate ( Event.subject_? ( ?= \" Take Cooking Course \" ) ) ( NextDOW ( Wednesday ) ) ) ) ) )", "bin": 0.48, "data_idx": 6987, "pred_tgts": ["(FenceDateTime)", "(FenceOther)", "(FenceRecurring)"], "pred_translated": ["What do I have on my calendar for the rest of the week?", "Can you tell me what the weather will be like in Utica, NY?", "Please repeat this event for next week as well."], "distractor": "Create \"An evening with #44\" for April 7th at 7pm."}
{"gold_tgt": "( Yield ( AttendeeResponseStatus ( AttendeeFromEvent ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" picnic \" ) ) ) ) ) ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Alex \" ) ) ) ) ) ) ) )", "bin": 0.48, "data_idx": 8183, "pred_tgts": ["(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" picnic \"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Alex \")))))))) (ResponseStatusType.Accepted)))", "(Yield (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" picnic \"))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Alex \"))))))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Alex \"))))))"], "pred_translated": ["Did Alex accept the invite to the picnic?", "How did Alex respond to the picnic?", "How about Alex?"], "distractor": "Am I meeting with John tomorrow morning?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( NextDOW ( Thursday ) ) ( HourMinutePm 2L 30L ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Karl Boon \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.48, "data_idx": 992, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (HourMinutePm 3L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Karl Boon \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (HourMinutePm 2L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Karl Boon \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (HourMinutePm 6L 30L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Karl Boon \")))))))))))"], "pred_translated": ["Schedule a meeting with Karl Boon on Thursday at 3:30 PM.", "Schedule a meeting with Karl Boon on Thursday at 2:30 PM.", "Schedule a meeting with Karl Boon on Thursday at 6:30 PM."], "distractor": "When will it be warmest in Sacramento on Tuesday?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( Tomorrow ) ( NumberPM 2L ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( FindManager ( toRecipient ( CurrentUser ) ) ) ) ) ) ) ) )", "bin": 0.48, "data_idx": 11964, "pred_tgts": ["(FenceAttendee)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L)))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L)))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "I need to meet with my boss tomorrow around 2 pm", "Can you schedule a meeting with my boss tomorrow at 2 pm?"], "distractor": "Please repeat this event for next week as well."}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( EventOnDate ( ClosestDay ( Execute ( refer ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ( Day.apply 6L ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) )", "bin": 0.48, "data_idx": 3296, "pred_tgts": ["(FenceMultiAction)", "(FenceOther)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDay (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Day.apply 6L)) (^(Event) EmptyStructConstraint)))))"], "pred_translated": ["Display my meetings on November 5.", "Display calendar events for November 5.", "What about on the 6th?"], "distractor": "Was Mary at the last meeting of last year?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" coffee break \" ) ) ( Event.start_? ( ?= ( NextTime ( HourMinuteMilitary 11L 1L ) ) ) ) ) ) ) )", "bin": 0.48, "data_idx": 12309, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" coffee break \")) (Event.start_? (?= (NextTime (HourMinuteAm 11L 1L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" coffee break \")) (Event.start_? (?= (NextTime (HourMinuteMilitary 11L 1L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" coffee break \")) (Event.start_? (?= (NextTime (HourMinutePm 11L 1L))))))))"], "pred_translated": ["Add a coffee break at 11:01 AM.", "Add coffee break at 11:01.", "add coffee break at 11:01"], "distractor": "Who reports to me?"}
{"gold_tgt": "( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateAfterTime ( Today ) ( ^ ( Event ) EmptyStructConstraint ) ( Lunch ) ) ) ) ) 0L ) )", "bin": 0.48, "data_idx": 2747, "pred_tgts": ["(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint) (Lunch))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (Today) (^(Event) EmptyStructConstraint) (Lunch))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (Tomorrow) (^(Event) EmptyStructConstraint) (Lunch))))) 0L))"], "pred_translated": ["Do I have anything after lunch?", "Do I have anything after lunch today?", "Do I have anything after lunch tomorrow?"], "distractor": "How do I create a new event?"}
{"gold_tgt": "( FenceOther )", "bin": 0.48, "data_idx": 4895, "pred_tgts": ["(FencePeopleQa)", "(FenceOther)", "(FenceScope)"], "pred_translated": ["Why didn't Mom come to my birthday party?", "Can you tell me the weather for tomorrow in Greenville, NC?", "How old are you?"], "distractor": "I need to change the date of my doctor's appointment"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( EventAllDayOnDate ( Event.subject_? ( ?= \" Take Cooking Course \" ) ) ( NextDOW ( Wednesday ) ) ) ) ) )", "bin": 0.48, "data_idx": 6987, "pred_tgts": ["(FenceDateTime)", "(FenceOther)", "(FenceRecurring)"], "pred_translated": ["What do I have on my calendar for the rest of the week?", "Can you tell me what the weather will be like in Utica, NY?", "Please repeat this event for next week as well."], "distractor": "What is the other event?"}
{"gold_tgt": "( Yield ( IsStormy ( WeatherQueryApi ( AtPlace ( FindPlace ( LocationKeyphrase.apply \" Houston \" ) ) ) ( ?= ( Now ) ) ) ) )", "bin": 0.48, "data_idx": 3783, "pred_tgts": ["(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Storming in Houston \"))) (?= (Now))))", "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \" Storming in Houston \")))", "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Houston in Houston \"))) (?= (Now))))"], "pred_translated": ["What is the weather like in Houston?", "Is there a storm in Houston?", "What is the weather like in Houston in Houston?"], "distractor": "I changed my mind. Please keep the event."}
{"gold_tgt": "( FenceOther )", "bin": 0.48, "data_idx": 4895, "pred_tgts": ["(FencePeopleQa)", "(FenceOther)", "(FenceScope)"], "pred_translated": ["Why didn't Mom come to my birthday party?", "Can you tell me the weather for tomorrow in Greenville, NC?", "How old are you?"], "distractor": "Why didn't Mom come to my birthday party?"}
{"gold_tgt": "( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateAfterTime ( Today ) ( ^ ( Event ) EmptyStructConstraint ) ( Lunch ) ) ) ) ) 0L ) )", "bin": 0.48, "data_idx": 2747, "pred_tgts": ["(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint) (Lunch))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (Today) (^(Event) EmptyStructConstraint) (Lunch))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (Tomorrow) (^(Event) EmptyStructConstraint) (Lunch))))) 0L))"], "pred_translated": ["Do I have anything after lunch?", "Do I have anything after lunch today?", "Do I have anything after lunch tomorrow?"], "distractor": "I'll be on vacation for 2 days"}
{"gold_tgt": "( FenceOther )", "bin": 0.53, "data_idx": 2267, "pred_tgts": ["(FencePeopleQa)", "(FenceSpecify)", "(FenceAttendee)"], "pred_translated": ["Is Megan in my address book?", "Add Megan to address book", "Add Megan to address book"], "distractor": "How did Alex respond to the picnic?"}
{"gold_tgt": "( FenceOther )", "bin": 0.53, "data_idx": 1520, "pred_tgts": ["(FenceSpecify)", "(FenceOther)", "(PleasantryAnythingElseCombined)"], "pred_translated": ["please update my lacrosse games", "What is the second event?", "Thank you very much"], "distractor": "I need help with my calendar"}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.53, "data_idx": 4790, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(FenceWeather)", "(Yield (IsHot (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Bermuda \"))) (?= (Now)))))"], "pred_translated": ["Thank you", "Is there a hurricane right now?", "Is it hot in Bermuda"], "distractor": "make that 9-10:30"}
{"gold_tgt": "( Yield ( > ( size ( AttendeesWithResponse ( Event.attendees ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( ResponseStatusType.TentativelyAccepted ) ) ) 0L ) )", "bin": 0.53, "data_idx": 7637, "pred_tgts": ["(Yield (AttendeesWithResponse (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (ResponseStatusType.TentativelyAccepted)))", "(Yield (> (size (AttendeesWithResponse (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (ResponseStatusType.TentativelyAccepted))) 0L))", "(Yield (AttendeesWithNotResponse (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (ResponseStatusType.TentativelyAccepted)))"], "pred_translated": ["Who tentatively accepted the invite?", "Is there anyone who tentatively accepted that?", "Who has not tentatively accepted the invitation?"], "distractor": "I need a movie night date tomorrow after 3 pm"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.start_? ( DateTime.date_? ( FullMonthofMonth ( April ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 2080, "pred_tgts": ["(FenceOther)", "(FenceDateTime)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (FullMonthofMonth (April)))))))"], "pred_translated": ["When am I free in September?", "When am I free in 2 months?", "When am I free in April?"], "distractor": "When is Patriot Day"}
{"gold_tgt": "( Yield ( > ( size ( AttendeesWithResponse ( Event.attendees ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( ResponseStatusType.TentativelyAccepted ) ) ) 0L ) )", "bin": 0.53, "data_idx": 7637, "pred_tgts": ["(Yield (AttendeesWithResponse (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (ResponseStatusType.TentativelyAccepted)))", "(Yield (> (size (AttendeesWithResponse (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (ResponseStatusType.TentativelyAccepted))) 0L))", "(Yield (AttendeesWithNotResponse (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (ResponseStatusType.TentativelyAccepted)))"], "pred_translated": ["Who tentatively accepted the invite?", "Is there anyone who tentatively accepted that?", "Who has not tentatively accepted the invitation?"], "distractor": "please update my events in my calender"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.start_? ( DateTime.date_? ( FullMonthofMonth ( April ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 2080, "pred_tgts": ["(FenceOther)", "(FenceDateTime)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (FullMonthofMonth (April)))))))"], "pred_translated": ["When am I free in September?", "When am I free in 2 months?", "When am I free in April?"], "distractor": "I need help with my calendar"}
{"gold_tgt": "( let ( x0 ( NextTime ( NumberAM 8L ) ) ) ( Yield ( FindEventWrapperWithDefaults ( EventDuringRangeDateTime ( ^ ( Event ) EmptyStructConstraint ) ( DateTimeAndConstraint x0 ( TimeAfterDateTime x0 ( NumberPM 8L ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 2798, "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (Today) (^(Event) EmptyStructConstraint) (NumberAM 8L) (NumberPM 8L))))", "(Yield (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint) (NumberAM 8L) (NumberPM 8L))))", "(Yield (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (Tomorrow) (^(Event) EmptyStructConstraint) (NumberAM 8L) (NumberPM 8L))))"], "pred_translated": ["What do I have going on between 8 am and 8 pm today?", "Can you find any meetings scheduled between 8 and 8:30 AM this week?", "What do I have going on tomorrow between 8 am and 8 pm?"], "distractor": "Change my meeting with my manager tomorrow from 2pm to 3pm"}
{"gold_tgt": "( let ( x0 ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Jennifer \" ) ) ) ) ) x1 ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Elli \" ) ) ) ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( Event.attendees_? ( & ( & ( AttendeeListHasRecipient x0 ) ( & ( AttendeeListHasRecipient ( FindManager x0 ) ) ( AttendeeListHasRecipient x1 ) ) ) ( AttendeeListHasRecipient ( FindManager x1 ) ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 8136, "pred_tgts": ["(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jennifer \"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1)))))))))", "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jennifer \") (PersonName.apply \" Jennifer \"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1)))))))))", "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (& (AttendeeListHasRecipient) (AttendeeListHasRecipient (FindManager))) (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0)))))))))"], "pred_translated": ["Make me a meeting with Jennifer, her manager, Elli, and her manager", "Set up a meeting with Jennifer, her manager, Elli, and her manager", "Schedule a meeting with Elli and her manager and her boss."], "distractor": "My easter listing ends at 8 pm on monday"}
{"gold_tgt": "( let ( x0 ( DateAtTimeWithDefaults ( MD 7L ( June ) ) ( NumberPM 9L ) ) ) ( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" night out with girls \" ) ) ) ) ) ) ( & ( Event.start_? ( ?= x0 ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x0 ( NumberAM 12L ) ) ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 8442, "pred_tgts": ["(FenceAttendee)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" night out with girls \")))))) (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 7L (June)) (NumberPM 9L)))) (Event.end_? (DateTime.time_? (?= (NumberAM 12L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" night out \")))))) (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 7L (June)) (NumberPM 9L)))) (Event.end_? (DateTime.time_? (?= (NumberAM 12L))))))))"], "pred_translated": ["please make a meet with my doctor", "Update night out with girls to June 7th from 9pm to 12am.", "change the night out at june 7th time at 9.00 pm - 12.00 am"], "distractor": "Change my 9am coffee to 10am"}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEvent 2L ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.53, "data_idx": 2685, "pred_tgts": ["(FenceOther)", "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["I like the later one", "The 2nd one.", "The 2nd one works."], "distractor": "Where is my doctor's office located?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" meet up \" ) ) ( Event.start_? ( DateTime.date_? ( NextWeekend ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Kim \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 3539, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (NextWeekend))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" meet up \")) (Event.start_? (DateTime.date_? (NextWeekend)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" Meeting up \")) (Event.start_? (DateTime.date_? (NextWeekend)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \")))))))))))"], "pred_translated": ["I need a meeting with Kim next weekend.", "I need to meet up with Kim next weekend", "Can you schedule a Meeting up with Kim next weekend?"], "distractor": "Can you move my meeting to later in the day?"}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEvent 1L ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.53, "data_idx": 6540, "pred_tgts": ["(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))", "(FenceOther)", "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["The first one please.", "The later one please.", "The first one works."], "distractor": "I want to meet with Karl Boon this afternoon."}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "bin": 0.53, "data_idx": 1567, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(FenceSpecify)"], "pred_translated": ["I don't know yet.", "Yes it does.", "Can you change the time of the last instruction?"], "distractor": "Display calendar events for November 5."}
{"gold_tgt": "( PleasantryCalendar )", "bin": 0.53, "data_idx": 12437, "pred_tgts": ["(FencePeopleQa)", "(FenceScope)", "(FenceAttendee)"], "pred_translated": ["i need alex bolton's adress?", "What is the chat id", "please make a meet with my doctor"], "distractor": "I need to meet with Cher Roydon in an hour"}
{"gold_tgt": "( Yield ( WeatherQueryApi ( AtPlace ( Here ) ) ( DateTime.date_? ( ThisWeekend ) ) ) )", "bin": 0.53, "data_idx": 7405, "pred_tgts": ["(PleasantryCalendar)", "(FenceWeather)", "(FenceSpecify)"], "pred_translated": ["What can you help me with?", "Can you tell me when it will rain next?", "Can you change the date of my doctor appointment?"], "distractor": "What is the second business trip I have next month?"}
{"gold_tgt": "( Yield ( allows ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Janie \" ) ) ) ( Event.attendees ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 5194, "pred_tgts": ["(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Janie \"))))))", "(Yield (allows (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Janie \"))) (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))", "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Janie \")))))))) (ResponseStatusType.Accepted)))"], "pred_translated": ["What about with Janie?", "Is Janie invited to that?", "Is Janie coming to that?"], "distractor": "It's in the wide open!"}
{"gold_tgt": "( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( Tomorrow ) ( Event.location_? ( negate ( ?= ( LocationKeyphrase.apply \" Bellevue \" ) ) ) ) ) ) ) ) 0L ) )", "bin": 0.53, "data_idx": 644, "pred_tgts": ["(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.location_? (negate (?= (LocationKeyphrase.apply \" Bellevue \")))))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.location_? (negate (?= (LocationKeyphrase.apply \" Bellevue \")))) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.location_? (negate (?= (LocationKeyphrase.apply \" Bellevue \"))))))) 0L))"], "pred_translated": ["Do I have anything not in Bellevue tomorrow?", "Do I have anything not in Bellevue tomorrow?", "Do I have anything not in Bellevue?"], "distractor": "Add parent'd day to my calendar for Friday at school"}
{"gold_tgt": "( Yield ( > ( WeatherAggregate ( WeatherQuantifier.Max ) ( temperature ) ( WeatherQueryApi ( AtPlace ( Here ) ) ( DateTime.date_? ( ?= ( Today ) ) ) ) ) ( NumberInDefaultTempUnits 80 ) ) )", "bin": 0.53, "data_idx": 1649, "pred_tgts": ["(Yield (> (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))) (toFahrenheit 80)))", "(Yield (> (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))) (NumberInDefaultTempUnits 80)))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L))"], "pred_translated": ["Will it get over 80 degrees today?", "Will it go above 80 degrees today?", "Do I have any meetings today?"], "distractor": "Do I have a visit to the Farm around 11 am?"}
{"gold_tgt": "( Yield ( Event.location ( FindNumNextEvent ( EventDuringRange ( ^ ( Event ) EmptyStructConstraint ) ( NextWeekList ) ) 2L ) ) )", "bin": 0.53, "data_idx": 11757, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(Yield (Event.location (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)) 2L)))"], "pred_translated": ["Can you add that to my calendar?", "Can you change the time of that event?", "Where is my second event next week happening?"], "distractor": "Can you tell me the weather for tomorrow in Greenville, NC?"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventDuringRange ( ^ ( Event ) EmptyStructConstraint ) ( NextPeriod ( toDays ( longToNum ( Afew ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 10259, "pred_tgts": ["(FenceDateTime)", "(FenceOther)", "(FenceSpecify)"], "pred_translated": ["Can you tell me when my next block of free time is?", "Can you tell me the weather for tomorrow in Greenville, NC?", "I need to change the date of my doctor's appointment"], "distractor": "What can you do?"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventOnDateWithTimeRange ( EventOnDate ( NextDOW ( Tuesday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ( Afternoon ) ) ) )", "bin": 0.53, "data_idx": 4834, "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)) (Afternoon))))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)) (Afternoon))))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)) (Afternoon))))) 0L))"], "pred_translated": ["What do I have scheduled Tuesday afternoon?", "What do I have scheduled for Tuesday afternoon?", "Do I have any meetings on Tuesday afternoon?"], "distractor": "Please add Victor to this event."}
{"gold_tgt": "( Yield ( DeleteCommitEventWrapper ( DeletePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" golf tournament \" ) ) ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 530, "pred_tgts": ["(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" gold tournament \")))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" golf tournament \")))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" golf \")))))))))"], "pred_translated": ["get rid of golf tournament", "get rid of golf tournament", "delete golf event"], "distractor": "Can you change the meeting time?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" Lowes Contractors Lunch \" ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( NextDOW ( Friday ) ) ( HourMinutePm 1L 30L ) ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 5073, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Lowes Contractors Lunch \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinutePm 1L 30L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" teh Lowes Contractors Lunch \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinutePm 1L 30L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" teh Lowes Lunch \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinutePm 1L 30L))))))))"], "pred_translated": ["Schedule Lowes Contractors Lunch on Friday at 1:30 pm.", "Schedule a tee Lowes Contractors Lunch on Friday at 1:30 pm.", "Schedule teh Lowes Lunch on Friday at 1:30 pm."], "distractor": "I need help with my calendar"}
{"gold_tgt": "( let ( x0 ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) ) ( do ( Yield x0 ) ( Yield ( Event.start ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventAfterDateTime ( Event.subject_? ( ?~= \" board meeting \" ) ) ( Event.end ( ^ ( Dynamic ) item x0 ) ) ) ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 11518, "pred_tgts": ["(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (Event.subject_? (?~= \" board meeting \")) (Event.end (^(Dynamic) item x0))))))))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (Event.subject_? (?~= \" board meeting \")) (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))))", "(do (Yield (Execute (^(Dynamic Dynamic) ConfirmAndReturnAction))) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (Event.subject_? (?~= \" board meeting \")) (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end (item)))))))))"], "pred_translated": ["Yes. When is my board meeting after this?", "Yes. When is the board meeting after that?", "Yes. When is my board meeting after this?"], "distractor": "No, I want it to start at 6 pm"}
{"gold_tgt": "( let ( x0 ( NextTime ( NumberAM 8L ) ) ) ( Yield ( FindEventWrapperWithDefaults ( EventDuringRangeDateTime ( ^ ( Event ) EmptyStructConstraint ) ( DateTimeAndConstraint x0 ( TimeAfterDateTime x0 ( NumberPM 8L ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 2798, "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (Today) (^(Event) EmptyStructConstraint) (NumberAM 8L) (NumberPM 8L))))", "(Yield (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint) (NumberAM 8L) (NumberPM 8L))))", "(Yield (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (Tomorrow) (^(Event) EmptyStructConstraint) (NumberAM 8L) (NumberPM 8L))))"], "pred_translated": ["What do I have going on between 8 am and 8 pm today?", "Can you find any meetings scheduled between 8 and 8:30 AM this week?", "What do I have going on tomorrow between 8 am and 8 pm?"], "distractor": "How about drinking hot chocolate in the winter?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( OnDateBeforeTime ( NextDOW ( Monday ) ) ( NumberPM 4L ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Bill \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 9231, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (?< (NumberPM 4L)) (NextDOW (Monday)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Bill \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (OnDateBeforeTime (NextDOW (Monday)) (NumberPM 4L))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Bill \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Bill \")))))))))))"], "pred_translated": ["Schedule a meeting with Bill on Monday before 4 pm", "I need a meeting with Bill before 4 pm Monday", "Schedule a meeting with Bill on Monday."], "distractor": "Can you tell me when my next block of free time is?"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( ^ ( Event ) EmptyStructConstraint ) ) )", "bin": 0.53, "data_idx": 11703, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(Yield (FindEventWrapperWithDefaults (EventAfterDateTime (^(Event) EmptyStructConstraint) (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))"], "pred_translated": ["How do I create an event?", "please update my events in my calender", "Anything after that?"], "distractor": "how many calandar dates can you make?"}
{"gold_tgt": "( Yield ( WeatherAggregate ( WeatherQuantifier.Summarize ) ( rainPrecipProbability ) ( WeatherForEvent ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 1307, "pred_tgts": ["(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (rainPrecipProbability) (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (rainPrecipProbability) (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (rainPrecipProbability) (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" appointment rain \"))))))))"], "pred_translated": ["What is the chance of rain?", "What is the chance of rain for my appointment?", "What is the chance of appointment rain?"], "distractor": "I need to meet with my boss tomorrow around 2 pm"}
{"gold_tgt": "( FencePeopleQa )", "bin": 0.53, "data_idx": 1417, "pred_tgts": ["(FencePeopleQa)", "(FenceAttendee)", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Alex \"))))))) 0L))"], "pred_translated": ["Is he in my address book?", "please make a meet with my doctor", "Do I have anything with Alex?"], "distractor": "What do I have scheduled Tuesday afternoon?"}
{"gold_tgt": "( do ( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) ) ( FenceRecurring ) )", "bin": 0.53, "data_idx": 6939, "pred_tgts": ["(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceOther))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceSpecify))", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"], "pred_translated": ["Yes. Copy the event for Thursday too.", "Good. And also change the time for tomorrow's volunteer work.", "Yes it does."], "distractor": "Can you reschedule my meeting with Tom to Friday around 2 pm?"}
{"gold_tgt": "( PleasantryCalendar )", "bin": 0.53, "data_idx": 2309, "pred_tgts": ["(GenericPleasantry)", "(PleasantryCalendar)", "(PleasantryAnythingElseCombined)"], "pred_translated": ["hello", "yes", "ok"], "distractor": "Schedule a candy binge from the 3rd to the 7th."}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventDuringRange ( ^ ( Event ) EmptyStructConstraint ) ( NextPeriod ( toDays ( longToNum ( Afew ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 10259, "pred_tgts": ["(FenceDateTime)", "(FenceOther)", "(FenceSpecify)"], "pred_translated": ["Can you tell me when my next block of free time is?", "Can you tell me the weather for tomorrow in Greenville, NC?", "I need to change the date of my doctor's appointment"], "distractor": "Can you tell me the weather for tomorrow in Greenville, NC?"}
{"gold_tgt": "( Yield ( allows ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Janie \" ) ) ) ( Event.attendees ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 5194, "pred_tgts": ["(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Janie \"))))))", "(Yield (allows (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Janie \"))) (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))", "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Janie \")))))))) (ResponseStatusType.Accepted)))"], "pred_translated": ["What about with Janie?", "Is Janie invited to that?", "Is Janie coming to that?"], "distractor": "Is Jerry Seinfeld coming to the Friday Talent show?"}
{"gold_tgt": "( Yield ( Event.start ( FindNumNextEvent ( ^ ( Event ) EmptyStructConstraint ) 1L ) ) )", "bin": 0.53, "data_idx": 3716, "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))", "(FenceOther)", "(Yield (Event.start (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))"], "pred_translated": ["What events are schedules for me?", "How do I create a calendar?", "When is my next appointment?"], "distractor": "Sorry, what did you just say?"}
{"gold_tgt": "( Yield ( WillRain ( WeatherQueryApi ( AtPlace ( Here ) ) ( DateTimeConstraint ( Afternoon ) ( Today ) ) ) ) )", "bin": 0.53, "data_idx": 7098, "pred_tgts": ["(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTimeConstraint (Night) (Today)))))", "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTimeConstraint (Afternoon) (Today)))))", "(Yield (WillRain (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.subject_? (?~= \" going out \"))) (Afternoon))))))))"], "pred_translated": ["Is it going to rain tonight?", "Is it going to rain this afternoon?", "Will it rain on my going out this afternoon?"], "distractor": "Make the meeting with Sherry 1 hour longer."}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventOnDateWithTimeRange ( EventOnDate ( NextDOW ( Tuesday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ( Afternoon ) ) ) )", "bin": 0.53, "data_idx": 4834, "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)) (Afternoon))))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)) (Afternoon))))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)) (Afternoon))))) 0L))"], "pred_translated": ["What do I have scheduled Tuesday afternoon?", "What do I have scheduled for Tuesday afternoon?", "Do I have any meetings on Tuesday afternoon?"], "distractor": "Add pool party at YMCA on Saturday from 1 pm to 5 pm."}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventDuringRange ( ^ ( Event ) EmptyStructConstraint ) ( NextPeriod ( toDays ( longToNum ( Afew ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 10259, "pred_tgts": ["(FenceDateTime)", "(FenceOther)", "(FenceSpecify)"], "pred_translated": ["Can you tell me when my next block of free time is?", "Can you tell me the weather for tomorrow in Greenville, NC?", "I need to change the date of my doctor's appointment"], "distractor": "Change the time to 8am"}
{"gold_tgt": "( let ( x0 ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Noelle \" ) ) ) ) ) x1 ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Rob \" ) ) ) ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" team building \" ) ) ( Event.attendees_? ( & ( AttendeeListHasRecipient x0 ) ( & ( & ( AttendeeListHasRecipient x1 ) ( AttendeeListHasRecipient ( FindManager x0 ) ) ) ( AttendeeListHasRecipient ( FindManager x1 ) ) ) ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 11452, "pred_tgts": ["(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Noelle \"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Rob \")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" team building \")) (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1))))))))))", "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Rob \"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Rob \")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" team building \")) (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1))))))))))", "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction)) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Rob \")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" team building \")) (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1))))))))))"], "pred_translated": ["Add a team building event with Noelle, her manager, Rob and his manager.", "Add a team building event with Rob and his boss and their bosses.", "Yes. Also make a team building event with Rob and his boss."], "distractor": "Can you schedule a Meeting up with Kim next weekend?"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventOnDateWithTimeRange ( EventOnDate ( NextDOW ( Tuesday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ( Afternoon ) ) ) )", "bin": 0.53, "data_idx": 4834, "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)) (Afternoon))))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)) (Afternoon))))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)) (Afternoon))))) 0L))"], "pred_translated": ["What do I have scheduled Tuesday afternoon?", "What do I have scheduled for Tuesday afternoon?", "Do I have any meetings on Tuesday afternoon?"], "distractor": "When is Patriot Day"}
{"gold_tgt": "( do ( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( Today ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) 0L ) ) ( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateWithTimeRange ( EventOnDate ( Tomorrow ) ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" John \" ) ) ) ) ) ( Morning ) ) ) ) ) 0L ) ) )", "bin": 0.53, "data_idx": 10779, "pred_tgts": ["(FenceMultiAction)", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" John \"))))) (Morning))))) 0L))", "(do (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))) 0L)) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" John \"))))) (Morning))))) 0L)))"], "pred_translated": ["I need to cancel all my meetings for tomorrow.", "Am I meeting with John tomorrow morning?", "Do I have anything today? Am I meeting with John tomorrow morning?"], "distractor": "Will it rain today?"}
{"gold_tgt": "( do ( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) ) ( FenceOther ) )", "bin": 0.53, "data_idx": 399, "pred_tgts": ["(FenceMultiAction)", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceSpecify))", "(FenceSpecify)"], "pred_translated": ["cancel the today events on calender", "Yes. How do I go about removing a calendar event?", "Can you change the time of the staff meeting?"], "distractor": "I need to delete something else"}
{"gold_tgt": "( FenceWeather )", "bin": 0.53, "data_idx": 3775, "pred_tgts": ["(FenceWeather)", "(PleasantryAnythingElseCombined)", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"], "pred_translated": ["when is the next time it wont rain", "thank you", "what will the temperature be"], "distractor": "Can you change the meeting time?"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( ^ ( Event ) EmptyStructConstraint ) ) )", "bin": 0.53, "data_idx": 2316, "pred_tgts": ["()", "(PleasantryCalendar)", "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))"], "pred_translated": ["What is the current exchange rate for euros?", "I need help with my calendar", "show me my schedule"], "distractor": "Make brunch earlier"}
{"gold_tgt": "( let ( x0 ( DateAtTimeWithDefaults ( MD 7L ( June ) ) ( NumberPM 9L ) ) ) ( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" night out with girls \" ) ) ) ) ) ) ( & ( Event.start_? ( ?= x0 ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x0 ( NumberAM 12L ) ) ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 8442, "pred_tgts": ["(FenceAttendee)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" night out with girls \")))))) (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 7L (June)) (NumberPM 9L)))) (Event.end_? (DateTime.time_? (?= (NumberAM 12L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" night out \")))))) (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 7L (June)) (NumberPM 9L)))) (Event.end_? (DateTime.time_? (?= (NumberAM 12L))))))))"], "pred_translated": ["please make a meet with my doctor", "Update night out with girls to June 7th from 9pm to 12am.", "change the night out at june 7th time at 9.00 pm - 12.00 am"], "distractor": "ok"}
{"gold_tgt": "( Yield ( AttendeesWithResponse ( Event.attendees ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" lunch \" ) ) ) ) ) ) ( ResponseStatusType.Accepted ) ) )", "bin": 0.53, "data_idx": 5071, "pred_tgts": ["(Yield (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" lunch \")))))))", "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" lunch \")))))) (ResponseStatusType.Accepted)))", "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Lunch \")))))) (ResponseStatusType.Accepted)))"], "pred_translated": ["Who am I having lunch with?", "Who am I having lunch with?", "Who is coming to Lunch?"], "distractor": "Modify roller skating practice to make it 1 hour long on Tuesday at 7:00 pm."}
{"gold_tgt": "( Yield ( Execute ( ChooseUpdateEvent 1L ( refer ( ^ ( UpdateEventResponse ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.53, "data_idx": 6512, "pred_tgts": ["(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))", "(FenceOther)"], "pred_translated": ["fix the first one", "The first option.", "How about the later one?"], "distractor": "Who organized the meeting on Monday morning?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" Lowes Contractors Lunch \" ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( NextDOW ( Friday ) ) ( HourMinutePm 1L 30L ) ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 5073, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Lowes Contractors Lunch \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinutePm 1L 30L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" teh Lowes Contractors Lunch \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinutePm 1L 30L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" teh Lowes Lunch \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinutePm 1L 30L))))))))"], "pred_translated": ["Schedule Lowes Contractors Lunch on Friday at 1:30 pm.", "Schedule a tee Lowes Contractors Lunch on Friday at 1:30 pm.", "Schedule teh Lowes Lunch on Friday at 1:30 pm."], "distractor": "Can you change the time?"}
{"gold_tgt": "( let ( x0 ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Kim \" ) ) ) ) ) x1 ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Abby \" ) ) ) ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( DateTime.date_? ( NextWeekList ) ) ) ( Event.attendees_? ( & ( & ( AttendeeListHasRecipient x0 ) ( AttendeeListHasRecipient ( FindManager x0 ) ) ) ( & ( AttendeeListHasRecipient x1 ) ( AttendeeListHasRecipient ( FindManager x1 ) ) ) ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 1113, "pred_tgts": ["(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1))))))))))", "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1))))))))))", "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0 (Friday)))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1))))))))))"], "pred_translated": ["Make me a meeting next week with Kim, her boss, Abby and her boss", "Make me a meeting with Abby, her boss, and his boss next week", "Make me a meeting next week with Kim, her boss, Abby and her boss"], "distractor": "I'll be on vacation for 2 days"}
{"gold_tgt": "( let ( x0 ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) ) ( do ( Yield x0 ) ( Yield ( Event.start ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventAfterDateTime ( Event.subject_? ( ?~= \" board meeting \" ) ) ( Event.end ( ^ ( Dynamic ) item x0 ) ) ) ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 11518, "pred_tgts": ["(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction))) (do (Yield x0) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (Event.subject_? (?~= \" board meeting \")) (Event.end (^(Dynamic) item x0))))))))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (Event.subject_? (?~= \" board meeting \")) (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))))", "(do (Yield (Execute (^(Dynamic Dynamic) ConfirmAndReturnAction))) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (Event.subject_? (?~= \" board meeting \")) (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end (item)))))))))"], "pred_translated": ["Yes. When is my board meeting after this?", "Yes. When is the board meeting after that?", "Yes. When is my board meeting after this?"], "distractor": "I need help with my calendar"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" Lowes Contractors Lunch \" ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( NextDOW ( Friday ) ) ( HourMinutePm 1L 30L ) ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 5073, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Lowes Contractors Lunch \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinutePm 1L 30L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" teh Lowes Contractors Lunch \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinutePm 1L 30L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" teh Lowes Lunch \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinutePm 1L 30L))))))))"], "pred_translated": ["Schedule Lowes Contractors Lunch on Friday at 1:30 pm.", "Schedule a tee Lowes Contractors Lunch on Friday at 1:30 pm.", "Schedule teh Lowes Lunch on Friday at 1:30 pm."], "distractor": "Why not?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" basketball game for work \" ) ) ( Event.start_? ( DateTime.date_? ( ?= ( NextDOW ( Monday ) ) ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 4179, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" basketball game for work \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" basketball game for work \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" basketball game \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))))))"], "pred_translated": ["create basketball game for work on sunday", "create basketball game for work on monday", "create basketball game on monday"], "distractor": "The first option."}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventOnDateWithTimeRange ( EventOnDate ( NextDOW ( Tuesday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ( Afternoon ) ) ) )", "bin": 0.53, "data_idx": 4834, "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)) (Afternoon))))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)) (Afternoon))))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)) (Afternoon))))) 0L))"], "pred_translated": ["What do I have scheduled Tuesday afternoon?", "What do I have scheduled for Tuesday afternoon?", "Do I have any meetings on Tuesday afternoon?"], "distractor": "Change my meeting from 09h to 10h"}
{"gold_tgt": "( do ( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) ) ( Yield ( FindEventWrapperWithDefaults ( EventOnDateTime ( adjustByPeriodDuration ( Now ) ( PeriodDuration.apply :duration ( toHours 24 ) ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) )", "bin": 0.53, "data_idx": 4905, "pred_tgts": ["(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextPeriod :duration (toHours 24))))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (EventDuringRangeDateTime (^(Event) EmptyStructConstraint) (NextPeriodDuration (PeriodDuration.apply :duration (toHours 24)))))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextPeriod (toDays 24))))))"], "pred_translated": ["Yes. Check my calendar for 24 hours from now.", "Yes. What events do I have in the next 24 hours?", "Yes. What meetings do I have scheduled for the next 24 days?"], "distractor": "How do I create a new event?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" dry cleaner \" ) ) ( Event.start_? ( DateTimeConstraint ( ?< ( NumberPM 5L ) ) ( Tomorrow ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 9233, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" dry cleaner \")) (Event.start_? (OnDateBeforeTime (Tomorrow) (NumberPM 5L)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" dry cleaner \")) (Event.start_? (DateTime.date_? (?< (Tomorrow))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" dry cleaner \")) (Event.start_? (DateTimeConstraint (?< (NumberPM 5L)) (Tomorrow)))))))"], "pred_translated": ["I need to do my dry cleaner by tomorrow before 5 pm", "I need to do my dry cleaner before tomorrow", "I need to do my laundry before 5 pm tomorrow."], "distractor": "How old are you?"}
{"gold_tgt": "( let ( x0 ( Event.start ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" tournament \" ) ) ) ) ) ) ) ( Yield ( DeleteCommitEventWrapper ( DeletePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateBeforeTime ( DateTime.date x0 ) ( ^ ( Event ) EmptyStructConstraint ) ( DateTime.time x0 ) ) ) ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 7289, "pred_tgts": ["(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.end_? (?= (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" tournament \")))))))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" tournament \")))))) (Event.subject_? (?~= \" tournament \"))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" tournament \")))))) (Event.subject_? (?~= \" meeting \"))))))))))"], "pred_translated": ["Delete the tournament before the tournament.", "Delete the tournament before hand", "Delete my meeting prior to the tournament"], "distractor": "Do I have free time at the end of the day on Friday?"}
{"gold_tgt": "( let ( x0 ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Kim \" ) ) ) ) ) x1 ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Abby \" ) ) ) ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( DateTime.date_? ( NextWeekList ) ) ) ( Event.attendees_? ( & ( & ( AttendeeListHasRecipient x0 ) ( AttendeeListHasRecipient ( FindManager x0 ) ) ) ( & ( AttendeeListHasRecipient x1 ) ( AttendeeListHasRecipient ( FindManager x1 ) ) ) ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 1113, "pred_tgts": ["(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1))))))))))", "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1))))))))))", "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0 (Friday)))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1))))))))))"], "pred_translated": ["Make me a meeting next week with Kim, her boss, Abby and her boss", "Make me a meeting with Abby, her boss, and his boss next week", "Make me a meeting next week with Kim, her boss, Abby and her boss"], "distractor": "Do I have anything else there?"}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.53, "data_idx": 6563, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(FenceSpecify)", "(FenceOther)"], "pred_translated": ["I don't know yet.", "can you change the time of the appointment", "The later one."], "distractor": "The first one works best."}
{"gold_tgt": "( Yield ( WeatherQueryApi ( AtPlace ( Here ) ) ( DateTime.date_? ( ThisWeekend ) ) ) )", "bin": 0.53, "data_idx": 7405, "pred_tgts": ["(PleasantryCalendar)", "(FenceWeather)", "(FenceSpecify)"], "pred_translated": ["What can you help me with?", "Can you tell me when it will rain next?", "Can you change the date of my doctor appointment?"], "distractor": "Do I have anything between 5pm and 6pm on Saturday?"}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEvent 1L ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.53, "data_idx": 6540, "pred_tgts": ["(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))", "(FenceOther)", "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["The first one please.", "The later one please.", "The first one works."], "distractor": "Do I have anything between 2 and 4 pm next Friday?"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventDuringRange ( ^ ( Event ) EmptyStructConstraint ) ( NextPeriod ( toDays ( longToNum ( Afew ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 10259, "pred_tgts": ["(FenceDateTime)", "(FenceOther)", "(FenceSpecify)"], "pred_translated": ["Can you tell me when my next block of free time is?", "Can you tell me the weather for tomorrow in Greenville, NC?", "I need to change the date of my doctor's appointment"], "distractor": "Schedule a meeting with Karl Boon on Thursday at 2:30 PM."}
{"gold_tgt": "( FenceRecurring )", "bin": 0.53, "data_idx": 6593, "pred_tgts": ["(FenceAttendee)", "(FenceSpecify)", "(FenceOther)"], "pred_translated": ["Add dinner with mom at 6pm.", "Can you change the time of my meeting with Damon Straeter?", "Change the time of my 2pm meeting to 3pm"], "distractor": "Mark me as busy from 9am to 10pm tomorrow"}
{"gold_tgt": "( FenceSwitchTabs )", "bin": 0.53, "data_idx": 3952, "pred_tgts": ["(GenericPleasantry)", "(FenceScope)", "(PleasantryCalendar)"], "pred_translated": ["HOW CAN I HELP YOU", "THE HELP IS CORRECT", "THE HELP WITH CALENDAR OF TELL IS CORRECT"], "distractor": "Is Megans address in Compton?"}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.53, "data_idx": 6563, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(FenceSpecify)", "(FenceOther)"], "pred_translated": ["I don't know yet.", "can you change the time of the appointment", "The later one."], "distractor": "Does Wild River Grille in Reno have group seating?"}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.53, "data_idx": 6563, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(FenceSpecify)", "(FenceOther)"], "pred_translated": ["I don't know yet.", "can you change the time of the appointment", "The later one."], "distractor": "Can you change the time of the staff meeting?"}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "bin": 0.53, "data_idx": 1567, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(FenceSpecify)"], "pred_translated": ["I don't know yet.", "Yes it does.", "Can you change the time of the last instruction?"], "distractor": "Is my manager the organizer of the event after that one?"}
{"gold_tgt": "( Yield ( allows ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Janie \" ) ) ) ( Event.attendees ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) )", "bin": 0.53, "data_idx": 5194, "pred_tgts": ["(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Janie \"))))))", "(Yield (allows (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Janie \"))) (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))", "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Janie \")))))))) (ResponseStatusType.Accepted)))"], "pred_translated": ["What about with Janie?", "Is Janie invited to that?", "Is Janie coming to that?"], "distractor": "What is Sonia's address book?"}
{"gold_tgt": "( do ( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) ) ( Yield ( FindEventWrapperWithDefaults ( EventOnDateTime ( adjustByPeriodDuration ( Now ) ( PeriodDuration.apply :duration ( toHours 24 ) ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) )", "bin": 0.53, "data_idx": 4905, "pred_tgts": ["(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextPeriod :duration (toHours 24))))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (EventDuringRangeDateTime (^(Event) EmptyStructConstraint) (NextPeriodDuration (PeriodDuration.apply :duration (toHours 24)))))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextPeriod (toDays 24))))))"], "pred_translated": ["Yes. Check my calendar for 24 hours from now.", "Yes. What events do I have in the next 24 hours?", "Yes. What meetings do I have scheduled for the next 24 days?"], "distractor": "I need to change the date of my doctor's appointment"}
{"gold_tgt": "( FencePeopleQa )", "bin": 0.57, "data_idx": 8016, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(FencePeopleQa)"], "pred_translated": ["Did Amanda accept the sales meeting invite?", "please change my tomorrow end event", "Has she accepted the sales meeting invitation?"], "distractor": "I need help with my calendar"}
{"gold_tgt": "( Yield ( WeatherAggregate ( WeatherQuantifier.Summarize ) ( rainPrecipProbability ) ( WeatherForEvent ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( Tomorrow ) ( Event.subject_? ( ?~= \" picnic \" ) ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 12215, "pred_tgts": ["(Yield (WillRain (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \" picnic \")))))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (rainPrecipProbability) (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \" picnic \")))))))))", "(Yield (WillRain (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \" picnic \"))))))) (rainPrecipProbability (WeatherQuantifier.Summarize))))"], "pred_translated": ["Will it rain during my picnic tomorrow?", "What is the chance of rain for my picnic tomorrow?", "Will it rain during my picnic tomorrow?"], "distractor": "ok ok wait"}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.57, "data_idx": 11416, "pred_tgts": ["(UserPauseResponse)", "(PleasantryAnythingElseCombined)", "(FenceSpecify)"], "pred_translated": ["wait a minute", "ok ok wait", "Can you change the meeting time?"], "distractor": "And what about December 6th?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.duration_? ( ?= ( toHours 2 ) ) ) ) ) )", "bin": 0.57, "data_idx": 3224, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 2))))))"], "pred_translated": ["defer the next meeting with Morgan", "can you change the time", "The duration should be for two hours."], "distractor": "Can you change the meeting time?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( & ( Event.subject_? ( ?= \" another lunch \" ) ) ( Event.start_? ( DateTime.date_? ( ?= ( ClosestDayOfWeek ( Execute ( refer ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ( Friday ) ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 11130, "pred_tgts": ["(FenceMultiAction)", "(FenceOther)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" another lunch \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"], "pred_translated": ["The second one, but make it an hour.", "How do I create this lunhc?", "Can you schedule another lunch for Friday?"], "distractor": "schedule a suicide meeting this afternoon"}
{"gold_tgt": "( let ( x0 ( DateAtTimeWithDefaults ( MD 22L ( January ) ) ( NumberAM 8L ) ) ) ( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.duration_? ( ?= ( toHours 2 ) ) ) ( EventDuringRangeDateTime ( ^ ( Event ) EmptyStructConstraint ) ( DateTimeAndConstraint x0 ( TimeAfterDateTime x0 ( NumberPM 5L ) ) ) ) ) ) ) ) 0L ) ) )", "bin": 0.57, "data_idx": 3600, "pred_tgts": ["(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (MD 22L (January)) (^(Event) EmptyStructConstraint) (NumberAM 8L) (NumberPM 5L))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (MD 22L (January)) (^(Event) EmptyStructConstraint)) (TimeToTime (NumberAM 8L) (NumberPM 5L)))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.duration_? (?= (toHours 2))) (EventOnDateFromTimeToTime (MD 22L (January)) (^(Event) EmptyStructConstraint) (NumberAM 8L) (NumberPM 5L)))))) 0L))"], "pred_translated": ["Do I have anything between 8am and 5pm on January 22?", "Do I have anything between 8am and 5pm on January 22?", "Do I have two hours between 8am and 5pm on January 22?"], "distractor": "The second one, but make it an hour."}
{"gold_tgt": "( Yield ( Execute ( ChooseUpdateEvent 2L ( refer ( ^ ( UpdateEventResponse ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.57, "data_idx": 703, "pred_tgts": ["(FenceSpecify)", "(FenceOther)", "(PleasantryAnythingElseCombined)"], "pred_translated": ["fix the second one", "The earlier one please", "The earlier the better"], "distractor": "Make me a meeting with Abby, her boss, and his boss next week"}
{"gold_tgt": "( FenceOther )", "bin": 0.57, "data_idx": 839, "pred_tgts": ["(FencePlaces)", "(FenceOther)", "(FenceScope)"], "pred_translated": ["Where is the closest bathroom?", "Can you tell me the weather for tomorrow in Greenville, NC?", "How old are you?"], "distractor": "Make brunch earlier"}
{"gold_tgt": "( PleasantryCalendar )", "bin": 0.57, "data_idx": 6924, "pred_tgts": ["(FenceSpecify)", "(PleasantryCalendar)", "(FenceOther)"], "pred_translated": ["update my calender", "i need help with my calender", "i need to update my calender"], "distractor": "Do I have any meetings on Tuesday afternoon?"}
{"gold_tgt": "( Yield ( Event.start ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Wednesday ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( FindManager ( toRecipient ( CurrentUser ) ) ) ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 11122, "pred_tgts": ["(FenceAttendee)", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))) (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint))))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))))"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "What time is my meeting with my boss on Wednesday?", "What time is my meeting with my boss on Wednesday?"], "distractor": "I want to meet with Karl Boon this afternoon."}
{"gold_tgt": "( PleasantryCalendar )", "bin": 0.57, "data_idx": 6808, "pred_tgts": ["(FenceSpecify)", "(FenceScope)", "(FenceOther)"], "pred_translated": ["can you change the meeting time", "What is the current exchange rate for euros?", "Do I have any conflicts with this meeting?"], "distractor": "What time is my meeting with my boss on Wednesday?"}
{"gold_tgt": "( let ( x0 ( DateAtTimeWithDefaults ( NextDOW ( Saturday ) ) ( NumberPM 1L ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( & ( Event.subject_? ( ?= \" pool party \" ) ) ( Event.start_? ( ?= x0 ) ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x0 ( NumberPM 5L ) ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" the YMCA \" ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 3061, "pred_tgts": ["(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" pool party \")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L))))) (Event.location_? (?= (LocationKeyphrase.apply \" YMCA \"))))))))", "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" pool party \")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L))))) (Event.location_? (?= (LocationKeyphrase.apply \" YMCA \"))))))))", "(let (x0 (DateAtTimeWithDefaults (previousDayOfWeek (Today) (Saturday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" pool party \")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L))))) (Event.location_? (?= (LocationKeyphrase.apply \" YMCA \"))))))))"], "pred_translated": ["Add pool party at YMCA on Saturday from 1 pm to 5 pm.", "Add pool party at YMCA on Saturday from 1 pm to 5 pm.", "I had a pool party at the YMCA last saturday from 1 pm to 5 pm"], "distractor": "How bout the third event?"}
{"gold_tgt": "( PleasantryCalendar )", "bin": 0.57, "data_idx": 6924, "pred_tgts": ["(FenceSpecify)", "(PleasantryCalendar)", "(FenceOther)"], "pred_translated": ["update my calender", "i need help with my calender", "i need to update my calender"], "distractor": "Add \"The Shuffle\" to my calendar on the 26th"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" Grocery Shopping \" ) ) ( Event.start_? ( AroundDateTime ( DateAtTimeWithDefaults ( NextDOW ( Saturday ) ) ( NumberPM 2L ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 4175, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Grocery Shopping \")) (Event.start_? (DateTimeConstraint (TimeAround (NumberPM 2L)) (NextDOW (Saturday))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Grocery Shopping \")) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 2L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Grocery Shopping \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 2L))))))))"], "pred_translated": ["Schedule Grocery Shopping for Saturday around 2 pm.", "Grocery Shopping Saturday around 2 pm.", "Grocery Shopping Saturday 2 pm."], "distractor": "What do I have going on between 8 am and 8 pm today?"}
{"gold_tgt": "( FenceWeather )", "bin": 0.57, "data_idx": 8378, "pred_tgts": ["(FenceWeather)", "(WeatherPleasantry)", "(FenceOther)"], "pred_translated": ["when will it rain next?", "what else can you tell me about the weather?", "memphis tn"], "distractor": "Can you reschedule my meeting with Tom to Friday around 2 pm?"}
{"gold_tgt": "( Yield ( Event.duration ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( Yesterday ) ( Event.subject_? ( ?~= \" meeting with HR \" ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 13295, "pred_tgts": ["(FenceAttendee)", "(FencePeopleQa)", "(FenceTeams)"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "Why didn't Mom come to my birthday party?", "Who reports to me?"], "distractor": "How old are you?"}
{"gold_tgt": "( Yield ( Event.start ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Wednesday ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( FindManager ( toRecipient ( CurrentUser ) ) ) ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 11122, "pred_tgts": ["(FenceAttendee)", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))) (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint))))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))))"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "What time is my meeting with my boss on Wednesday?", "What time is my meeting with my boss on Wednesday?"], "distractor": "Add Megan to address book"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" movie night date \" ) ) ( Event.start_? ( OnDateAfterTime ( Tomorrow ) ( NumberPM 3L ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 1650, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" movie night date \")) (Event.start_? (DateTimeConstraint (?> (NumberPM 3L)) (Tomorrow)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" movie night date \")) (Event.start_? (OnDateAfterTime (Tomorrow) (NumberPM 3L)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" movie night \")) (Event.start_? (DateTimeConstraint (?> (NumberPM 3L)) (Tomorrow)))))))"], "pred_translated": ["I need a movie night date after 3 pm tomorrow", "I need a movie night date tomorrow after 3 pm", "I need a movie night after 3 pm tomorrow"], "distractor": "Please schedule a meeting with Cecilia Waller for 4/6/2019 at 4:00pm"}
{"gold_tgt": "( Yield ( WeatherAggregate ( WeatherQuantifier.Summarize ) ( rainPrecipProbability ) ( WeatherForEvent ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( Tomorrow ) ( Event.subject_? ( ?~= \" picnic \" ) ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 12215, "pred_tgts": ["(Yield (WillRain (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \" picnic \")))))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (rainPrecipProbability) (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \" picnic \")))))))))", "(Yield (WillRain (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \" picnic \"))))))) (rainPrecipProbability (WeatherQuantifier.Summarize))))"], "pred_translated": ["Will it rain during my picnic tomorrow?", "What is the chance of rain for my picnic tomorrow?", "Will it rain during my picnic tomorrow?"], "distractor": "I want to meet with Karl Boon this afternoon."}
{"gold_tgt": "( let ( x0 ( DateAtTimeWithDefaults ( Tomorrow ) ( NumberPM 3L ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" work \" ) ) ( Event.start_? ( DateTimeAndConstraint x0 ( TimeAfterDateTime x0 ( NumberPM 6L ) ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 10777, "pred_tgts": ["(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" work \")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 6L)))))))))", "(let (x0 (DateAtTimeWithDefaults (NextDOW (Tomorrow)) (NumberPM 3L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" work \")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 6L)))))))))", "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" work \")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 6L)))))))))"], "pred_translated": ["I have to work from 3 to 6 pm tomorrow.", "I have to work from 3 to 6 pm tomorrow.", "I have to be at work from 6 to 6 tomorrow."], "distractor": "ok"}
{"gold_tgt": "( PleasantryCalendar )", "bin": 0.57, "data_idx": 3357, "pred_tgts": ["(PleasantryCalendar)", "(FenceOther)", "(FenceSpecify)"], "pred_translated": ["I would like to remove an event", "please don't delete any events", "please update my events in my calender"], "distractor": "I need to meet with Hannah between my 2pm and 5pm today."}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.subject_? ( ?~= \" coffee \" ) ) ( EventAtTime ( ^ ( Event ) EmptyStructConstraint ) ( NumberAM 9L ) ) ) ) ) ) ) ( Event.start_? ( DateTime.time_? ( ?= ( NumberAM 10L ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 4301, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberAM 9L)) (Event.subject_? (?~= \" coffee \"))))))) (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (Event.subject_? (?~= \" coffee \")) (NumberAM 9L)))))) (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" coffee \")) (Event.start_? (DateTime.time_? (?= (NumberAM 9L))))))))) (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))"], "pred_translated": ["Change my 9am coffee to 10am", "Change my 9am coffee to 10am", "Change coffee from 9am to 10am"], "distractor": "Add plan anniversary dinner for Monday at 10 pm for 1 hour with Lisa, Phoebe, and Jennifer."}
{"gold_tgt": "( Yield ( Event.start ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" choose the meeting \" ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 5627, "pred_tgts": ["(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))))", "(FenceSpecify)", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" choose the meeting \")))))))"], "pred_translated": ["What time is my appointment?", "I need to change the date of my doctor's appointment", "when i have choose the meeting"], "distractor": "How old are you?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.subject_? ( ?~= \" coffee \" ) ) ( EventAtTime ( ^ ( Event ) EmptyStructConstraint ) ( NumberAM 9L ) ) ) ) ) ) ) ( Event.start_? ( DateTime.time_? ( ?= ( NumberAM 10L ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 4301, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberAM 9L)) (Event.subject_? (?~= \" coffee \"))))))) (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (Event.subject_? (?~= \" coffee \")) (NumberAM 9L)))))) (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" coffee \")) (Event.start_? (DateTime.time_? (?= (NumberAM 9L))))))))) (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))"], "pred_translated": ["Change my 9am coffee to 10am", "Change my 9am coffee to 10am", "Change coffee from 9am to 10am"], "distractor": "Is Thanksgiving next weekend?"}
{"gold_tgt": "( FenceOther )", "bin": 0.57, "data_idx": 2303, "pred_tgts": ["(FenceSpecify)", "(FenceOther)", "(FenceDateTime)"], "pred_translated": ["I need to change the date of my doctor's appointment", "Can you tell me the weather for tomorrow in Greenville, NC?", "Can you tell me when my next block of free time is?"], "distractor": "Please put the meeting 4/4/2019 at 4:00 PM with Paige Ashworth on my calendar."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( DateTime.date_? ( NextWeekList ) ) ) ( Event.attendees_? ( & ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" smith \" ) ) ) ) ) ) ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" rodney \" ) ) ) ) ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 4602, "pred_tgts": ["(FenceReminder)", "(FenceDateTime)", "(FenceMultiAction)"], "pred_translated": ["Remind me 30 minutes before the appointment", "Add Matt to the first one.", "The second one, but make it an hour."], "distractor": "What is the address of the salon I have a hair appointment at tomorrow?"}
{"gold_tgt": "( let ( x0 ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Kim Possible \" ) ) ) ) ) x1 ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Elli Parker \" ) ) ) ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" lunch \" ) ) ( Event.attendees_? ( & ( & ( AttendeeListHasRecipient x0 ) ( AttendeeListHasRecipient ( FindManager x0 ) ) ) ( & ( AttendeeListHasRecipient x1 ) ( AttendeeListHasRecipient ( FindManager x1 ) ) ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 10218, "pred_tgts": ["(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim Possible \"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli Parker \")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" lunch \")) (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1))))))))))", "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli Parker \")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" lunch \")) (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1))))))))))", "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim, \"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli Parker \")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" lunch \")) (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1))))))))))"], "pred_translated": ["Schedule a lunch with Kim Possible, Elli Parker and their managers.", "Make me a lunch with Kim, her boss, Elli Parker and her boss", "Make me a lunch with Kim, her boss, Elli Parker and her boss"], "distractor": "yes, also can you decline team 2"}
{"gold_tgt": "( Yield ( Event.duration ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( Yesterday ) ( Event.subject_? ( ?~= \" meeting with HR \" ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 13295, "pred_tgts": ["(FenceAttendee)", "(FencePeopleQa)", "(FenceTeams)"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "Why didn't Mom come to my birthday party?", "Who reports to me?"], "distractor": "What causes hail?"}
{"gold_tgt": "( FenceAttendee )", "bin": 0.57, "data_idx": 424, "pred_tgts": ["(FenceScope)", "(FencePeopleQa)", "(FenceAttendee)"], "pred_translated": ["Do you think mother will be able to make it?", "Is mother in my address book?", "Please schedule a meeting with the pope tomorrow."], "distractor": "Get me a room at City Center for 3 hours tomorrow at 9 am for quarterly accounts."}
{"gold_tgt": "( do ( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) ) ( Yield ( EventAttendance :event ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" team 2 meeting \" ) ) ) ) ) :response ( ResponseStatusType.Declined ) ) ) )", "bin": 0.57, "data_idx": 9586, "pred_tgts": ["(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" team 2 \"))))) :response (ResponseStatusType.Declined))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" team 2 meeting \"))))) :response (ResponseStatusType.Declined))))", "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" team 2 \"))))) :response (ResponseStatusType.Declined)))"], "pred_translated": ["yes, also can you decline team 2", "yes, also can you decline the team 2 meeting", "can you decline the team 2 event"], "distractor": "Can you forward this contact to Bill?"}
{"gold_tgt": "( FencePeopleQa )", "bin": 0.57, "data_idx": 8016, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(FencePeopleQa)"], "pred_translated": ["Did Amanda accept the sales meeting invite?", "please change my tomorrow end event", "Has she accepted the sales meeting invitation?"], "distractor": "yeesh could possibly"}
{"gold_tgt": "( PleasantryCalendar )", "bin": 0.57, "data_idx": 6808, "pred_tgts": ["(FenceSpecify)", "(FenceScope)", "(FenceOther)"], "pred_translated": ["can you change the meeting time", "What is the current exchange rate for euros?", "Do I have any conflicts with this meeting?"], "distractor": "Can you make me an event called Water Park around 2 pm on July 30"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( UpdateEventIntensionConstraint ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Hux \" ) ) ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 3637, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(FenceAttendee)"], "pred_translated": ["Change the times to eastern standard time", "make it on another day", "please make a meet with my doctor"], "distractor": "ok"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( & ( Event.start_? ( DateTime.time_? ( ?= ( HourMinuteAm 1L 34L ) ) ) ) ( Event.end_? ( DateTime.time_? ( ?= ( HourMinuteAm 3L 33L ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 3445, "pred_tgts": ["(FenceSpecify)", "(FenceMultiAction)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (HourMinuteAm 1L 34L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 3L 33L))))))))"], "pred_translated": ["can you change the meeting time", "The second one, but make it an hour.", "change the appointment 1.34 am - 3.33 am"], "distractor": "I have a conference tomorrow from 6 am to 10 pm"}
{"gold_tgt": "( Yield ( WeatherAggregate ( WeatherQuantifier.Summarize ) ( sunsetTime ) ( WeatherQueryApi ( AtPlace ( Here ) ) ( DateTime.date_? ( ?= ( Today ) ) ) ) ) )", "bin": 0.57, "data_idx": 11689, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(GenericPleasantry)", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (sunsetTime) (WeatherQueryApi (AtPlace (Here)) (?= (Now)))))"], "pred_translated": ["no thanks", "Hello", "When is sunset?"], "distractor": "Delete my conference room meeting today during lunch time."}
{"gold_tgt": "( FenceMultiAction )", "bin": 0.57, "data_idx": 4979, "pred_tgts": ["(FenceMultiAction)", "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))", "(Yield (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (nextDayOfMonth (Today) 13L) (^(Event) EmptyStructConstraint) (NumberPM 1L) (NumberPM 3L))))"], "pred_translated": ["Cancel that meeting and any other meetings with Mr. Jones for the next two weeks.", "What is the other event?", "What do I have on the 13th between 1 pm and 3 pm?"], "distractor": "yes"}
{"gold_tgt": "( do ( DoNotConfirm ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( Event.start_? ( DateTime.date_? ( SeasonSummer ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 4096, "pred_tgts": ["(FenceDateTime)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (SeasonSummer))))))", "(do (DoNotConfirm) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (SeasonSummer)))))))"], "pred_translated": ["Delete my golf event next spring.", "Make an event for summer", "No actually just make an event in the summer"], "distractor": "Is Jerry Seinfeld coming to the Friday Talent show?"}
{"gold_tgt": "( Yield ( Event.start ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Wednesday ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( FindManager ( toRecipient ( CurrentUser ) ) ) ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 11122, "pred_tgts": ["(FenceAttendee)", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))) (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint))))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))))"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "What time is my meeting with my boss on Wednesday?", "What time is my meeting with my boss on Wednesday?"], "distractor": "I need to cancel all my meetings for tomorrow."}
{"gold_tgt": "( Yield ( == ( ResponseStatus.response ( AttendeeResponseStatus ( AttendeeFromEvent ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Friday ) ) ( Event.subject_? ( ?~= \" talent show \" ) ) ) ) ) ) ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Jerry Seinfeld \" ) ) ) ) ) ) ) ) ( ResponseStatusType.Accepted ) ) )", "bin": 0.57, "data_idx": 12800, "pred_tgts": ["(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" talent show \")) (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jerry Seinfeld \")))))))) (ResponseStatusType.Accepted)))", "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \" talent show \")))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jerry Seinfeld \")))))))) (ResponseStatusType.Accepted)))", "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?= \" talent show \")) (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jerry Seinfeld \")))))))) (ResponseStatusType.Accepted)))"], "pred_translated": ["Is Jerry Seinfeld coming to the Friday Talent show?", "Is Jerry Seinfeld coming to the Talent show next Friday?", "Is Jerry Seinfeld coming to the Friday Talent show?"], "distractor": "Do I have two hours between 8am and 5pm on January 22?"}
{"gold_tgt": "( FenceNavigation )", "bin": 0.57, "data_idx": 7922, "pred_tgts": ["(FenceScope)", "(FenceNavigation)", "(FenceOther)"], "pred_translated": ["How old are you?", "How long will it take me to get to Burger King?", "Can you tell me the weather for tomorrow in Greenville, NC?"], "distractor": "Please schedule a meeting with Cecilia Waller for 4/2/2019 at 4:00pm"}
{"gold_tgt": "( Yield ( == ( ResponseStatus.response ( AttendeeResponseStatus ( AttendeeFromEvent ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Friday ) ) ( Event.subject_? ( ?~= \" talent show \" ) ) ) ) ) ) ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Jerry Seinfeld \" ) ) ) ) ) ) ) ) ( ResponseStatusType.Accepted ) ) )", "bin": 0.57, "data_idx": 12800, "pred_tgts": ["(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" talent show \")) (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jerry Seinfeld \")))))))) (ResponseStatusType.Accepted)))", "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \" talent show \")))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jerry Seinfeld \")))))))) (ResponseStatusType.Accepted)))", "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?= \" talent show \")) (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jerry Seinfeld \")))))))) (ResponseStatusType.Accepted)))"], "pred_translated": ["Is Jerry Seinfeld coming to the Friday Talent show?", "Is Jerry Seinfeld coming to the Talent show next Friday?", "Is Jerry Seinfeld coming to the Friday Talent show?"], "distractor": "Pancakes."}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( UpdateEventIntensionConstraint ) ( Event.start_? ( DateTime.date_? ( ?= ( adjustByPeriod ( Today ) ( toWeeks 2 ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 13332, "pred_tgts": ["(FenceDateTime)", "(Yield (FindEventWrapperWithDefaults (EventOnDate (adjustByPeriod (Today) (toWeeks 2)) (^(Event) EmptyStructConstraint))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (EventDuringRange (^(Event) EmptyStructConstraint) (WeekOfDateNew (adjustByPeriod (Today) (toWeeks 2)))))))"], "pred_translated": ["Show me as busy for the rest of the day.", "What do I have scheduled two weeks from today?", "What about in two weeks?"], "distractor": "Do I have anything after lunch today?"}
{"gold_tgt": "( Yield ( NextHolidayFromToday ( Holiday.Halloween ) ) )", "bin": 0.57, "data_idx": 2470, "pred_tgts": ["(Yield (NextHolidayFromToday (Holiday.Halloween)))", "(Yield (HolidayYear (Holiday.Halloween) (Date.year (Today))))", "(Yield (Date.dayOfWeek (DateTime.date (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" buy a costume \")))))))))"], "pred_translated": ["When is Halloween?", "When is Halloween this year?", "What day am I going to buy a costume?"], "distractor": "Is Jerry Seinfeld coming to the Friday Talent show?"}
{"gold_tgt": "( do ( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) ) ( Yield ( EventAttendance :event ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" team 2 meeting \" ) ) ) ) ) :response ( ResponseStatusType.Declined ) ) ) )", "bin": 0.57, "data_idx": 9586, "pred_tgts": ["(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" team 2 \"))))) :response (ResponseStatusType.Declined))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" team 2 meeting \"))))) :response (ResponseStatusType.Declined))))", "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" team 2 \"))))) :response (ResponseStatusType.Declined)))"], "pred_translated": ["yes, also can you decline team 2", "yes, also can you decline the team 2 meeting", "can you decline the team 2 event"], "distractor": "I will be in Duluth from the 14th to the 18th"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" Date \" ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( NextDOW ( Saturday ) ) ( NumberPM 8L ) ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Susan \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 95, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Date with Susan \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 8L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" Date \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Susan \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" Date \")) (Event.start_? (DateTimeConstraint (?= (NumberPM 8L)) (NextDOW (Saturday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Susan \")))))))))))"], "pred_translated": ["Schedule \"Date with Susan\" for Saturday at 8 pm.", "Schedule Date with Susan at 8 pm on Saturday.", "Schedule Date with Susan for Saturday at 8 pm."], "distractor": "Can you add a location?"}
{"gold_tgt": "( FenceMultiAction )", "bin": 0.57, "data_idx": 8209, "pred_tgts": ["(FenceSpecify)", "(FenceOther)", "(FenceMultiAction)"], "pred_translated": ["Rename the event Lunch with Jim", "Rename it to Lunch with Jim", "No, I want Lunch with Jim to start at 12 pm and to end at 1 pm."], "distractor": "Book 1 hour tomorrow morning for working out."}
{"gold_tgt": "( do ( DoNotConfirm ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( Event.start_? ( DateTime.date_? ( SeasonSummer ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 4096, "pred_tgts": ["(FenceDateTime)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (SeasonSummer))))))", "(do (DoNotConfirm) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (SeasonSummer)))))))"], "pred_translated": ["Delete my golf event next spring.", "Make an event for summer", "No actually just make an event in the summer"], "distractor": "Give me the 10 day forecast for Live Oak, Florida"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( Execute ( refer ( extensionConstraint ( ^ ( CreateCommitEvent ) EmptyStructConstraint ) ) ) ) ) )", "bin": 0.57, "data_idx": 5827, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(FenceOther)", "(FenceSpecify)"], "pred_translated": ["ok", "Show me as busy during that time.", "Show some different timing."], "distractor": "The second one, but make it an hour."}
{"gold_tgt": "( let ( x0 ( DateAtTimeWithDefaults ( NextDOW ( Saturday ) ) ( NumberPM 1L ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( & ( Event.subject_? ( ?= \" pool party \" ) ) ( Event.start_? ( ?= x0 ) ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x0 ( NumberPM 5L ) ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" the YMCA \" ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 3061, "pred_tgts": ["(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" pool party \")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L))))) (Event.location_? (?= (LocationKeyphrase.apply \" YMCA \"))))))))", "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" pool party \")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L))))) (Event.location_? (?= (LocationKeyphrase.apply \" YMCA \"))))))))", "(let (x0 (DateAtTimeWithDefaults (previousDayOfWeek (Today) (Saturday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" pool party \")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L))))) (Event.location_? (?= (LocationKeyphrase.apply \" YMCA \"))))))))"], "pred_translated": ["Add pool party at YMCA on Saturday from 1 pm to 5 pm.", "Add pool party at YMCA on Saturday from 1 pm to 5 pm.", "I had a pool party at the YMCA last saturday from 1 pm to 5 pm"], "distractor": "Yes, that's good. Decline go to the movies on Saturday and say that I have to clean my house that day."}
{"gold_tgt": "( Yield ( EventAttendance :event ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Damon Ellery \" ) ) ) ) ) ) ) :response ( ResponseStatusType.Accepted ) ) )", "bin": 0.57, "data_idx": 7613, "pred_tgts": ["(FenceAttendee)", "(FencePeopleQa)", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Damon Ellery \"))))))) 0L))"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "Why didn't Mom come to my birthday party?", "Do I have any meetings scheduled with Damon Ellery?"], "distractor": "Change tomorrow's meeting title to \"Lunch with Boss\"."}
{"gold_tgt": "( Yield ( == ( ResponseStatus.response ( AttendeeResponseStatus ( AttendeeFromEvent ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Friday ) ) ( Event.subject_? ( ?~= \" talent show \" ) ) ) ) ) ) ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Jerry Seinfeld \" ) ) ) ) ) ) ) ) ( ResponseStatusType.Accepted ) ) )", "bin": 0.57, "data_idx": 12800, "pred_tgts": ["(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" talent show \")) (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jerry Seinfeld \")))))))) (ResponseStatusType.Accepted)))", "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \" talent show \")))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jerry Seinfeld \")))))))) (ResponseStatusType.Accepted)))", "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?= \" talent show \")) (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jerry Seinfeld \")))))))) (ResponseStatusType.Accepted)))"], "pred_translated": ["Is Jerry Seinfeld coming to the Friday Talent show?", "Is Jerry Seinfeld coming to the Talent show next Friday?", "Is Jerry Seinfeld coming to the Friday Talent show?"], "distractor": "I like the 3rd one"}
{"gold_tgt": "( Yield ( NextHolidayFromToday ( Holiday.Halloween ) ) )", "bin": 0.57, "data_idx": 2470, "pred_tgts": ["(Yield (NextHolidayFromToday (Holiday.Halloween)))", "(Yield (HolidayYear (Holiday.Halloween) (Date.year (Today))))", "(Yield (Date.dayOfWeek (DateTime.date (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" buy a costume \")))))))))"], "pred_translated": ["When is Halloween?", "When is Halloween this year?", "What day am I going to buy a costume?"], "distractor": "The second one, but make it an hour."}
{"gold_tgt": "( Yield ( == ( ResponseStatus.response ( AttendeeResponseStatus ( AttendeeFromEvent ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Friday ) ) ( Event.subject_? ( ?~= \" talent show \" ) ) ) ) ) ) ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Jerry Seinfeld \" ) ) ) ) ) ) ) ) ( ResponseStatusType.Accepted ) ) )", "bin": 0.57, "data_idx": 12800, "pred_tgts": ["(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" talent show \")) (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jerry Seinfeld \")))))))) (ResponseStatusType.Accepted)))", "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \" talent show \")))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jerry Seinfeld \")))))))) (ResponseStatusType.Accepted)))", "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?= \" talent show \")) (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jerry Seinfeld \")))))))) (ResponseStatusType.Accepted)))"], "pred_translated": ["Is Jerry Seinfeld coming to the Friday Talent show?", "Is Jerry Seinfeld coming to the Talent show next Friday?", "Is Jerry Seinfeld coming to the Friday Talent show?"], "distractor": "I need to do my laundry before 5 pm tomorrow."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" check on the shipment arrival \" ) ) ( Event.start_? ( ?= ( NextTime ( NumberPM 4L ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 2304, "pred_tgts": ["(FenceReminder)", "(FenceOther)", "(FenceTeams)"], "pred_translated": ["Remind me to check out on the arrival of a shipment before leaving office", "Check out on the arrival of a shipment before leaving office", "When is my next meeting with my mates?"], "distractor": "When is Jobio's birthday?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" john \" ) ) ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 10284, "pred_tgts": ["(FenceAttendee)", "(FenceSpecify)", "(PleasantryCalendar)"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "I need to change the date of my doctor's appointment", "I need help with my calendar"], "distractor": "Was Mary at the last meeting I had last year?"}
{"gold_tgt": "( Yield ( EventAttendance :event ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Damon Ellery \" ) ) ) ) ) ) ) :response ( ResponseStatusType.Accepted ) ) )", "bin": 0.57, "data_idx": 7613, "pred_tgts": ["(FenceAttendee)", "(FencePeopleQa)", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Damon Ellery \"))))))) 0L))"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "Why didn't Mom come to my birthday party?", "Do I have any meetings scheduled with Damon Ellery?"], "distractor": "Schedule Date with Susan at 8 pm on Saturday."}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.57, "data_idx": 11416, "pred_tgts": ["(UserPauseResponse)", "(PleasantryAnythingElseCombined)", "(FenceSpecify)"], "pred_translated": ["wait a minute", "ok ok wait", "Can you change the meeting time?"], "distractor": "Create \"An evening with #44\" for April 7th at 7pm."}
{"gold_tgt": "( let ( x0 ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Scott \" ) ) ) ) ) ) ) ) ( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id x0 ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( ClosestDayOfWeek ( DateTime.date ( Event.start x0 ) ) ( Friday ) ) ( HourMinutePm 6L 30L ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 12643, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Scott \")))))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinutePm 6L 30L)))))))"], "pred_translated": ["Can you tell me the weather for tomorrow in Greenville, NC?", "I need to change the date of my doctor's appointment", "Move my meeting with Scott to 6:30 pm on Friday."], "distractor": "I meant next week at Ihop"}
{"gold_tgt": "( let ( x0 ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Kim Possible \" ) ) ) ) ) x1 ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Elli Parker \" ) ) ) ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" lunch \" ) ) ( Event.attendees_? ( & ( & ( AttendeeListHasRecipient x0 ) ( AttendeeListHasRecipient ( FindManager x0 ) ) ) ( & ( AttendeeListHasRecipient x1 ) ( AttendeeListHasRecipient ( FindManager x1 ) ) ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 10218, "pred_tgts": ["(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim Possible \"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli Parker \")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" lunch \")) (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1))))))))))", "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli Parker \")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" lunch \")) (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1))))))))))", "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim, \"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli Parker \")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" lunch \")) (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1))))))))))"], "pred_translated": ["Schedule a lunch with Kim Possible, Elli Parker and their managers.", "Make me a lunch with Kim, her boss, Elli Parker and her boss", "Make me a lunch with Kim, her boss, Elli Parker and her boss"], "distractor": "Show me as busy during that time."}
{"gold_tgt": "( FenceWeather )", "bin": 0.57, "data_idx": 8378, "pred_tgts": ["(FenceWeather)", "(WeatherPleasantry)", "(FenceOther)"], "pred_translated": ["when will it rain next?", "what else can you tell me about the weather?", "memphis tn"], "distractor": "When is Jobio's birthday?"}
{"gold_tgt": "( FenceWeather )", "bin": 0.57, "data_idx": 8378, "pred_tgts": ["(FenceWeather)", "(WeatherPleasantry)", "(FenceOther)"], "pred_translated": ["when will it rain next?", "what else can you tell me about the weather?", "memphis tn"], "distractor": "Can you tell me when my next block of free time is?"}
{"gold_tgt": "( Yield ( Execute ( ConfirmCreateAndReturnAction ( & ( Event.subject_? ( ?= \" lunch \" ) ) ( Event.start_? ( DateTime.time_? ( ?= ( NumberPM 12L ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 4999, "pred_tgts": ["(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 12L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ConfirmCreateAndReturnAction (& (Event.subject_? (?= \" lunch \")) (Event.start_? (DateTime.time_? (?= (NumberPM 12L))))))))"], "pred_translated": ["UMMMMMM", "Let's go with 12PM please", "Yes, lunch at 12:00 looks good."], "distractor": "I need to meet with Hannah between my 2pm and 5pm today."}
{"gold_tgt": "( FenceSpecify )", "bin": 0.57, "data_idx": 11826, "pred_tgts": ["(FenceOther)", "(FenceScope)", "(FenceSwitchTabs)"], "pred_translated": ["What is the street address of the party?", "Do you think it is going to be fun?", "Can you send a copy of the schedule to Carl?"], "distractor": "What do I have going on tomorrow between 8 am and 8 pm?"}
{"gold_tgt": "( Yield ( EventAttendance :event ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Damon Ellery \" ) ) ) ) ) ) ) :response ( ResponseStatusType.Accepted ) ) )", "bin": 0.57, "data_idx": 7613, "pred_tgts": ["(FenceAttendee)", "(FencePeopleQa)", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Damon Ellery \"))))))) 0L))"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "Why didn't Mom come to my birthday party?", "Do I have any meetings scheduled with Damon Ellery?"], "distractor": "next week talk to bob"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( Event.start_? ( DateTime.date_? ( ?= ( NextDOW ( Monday ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 6355, "pred_tgts": ["(FenceOther)", "(Yield (RecipientAvailability (& (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))))))"], "pred_translated": ["Can you tell me the weather for tomorrow in Greenville, NC?", "Do I have any free time on Monday?", "create meeting on monday"], "distractor": "make that 9-10:30"}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "bin": 0.57, "data_idx": 10482, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(PleasantryCalendar)"], "pred_translated": ["ok", "Yea that looks right", "What can you do?"], "distractor": "What other finance meetings do I have?"}
{"gold_tgt": "( Yield ( WeatherAggregate ( WeatherQuantifier.Summarize ) ( apparentTemperature ) ( Execute ( refer ( extensionConstraint ( ^ ( WeatherTable ) AlwaysTrueConstraint ) ) ) ) ) )", "bin": 0.57, "data_idx": 9206, "pred_tgts": ["(FenceWeather)", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (apparentTemperature) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (dewPoint) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))"], "pred_translated": ["When will it rain next?", "What is the apparent temperature?", "What is the dew point?"], "distractor": "defer the next meeting with Morgan"}
{"gold_tgt": "( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateWithTimeRange ( EventOnDate ( NextDOW ( Saturday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ( TimeToTime ( NumberPM 5L ) ( NumberPM 6L ) ) ) ) ) ) 0L ) )", "bin": 0.57, "data_idx": 1029, "pred_tgts": ["(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (NextDOW (Saturday)) (^(Event) EmptyStructConstraint) (NumberPM 5L) (NumberPM 6L))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)) (TimeToTime (NumberPM 5L) (NumberPM 6L)))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))) 0L))"], "pred_translated": ["Do I have anything between 5 pm and 6 pm on Saturday?", "Do I have anything between 5pm and 6pm on Saturday?", "Do I have anything on Saturday?"], "distractor": "I'll be on vacation for 2 days"}
{"gold_tgt": "( GenericPleasantry )", "bin": 0.57, "data_idx": 11414, "pred_tgts": ["(FenceGibberish)", "(PleasantryAnythingElseCombined)", "(RepeatAgent)"], "pred_translated": ["jhipkllk", "no thanks", "Sorry, what did you just say?"], "distractor": "please make a meet with my doctor"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( & ( Event.subject_? ( ?= \" another lunch \" ) ) ( Event.start_? ( DateTime.date_? ( ?= ( ClosestDayOfWeek ( Execute ( refer ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ( Friday ) ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 11130, "pred_tgts": ["(FenceMultiAction)", "(FenceOther)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" another lunch \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"], "pred_translated": ["The second one, but make it an hour.", "How do I create this lunhc?", "Can you schedule another lunch for Friday?"], "distractor": "Hello"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.duration_? ( ?= ( toHours 2 ) ) ) ) ) )", "bin": 0.57, "data_idx": 3224, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 2))))))"], "pred_translated": ["defer the next meeting with Morgan", "can you change the time", "The duration should be for two hours."], "distractor": "Do I have an event in the summer?"}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.57, "data_idx": 11416, "pred_tgts": ["(UserPauseResponse)", "(PleasantryAnythingElseCombined)", "(FenceSpecify)"], "pred_translated": ["wait a minute", "ok ok wait", "Can you change the meeting time?"], "distractor": "When is Boxing Day this year?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" check on the shipment arrival \" ) ) ( Event.start_? ( ?= ( NextTime ( NumberPM 4L ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 2304, "pred_tgts": ["(FenceReminder)", "(FenceOther)", "(FenceTeams)"], "pred_translated": ["Remind me to check out on the arrival of a shipment before leaving office", "Check out on the arrival of a shipment before leaving office", "When is my next meeting with my mates?"], "distractor": "I need help with my calendar"}
{"gold_tgt": "( GenericPleasantry )", "bin": 0.57, "data_idx": 103, "pred_tgts": ["(PleasantryCalendar)", "(GenericPleasantry)", "(PleasantryAnythingElseCombined)"], "pred_translated": ["I need help with my calendar", "What can you do?", "yes"], "distractor": "What is the current exchange rate for euros?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( UpdateEventIntensionConstraint ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Hux \" ) ) ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 3637, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(FenceAttendee)"], "pred_translated": ["Change the times to eastern standard time", "make it on another day", "please make a meet with my doctor"], "distractor": "thank you"}
{"gold_tgt": "( GenericPleasantry )", "bin": 0.57, "data_idx": 103, "pred_tgts": ["(PleasantryCalendar)", "(GenericPleasantry)", "(PleasantryAnythingElseCombined)"], "pred_translated": ["I need help with my calendar", "What can you do?", "yes"], "distractor": "Yes, that's good. Decline my WoW Raid and say that I have another Raid to go."}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( & ( Event.subject_? ( ?= \" another lunch \" ) ) ( Event.start_? ( DateTime.date_? ( ?= ( ClosestDayOfWeek ( Execute ( refer ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ( Friday ) ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 11130, "pred_tgts": ["(FenceMultiAction)", "(FenceOther)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" another lunch \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"], "pred_translated": ["The second one, but make it an hour.", "How do I create this lunhc?", "Can you schedule another lunch for Friday?"], "distractor": "What do I have on my calendar for the rest of the week?"}
{"gold_tgt": "( let ( x0 ( DateAtTimeWithDefaults ( NextDOW ( Saturday ) ) ( NumberPM 1L ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( & ( Event.subject_? ( ?= \" pool party \" ) ) ( Event.start_? ( ?= x0 ) ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x0 ( NumberPM 5L ) ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" the YMCA \" ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 3061, "pred_tgts": ["(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" pool party \")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L))))) (Event.location_? (?= (LocationKeyphrase.apply \" YMCA \"))))))))", "(let (x0 (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" pool party \")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L))))) (Event.location_? (?= (LocationKeyphrase.apply \" YMCA \"))))))))", "(let (x0 (DateAtTimeWithDefaults (previousDayOfWeek (Today) (Saturday)) (NumberPM 1L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" pool party \")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 5L))))) (Event.location_? (?= (LocationKeyphrase.apply \" YMCA \"))))))))"], "pred_translated": ["Add pool party at YMCA on Saturday from 1 pm to 5 pm.", "Add pool party at YMCA on Saturday from 1 pm to 5 pm.", "I had a pool party at the YMCA last saturday from 1 pm to 5 pm"], "distractor": "Schedule Lowes Contractors Lunch on Friday at 1:30 pm."}
{"gold_tgt": "( Yield ( Place.rating ( singleton ( PlaceSearchResponse.results ( FindPlaceMultiResults ( LocationKeyphrase.apply \" The Barley House in North Hampton \" ) ) ) ) ) )", "bin": 0.57, "data_idx": 636, "pred_tgts": ["(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" Barley House in North Hampton \"))))))", "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" The Barley House in North Hampton \"))))))", "(Yield (Place.rating (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" The Barley House \"))))))"], "pred_translated": ["Give me the rating of The Barley House in North Hampton", "What is the rating of The Barley House in North Hampton?", "Get me the rating for The Barley House"], "distractor": "Add \"The Shuffle\" to my calendar on the 26th"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( & ( Event.subject_? ( negate ( ?~= \" training \" ) ) ) ( EventDuringRange ( ^ ( Event ) EmptyStructConstraint ) ( ThisWeek ) ) ) ) )", "bin": 0.57, "data_idx": 475, "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (& (Event.subject_? (negate (?~= \" training \"))) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (negate (?~= \" training \"))) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (negate (?~= \" training \"))) (ThisWeek))))) 0L))"], "pred_translated": ["What do I have this week that's not training?", "Do I have anything else besides training this week?", "Do I have anything this week that's not training?"], "distractor": "1 pm works"}
{"gold_tgt": "( Yield ( Execute ( ChooseUpdateEvent 2L ( refer ( ^ ( UpdateEventResponse ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.57, "data_idx": 703, "pred_tgts": ["(FenceSpecify)", "(FenceOther)", "(PleasantryAnythingElseCombined)"], "pred_translated": ["fix the second one", "The earlier one please", "The earlier the better"], "distractor": "Make an event for summer"}
{"gold_tgt": "( do ( DoNotConfirm ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( Event.start_? ( DateTime.date_? ( SeasonSummer ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 4096, "pred_tgts": ["(FenceDateTime)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (SeasonSummer))))))", "(do (DoNotConfirm) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (SeasonSummer)))))))"], "pred_translated": ["Delete my golf event next spring.", "Make an event for summer", "No actually just make an event in the summer"], "distractor": "Do I have any meetings tomorrow?"}
{"gold_tgt": "( FenceOther )", "bin": 0.57, "data_idx": 6720, "pred_tgts": ["(PleasantryCalendar)", "(FenceSpecify)", "(FenceOther)"], "pred_translated": ["What can you do?", "I want to remove an event", "How do I remove an event?"], "distractor": "What time is my meeting with my boss on Wednesday?"}
{"gold_tgt": "( Yield ( Event.start ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Wednesday ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( FindManager ( toRecipient ( CurrentUser ) ) ) ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 11122, "pred_tgts": ["(FenceAttendee)", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))) (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint))))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))))"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "What time is my meeting with my boss on Wednesday?", "What time is my meeting with my boss on Wednesday?"], "distractor": "What do I have on my calendar for the rest of the week?"}
{"gold_tgt": "( Yield ( Event.start ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventBeforeDateTime ( Now ) ( Event.subject_? ( ?~= \" get my hair dyed \" ) ) ) ) ) ) ) )", "bin": 0.57, "data_idx": 12601, "pred_tgts": ["(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (Event.subject_? (?~= \" get my hair dyed \"))))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (Event.subject_? (?~= \" hair my hair dyed \"))))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (Event.subject_? (?~= \" hair dyed dyed \"))))))))"], "pred_translated": ["When did I get my hair dyed?", "When did I have hair my hair dyed?", "When was my hair dyed dyed event?"], "distractor": "Give me the 10 day forecast for Live Oak, Florida"}
{"gold_tgt": "( let ( x0 ( DateAtTimeWithDefaults ( MD 12L ( February ) ) ( NumberPM 2L ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.start_? ( ?= x0 ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x0 ( NumberPM 4L ) ) ) ) ) ( Event.location_? ( & ( ?= ( LocationKeyphrase.apply \" cambridge \" ) ) ( roomRequest ) ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 11455, "pred_tgts": ["(FenceConferenceRoom)", "(FenceOther)", "(FenceScope)"], "pred_translated": ["Change the location of the staff meeting tomorrow to Conference Room B.", "Can you tell me the weather for tomorrow in Greenville, NC?", "How old are you?"], "distractor": "Can you tell me the weather for tomorrow in Greenville, NC?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" brunch \" ) ) ) ) ) ) ( Event.start_? ( DateTime.time_? ( ?< ( Execute ( refer ( & ( ^ ( Time ) roleConstraint ( Path.apply \" start \" ) ) ( extensionConstraint ( ^ ( Time ) EmptyStructConstraint ) ) ) ) ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 11430, "pred_tgts": ["(FenceSpecify)", "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" brunch \")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?< (DateTime.time (Event.start x0)))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" brunch \")))))) (Event.start_? (DateTime.time_? (?< (Execute (refer (& (^(Time) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"], "pred_translated": ["can you change the meeting time", "Make brunch earlier", "Make brunch earlier"], "distractor": "I am in Roseville Roseville"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" Eve's birthday \" ) ) ( Event.start_? ( DateTime.date_? ( ?= ( NextDOW ( Tuesday ) ) ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 1722, "pred_tgts": ["(FenceReminder)", "(FenceTeams)", "(FenceScope)"], "pred_translated": ["Remind me of the first flight to london", "Who reports to me?", "How old are you?"], "distractor": "Do I have any meetings on Tuesday afternoon?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" my family \" ) ) ( Event.start_? ( DateTime.date_? ( NextWeekend ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" Pleasure Pier in Galveston \" ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 10951, "pred_tgts": ["(FenceAttendee)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" family for my family \")) (Event.start_? (DateTime.date_? (NextWeekend)))) (Event.location_? (?= (LocationKeyphrase.apply \" Pleasure Pier in Galveston \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" my family \")) (Event.start_? (DateTime.date_? (NextWeekend)))) (Event.location_? (?= (LocationKeyphrase.apply \" Pleasure Pier in Galveston \")))))))"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "Set up a family picnic at the Pleasure Pier in Galveston next weekend.", "Set up a meeting at the Pleasure Pier in Galveston for next weekend to see my family."], "distractor": "I need to change the time of the staff meeting."}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( UpdateEventIntensionConstraint ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" Manager's Office \" ) ) ) ) ) )", "bin": 0.61, "data_idx": 11744, "pred_tgts": ["(FenceOther)", "(FenceConferenceRoom)", "(FenceSpecify)"], "pred_translated": ["Why is that?", "Add a location of conference room 1 to this meeting.", "I need to change the time of that meeting."], "distractor": "I need help with my calendar"}
{"gold_tgt": "( Yield ( WeatherAggregate ( WeatherQuantifier.Summarize ) ( temperature ) ( WeatherQueryApi ( AtPlace ( Here ) ) ( DateTime.date_? ( ?= ( Tomorrow ) ) ) ) ) )", "bin": 0.61, "data_idx": 11870, "pred_tgts": ["(Yield (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow))))))", "(FenceWeather)", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow))))))"], "pred_translated": ["How hot will it be tomorrow?", "What causes hail?", "What will the temperature be tomorrow?"], "distractor": "Display calendar events for November 5."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Jake \" ) ) ) ) ) ) ) ( EventAllDayStartingDateForPeriod ( ^ ( Event ) EmptyStructConstraint ) ( Today ) ( toDays 3 ) ) ) ) ) )", "bin": 0.61, "data_idx": 7519, "pred_tgts": ["(FenceDateTime)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jake \"))))))) (EventAllDayStartingDateForPeriod (^(Event) EmptyStructConstraint) (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 3))))))", "(Yield (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jake \")))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextPeriod (toDays 3))))))"], "pred_translated": ["I need to make a dentist appointment sometime next week.", "I will be with Jake for the next 3 days", "Can you search for any meetings I have with Jake over the next 3 days?"], "distractor": "update my calender events"}
{"gold_tgt": "( PleasantryCalendar )", "bin": 0.61, "data_idx": 5008, "pred_tgts": ["(GenericPleasantry)", "(PleasantryCalendar)", "(PleasantryAnythingElseCombined)"], "pred_translated": ["hello", "may i hep you", "no thanks"], "distractor": "Can you schedule another lunch for Friday?"}
{"gold_tgt": "( Yield ( EventAttendance ( RespondComment.apply \" I'm excited to join! \" ) :event ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.subject_? ( ?~= \" Ron's party \" ) ) ( Event.organizer_? ( ?= ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Tammy \" ) ) ) ) ) ) ) ) ) ) ) :response ( ResponseStatusType.Accepted ) ) )", "bin": 0.61, "data_idx": 3062, "pred_tgts": ["(Yield (EventAttendance (RespondComment.apply \" I'm excited to join! \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ron \"))) (Event.subject_? (?~= \" Ron's party \")) (Event.organizer_? (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Tammy \"))))))))))) :response (ResponseStatusType.Accepted)))", "(Yield (EventAttendance (RespondComment.apply \" I'm excited to join! \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Ron's party \")) (Event.organizer_? (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Tammy \"))))))))))) :response (ResponseStatusType.Accepted)))", "(Yield (EventAttendance (RespondComment.apply \" I'm excited to join! \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ron \"))) (Event.subject_? (?~= \" party's party \")) (Event.organizer_? (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Tammy \"))))))))))) :response (ResponseStatusType.Accepted)))"], "pred_translated": ["Please accept Ron's party invite with a message saying I'm excited to join!", "Please accept my invitation to Ron's party with a message saying I'm excited to join!", "Please accept the party's party invite from Tammy and tell Ron that I'm excited to join!"], "distractor": "Was Mary at last year's final meeting?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( EventOnDateWithTimeRange ( EventOnDate ( Execute ( refer ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ( Morning ) ) ) ) )", "bin": 0.61, "data_idx": 13473, "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)) (Morning))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDateWithTimeRange (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)) (Morning)))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)) (Morning))))) 0L))"], "pred_translated": ["What do I have scheduled for the morning?", "What about the morning?", "Do I have anything in the morning?"], "distractor": "Schedule candy binge until the 7th."}
{"gold_tgt": "( Yield ( inFahrenheit ( WeatherAggregate ( WeatherQuantifier.Max ) ( temperature ) ( WeatherQueryApi ( AtPlace ( FindPlace ( LocationKeyphrase.apply \" Sacramento \" ) ) ) ( DateTime.date_? ( ?= ( NextDOW ( Tuesday ) ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 1127, "pred_tgts": ["(Yield (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Sacramento \"))) (DateTime.date_? (?= (NextDOW (Tuesday)))))))", "(Yield (WhenProperty (temperature) (WeatherQuantifier.Max) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Sacramento \"))) (DateTime.date_? (?= (NextDOW (Tuesday)))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Sacramento \"))) (DateTime.date_? (?= (NextDOW (Tuesday)))))))"], "pred_translated": ["How hot will it be in Sacramento on Tuesday?", "When will it be warmest in Sacramento on Tuesday?", "What will the low be in Sacramento on Tuesday?"], "distractor": "Can you help me organize my caledar?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" my family \" ) ) ( Event.start_? ( DateTime.date_? ( NextWeekend ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" Pleasure Pier in Galveston \" ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 10951, "pred_tgts": ["(FenceAttendee)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" family for my family \")) (Event.start_? (DateTime.date_? (NextWeekend)))) (Event.location_? (?= (LocationKeyphrase.apply \" Pleasure Pier in Galveston \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" my family \")) (Event.start_? (DateTime.date_? (NextWeekend)))) (Event.location_? (?= (LocationKeyphrase.apply \" Pleasure Pier in Galveston \")))))))"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "Set up a family picnic at the Pleasure Pier in Galveston next weekend.", "Set up a meeting at the Pleasure Pier in Galveston for next weekend to see my family."], "distractor": "What do I have going on between 8 am and 8 pm today?"}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "bin": 0.61, "data_idx": 10594, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(FenceOther)", "(FenceSpecify)"], "pred_translated": ["yeesh could possibly", "Can you add a location?", "Can you change the time?"], "distractor": "Is there a holiday this weekend?"}
{"gold_tgt": "( FenceTriviaQa )", "bin": 0.61, "data_idx": 5806, "pred_tgts": ["(FenceTriviaQa)", "(FencePeopleQa)", "(FenceScope)"], "pred_translated": ["How many months have 30 days?", "Why didn't Mom come to my birthday party?", "How old are you?"], "distractor": "Was Mary at the last meeting I had last year?"}
{"gold_tgt": "( FenceOther )", "bin": 0.61, "data_idx": 11471, "pred_tgts": ["(FenceScope)", "(FencePlaces)", "(FenceOther)"], "pred_translated": ["How old are you?", "Where is the closest bathroom?", "Can you tell me the weather for tomorrow in Greenville, NC?"], "distractor": "Can you make me an event called Water Park around 2 pm on July 30"}
{"gold_tgt": "( Yield ( inFahrenheit ( WeatherAggregate ( WeatherQuantifier.Max ) ( temperature ) ( WeatherQueryApi ( AtPlace ( FindPlace ( LocationKeyphrase.apply \" Sacramento \" ) ) ) ( DateTime.date_? ( ?= ( NextDOW ( Tuesday ) ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 1127, "pred_tgts": ["(Yield (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Sacramento \"))) (DateTime.date_? (?= (NextDOW (Tuesday)))))))", "(Yield (WhenProperty (temperature) (WeatherQuantifier.Max) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Sacramento \"))) (DateTime.date_? (?= (NextDOW (Tuesday)))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Sacramento \"))) (DateTime.date_? (?= (NextDOW (Tuesday)))))))"], "pred_translated": ["How hot will it be in Sacramento on Tuesday?", "When will it be warmest in Sacramento on Tuesday?", "What will the low be in Sacramento on Tuesday?"], "distractor": "Please accept my invitation to Ron's party with a message saying I'm excited to join!"}
{"gold_tgt": "( Yield ( inFahrenheit ( WeatherAggregate ( WeatherQuantifier.Max ) ( temperature ) ( WeatherQueryApi ( AtPlace ( FindPlace ( LocationKeyphrase.apply \" Sacramento \" ) ) ) ( DateTime.date_? ( ?= ( NextDOW ( Tuesday ) ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 1127, "pred_tgts": ["(Yield (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Sacramento \"))) (DateTime.date_? (?= (NextDOW (Tuesday)))))))", "(Yield (WhenProperty (temperature) (WeatherQuantifier.Max) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Sacramento \"))) (DateTime.date_? (?= (NextDOW (Tuesday)))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Sacramento \"))) (DateTime.date_? (?= (NextDOW (Tuesday)))))))"], "pred_translated": ["How hot will it be in Sacramento on Tuesday?", "When will it be warmest in Sacramento on Tuesday?", "What will the low be in Sacramento on Tuesday?"], "distractor": "I need a movie night after 3 pm tomorrow"}
{"gold_tgt": "( do ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateFromTimeToTime ( NextDOW ( Saturday ) ) ( Event.subject_? ( ?~= \" fiesta party \" ) ) ( NumberPM 1L ) ( NumberPM 3L ) ) ) ) ) ( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateFromTimeToTime ( NextDOW ( Saturday ) ) ( Event.subject_? ( ?~= \" fiesta party \" ) ) ( NumberPM 1L ) ( NumberPM 3L ) ) ) ) ) ) ( Event.attendees_? ( & ( & ( & ( AttendeeListExcludesRecipient ( ?= ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Paul \" ) ) ) ) ) ) ) ( AttendeeListExcludesRecipient ( ?= ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Alexandria \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Jane \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Sam \" ) ) ) ) ) ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 349, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (NumberPM \\ \\ L) (NumberPM 3L)))))) (Event.attendees_? (& (& (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Paul \"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Alexandria \")))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jane \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sam \")))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (EventOnDateFromTimeToTime (NumberPM) (NumberPM 3L))))))) (Event.attendees_? (& (& (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Paul \"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Alexandria \")))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jane \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sam \")))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (EventOnDateTime (DateAtTimeWithDefaults (NumberPM)) (^(Event) EmptyStructConstraint))))))) (Event.attendees_? (& (& (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Paul \"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Alexandria \")))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jane \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sam \")))))))))))"], "pred_translated": ["I need to remove Paul and Alexandria from the meeting at 3 and add Jane and Sam.", "For my meeting at 3pm Paul and Alexandria can't make it but Jane and Sam can.", "Paul and Alexandria can't make it to the meeting, but Jane and Sam will be there instead."], "distractor": "Schedule a meeting with Cher Roydon in 2 hours and 1 minutes"}
{"gold_tgt": "( FenceReminder )", "bin": 0.61, "data_idx": 8761, "pred_tgts": ["(FenceMultiAction)", "(FenceSpecify)", "(FenceOther)"], "pred_translated": ["I need to cancel all my meetings for tomorrow.", "I need to change the date of my doctor's appointment", "Can you tell me the weather for tomorrow in Greenville, NC?"], "distractor": "Do I have any meetings on Tuesday afternoon?"}
{"gold_tgt": "( Yield ( allows ( NextWeekList ) ( NextHolidayFromToday ( Holiday.Thanksgiving ) ) ) )", "bin": 0.61, "data_idx": 1775, "pred_tgts": ["(Yield (allows (ThisWeekend) (NextHolidayFromToday (Holiday.Thanksgiving))))", "(FenceTriviaQa)", "(Yield (allows (NextWeekend) (NextHolidayFromToday (Holiday.Thanksgiving))))"], "pred_translated": ["Is Thanksgiving this weekend?", "When is Boxing Day this year?", "Is Thanksgiving next weekend?"], "distractor": "What is the address of the salon I have a hair appointment at tomorrow?"}
{"gold_tgt": "( Yield ( Execute ( NewClobber ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ( ^ ( Recipient ) ConstraintTypeIntension ) ( intension ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Victor \" ) ) ) ) ) )", "bin": 0.61, "data_idx": 3685, "pred_tgts": ["(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Victor \"))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Victor \"))))))))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (alwaysTrueConstraintConstraint (^((List Attendee)) AlwaysTrueConstraint))) (intension (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Victor \"))))))))))"], "pred_translated": ["Sorry I meant to say Victor.", "Please add Victor to this event.", "Add Victor to the choir practice."], "distractor": "The second one, but make it an hour."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" my family \" ) ) ( Event.start_? ( DateTime.date_? ( NextWeekend ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" Pleasure Pier in Galveston \" ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 10951, "pred_tgts": ["(FenceAttendee)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" family for my family \")) (Event.start_? (DateTime.date_? (NextWeekend)))) (Event.location_? (?= (LocationKeyphrase.apply \" Pleasure Pier in Galveston \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" my family \")) (Event.start_? (DateTime.date_? (NextWeekend)))) (Event.location_? (?= (LocationKeyphrase.apply \" Pleasure Pier in Galveston \")))))))"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "Set up a family picnic at the Pleasure Pier in Galveston next weekend.", "Set up a meeting at the Pleasure Pier in Galveston for next weekend to see my family."], "distractor": "Move my 3 pm meeting with Marissa to 5 pm."}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "bin": 0.61, "data_idx": 2300, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(PleasantryCalendar)"], "pred_translated": ["ok", "yes", "I need help with my calendar"], "distractor": "What do I have tomorrow that's not a jog?"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( ^ ( Event ) EmptyStructConstraint ) ) )", "bin": 0.61, "data_idx": 5548, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(PleasantryCalendar)"], "pred_translated": ["Can you tell me the weather for tomorrow in Greenville, NC?", "I need to change the date of my doctor's appointment", "I need help with my calendar"], "distractor": "ok"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( EventAllDayStartingDateForPeriod ( ^ ( Event ) EmptyStructConstraint ) ( nextDayOfMonth ( Today ) 6L ) ( toDays 5 ) ) ) ) )", "bin": 0.61, "data_idx": 5730, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (^(Event) EmptyStructConstraint) (nextDayOfMonth (Today) 5L) (toDays 5)))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (^(Event) EmptyStructConstraint) (nextDayOfMonth (Today) 7L) (toDays 5)))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (^(Event) EmptyStructConstraint) (nextDayOfMonth (Today) \\ sixth\\ L) (toDays 5)))))"], "pred_translated": ["Make me a 5 day event starting on the 5th", "Make me a 5 day event starting on the 7th", "Make me a 5 day event starting on the sixth"], "distractor": "Can you change the meeting time?"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( & ( Event.id_? ( negate ( ?= ( Event.id ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ) ) ( Event.location_? ( ?= ( Event.location ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 1847, "pred_tgts": ["(let (x0 (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id x0)))) (Event.location_? (?= (Event.location x0)))))))", "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))", "(Yield (FindEventWrapperWithDefaults (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))"], "pred_translated": ["What else do I have there?", "What else do I have there?", "What other events do I have coming up?"], "distractor": "SHOW MY CONTACTS"}
{"gold_tgt": "( Yield ( WillRain ( WeatherQueryApi ( AtPlace ( Here ) ) ( DateTime.date_? ( ?= ( Today ) ) ) ) ) )", "bin": 0.61, "data_idx": 6874, "pred_tgts": ["(Yield (WillRain (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))", "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))", "(Yield (WillRain (WeatherQueryApi (AtPlace (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))) (DateTime.date_? (?= (Today))))))"], "pred_translated": ["Will it rain?", "Will it rain today?", "Will it rain today?"], "distractor": "ok"}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "bin": 0.61, "data_idx": 2300, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(PleasantryCalendar)"], "pred_translated": ["ok", "yes", "I need help with my calendar"], "distractor": "Make me a new meeting next Sunday at 8 am"}
{"gold_tgt": "( Yield ( Execute ( ChooseUpdateEvent 2L ( refer ( ^ ( UpdateEventResponse ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.61, "data_idx": 11994, "pred_tgts": ["(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))", "(FenceOther)", "(FenceSpecify)"], "pred_translated": ["please conform the second one", "How do I create an event?", "Can you change the time of my dentist appointment?"], "distractor": "Did my boss organize the event?"}
{"gold_tgt": "( PleasantryCalendar )", "bin": 0.61, "data_idx": 5008, "pred_tgts": ["(GenericPleasantry)", "(PleasantryCalendar)", "(PleasantryAnythingElseCombined)"], "pred_translated": ["hello", "may i hep you", "no thanks"], "distractor": "Can you tell me the weather for tomorrow in Greenville, NC?"}
{"gold_tgt": "( FenceReminder )", "bin": 0.61, "data_idx": 1772, "pred_tgts": ["(FenceReminder)", "(FenceTeams)", "(FenceAttendee)"], "pred_translated": ["Remind me of the first flight to london", "Who reports to me?", "Please schedule a meeting with the pope tomorrow."], "distractor": "What about the rest of the week?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" birthday \" ) ) ) ) ) ) ( & ( Event.start_? ( DateTime.time_? ( ?= ( NumberAM 10L ) ) ) ) ( Event.end_? ( DateTime.time_? ( ?= ( NumberPM 2L ) ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 1463, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" birthday \")))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 2L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?= \" birthday \")))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 2L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (Event.subject_? (?~= \" birthday \")) (NumberAM 10L)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"], "pred_translated": ["change the birthday time at 10.00 am - 2.00 pm", "change the birthday time at 10.00 am - 2.00 pm", "change the birthday at 10.00 am to 2.00 pm"], "distractor": "I like the 3rd one"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" brunch \" ) ) ) ) ) ) ( Event.start_? ( DateTime.time_? ( ?< ( Execute ( refer ( & ( ^ ( Time ) roleConstraint ( Path.apply \" start \" ) ) ( extensionConstraint ( ^ ( Time ) EmptyStructConstraint ) ) ) ) ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 11430, "pred_tgts": ["(FenceSpecify)", "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" brunch \")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?< (DateTime.time (Event.start x0)))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" brunch \")))))) (Event.start_? (DateTime.time_? (?< (Execute (refer (& (^(Time) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"], "pred_translated": ["can you change the meeting time", "Make brunch earlier", "Make brunch earlier"], "distractor": "Can you tell me the weather for tomorrow in Greenville, NC?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" my family \" ) ) ( Event.start_? ( DateTime.date_? ( NextWeekend ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" Pleasure Pier in Galveston \" ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 10951, "pred_tgts": ["(FenceAttendee)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" family for my family \")) (Event.start_? (DateTime.date_? (NextWeekend)))) (Event.location_? (?= (LocationKeyphrase.apply \" Pleasure Pier in Galveston \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" my family \")) (Event.start_? (DateTime.date_? (NextWeekend)))) (Event.location_? (?= (LocationKeyphrase.apply \" Pleasure Pier in Galveston \")))))))"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "Set up a family picnic at the Pleasure Pier in Galveston next weekend.", "Set up a meeting at the Pleasure Pier in Galveston for next weekend to see my family."], "distractor": "can you change the appointment time"}
{"gold_tgt": "( FenceWeather )", "bin": 0.61, "data_idx": 6191, "pred_tgts": ["(FenceWeather)", "(FenceScope)", "(FenceAggregation)"], "pred_translated": ["What causes hail?", "How old are you?", "How many days do I have completely free next month?"], "distractor": "I want to delete my meeting with Rick and make a meeting with Sherry for one hour."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" go to Sam's house \" ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( NextDOW ( Thursday ) ) ( NumberPM 5L ) ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 2718, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 5L)))) (Event.location_? (?= (LocationKeyphrase.apply \" Sam's house \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" go to Sam's house \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 5L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" go to Sam \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberPM 5L))))) (Event.location_? (?= (LocationKeyphrase.apply \" Sam's house \")))))))"], "pred_translated": ["Make an appointment for Thursday at 5pm at Sam's house.", "Make an event to go to Sam's house on Thursday at 5pm", "Make an event to go to Sam on Thursday at 5 pm at Sam's house."], "distractor": "I need to change the date of my doctor's appointment"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" Eve's birthday \" ) ) ( Event.start_? ( DateTime.date_? ( ?= ( NextDOW ( Tuesday ) ) ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 1722, "pred_tgts": ["(FenceReminder)", "(FenceTeams)", "(FenceScope)"], "pred_translated": ["Remind me of the first flight to london", "Who reports to me?", "How old are you?"], "distractor": "Make me a 5 day event starting on the sixth"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" commute \" ) ) ( Event.start_? ( ?= ( Event.end ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 6619, "pred_tgts": ["(FenceScope)", "(FenceSwitchTabs)", "(FenceMultiAction)"], "pred_translated": ["Make a reservation for dinner tonight at 7.", "email fiona mason", "Can you clear my calendar tomorrow?"], "distractor": "Remind me of the first flight to london"}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "bin": 0.61, "data_idx": 2300, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(PleasantryCalendar)"], "pred_translated": ["ok", "yes", "I need help with my calendar"], "distractor": "Do I have anything else scheduled on that day?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" jog \" ) ) ( Event.start_? ( LessThanFromStructDateTime ( ?= ( NextTime ( Brunch ) ) ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 12311, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" jog \")) (Event.end_? (?= (NextTime (Brunch))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" jog \")) (Event.start_? (LessThanFromStructDateTime (?= (NextTime (Brunch)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" jog \")) (Event.start_? (?= (NextTime (Brunch))))))))"], "pred_translated": ["Schedule a jog that ends at brunch.", "Schedule a jog before brunch", "Add jog at brunch time."], "distractor": "Add hair my hair at the salon after that."}
{"gold_tgt": "( let ( x0 ( DateAtTimeWithDefaults ( MD 12L ( February ) ) ( NumberPM 2L ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.start_? ( ?= x0 ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x0 ( NumberPM 4L ) ) ) ) ) ( Event.location_? ( & ( ?= ( LocationKeyphrase.apply \" cambridge \" ) ) ( roomRequest ) ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 11455, "pred_tgts": ["(FenceConferenceRoom)", "(FenceOther)", "(FenceScope)"], "pred_translated": ["Change the location of the staff meeting tomorrow to Conference Room B.", "Can you tell me the weather for tomorrow in Greenville, NC?", "How old are you?"], "distractor": "Who is in my address book?"}
{"gold_tgt": "( FenceOther )", "bin": 0.61, "data_idx": 11471, "pred_tgts": ["(FenceScope)", "(FencePlaces)", "(FenceOther)"], "pred_translated": ["How old are you?", "Where is the closest bathroom?", "Can you tell me the weather for tomorrow in Greenville, NC?"], "distractor": "How about next Wednesday?"}
{"gold_tgt": "( do ( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) ) ( Yield ( EventAttendance ( RespondComment.apply \" I have the flu and I can't get out of bed \" ) :event ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.subject_? ( ?~= \" charity lunch \" ) ) ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Harry \" ) ) ) ) ) ) ) ) :response ( ResponseStatusType.Declined ) ) ) )", "bin": 0.61, "data_idx": 5408, "pred_tgts": ["(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" I have the flu and I can't get out of bed \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" charity lunch \")) (Event.organizer_? (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Harry \"))))))))))) :response (ResponseStatusType.Declined))))", "(Yield (EventAttendance (RespondComment.apply \" I have the flu and I can't get out of bed \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" charity lunch \")) (Event.organizer_? (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Harry \"))))))))))) :response (ResponseStatusType.Declined)))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" I have the flu and I can't get out of bed. \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" charity lunch \")) (Event.organizer_? (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Harry \"))))))))))) :response (ResponseStatusType.Declined))))"], "pred_translated": ["Yes, thank you. Decline Harry's invitation for a charity lunch and tell him that I have the flu and I can't get out of bed.", "Decline Harry's charity lunch and tell him I have the flu and I can't get out of bed.", "Yes, thank you. Decline Harry's invitation for a charity lunch and tell him that I have the flu and I can't get out of bed."], "distractor": "Accepted but change the time."}
{"gold_tgt": "( let ( x0 ( DateAtTimeWithDefaults ( NextDOW ( Saturday ) ) ( NumberPM 1L ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( & ( Event.subject_? ( ?= \" baseball game \" ) ) ( Event.start_? ( ?= x0 ) ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x0 ( NumberPM 3L ) ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" memorial park \" ) ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 12515, "pred_tgts": ["(FenceAttendee)", "(FenceScope)", "(FencePeopleQa)"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "How old are you?", "Why didn't Mom come to my birthday party?"], "distractor": "Anything later than that?"}
{"gold_tgt": "( Yield ( Execute ( NewClobber ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ( ^ ( Recipient ) ConstraintTypeIntension ) ( intension ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Victor \" ) ) ) ) ) )", "bin": 0.61, "data_idx": 3685, "pred_tgts": ["(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Victor \"))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Victor \"))))))))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (alwaysTrueConstraintConstraint (^((List Attendee)) AlwaysTrueConstraint))) (intension (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Victor \"))))))))))"], "pred_translated": ["Sorry I meant to say Victor.", "Please add Victor to this event.", "Add Victor to the choir practice."], "distractor": "Mark my calendar as busy"}
{"gold_tgt": "( Yield ( EventAttendance ( RespondComment.apply \" I'm excited to join! \" ) :event ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.subject_? ( ?~= \" Ron's party \" ) ) ( Event.organizer_? ( ?= ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Tammy \" ) ) ) ) ) ) ) ) ) ) ) :response ( ResponseStatusType.Accepted ) ) )", "bin": 0.61, "data_idx": 3062, "pred_tgts": ["(Yield (EventAttendance (RespondComment.apply \" I'm excited to join! \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ron \"))) (Event.subject_? (?~= \" Ron's party \")) (Event.organizer_? (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Tammy \"))))))))))) :response (ResponseStatusType.Accepted)))", "(Yield (EventAttendance (RespondComment.apply \" I'm excited to join! \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Ron's party \")) (Event.organizer_? (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Tammy \"))))))))))) :response (ResponseStatusType.Accepted)))", "(Yield (EventAttendance (RespondComment.apply \" I'm excited to join! \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ron \"))) (Event.subject_? (?~= \" party's party \")) (Event.organizer_? (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Tammy \"))))))))))) :response (ResponseStatusType.Accepted)))"], "pred_translated": ["Please accept Ron's party invite with a message saying I'm excited to join!", "Please accept my invitation to Ron's party with a message saying I'm excited to join!", "Please accept the party's party invite from Tammy and tell Ron that I'm excited to join!"], "distractor": "When am I free in September?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.start_? ( DateTime.date_? ( ?= ( ClosestDayOfWeek ( Execute ( refer ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ( Saturday ) ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 1137, "pred_tgts": ["(FenceOther)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Saturday))))))))"], "pred_translated": ["can you arrange with 5:30 PM", "can you arrange with 5 :30 PM on Saturday", "can you arrange with 5:30 PM Saturday"], "distractor": "Is Janie invited to that?"}
{"gold_tgt": "( Yield ( IsFree ( RecipientAvailability ( & ( Event.start_? ( DateTime.date_? ( NextWeekList ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( toRecipient ( CurrentUser ) ) ) ) ) true ) ) )", "bin": 0.61, "data_idx": 3994, "pred_tgts": ["(Yield (RecipientAvailability (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true))", "(Yield (IsFree (RecipientAvailability (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))", "(Yield (RecipientAvailability (Event.start_? (DateTime.date_? (NextWeekList))) true))"], "pred_translated": ["When am I free next week?", "Am I free next week?", "When am I free next week?"], "distractor": "Is Jerry Seinfeld coming to the Friday Talent show?"}
{"gold_tgt": "( Yield ( DeleteCommitEventWrapper ( DeletePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 12849, "pred_tgts": ["(PleasantryCalendar)", "(FenceSpecify)", "(FenceOther)"], "pred_translated": ["I need help with my calendar", "I need to change the date of my doctor's appointment", "Can you tell me the weather for tomorrow in Greenville, NC?"], "distractor": "ok ok wait"}
{"gold_tgt": "( Yield ( == ( Event.organizer ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.start_? ( ?= ( Event.end ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ) ) ) ) ) ( FindManager ( toRecipient ( CurrentUser ) ) ) ) )", "bin": 0.61, "data_idx": 2447, "pred_tgts": ["(Yield (== (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (^(Event) EmptyStructConstraint) (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))) (FindManager (toRecipient (CurrentUser)))))", "(Yield (== (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))) (FindManager (toRecipient (CurrentUser)))))", "(Yield (== (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (FindManager (toRecipient (CurrentUser)))))"], "pred_translated": ["Is my manager the organizer of the event after that one?", "Did my manager organize the event right after that one?", "Did my boss organize the event?"], "distractor": "Yes, the party on Friday looks good."}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( UpdateEventIntensionConstraint ) ( Event.start_? ( DateTime.time_? ( ?= ( NumberAM 8L ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 11431, "pred_tgts": ["(FenceOther)", "(Yield (Execute (ChooseUpdateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberAM 8L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberAM 8L)))))))"], "pred_translated": ["The earlier one works best.", "Yes, please schedule the 8am option.", "Start at 8 am."], "distractor": "Can you find any meetings scheduled between 2 and 4 pm next Friday?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" secret project \" ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( Tomorrow ) ( NumberPM 2L ) ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" supply closet \" ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 13263, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" secret project to work on in supply \")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))) (Event.location_? (?= (LocationKeyphrase.apply \" the supply closet \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" secret project to work on in the supply \")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))) (Event.location_? (?= (LocationKeyphrase.apply \" the supply closet \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" secret project to work on in supply \")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))) (Event.location_? (?= (LocationKeyphrase.apply \" supply closet \")))))))"], "pred_translated": ["Add a secret project to work on in supply tomorrow at 2 pm in the supply closet.", "I've got a secret project to work on in the supply tomorrow at 2 pm.", "I have a secret project to work on in supply tomorrow at 2 pm."], "distractor": "can you change the meeting time"}
{"gold_tgt": "( Yield ( Event.responseStatus ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( MD 20L ( August ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 12714, "pred_tgts": ["(FenceSpecify)", "(FenceOther)", "(PleasantryCalendar)"], "pred_translated": ["I need to change the date of my doctor's appointment", "Can you tell me the weather for tomorrow in Greenville, NC?", "I need help with my calendar"], "distractor": "I need to change the date of my doctor's appointment"}
{"gold_tgt": "( Yield ( WillRain ( WeatherQueryApi ( AtPlace ( Here ) ) ( DateTime.date_? ( ?= ( Today ) ) ) ) ) )", "bin": 0.61, "data_idx": 6874, "pred_tgts": ["(Yield (WillRain (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))", "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))", "(Yield (WillRain (WeatherQueryApi (AtPlace (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))) (DateTime.date_? (?= (Today))))))"], "pred_translated": ["Will it rain?", "Will it rain today?", "Will it rain today?"], "distractor": "I need to change the date of my doctor's appointment"}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "bin": 0.61, "data_idx": 10594, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(FenceOther)", "(FenceSpecify)"], "pred_translated": ["yeesh could possibly", "Can you add a location?", "Can you change the time?"], "distractor": "Yes. When is National Pizza day?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" jog \" ) ) ( Event.start_? ( LessThanFromStructDateTime ( ?= ( NextTime ( Brunch ) ) ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 12311, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" jog \")) (Event.end_? (?= (NextTime (Brunch))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" jog \")) (Event.start_? (LessThanFromStructDateTime (?= (NextTime (Brunch)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" jog \")) (Event.start_? (?= (NextTime (Brunch))))))))"], "pred_translated": ["Schedule a jog that ends at brunch.", "Schedule a jog before brunch", "Add jog at brunch time."], "distractor": "Please schedule a meeting with the pope tomorrow."}
{"gold_tgt": "( FenceReminder )", "bin": 0.61, "data_idx": 8761, "pred_tgts": ["(FenceMultiAction)", "(FenceSpecify)", "(FenceOther)"], "pred_translated": ["I need to cancel all my meetings for tomorrow.", "I need to change the date of my doctor's appointment", "Can you tell me the weather for tomorrow in Greenville, NC?"], "distractor": "Is Jerry Seinfeld coming to the Friday Talent show?"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventDuringRange ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Paige Ashworth \" ) ) ) ) ( ThisWeek ) ) ) )", "bin": 0.61, "data_idx": 5586, "pred_tgts": ["(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Paige Ashworth \")))) (ThisWeek))))) 0L))", "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Paige Ashworth \")))) (ThisWeek))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Paige Ashworth \")))) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)))))) 0L))"], "pred_translated": ["Do I have any meetings with Paige Ashworth this week?", "What do I have scheduled with Paige Ashworth this week?", "Do I have any meetings with Paige Ashworth this week?"], "distractor": "Please put the meeting 4/4/2019 at 4:00 PM with Paige Ashworth on my calendar."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" Eve's birthday \" ) ) ( Event.start_? ( DateTime.date_? ( ?= ( NextDOW ( Tuesday ) ) ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 1722, "pred_tgts": ["(FenceReminder)", "(FenceTeams)", "(FenceScope)"], "pred_translated": ["Remind me of the first flight to london", "Who reports to me?", "How old are you?"], "distractor": "What do I have tomorrow that's not called jog?"}
{"gold_tgt": "( Yield ( FindManager ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Damon Straeter \" ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 5049, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(PleasantryAnythingElseCombined)"], "pred_translated": ["defer the next meeting with Jesse", "change the time of meeting with jesse", "ok"], "distractor": "Schedule a meeting with Kim tomorrow at 4:15 pm."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( EventAllDayStartingDateForPeriod ( ^ ( Event ) EmptyStructConstraint ) ( nextDayOfMonth ( Today ) 6L ) ( toDays 5 ) ) ) ) )", "bin": 0.61, "data_idx": 5730, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (^(Event) EmptyStructConstraint) (nextDayOfMonth (Today) 5L) (toDays 5)))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (^(Event) EmptyStructConstraint) (nextDayOfMonth (Today) 7L) (toDays 5)))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (^(Event) EmptyStructConstraint) (nextDayOfMonth (Today) \\ sixth\\ L) (toDays 5)))))"], "pred_translated": ["Make me a 5 day event starting on the 5th", "Make me a 5 day event starting on the 7th", "Make me a 5 day event starting on the sixth"], "distractor": "I need help with my calendar"}
{"gold_tgt": "( Yield ( Execute ( NewClobber ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ( ^ ( Recipient ) ConstraintTypeIntension ) ( intension ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Victor \" ) ) ) ) ) )", "bin": 0.61, "data_idx": 3685, "pred_tgts": ["(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Victor \"))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Victor \"))))))))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (alwaysTrueConstraintConstraint (^((List Attendee)) AlwaysTrueConstraint))) (intension (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Victor \"))))))))))"], "pred_translated": ["Sorry I meant to say Victor.", "Please add Victor to this event.", "Add Victor to the choir practice."], "distractor": "can you change the meeting time"}
{"gold_tgt": "( FenceReminder )", "bin": 0.61, "data_idx": 1772, "pred_tgts": ["(FenceReminder)", "(FenceTeams)", "(FenceAttendee)"], "pred_translated": ["Remind me of the first flight to london", "Who reports to me?", "Please schedule a meeting with the pope tomorrow."], "distractor": "Was Thanksgiving last week?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( EventDuringRange ( ^ ( Event ) EmptyStructConstraint ) ( SeasonFall ) ) ) ) )", "bin": 0.61, "data_idx": 5566, "pred_tgts": ["(FenceDateTime)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (EventDuringRange (^(Event) EmptyStructConstraint) (SeasonFall)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (SeasonFall)))))"], "pred_translated": ["When was my vacation last summer?", "Oh, how about in the fall?", "Oh, how about in the fall?"], "distractor": "Do I have anything this week that's not training?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" secret project \" ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( Tomorrow ) ( NumberPM 2L ) ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" supply closet \" ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 13263, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" secret project to work on in supply \")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))) (Event.location_? (?= (LocationKeyphrase.apply \" the supply closet \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" secret project to work on in the supply \")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))) (Event.location_? (?= (LocationKeyphrase.apply \" the supply closet \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" secret project to work on in supply \")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))) (Event.location_? (?= (LocationKeyphrase.apply \" supply closet \")))))))"], "pred_translated": ["Add a secret project to work on in supply tomorrow at 2 pm in the supply closet.", "I've got a secret project to work on in the supply tomorrow at 2 pm.", "I have a secret project to work on in supply tomorrow at 2 pm."], "distractor": "Will it be rainy this weekend in Lake City, Florida?"}
{"gold_tgt": "( Yield ( inFahrenheit ( WeatherAggregate ( WeatherQuantifier.Max ) ( temperature ) ( WeatherQueryApi ( AtPlace ( FindPlace ( LocationKeyphrase.apply \" Sacramento \" ) ) ) ( DateTime.date_? ( ?= ( NextDOW ( Tuesday ) ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 1127, "pred_tgts": ["(Yield (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Sacramento \"))) (DateTime.date_? (?= (NextDOW (Tuesday)))))))", "(Yield (WhenProperty (temperature) (WeatherQuantifier.Max) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Sacramento \"))) (DateTime.date_? (?= (NextDOW (Tuesday)))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Sacramento \"))) (DateTime.date_? (?= (NextDOW (Tuesday)))))))"], "pred_translated": ["How hot will it be in Sacramento on Tuesday?", "When will it be warmest in Sacramento on Tuesday?", "What will the low be in Sacramento on Tuesday?"], "distractor": "I have a hair appointment tomorrow at the salon"}
{"gold_tgt": "( FenceWeather )", "bin": 0.61, "data_idx": 6191, "pred_tgts": ["(FenceWeather)", "(FenceScope)", "(FenceAggregation)"], "pred_translated": ["What causes hail?", "How old are you?", "How many days do I have completely free next month?"], "distractor": "I want to change the time of my hair appointment at the salon."}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" brunch \" ) ) ) ) ) ) ( Event.start_? ( DateTime.time_? ( ?< ( Execute ( refer ( & ( ^ ( Time ) roleConstraint ( Path.apply \" start \" ) ) ( extensionConstraint ( ^ ( Time ) EmptyStructConstraint ) ) ) ) ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 11430, "pred_tgts": ["(FenceSpecify)", "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" brunch \")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?< (DateTime.time (Event.start x0)))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" brunch \")))))) (Event.start_? (DateTime.time_? (?< (Execute (refer (& (^(Time) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"], "pred_translated": ["can you change the meeting time", "Make brunch earlier", "Make brunch earlier"], "distractor": "Thanks. And also delete my Private Interview from the Monday after this."}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Saturday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) )", "bin": 0.61, "data_idx": 6493, "pred_tgts": ["(FenceScope)", "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \" power hours \")))))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \" power hours \")))))))"], "pred_translated": ["Can you restore that deleted event?", "Find power hours on Saturday", "Find my power hours on Saturday"], "distractor": "Add Sonia to my address book"}
{"gold_tgt": "( Yield ( AttendeesWithResponse ( Event.attendees ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" Zoom meeting \" ) ) ) ) ) ) ( ResponseStatusType.Accepted ) ) )", "bin": 0.61, "data_idx": 1195, "pred_tgts": ["(Yield (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Zoom meeting \")))))))", "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Zoom meeting \")))))) (ResponseStatusType.Accepted)))", "(Yield (CurrentUser))"], "pred_translated": ["Who is Zoom meeting with?", "Who accepted the Zoom meeting?", "Who am I logged in as?"], "distractor": "Please make that 9-10:30 am in the morning instead."}
{"gold_tgt": "( let ( x0 ( DateAtTimeWithDefaults ( MD 12L ( February ) ) ( NumberPM 2L ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.start_? ( ?= x0 ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x0 ( NumberPM 4L ) ) ) ) ) ( Event.location_? ( & ( ?= ( LocationKeyphrase.apply \" cambridge \" ) ) ( roomRequest ) ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 11455, "pred_tgts": ["(FenceConferenceRoom)", "(FenceOther)", "(FenceScope)"], "pred_translated": ["Change the location of the staff meeting tomorrow to Conference Room B.", "Can you tell me the weather for tomorrow in Greenville, NC?", "How old are you?"], "distractor": "Paige Ashworth?"}
{"gold_tgt": "( FenceMultiAction )", "bin": 0.61, "data_idx": 10905, "pred_tgts": ["(FenceReminder)", "(FenceRecurring)", "(FenceMultiAction)"], "pred_translated": ["Can you remind me about events on my calendar?", "I would like my calendar to show a recurring event", "I would like to remove all calendar events for the month of December."], "distractor": "Do I have any meetings with Paige Ashworth this week?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" secret project \" ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( Tomorrow ) ( NumberPM 2L ) ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" supply closet \" ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 13263, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" secret project to work on in supply \")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))) (Event.location_? (?= (LocationKeyphrase.apply \" the supply closet \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" secret project to work on in the supply \")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))) (Event.location_? (?= (LocationKeyphrase.apply \" the supply closet \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" secret project to work on in supply \")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L))))) (Event.location_? (?= (LocationKeyphrase.apply \" supply closet \")))))))"], "pred_translated": ["Add a secret project to work on in supply tomorrow at 2 pm in the supply closet.", "I've got a secret project to work on in the supply tomorrow at 2 pm.", "I have a secret project to work on in supply tomorrow at 2 pm."], "distractor": "Can you cancel all events on Saturday and Sunday?"}
{"gold_tgt": "( FenceOther )", "bin": 0.61, "data_idx": 11471, "pred_tgts": ["(FenceScope)", "(FencePlaces)", "(FenceOther)"], "pred_translated": ["How old are you?", "Where is the closest bathroom?", "Can you tell me the weather for tomorrow in Greenville, NC?"], "distractor": "I need to change the date of my doctor's appointment"}
{"gold_tgt": "( Yield ( FindNumNextEvent ( EventOnDateWithTimeRange ( EventOnDate ( Tomorrow ) ( ^ ( Event ) EmptyStructConstraint ) ) ( Morning ) ) 1L ) )", "bin": 0.61, "data_idx": 12829, "pred_tgts": ["(Yield (FindNumNextEvent (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Morning)) 1L))", "(Yield (FindNumNextEvent (EventOnDateWithTimeRange (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)) (Morning)) 1L))", "(Yield (FindNumNextEvent (EventDuringRangeTime (^(Event) EmptyStructConstraint) (Morning)) 1L))"], "pred_translated": ["What's first on my calendar this morning?", "What's the first thing I have to do that morning?", "What's the first thing I have to do in the morning?"], "distractor": "How do I create an event?"}
{"gold_tgt": "( Yield ( Event.responseStatus ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( MD 20L ( August ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 12714, "pred_tgts": ["(FenceSpecify)", "(FenceOther)", "(PleasantryCalendar)"], "pred_translated": ["I need to change the date of my doctor's appointment", "Can you tell me the weather for tomorrow in Greenville, NC?", "I need help with my calendar"], "distractor": "Schedule a meeting with Karl Boon on Thursday at 6:30 PM."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" call Tracy \" ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( Today ) ( NumberPM 8L ) ) ) ) ) ) ) )", "bin": 0.61, "data_idx": 5236, "pred_tgts": ["(FenceReminder)", "(FenceTeams)", "(FenceScope)"], "pred_translated": ["Remind me of the first flight to london", "Who reports to me?", "How old are you?"], "distractor": "I need to change the time of that meeting."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" ebay listing \" ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( NextDOW ( Monday ) ) ( NumberPM 8L ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 9226, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" ebay listing \")) (Event.end_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 8L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" ebay listing \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 8L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" ebay listing \")) (Event.end_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 8L))))))))"], "pred_translated": ["My easter listing ends at 8 pm on monday", "create an event for monday at 8pm for the easter ebay listing", "My easter listing ends at 8am on monday"], "distractor": "How do I create a new event?"}
{"gold_tgt": "( Yield ( Execute ( NewClobber ( NewClobber ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ( extensionConstraint ( ^ ( ResponseStatusType ) AlwaysTrueConstraint ) ) ( intension ( ResponseStatusType.Declined ) ) ) ( extensionConstraint ( ^ ( RespondComment ) AlwaysTrueConstraint ) ) ( intension ( RespondComment.apply \" something came up \" ) ) ) ) )", "bin": 0.65, "data_idx": 9631, "pred_tgts": ["(Yield (Execute (NewClobber (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(ResponseStatusType) AlwaysTrueConstraint)) (intension (ResponseStatusType.Declined))) (extensionConstraint (^(RespondComment) AlwaysTrueConstraint)) (intension (RespondComment.apply \" something came up up \")))))", "(Yield (Execute (NewClobber (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(ResponseStatusType) AlwaysTrueConstraint)) (intension (ResponseStatusType.Declined))) (extensionConstraint (^(RespondComment) AlwaysTrueConstraint)) (intension (RespondComment.apply \" something came up. \")))))", "(Yield (Execute (NewClobber (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(ResponseStatusType) AlwaysTrueConstraint)) (intension (ResponseStatusType.Declined))) (extensionConstraint (^(RespondComment) AlwaysTrueConstraint)) (intension (RespondComment.apply \" something came up no \")))))"], "pred_translated": ["Actually decline it and say that something came up up.", "Actually decline it and say something came up.", "Actually decline it and say something came up no."], "distractor": "Was Mary at the last meeting of last year?"}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.65, "data_idx": 9094, "pred_tgts": ["(PleasantryCalendar)", "(PleasantryAnythingElseCombined)", "(FenceSpecify)"], "pred_translated": ["What can you help me with?", "ok", "I would like to have the 2nd option updated."], "distractor": "I want to go fishing and want the weather for High Springs, FL to be clear."}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( EventOnDateWithTimeRange ( EventOnDate ( ClosestDayOfWeek ( Execute ( refer ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ( Sunday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ( Morning ) ) ) ) )", "bin": 0.65, "data_idx": 4956, "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDateWithTimeRange (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)) (Morning)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDateWithTimeRange (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Sunday)) (^(Event) EmptyStructConstraint)) (Morning)))))", "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)) (Morning))))"], "pred_translated": ["What about Sunday morning?", "What about Sunday morning?", "Show me all of Sunday morning's events."], "distractor": "Can you tell me the weather for tomorrow in Greenville, NC?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventAtTime ( ^ ( Event ) EmptyStructConstraint ) ( HourMilitary 9L ) ) ) ) ) ) ( Event.start_? ( DateTime.time_? ( ?= ( HourMilitary 10L ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 2524, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (HourMilitary 9L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (HourMilitary 10L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (DateTime.time_? (?= (HourMilitary 9L)))))))) (Event.start_? (DateTime.time_? (?= (HourMilitary 10L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (HourMinuteMilitary 9L 0L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (HourMilitary 10L)))))))"], "pred_translated": ["Change my meeting from 0900 to 1000.", "Change my meeting from 09h to 10h", "Change my meeting from 0900 to 1000."], "distractor": "My easter listing ends at 8am on monday"}
{"gold_tgt": "( let ( x0 ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateTime ( DateAtTimeWithDefaults ( Today ) ( NumberPM 2L ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) x1 ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateTime ( DateAtTimeWithDefaults ( Today ) ( NumberPM 5L ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.start_? ( DateTimeAndConstraintBetweenEvents x0 x1 ) ) ( Event.end_? ( DateTimeAndConstraintBetweenEvents x0 x1 ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Hannah \" ) ) ) ) ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 13311, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeAndConstraintBetweenEvents (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 5L)) (^(Event) EmptyStructConstraint))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Hannah \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeAndConstraintBetweenEvents (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 2L)) (^(Event) EmptyStructConstraint))))) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 5L)) (^(Event) EmptyStructConstraint))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Hannah \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeAndConstraint (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 5L)) (^(Event) EmptyStructConstraint)))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Hannah \")))))))))))"], "pred_translated": ["I need to meet with Hannah between 5 and 6 today.", "I need to meet with Hannah between my 2pm and 5pm today.", "I need to meet with Hannah sometime before the 5 pm today."], "distractor": "Schedule a meeting with Kim tomorrow at 4:15 pm."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" visit to the Farm \" ) ) ( Event.start_? ( DateTimeConstraint ( TimeAround ( NumberAM 11L ) ) ( NextDOW ( Thursday ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 13155, "pred_tgts": ["(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRangeDateTime (Event.subject_? (?~= \" visit to the Farm \")) (AroundDateTime (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberAM 11L))))))) 0L))", "(Yield (FindEventWrapperWithDefaults (EventDuringRangeDateTime (Event.subject_? (?~= \" visit to the Farm \")) (AroundDateTime (DateAtTimeWithDefaults (NextDOW (Thursday)) (NumberAM 11L))))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRangeTime (Event.subject_? (?~= \" visit to the Farm \")) (TimeAround (NumberAM 11L)))))) 0L))"], "pred_translated": ["Will I be having a visit to the Farm this Thursday around 11 am?", "Can you find me my visit to the Farm next Thursday around 11 am?", "Do I have a visit to the Farm around 11 am?"], "distractor": "Why didn't Mom come to my birthday party?"}
{"gold_tgt": "( do ( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) ) ( Yield ( EventAttendance ( RespondComment.apply \" I have another Raid to go \" ) :event ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" WoW Raid \" ) ) ) ) ) :response ( ResponseStatusType.Declined ) ) ) )", "bin": 0.65, "data_idx": 7250, "pred_tgts": ["(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" I have another Raid to go. \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" WoW Raid \"))))) :response (ResponseStatusType.Declined))))", "(Yield (EventAttendance (RespondComment.apply \" I have another Raid to go \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" WoW Raid \"))))) :response (ResponseStatusType.Declined)))", "(Yield (EventAttendance (RespondComment.apply \" I have another Raid to go. \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" WoW Raid \"))))) :response (ResponseStatusType.Declined)))"], "pred_translated": ["Yes, that's good. Decline my WoW Raid and say that I have another Raid to go.", "Yes, please also decline the WoW Raid and say that I have another Raid to go.", "Yes, that's good. Decline my WoW Raid and say that I have another Raid to go."], "distractor": "What about the 6th?"}
{"gold_tgt": "( let ( x0 ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.subject_? ( ?~= \" Doctor appointment \" ) ) ( EventOnDate ( NextDOW ( Friday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ) ( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id x0 ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( ClosestDayOfWeek ( DateTime.date ( Event.start x0 ) ) ( Saturday ) ) ( NumberPM 3L ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 3576, "pred_tgts": ["(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \" Doctor appointment \"))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Saturday)) (NumberPM 3L))))))))", "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Doctor appointment \")) (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Saturday)) (NumberPM 3L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \" Doctor appointment \"))))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 3L)))))))"], "pred_translated": ["Can you move my Doctor appointment from Friday to Saturday at 3 pm?", "Can you change my Doctor appointment from Friday to Saturday at 3:00 PM?", "Can you move my Doctor appointment from Friday to Saturday at 3pm?"], "distractor": "How much rain is Lafayette GA going to get"}
{"gold_tgt": "( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.subject_? ( negate ( ?~= \" Dinner \" ) ) ) ( EventOnDate ( adjustByPeriod ( Execute ( refer ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ( toDays 1 ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) 0L ) )", "bin": 0.65, "data_idx": 7415, "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (Event.subject_? (negate (?~= \" Dinner \")))))", "(Yield (FindEventWrapperWithDefaults (& (Event.subject_? (negate (?~= \" Dinner \"))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))", "(Yield (FindEventWrapperWithDefaults (& (Event.subject_? (negate (?~= \" Dinner \"))) (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (^(Event) EmptyStructConstraint)))))"], "pred_translated": ["Search for events that are not Dinner.", "What do I have next week that isn't Dinner?", "What do I have the day after Dinner?"], "distractor": "Get me a room at City Center for 3 hours tomorrow at 9 am for quarterly accounts."}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Tom \" ) ) ) ) ) ) ) ) ( Event.start_? ( DateTimeConstraint ( TimeAround ( NumberPM 2L ) ) ( NextDOW ( Friday ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 11210, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Tom \")))))))) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Tom \")))))))) (Event.start_? (DateTimeConstraint (TimeAround (NumberPM 2L)) (NextDOW (Friday)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Tom \")))))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L)))))))"], "pred_translated": ["Move my meeting with Tom to Friday around 2 pm.", "Can you reschedule my meeting with Tom to Friday around 2 pm?", "Move my meeting with Tom to Friday at 2 pm."], "distractor": "Does Wild River Grille in Reno have group seating?"}
{"gold_tgt": "( let ( x0 ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id x0 ) ( Event.start_? ( ?> ( Event.start x0 ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 10701, "pred_tgts": ["(FenceSpecify)", "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?> (DateTime.time (Event.start x0)))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (Event.start_? (Later)))))"], "pred_translated": ["I need to change the date of my doctor's appointment", "Can you move my meeting to later in the day?", "Can you move my meeting to later in the day?"], "distractor": "please make a meet with my doctor"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( EventOnDateWithTimeRange ( EventOnDate ( ClosestDayOfWeek ( Execute ( refer ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ( Sunday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ( Morning ) ) ) ) )", "bin": 0.65, "data_idx": 4956, "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDateWithTimeRange (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)) (Morning)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDateWithTimeRange (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Sunday)) (^(Event) EmptyStructConstraint)) (Morning)))))", "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)) (Morning))))"], "pred_translated": ["What about Sunday morning?", "What about Sunday morning?", "Show me all of Sunday morning's events."], "distractor": "What other finance meetings do I have?"}
{"gold_tgt": "( Yield ( WeatherQueryApi ( AtPlace ( FindPlace ( LocationKeyphrase.apply \" Live Oak, Florida \" ) ) ) ( NextPeriodDuration ( PeriodDuration.apply ( toDays 10 ) ) ) ) )", "bin": 0.65, "data_idx": 584, "pred_tgts": ["(FenceOther)", "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Live Oak, Florida \"))) (DateTime.date_? (NextPeriod (toDays 10)))))", "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Live Oak, Florida \"))) (NextPeriodDuration (PeriodDuration.apply (toDays 10)))))"], "pred_translated": ["When will it rain next in Jacksonville, Florida?", "Give me the 10 day forecast for Live Oak, Florida", "Give me the 10 day forecast for Live Oak, Florida"], "distractor": "Change the time to 0845"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( Tomorrow ) ( HourMinutePm 5L 15L ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Kim \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 6776, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 4L 15L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 2L 15L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 8L 15L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \")))))))))))"], "pred_translated": ["Schedule a meeting with Kim tomorrow at 4:15 pm.", "Schedule a meeting with Kim tomorrow at 2:15 pm.", "Schedule a meeting with Kim tomorrow at 8:15 PM."], "distractor": "please change my choir practice"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" help Mom with packing \" ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( NextDOW ( Saturday ) ) ( NumberPM 1L ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 12906, "pred_tgts": ["(FenceAttendee)", "(FenceTeams)", "(FenceScope)"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "Who reports to me?", "How old are you?"], "distractor": "What is the address of the salon I have a hair appointment at tomorrow?"}
{"gold_tgt": "( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.subject_? ( negate ( ?~= \" Dinner \" ) ) ) ( EventOnDate ( adjustByPeriod ( Execute ( refer ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ( toDays 1 ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) 0L ) )", "bin": 0.65, "data_idx": 7415, "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (Event.subject_? (negate (?~= \" Dinner \")))))", "(Yield (FindEventWrapperWithDefaults (& (Event.subject_? (negate (?~= \" Dinner \"))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))", "(Yield (FindEventWrapperWithDefaults (& (Event.subject_? (negate (?~= \" Dinner \"))) (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (^(Event) EmptyStructConstraint)))))"], "pred_translated": ["Search for events that are not Dinner.", "What do I have next week that isn't Dinner?", "What do I have the day after Dinner?"], "distractor": "Make me a new meeting next Sunday at 8 pm"}
{"gold_tgt": "( Yield ( WeatherQueryApi ( AtPlace ( FindPlace ( LocationKeyphrase.apply \" Live Oak, Florida \" ) ) ) ( NextPeriodDuration ( PeriodDuration.apply ( toDays 10 ) ) ) ) )", "bin": 0.65, "data_idx": 584, "pred_tgts": ["(FenceOther)", "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Live Oak, Florida \"))) (DateTime.date_? (NextPeriod (toDays 10)))))", "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Live Oak, Florida \"))) (NextPeriodDuration (PeriodDuration.apply (toDays 10)))))"], "pred_translated": ["When will it rain next in Jacksonville, Florida?", "Give me the 10 day forecast for Live Oak, Florida", "Give me the 10 day forecast for Live Oak, Florida"], "distractor": "Change my doctor's appointment from 2pm to 4pm."}
{"gold_tgt": "( FenceMultiAction )", "bin": 0.65, "data_idx": 11091, "pred_tgts": ["(FenceAttendee)", "(FenceMultiAction)", "(FenceSpecify)"], "pred_translated": ["I want to delete my meeting with my mom.", "I want to delete my meeting with Rick and make a meeting with Sherry for one hour.", "Make the meeting with Sherry 1 hour longer."], "distractor": "Can you tell me when my next block of free time is?"}
{"gold_tgt": "( Yield ( WeatherQueryApi ( AtPlace ( FindPlace ( LocationKeyphrase.apply \" Live Oak, Florida \" ) ) ) ( NextPeriodDuration ( PeriodDuration.apply ( toDays 10 ) ) ) ) )", "bin": 0.65, "data_idx": 584, "pred_tgts": ["(FenceOther)", "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Live Oak, Florida \"))) (DateTime.date_? (NextPeriod (toDays 10)))))", "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Live Oak, Florida \"))) (NextPeriodDuration (PeriodDuration.apply (toDays 10)))))"], "pred_translated": ["When will it rain next in Jacksonville, Florida?", "Give me the 10 day forecast for Live Oak, Florida", "Give me the 10 day forecast for Live Oak, Florida"], "distractor": "Hello"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" Water Park \" ) ) ( Event.start_? ( DateTimeConstraint ( TimeAround ( NumberPM 2L ) ) ( MD 30L ( July ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 6411, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Water Park \")) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (MD 30L (July)) (NumberPM 2L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Water Park \")) (Event.start_? (DateTimeConstraint (TimeAround (NumberPM 2L)) (MD 30L (July))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Water Park \")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 30L (July)) (NumberPM 2L))))))))"], "pred_translated": ["Can you make me an event called Water Park around 2 pm on July 30", "Can you make me an event called Water Park around 2 pm on July 30", "Schedule Water Park for July 30 around 2 pm."], "distractor": "Can you move my Doctor appointment from Friday to Saturday at 3pm?"}
{"gold_tgt": "( Yield ( allows ( NextWeekList ) ( MD 4L ( July ) ) ) )", "bin": 0.65, "data_idx": 3917, "pred_tgts": ["(Yield (allows (AttendeeListHasRecipient (toRecipient (CurrentUser))) (MD 4L (July))))", "(Yield (allows (NextWeekList) (MD 4L (July))))", "(Yield (allows (AttendeeListHasRecipient) (MD 4L (July))))"], "pred_translated": ["Is my team meeting on July 4th?", "Is the 4th of July actually a weekend?", "Is my dentist appointment on July 4th?"], "distractor": "Move the meeting with Tammy and her boss to Monday at 8 am."}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.duration_? ( ?= ( toHours 1 ) ) ) ) ) )", "bin": 0.65, "data_idx": 8748, "pred_tgts": ["(DoNotConfirm)", "(FenceOther)", "(FenceSpecify)"], "pred_translated": ["No, let's try something different.", "I like the earlier one.", "fix the first one"], "distractor": "I want to go fishing and want the weather for High Springs, FL to be clear."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( Event.start_? ( DateTime.date_? ( ?= ( MD 6L ( June ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 201, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(PleasantryAnythingElseCombined)"], "pred_translated": ["Why is that?", "please update my events in my calender", "thank you"], "distractor": "Who reports to me?"}
{"gold_tgt": "( let ( x0 ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Jake \" ) ) ) ) ) x1 ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Elli \" ) ) ) ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( DateTime.date_? ( ?= ( NextDOW ( Wednesday ) ) ) ) ) ( Event.attendees_? ( & ( & ( AttendeeListHasRecipient x0 ) ( & ( AttendeeListHasRecipient ( FindManager x0 ) ) ( AttendeeListHasRecipient x1 ) ) ) ( AttendeeListHasRecipient ( FindManager x1 ) ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 10215, "pred_tgts": ["(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jake \"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday))))) (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1))))))))))", "(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jake \") (PersonName.apply \" Jake \"))))) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday))))) (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1))))))))))", "(let (x0 (Execute (^(Dynamic) ConfirmAndReturnAction)) x1 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Wednesday))))) (Event.attendees_? (& (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager x0))) (& (AttendeeListHasRecipient x1) (AttendeeListHasRecipient (FindManager x1))))))))))"], "pred_translated": ["I need a meeting with Jake, his boss, Elli and her boss on Wednesday.", "I need a meeting with Jake and his manager with Elli and her manager on Wednesday.", "Yes. Schedule a meeting with Elli, her manager, and her boss for next Wednesday."], "distractor": "What do I have scheduled Tuesday afternoon?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Tom \" ) ) ) ) ) ) ) ) ( Event.start_? ( DateTimeConstraint ( TimeAround ( NumberPM 2L ) ) ( NextDOW ( Friday ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 11210, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Tom \")))))))) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Tom \")))))))) (Event.start_? (DateTimeConstraint (TimeAround (NumberPM 2L)) (NextDOW (Friday)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Tom \")))))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L)))))))"], "pred_translated": ["Move my meeting with Tom to Friday around 2 pm.", "Can you reschedule my meeting with Tom to Friday around 2 pm?", "Move my meeting with Tom to Friday at 2 pm."], "distractor": "It's in the wide open!"}
{"gold_tgt": "( Yield ( DeleteCommitEventWrapper ( DeletePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Monday ) ) ( Event.subject_? ( ?~= \" Private Interview \" ) ) ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 1389, "pred_tgts": ["(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfWeek (DateTime.date (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Monday)) (Event.subject_? (?~= \" Private Interview \"))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \" Private Interview \"))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfWeek (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Monday)) (Event.subject_? (?~= \" Private Interview \"))))))))))"], "pred_translated": ["Thanks. And also delete my Private Interview from the Monday after this.", "Cancel my Private Interview on Monday.", "Thanks. And also delete my Private Interview from the Monday after this."], "distractor": "create an event for monday at 8pm for the easter ebay listing"}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "bin": 0.65, "data_idx": 11666, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(FenceSpecify)"], "pred_translated": ["It's in the wide open!", "Yes it does.", "Can you change the conference time?"], "distractor": "My easter listing ends at 8 pm on monday"}
{"gold_tgt": "( do ( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) ) ( FenceTriviaQa ) )", "bin": 0.65, "data_idx": 10514, "pred_tgts": ["(FenceTriviaQa)", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceTriviaQa))", "(FencePeopleQa)"], "pred_translated": ["When is National Pizza day?", "Yes. When is National Pizza day?", "When is Jobio's birthday?"], "distractor": "the first one"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.start_? ( DateTime.time_? ( ?= ( HourMinuteAm 11L 15L ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 3914, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (HourMinuteAm 11L 15L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinuteAm 11L 15L)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.time_? (?= (HourMinuteAm 11L 15L)))))))"], "pred_translated": ["can you arrange with 11:15 AM", "Can you make it 11:15?", "can you arrange with 11:15 AM"], "distractor": "Can you tell me the weather for tomorrow in Greenville, NC?"}
{"gold_tgt": "( Yield ( allows ( NextWeekList ) ( MD 4L ( July ) ) ) )", "bin": 0.65, "data_idx": 3917, "pred_tgts": ["(Yield (allows (AttendeeListHasRecipient (toRecipient (CurrentUser))) (MD 4L (July))))", "(Yield (allows (NextWeekList) (MD 4L (July))))", "(Yield (allows (AttendeeListHasRecipient) (MD 4L (July))))"], "pred_translated": ["Is my team meeting on July 4th?", "Is the 4th of July actually a weekend?", "Is my dentist appointment on July 4th?"], "distractor": "Can you tell me when my next block of free time is?"}
{"gold_tgt": "( FenceDateTime )", "bin": 0.65, "data_idx": 7356, "pred_tgts": ["(FenceTriviaQa)", "(FenceDateTime)", "(FenceOther)"], "pred_translated": ["How many months have 30 days?", "Can you tell me when my next block of free time is?", "Can you tell me the weather for tomorrow in Greenville, NC?"], "distractor": "Will it get over 80 degrees today?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( NextDOW ( Thursday ) ) ( HourMinuteMilitary 17L 0L ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" John \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 169, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" John \")))) (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))))) (Event.start_? (DateTime.time_? (?= (HourMinuteMilitary 17L 0L)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (HourMinuteMilitary 17L 0L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" John \")))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" John \"))))))))) (Event.start_? (DateTime.time_? (?= (HourMinuteMilitary 17L 0L)))))))"], "pred_translated": ["Update my Thursday meeting with John to 1700.", "Add a meeting with John on Thursday at 17:00.", "Update my meeting with John on Thursday to 1700."], "distractor": "Change my dental appointment from 3:30 to 3:00."}
{"gold_tgt": "( do ( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) ) ( FenceMultiAction ) )", "bin": 0.65, "data_idx": 12895, "pred_tgts": ["(FenceMultiAction)", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceMultiAction))", "(do (Yield (Execute (ConfirmDeleteAndReturnAction (Event.subject_? (?~= \" BBQ \"))))) (FenceMultiAction))"], "pred_translated": ["Delete all events for last Thursday. I was sick.", "Yes. I was too sick to go. Delete all my events last weekend.", "Yes. Cancel all BBQ events. I was too sick to go."], "distractor": "Schedule a meeting with Kim tomorrow at 2:15 pm."}
{"gold_tgt": "( FenceMultiAction )", "bin": 0.65, "data_idx": 11091, "pred_tgts": ["(FenceAttendee)", "(FenceMultiAction)", "(FenceSpecify)"], "pred_translated": ["I want to delete my meeting with my mom.", "I want to delete my meeting with Rick and make a meeting with Sherry for one hour.", "Make the meeting with Sherry 1 hour longer."], "distractor": "No, I need Robin instead."}
{"gold_tgt": "( FenceWeather )", "bin": 0.65, "data_idx": 9891, "pred_tgts": ["(FenceWeather)", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek))))) 0L))", "(Yield (IsSunny (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (ThisWeek)))))"], "pred_translated": ["When will it snow in Deadwood?", "Do I have any meetings this week?", "Will it be sunny this week?"], "distractor": "dundudundunnn"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( & ( Event.start_? ( DateTime.time_? ( ?= ( NumberPM 7L ) ) ) ) ( Event.end_? ( DateTime.time_? ( ?= ( NumberPM 8L ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 9502, "pred_tgts": ["(FenceDateTime)", "(FenceOther)", "(let (x0 (NextTime (NumberPM 7L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= x0)) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 8L)))))))))"], "pred_translated": ["Book 1 hour tomorrow morning for working out.", "Book the later one please", "7-8PM is the new time."], "distractor": "How do you create a calendar event?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateTime ( DateAtTimeWithDefaults ( Tomorrow ) ( NumberPM 2L ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( FindManager ( toRecipient ( CurrentUser ) ) ) ) ) ) ) ) ) ) ( Event.start_? ( DateTime.time_? ( ?= ( NumberPM 3L ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 8677, "pred_tgts": ["(FenceAttendee)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))) (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L)) (^(Event) EmptyStructConstraint))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L)) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "Change tomorrow's meeting with my manager from 2pm to 3pm", "Change my meeting with my manager tomorrow from 2pm to 3pm"], "distractor": "What about later in the week?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( Tomorrow ) ( HourMinutePm 5L 15L ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Kim \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 6776, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 4L 15L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 2L 15L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 8L 15L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \")))))))))))"], "pred_translated": ["Schedule a meeting with Kim tomorrow at 4:15 pm.", "Schedule a meeting with Kim tomorrow at 2:15 pm.", "Schedule a meeting with Kim tomorrow at 8:15 PM."], "distractor": "When is my meeting with Karen?"}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "bin": 0.65, "data_idx": 11666, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(FenceSpecify)"], "pred_translated": ["It's in the wide open!", "Yes it does.", "Can you change the conference time?"], "distractor": "Is Paige Ashworth in my address book?"}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.65, "data_idx": 10175, "pred_tgts": ["(PleasantryCalendar)", "(GenericPleasantry)", "(PleasantryAnythingElseCombined)"], "pred_translated": ["I need help with my calendar", "Hello", "no thanks"], "distractor": "I don't know yet."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( ?= ( adjustByPeriodDuration ( Now ) ( PeriodDuration.apply :duration ( addDurations ( toHours 2 ) ( toMinutes 1 ) ) ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Cher Roydon \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 5046, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toMinutes 1))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cher Roydon \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 1))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cher Roydon \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (adjustByPeriodDuration (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 2))) (PeriodDuration.apply :duration (toMinutes 1))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cher Roydon \")))))))))))"], "pred_translated": ["I need to meet with Cher Roydon in an hour", "I need to meet with Cher Roydon in an hour.", "Schedule a meeting with Cher Roydon in 2 hours and 1 minutes"], "distractor": "What is the weather like in Houston in Houston?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateTime ( DateAtTimeWithDefaults ( Tomorrow ) ( NumberPM 2L ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( FindManager ( toRecipient ( CurrentUser ) ) ) ) ) ) ) ) ) ) ( Event.start_? ( DateTime.time_? ( ?= ( NumberPM 3L ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 8677, "pred_tgts": ["(FenceAttendee)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))) (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L)) (^(Event) EmptyStructConstraint))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L)) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "Change tomorrow's meeting with my manager from 2pm to 3pm", "Change my meeting with my manager tomorrow from 2pm to 3pm"], "distractor": "1400 won't work anymore, let's go with 1500 for an hour."}
{"gold_tgt": "( Yield ( DeleteCommitEventWrapper ( DeletePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( Tomorrow ) ( & ( Event.subject_? ( ?~= \" Lunch \" ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" Disneyland \" ) ) ) ) ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 8565, "pred_tgts": ["(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.location_? (?= (LocationKeyphrase.apply \" Disneyland \"))) (EventOnDate (Tomorrow) (Event.subject_? (?~= \" Lunch \")))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (& (Event.subject_? (?~= \" Lunch \")) (Event.location_? (?= (LocationKeyphrase.apply \" Disneyland \"))))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Lunch \")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))))))"], "pred_translated": ["Delete my Lunch tomorrow at Disneyland", "Delete my Lunch at Disneyland tomorrow", "Delete Lunch tomorrow"], "distractor": "Find my power hours on Saturday"}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.65, "data_idx": 11502, "pred_tgts": ["(FenceDateTime)", "(FenceRecurring)", "(FenceOther)"], "pred_translated": ["And the next day after that?", "Set up a recurring event for that event", "When is my next free day?"], "distractor": "can you arrange with 11:15 AM"}
{"gold_tgt": "( Yield ( DeleteCommitEventWrapper ( DeletePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Monday ) ) ( Event.subject_? ( ?~= \" Private Interview \" ) ) ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 1389, "pred_tgts": ["(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfWeek (DateTime.date (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Monday)) (Event.subject_? (?~= \" Private Interview \"))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \" Private Interview \"))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfWeek (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Monday)) (Event.subject_? (?~= \" Private Interview \"))))))))))"], "pred_translated": ["Thanks. And also delete my Private Interview from the Monday after this.", "Cancel my Private Interview on Monday.", "Thanks. And also delete my Private Interview from the Monday after this."], "distractor": "No actually just make an event in the summer"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" The Shuffle \" ) ) ( Event.start_? ( DateTime.date_? ( ?= ( nextDayOfMonth ( Today ) 26L ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 3817, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Shuffle Shuffle \")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 26L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" The Shuffle \")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 26L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Shuffle \")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 26L))))))))"], "pred_translated": ["Add Shuffle Shuffle for the 26th.", "Add \"The Shuffle\" to my calendar on the 26th", "Add Shuffle for the 26th."], "distractor": "How do I search for an event?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( UpdateEventIntensionConstraint ) ( Event.start_? ( DateTime.time_? ( ?> ( Execute ( refer ( & ( ^ ( Time ) roleConstraint ( Path.apply \" start \" ) ) ( extensionConstraint ( ^ ( Time ) EmptyStructConstraint ) ) ) ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 12174, "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))", "(FenceDateTime)", "(FenceSpecify)"], "pred_translated": ["Is there anything later available?", "What about later in the week?", "Show me different times."], "distractor": "Make Performance review 45 minutes on Sunday."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( Tomorrow ) ( HourMinutePm 5L 15L ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Kim \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 6776, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 4L 15L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 2L 15L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 8L 15L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \")))))))))))"], "pred_translated": ["Schedule a meeting with Kim tomorrow at 4:15 pm.", "Schedule a meeting with Kim tomorrow at 2:15 pm.", "Schedule a meeting with Kim tomorrow at 8:15 PM."], "distractor": "meet lawyer in tomorrow"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Tom \" ) ) ) ) ) ) ) ) ( Event.start_? ( DateTimeConstraint ( TimeAround ( NumberPM 2L ) ) ( NextDOW ( Friday ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 11210, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Tom \")))))))) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Tom \")))))))) (Event.start_? (DateTimeConstraint (TimeAround (NumberPM 2L)) (NextDOW (Friday)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Tom \")))))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L)))))))"], "pred_translated": ["Move my meeting with Tom to Friday around 2 pm.", "Can you reschedule my meeting with Tom to Friday around 2 pm?", "Move my meeting with Tom to Friday at 2 pm."], "distractor": "Hello"}
{"gold_tgt": "( do ( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) ) ( Yield ( EventAttendance ( RespondComment.apply \" I have another Raid to go \" ) :event ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" WoW Raid \" ) ) ) ) ) :response ( ResponseStatusType.Declined ) ) ) )", "bin": 0.65, "data_idx": 7250, "pred_tgts": ["(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" I have another Raid to go. \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" WoW Raid \"))))) :response (ResponseStatusType.Declined))))", "(Yield (EventAttendance (RespondComment.apply \" I have another Raid to go \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" WoW Raid \"))))) :response (ResponseStatusType.Declined)))", "(Yield (EventAttendance (RespondComment.apply \" I have another Raid to go. \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" WoW Raid \"))))) :response (ResponseStatusType.Declined)))"], "pred_translated": ["Yes, that's good. Decline my WoW Raid and say that I have another Raid to go.", "Yes, please also decline the WoW Raid and say that I have another Raid to go.", "Yes, that's good. Decline my WoW Raid and say that I have another Raid to go."], "distractor": "Delete the tournament before hand"}
{"gold_tgt": "( Yield ( EventAttendance :event ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.subject_? ( ?~= \" lunch \" ) ) ( EventOnDate ( NextDOW ( Wednesday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) :response ( ResponseStatusType.Declined ) ) )", "bin": 0.65, "data_idx": 9587, "pred_tgts": ["(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (Event.subject_? (?~= \" lunch \")))))) :response (ResponseStatusType.Declined)))", "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" lunch \")) (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint)))))) :response (ResponseStatusType.Declined)))", "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Lunch \")) (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint)))))) :response (ResponseStatusType.Declined)))"], "pred_translated": ["Decline lunch on wednesday", "Decline my Wednesday lunch", "Decline Wednesday's Lunch"], "distractor": "Do I have two hours between 8am and 5pm on January 22?"}
{"gold_tgt": "( let ( x0 ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id x0 ) ( Event.start_? ( ?> ( Event.start x0 ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 10701, "pred_tgts": ["(FenceSpecify)", "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?> (DateTime.time (Event.start x0)))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (Event.start_? (Later)))))"], "pred_translated": ["I need to change the date of my doctor's appointment", "Can you move my meeting to later in the day?", "Can you move my meeting to later in the day?"], "distractor": "Create an event titled \"Date at 6PM with Defer\" from 6PM to 10PM tomorrow."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( Tomorrow ) ( HourMinutePm 5L 15L ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Kim \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 6776, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 4L 15L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 2L 15L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 8L 15L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \")))))))))))"], "pred_translated": ["Schedule a meeting with Kim tomorrow at 4:15 pm.", "Schedule a meeting with Kim tomorrow at 2:15 pm.", "Schedule a meeting with Kim tomorrow at 8:15 PM."], "distractor": "can you change the meeting time"}
{"gold_tgt": "( let ( x0 ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.subject_? ( ?~= \" Doctor appointment \" ) ) ( EventOnDate ( NextDOW ( Friday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ) ( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id x0 ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( ClosestDayOfWeek ( DateTime.date ( Event.start x0 ) ) ( Saturday ) ) ( NumberPM 3L ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 3576, "pred_tgts": ["(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \" Doctor appointment \"))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Saturday)) (NumberPM 3L))))))))", "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Doctor appointment \")) (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Saturday)) (NumberPM 3L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \" Doctor appointment \"))))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 3L)))))))"], "pred_translated": ["Can you move my Doctor appointment from Friday to Saturday at 3 pm?", "Can you change my Doctor appointment from Friday to Saturday at 3:00 PM?", "Can you move my Doctor appointment from Friday to Saturday at 3pm?"], "distractor": "Add parent'd day to my calendar for Friday at school"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" The Shuffle \" ) ) ( Event.start_? ( DateTime.date_? ( ?= ( nextDayOfMonth ( Today ) 26L ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 3817, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Shuffle Shuffle \")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 26L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" The Shuffle \")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 26L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Shuffle \")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 26L))))))))"], "pred_translated": ["Add Shuffle Shuffle for the 26th.", "Add \"The Shuffle\" to my calendar on the 26th", "Add Shuffle for the 26th."], "distractor": "Thank you"}
{"gold_tgt": "( FenceMultiAction )", "bin": 0.65, "data_idx": 11091, "pred_tgts": ["(FenceAttendee)", "(FenceMultiAction)", "(FenceSpecify)"], "pred_translated": ["I want to delete my meeting with my mom.", "I want to delete my meeting with Rick and make a meeting with Sherry for one hour.", "Make the meeting with Sherry 1 hour longer."], "distractor": "The first one works."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" ebay listing \" ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( NextDOW ( Monday ) ) ( NumberPM 8L ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 9226, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" ebay listing \")) (Event.end_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 8L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" ebay listing \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 8L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" ebay listing \")) (Event.end_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 8L))))))))"], "pred_translated": ["My easter listing ends at 8 pm on monday", "create an event for monday at 8pm for the easter ebay listing", "My easter listing ends at 8am on monday"], "distractor": "Do I have anything else scheduled on that day?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" ebay listing \" ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( NextDOW ( Monday ) ) ( NumberPM 8L ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 9226, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" ebay listing \")) (Event.end_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 8L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" ebay listing \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 8L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" ebay listing \")) (Event.end_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 8L))))))))"], "pred_translated": ["My easter listing ends at 8 pm on monday", "create an event for monday at 8pm for the easter ebay listing", "My easter listing ends at 8am on monday"], "distractor": "What do I have on my calendar for the rest of the week?"}
{"gold_tgt": "( Yield ( Event.location ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( previousDayOfWeek ( Today ) ( Thursday ) ) ( Event.subject_? ( ?~= \" lunch meeting \" ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 11472, "pred_tgts": ["(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" lunch meeting \")) (EventOnDate (previousDayOfWeek (Today) (Thursday)) (^(Event) EmptyStructConstraint))))))))", "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (previousDayOfWeek (Today) (Thursday)) (Event.subject_? (?~= \" lunch meeting \"))))))))", "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" lunch \")) (EventOnDate (previousDayOfWeek (Today) (Thursday)) (^(Event) EmptyStructConstraint))))))))"], "pred_translated": ["Where was my lunch meeting last Thursday?", "Where did I have my lunch meeting last Thursday?", "Where did I have lunch last Thursday?"], "distractor": "no thanks"}
{"gold_tgt": "( Yield ( PlaceDescribableLocation ( Execute ( refer ( extensionConstraint ( ^ ( Place ) EmptyStructConstraint ) ) ) ) ) )", "bin": 0.65, "data_idx": 8510, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(FencePlaces)"], "pred_translated": ["Do they have a children's menu?", "change the timing", "Do you know where the lab is located?"], "distractor": "I need help with my calendar"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( ?= ( adjustByPeriodDuration ( Now ) ( PeriodDuration.apply :duration ( addDurations ( toHours 2 ) ( toMinutes 1 ) ) ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Cher Roydon \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 5046, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toMinutes 1))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cher Roydon \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 1))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cher Roydon \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (adjustByPeriodDuration (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 2))) (PeriodDuration.apply :duration (toMinutes 1))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cher Roydon \")))))))))))"], "pred_translated": ["I need to meet with Cher Roydon in an hour", "I need to meet with Cher Roydon in an hour.", "Schedule a meeting with Cher Roydon in 2 hours and 1 minutes"], "distractor": "Yes. When is my board meeting after this?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateTime ( DateAtTimeWithDefaults ( Tomorrow ) ( NumberPM 2L ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( FindManager ( toRecipient ( CurrentUser ) ) ) ) ) ) ) ) ) ) ( Event.start_? ( DateTime.time_? ( ?= ( NumberPM 3L ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 8677, "pred_tgts": ["(FenceAttendee)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))) (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L)) (^(Event) EmptyStructConstraint))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 2L)) (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "Change tomorrow's meeting with my manager from 2pm to 3pm", "Change my meeting with my manager tomorrow from 2pm to 3pm"], "distractor": "How do I create a calendar?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" The Shuffle \" ) ) ( Event.start_? ( DateTime.date_? ( ?= ( nextDayOfMonth ( Today ) 26L ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 3817, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Shuffle Shuffle \")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 26L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" The Shuffle \")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 26L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Shuffle \")) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 26L))))))))"], "pred_translated": ["Add Shuffle Shuffle for the 26th.", "Add \"The Shuffle\" to my calendar on the 26th", "Add Shuffle for the 26th."], "distractor": "yeesh could possibly"}
{"gold_tgt": "( let ( x0 ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.id_? ( negate ( ?= ( Event.id x0 ) ) ) ) ( Event.location_? ( ?= ( Event.location x0 ) ) ) ) ) ) ) 0L ) ) )", "bin": 0.65, "data_idx": 4290, "pred_tgts": ["(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))) 0L))", "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))"], "pred_translated": ["Do I have anything else there?", "Do I have anything else there?", "What else do I have there?"], "distractor": "I need to change the date of my doctor's appointment"}
{"gold_tgt": "( Yield ( DeleteCommitEventWrapper ( DeletePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Saturday ) ) ( Event.subject_? ( ?~= \" dinner \" ) ) ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 2436, "pred_tgts": ["(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" dinner \")) (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \" dinner \"))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" dinner \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))))))))))"], "pred_translated": ["delete Saturday dinner", "Delete my dinner on Saturday.", "delete Saturday dinner"], "distractor": "I need to change my meeting with Amanda."}
{"gold_tgt": "( Yield ( DeleteCommitEventWrapper ( DeletePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Monday ) ) ( Event.subject_? ( ?~= \" Private Interview \" ) ) ) ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 1389, "pred_tgts": ["(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfWeek (DateTime.date (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Monday)) (Event.subject_? (?~= \" Private Interview \"))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \" Private Interview \"))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfWeek (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Monday)) (Event.subject_? (?~= \" Private Interview \"))))))))))"], "pred_translated": ["Thanks. And also delete my Private Interview from the Monday after this.", "Cancel my Private Interview on Monday.", "Thanks. And also delete my Private Interview from the Monday after this."], "distractor": "Where is the closest bathroom?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( EventOnDateWithTimeRange ( EventOnDate ( ClosestDayOfWeek ( Execute ( refer ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ( Sunday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ( Morning ) ) ) ) )", "bin": 0.65, "data_idx": 4956, "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDateWithTimeRange (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)) (Morning)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDateWithTimeRange (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Sunday)) (^(Event) EmptyStructConstraint)) (Morning)))))", "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)) (Morning))))"], "pred_translated": ["What about Sunday morning?", "What about Sunday morning?", "Show me all of Sunday morning's events."], "distractor": "How old are you?"}
{"gold_tgt": "( let ( x0 ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id x0 ) ( Event.start_? ( ?> ( Event.start x0 ) ) ) ) ) ) )", "bin": 0.65, "data_idx": 10701, "pred_tgts": ["(FenceSpecify)", "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?> (DateTime.time (Event.start x0)))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (Event.start_? (Later)))))"], "pred_translated": ["I need to change the date of my doctor's appointment", "Can you move my meeting to later in the day?", "Can you move my meeting to later in the day?"], "distractor": "Schedule a hair cut with Sharon on the 2nd at 1 pm."}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEvent 1L ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.7, "data_idx": 6784, "pred_tgts": ["(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))", "(FenceOther)", "(FenceSpecify)"], "pred_translated": ["The first one works best.", "Schedule the second option.", "fix the second one"], "distractor": "The one on the 3rd works better"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Samantha \" ) ) ) ) ) ) ) ) ) )", "bin": 0.7, "data_idx": 2755, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" tournament \")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Samantha \"))))))))))", "(FenceAttendee)", "(FenceSpecify)"], "pred_translated": ["Can you add Samantha to the tournament?", "Please schedule a meeting with the pope tomorrow.", "can you change the meeting time"], "distractor": "Add \"The Shuffle\" to my calendar on the 26th"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventDuringRange ( Event.attendees_? ( & ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Betty \" ) ) ) ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Al \" ) ) ) ) ) ( FullMonthofMonth ( March ) ( Year.apply 2020L ) ) ) ) )", "bin": 0.7, "data_idx": 8608, "pred_tgts": ["(FenceDateTime)", "(Yield (FindEventWrapperWithDefaults (& (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Betty \"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Al \"))))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (March) (Year.apply 2020L))))))", "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Betty \"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Al \"))))) (FullMonthofMonth (March) (Year.apply 2020L)))))"], "pred_translated": ["Can you tell me when my next block of free time is?", "Do I have anything in March 2020 with Betty and Al?", "Do I have anything scheduled with Betty and Al in March 2020?"], "distractor": "How do I create a new event?"}
{"gold_tgt": "( Yield ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateTime ( adjustByPeriodDuration ( Now ) ( PeriodDuration.apply :duration ( toHours 4 ) ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) )", "bin": 0.7, "data_idx": 4702, "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (EventOnDateTime (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 4))) (^(Event) EmptyStructConstraint))))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 4))) (^(Event) EmptyStructConstraint))))))", "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours \" 4 4 from \"))) (^(Event) EmptyStructConstraint))))"], "pred_translated": ["What meeting do I have in 4 hours?", "What meeting do I have in 4 hours?", "What meeting do I have in 4 4 from now?"], "distractor": "Yes it is."}
{"gold_tgt": "( let ( x0 ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id x0 ) ( Event.start_? ( ?= ( adjustByPeriodDuration ( Event.start x0 ) ( PeriodDuration.apply :duration ( toHours 1 ) ) ) ) ) ) ) ) )", "bin": 0.7, "data_idx": 12011, "pred_tgts": ["(FenceSpecify)", "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (adjustByPeriodDuration (Event.start x0) (PeriodDuration.apply :duration (toHours 1)))))))))", "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" meeting \")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (adjustByPeriodDuration (Event.start x0) (PeriodDuration.apply :duration (toHours 1)))))))))"], "pred_translated": ["update my calender", "Can you push my meeting back an hour?", "Can you push my meeting back an hour?"], "distractor": "Thank you very much"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" dinner \" ) ) ( Event.start_? ( DateTimeConstraint ( Late ) ( Today ) ) ) ) ) ) )", "bin": 0.7, "data_idx": 4460, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" dinner \")) (Event.start_? (DateTimeConstraint (Late) (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" dinner \")) (Event.start_? (DateTimeConstraint (Late) (Today)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" dinner \")) (Event.start_? (Later))))))"], "pred_translated": ["Make me a dinner later in the day", "Make me a dinner later in the day", "Make a dinner event later in the day"], "distractor": "Yes Help Me"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( ^ ( Event ) EmptyStructConstraint ) ) )", "bin": 0.7, "data_idx": 994, "pred_tgts": ["(FenceOther)", "(PleasantryCalendar)", "(FenceSpecify)"], "pred_translated": ["Remove Megan from meeting", "What can you do?", "Remove Megan from meeting"], "distractor": "Rename the event Lunch with Jim"}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEvent 2L ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.7, "data_idx": 615, "pred_tgts": ["(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))", "(FenceOther)", "(FenceSpecify)"], "pred_translated": ["The 2nd one works.", "What is the address of the salon I have a hair appointment at tomorrow?", "I want to change the time of my hair appointment at the salon."], "distractor": "Do I have anything after lunch?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Friday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ( Event.start_? ( DateTime.time_? ( ?= ( HourMinutePm 3L 30L ) ) ) ) ) ) )", "bin": 0.7, "data_idx": 1762, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \" Appointment \"))))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 30L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 30L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 30L)))))))"], "pred_translated": ["Update Appointment on Friday to 3:30 pm.", "change the appointment on friday to 3:30 pm", "Can you change the time to 3:30pm"], "distractor": "update my calendar"}
{"gold_tgt": "( FenceAttendee )", "bin": 0.7, "data_idx": 3953, "pred_tgts": ["(FenceScope)", "(FenceSwitchTabs)", "(GenericPleasantry)"], "pred_translated": ["WHEN I WILL MEET MY FATHER?", "SHOW MY CONTACTS", "WHAT CAN I HELP IS CORRECT"], "distractor": "What will the weather be like for my beach outing on Saturday?"}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEvent 1L ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.7, "data_idx": 6784, "pred_tgts": ["(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))", "(FenceOther)", "(FenceSpecify)"], "pred_translated": ["The first one works best.", "Schedule the second option.", "fix the second one"], "distractor": "Anything later than that?"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventOnDateTime ( DateAtTimeWithDefaults ( NextDOW ( Friday ) ) ( EndOfWorkDay ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) )", "bin": 0.7, "data_idx": 12528, "pred_tgts": ["(Yield (RecipientAvailability (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (EndOfWorkDay)))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true))", "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (EndOfWorkDay)) (^(Event) EmptyStructConstraint))))))", "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (EndOfWorkDay)) (^(Event) EmptyStructConstraint))))"], "pred_translated": ["Do I have free time at the end of the day on Friday?", "Do I have anything scheduled at the end of the day on Friday?", "What do I have at the end of the day on Friday?"], "distractor": "Extend the work meeting duration to two hours."}
{"gold_tgt": "( Yield ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventDuringRange ( Event.subject_? ( ?~= \" dinner \" ) ) ( FullMonthofLastMonth ) ) ) ) ) )", "bin": 0.7, "data_idx": 10272, "pred_tgts": ["(FenceAggregation)", "(FenceScope)", "(FenceOther)"], "pred_translated": ["How many meetings did I have last week?", "How many movies did I see last week?", "How many dinner parties did I attend last week?"], "distractor": "How old are you?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventDuringRange ( Event.subject_? ( ?~= \" flight \" ) ) ( NextWeekList ) ) ) ) ) ) ( Event.start_? ( DateTime.time_? ( ?> ( Execute ( refer ( & ( ^ ( Time ) roleConstraint ( Path.apply \" start \" ) ) ( extensionConstraint ( ^ ( Time ) EmptyStructConstraint ) ) ) ) ) ) ) ) ) ) )", "bin": 0.7, "data_idx": 6796, "pred_tgts": ["(FenceSpecify)", "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" flight \")) (NextWeekList)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?> (DateTime.time (Event.start x0)))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" flight \")) (NextWeekList)))))) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"], "pred_translated": ["update my calender events", "Can you change my flight next week to later in the day?", "Can you make my flight next week a little later in the day?"], "distractor": "ok"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( UpdateEventIntensionConstraint ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Willy \" ) ) ) ) ) ) ) ) ) )", "bin": 0.7, "data_idx": 10050, "pred_tgts": ["(FenceSpecify)", "(FenceOther)", "(FenceMultiAction)"], "pred_translated": ["No, I need it to be longer.", "Why not?", "cancel the today events on calender"], "distractor": "The duration should be for two hours."}
{"gold_tgt": "( FenceMultiAction )", "bin": 0.7, "data_idx": 9032, "pred_tgts": ["(FenceMultiAction)", "(FenceAttendee)", "(FenceSpecify)"], "pred_translated": ["I need to cancel all my meetings for tomorrow.", "Please schedule a meeting with the pope tomorrow.", "I need to change the date of my doctor's appointment"], "distractor": "Where is my doctor's office located?"}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.7, "data_idx": 2629, "pred_tgts": ["(GenericPleasantry)", "(PleasantryAnythingElseCombined)", "(PleasantryCalendar)"], "pred_translated": ["Hello", "no thanks", "I need help with my calendar"], "distractor": "Where is the doctor's office located?"}
{"gold_tgt": "( FenceScope )", "bin": 0.7, "data_idx": 7391, "pred_tgts": ["(FencePeopleQa)", "(FenceScope)", "(FenceAttendee)"], "pred_translated": ["What is Sonia's address book?", "what is my address book?", "Add Sonia to my address book"], "distractor": "Yes, that's good. Decline my WoW Raid and say that I have another Raid to go."}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEventFromConstraint ( ^ ( Event ) EmptyStructConstraint ) ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.7, "data_idx": 9313, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(FenceOther)", "(FenceSpecify)"], "pred_translated": ["yes", "How do I create a new event?", "How do I create a new event?"], "distractor": "no thanks"}
{"gold_tgt": "( FenceDateTime )", "bin": 0.7, "data_idx": 7063, "pred_tgts": ["(FenceDateTime)", "(FencePeopleQa)", "(FenceOther)"], "pred_translated": ["Can you tell me when my next block of free time is?", "Why didn't Mom come to my birthday party?", "Can you tell me the weather for tomorrow in Greenville, NC?"], "distractor": "Schedule a meeting with Trainer for the last day of the month."}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEvent 2L ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.7, "data_idx": 615, "pred_tgts": ["(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))", "(FenceOther)", "(FenceSpecify)"], "pred_translated": ["The 2nd one works.", "What is the address of the salon I have a hair appointment at tomorrow?", "I want to change the time of my hair appointment at the salon."], "distractor": "Do they have a children's menu?"}
{"gold_tgt": "( FenceScope )", "bin": 0.7, "data_idx": 7391, "pred_tgts": ["(FencePeopleQa)", "(FenceScope)", "(FenceAttendee)"], "pred_translated": ["What is Sonia's address book?", "what is my address book?", "Add Sonia to my address book"], "distractor": "Schedule teh Lowes Lunch on Friday at 1:30 pm."}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEvent 2L ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.7, "data_idx": 615, "pred_tgts": ["(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))", "(FenceOther)", "(FenceSpecify)"], "pred_translated": ["The 2nd one works.", "What is the address of the salon I have a hair appointment at tomorrow?", "I want to change the time of my hair appointment at the salon."], "distractor": "Is Janie coming to that?"}
{"gold_tgt": "( FenceSpecify )", "bin": 0.7, "data_idx": 1689, "pred_tgts": ["(FencePlaces)", "(FenceOther)", "(FenceScope)"], "pred_translated": ["What is the address of the amphitheater?", "How do I add a event to my calendar?", "What is the current exchange rate for euros?"], "distractor": "Can you tell me the weather for tomorrow in Greenville, NC?"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventOnDateWithTimeRange ( EventOnDate ( NextDOW ( Friday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ( TimeToTime ( NumberPM 2L ) ( NumberPM 4L ) ) ) ) )", "bin": 0.7, "data_idx": 12761, "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (NextDOW (Friday)) (^(Event) EmptyStructConstraint) (NumberPM 2L) (NumberPM 4L))))", "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)) (TimeToTime (NumberPM 2L) (NumberPM 4L)))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (NextDOW (Friday)) (^(Event) EmptyStructConstraint) (NumberPM 2L) (NumberPM 4L))))) 0L))"], "pred_translated": ["Can you find any meetings scheduled between 2 and 4 pm next Friday?", "Can you find any meetings scheduled between 2 and 4 pm next Friday?", "Do I have anything between 2 and 4 pm next Friday?"], "distractor": "Modify roller skating practice to make it 1 hour long on Tuesday at 7:00 pm."}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "bin": 0.7, "data_idx": 3789, "pred_tgts": ["(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(Yield (Execute (ConfirmCreateAndReturnAction (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))", "(Yield (Execute (ConfirmCreateAndReturnAction (EventAtTime (^(Event) EmptyStructConstraint) (NumberPM 2L)))))"], "pred_translated": ["Yes", "Yes 2:00 pm is perfect", "Yes, lab is at 2."], "distractor": "When did I have hair my hair dyed?"}
{"gold_tgt": "( FenceAttendee )", "bin": 0.7, "data_idx": 5147, "pred_tgts": ["(FenceOther)", "(FenceAttendee)", "(FenceSpecify)"], "pred_translated": ["defer the next meeting Simmons", "Please schedule a meeting with the pope tomorrow.", "defer the next meeting Simmons"], "distractor": "Book the later one please"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventOnDateTime ( DateAtTimeWithDefaults ( NextDOW ( Friday ) ) ( EndOfWorkDay ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) )", "bin": 0.7, "data_idx": 12528, "pred_tgts": ["(Yield (RecipientAvailability (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (EndOfWorkDay)))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true))", "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (EndOfWorkDay)) (^(Event) EmptyStructConstraint))))))", "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (EndOfWorkDay)) (^(Event) EmptyStructConstraint))))"], "pred_translated": ["Do I have free time at the end of the day on Friday?", "Do I have anything scheduled at the end of the day on Friday?", "What do I have at the end of the day on Friday?"], "distractor": "What do I have the day after Dinner?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( UpdateEventIntensionConstraint ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Willy \" ) ) ) ) ) ) ) ) ) )", "bin": 0.7, "data_idx": 10050, "pred_tgts": ["(FenceSpecify)", "(FenceOther)", "(FenceMultiAction)"], "pred_translated": ["No, I need it to be longer.", "Why not?", "cancel the today events on calender"], "distractor": "Add Shuffle for the 26th."}
{"gold_tgt": "( DoNotConfirm )", "bin": 0.7, "data_idx": 6473, "pred_tgts": ["(DoNotConfirm)", "(FenceSpecify)", "(PleasantryAnythingElseCombined)"], "pred_translated": ["I changed my mind. Please keep the event.", "No, I want to keep it.", "I like to eat poptarts."], "distractor": "Can you tell me the weather for tomorrow in Greenville, NC?"}
{"gold_tgt": "( FenceAttendee )", "bin": 0.7, "data_idx": 5147, "pred_tgts": ["(FenceOther)", "(FenceAttendee)", "(FenceSpecify)"], "pred_translated": ["defer the next meeting Simmons", "Please schedule a meeting with the pope tomorrow.", "defer the next meeting Simmons"], "distractor": "Add parent'd day to my calendar for Friday at school"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventOnDateTime ( DateAtTimeWithDefaults ( NextDOW ( Friday ) ) ( EndOfWorkDay ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) )", "bin": 0.7, "data_idx": 12528, "pred_tgts": ["(Yield (RecipientAvailability (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (EndOfWorkDay)))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true))", "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (EndOfWorkDay)) (^(Event) EmptyStructConstraint))))))", "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (EndOfWorkDay)) (^(Event) EmptyStructConstraint))))"], "pred_translated": ["Do I have free time at the end of the day on Friday?", "Do I have anything scheduled at the end of the day on Friday?", "What do I have at the end of the day on Friday?"], "distractor": "Can you tell me the weather for tomorrow in Greenville, NC?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Friday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ( Event.start_? ( DateTime.time_? ( ?= ( HourMinutePm 3L 30L ) ) ) ) ) ) )", "bin": 0.7, "data_idx": 1762, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \" Appointment \"))))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 30L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 30L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 30L)))))))"], "pred_translated": ["Update Appointment on Friday to 3:30 pm.", "change the appointment on friday to 3:30 pm", "Can you change the time to 3:30pm"], "distractor": "No, I need Robin instead."}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Friday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ( Event.start_? ( DateTime.time_? ( ?= ( HourMinutePm 3L 30L ) ) ) ) ) ) )", "bin": 0.7, "data_idx": 1762, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \" Appointment \"))))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 30L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 30L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 30L)))))))"], "pred_translated": ["Update Appointment on Friday to 3:30 pm.", "change the appointment on friday to 3:30 pm", "Can you change the time to 3:30pm"], "distractor": "Change tomorrow's meeting with my manager from 2pm to 3pm"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" parent'd day \" ) ) ( Event.start_? ( DateTime.date_? ( ?= ( NextDOW ( Friday ) ) ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" the school \" ) ) ) ) ) ) )", "bin": 0.7, "data_idx": 8648, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" parent'd day \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))) (Event.location_? (?= (LocationKeyphrase.apply \" school \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" parent'd day \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))) (Event.location_? (?= (LocationKeyphrase.apply \" the school \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" parent'd day at the school \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))) (Event.location_? (?= (LocationKeyphrase.apply \" school \")))))))"], "pred_translated": ["Add parent'd day to my calendar for Friday at school", "create a parent'd day at the school on friday", "Create a parent'd day at the school for Friday."], "distractor": "fix the second one"}
{"gold_tgt": "( FenceScope )", "bin": 0.7, "data_idx": 7391, "pred_tgts": ["(FencePeopleQa)", "(FenceScope)", "(FenceAttendee)"], "pred_translated": ["What is Sonia's address book?", "what is my address book?", "Add Sonia to my address book"], "distractor": "Modify roller skating practice to make it 1 hour long on Tuesday at 7:00 pm."}
{"gold_tgt": "( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.location_? ( negate ( ?= ( LocationKeyphrase.apply \" Truckee \" ) ) ) ) ) ) ) 0L ) )", "bin": 0.7, "data_idx": 2122, "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (Event.location_? (negate (?= (LocationKeyphrase.apply \" Truckee \"))))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.location_? (negate (?= (LocationKeyphrase.apply \" Truckee \"))))))) 0L))", "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.location_? (negate (?= (LocationKeyphrase.apply \" Truckee \"))))))))"], "pred_translated": ["What do I have that is not in Truckee?", "Do I have any appointments that are not in Truckee?", "Are there any appointments that are not in Truckee?"], "distractor": "The 2nd one works."}
{"gold_tgt": "( FenceOther )", "bin": 0.7, "data_idx": 12655, "pred_tgts": ["(FenceSpecify)", "(FenceOther)", "(PleasantryAnythingElseCombined)"], "pred_translated": ["Please extend the end time of my current event.", "Have the meeting go until 2:30 PM and mark me as Out of Office.", "its ok no problem"], "distractor": "No actually just make an event in the summer"}
{"gold_tgt": "( Yield ( == ( ResponseStatus.response ( AttendeeResponseStatus ( AttendeeFromEvent ( FindLastEvent ( EventDuringRange ( ^ ( Event ) EmptyStructConstraint ) ( FullYearofYear ( LastYear ) ) ) ) ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Mary \" ) ) ) ) ) ) ) ) ( ResponseStatusType.Accepted ) ) )", "bin": 0.7, "data_idx": 6827, "pred_tgts": ["(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (FindLastEvent (EventDuringRange (Event.subject_? (?~= \" final meeting \")) (FullYearofYear (LastYear)))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mary \")))))))) (ResponseStatusType.Accepted)))", "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (FindLastEvent (EventDuringRange (Event.subject_? (?~= \" final \")) (FullYearofYear (LastYear)))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mary \")))))))) (ResponseStatusType.Accepted)))", "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (FindLastEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullYearofYear (LastYear)))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mary \")))))))) (ResponseStatusType.Accepted)))"], "pred_translated": ["Was Mary at last year's final meeting?", "Was Mary at the last meeting of last year?", "Was Mary at the last meeting I had last year?"], "distractor": "Do I have anything after lunch?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Friday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ( Event.start_? ( DateTime.time_? ( ?= ( HourMinutePm 3L 30L ) ) ) ) ) ) )", "bin": 0.7, "data_idx": 1762, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \" Appointment \"))))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 30L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 30L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 30L)))))))"], "pred_translated": ["Update Appointment on Friday to 3:30 pm.", "change the appointment on friday to 3:30 pm", "Can you change the time to 3:30pm"], "distractor": "Yes, please schedule the meeting with Alex for April 30th at 1 pm to 1:30 pm."}
{"gold_tgt": "( let ( x0 ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( Today ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id x0 ) ( Event.start_? ( ?= ( adjustByPeriodDuration ( Event.start x0 ) ( PeriodDuration.apply ( toWeeks 1 ) ) ) ) ) ) ) ) )", "bin": 0.7, "data_idx": 7328, "pred_tgts": ["(FenceSpecify)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.date_? (NextWeekList))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (DateTime.date_? (?= (Today)))))))) (Event.start_? (DateTime.date_? (NextWeekList))))))"], "pred_translated": ["I need to change the date of my doctor's appointment", "I need to move today's meeting to next week.", "Move today's meeting to next week."], "distractor": "What do I have going on tomorrow between 8 am and 8 pm?"}
{"gold_tgt": "( FenceDateTime )", "bin": 0.7, "data_idx": 12428, "pred_tgts": ["(FenceDateTime)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (orConstraint (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 10L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Carmen \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (orConstraint (DateTime.date_? (?= (NextDOW (Saturday)))) (DateTime.time_? (?= (NumberAM 10L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Carmen \")))))))))))"], "pred_translated": ["Do I have any meetings with Clinton this week?", "I need to meet with Carmen on Saturday at 10 am.", "I need to meet with Carmen on Saturday at 10 am."], "distractor": "Hello! Can you tell me the best Travel agent in OH?"}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEventFromConstraint ( ^ ( Event ) EmptyStructConstraint ) ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.7, "data_idx": 9313, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(FenceOther)", "(FenceSpecify)"], "pred_translated": ["yes", "How do I create a new event?", "How do I create a new event?"], "distractor": "When is Halloween this year?"}
{"gold_tgt": "( let ( x0 ( DateAtTimeWithDefaults ( Tomorrow ) ( NumberPM 6L ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" conference \" ) ) ( Event.start_? ( ?= x0 ) ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x0 ( NumberPM 8L ) ) ) ) ) ) ) ) )", "bin": 0.7, "data_idx": 9938, "pred_tgts": ["(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" conference \")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 10L)))))))))", "(let (x0 (DateAtTimeWithDefaults (Tomorrow) (NumberAM 6L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" conference \")) (Event.start_? (?= x0))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 10L)))))))))", "(let (x0 (DateAtTimeWithDefaults (NumberPM \\ \\ L))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" DateAtTimeWithDefaults \")) (Event.start_? (?= x0 (DateAtTimeWithDefaults (Tomorrow) (NumberPM 6L))))) (Event.end_? (?= (TimeAfterDateTime x0 (NumberPM 10L)))))))))"], "pred_translated": ["Schedule conference from 6 pm to 10 pm tomorrow.", "I have a conference tomorrow from 6 am to 10 pm", "Create an event titled \"Date at 6PM with Defer\" from 6PM to 10PM tomorrow."], "distractor": "WHEN I WILL MEET MY FATHER?"}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEvent 2L ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.7, "data_idx": 615, "pred_tgts": ["(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))", "(FenceOther)", "(FenceSpecify)"], "pred_translated": ["The 2nd one works.", "What is the address of the salon I have a hair appointment at tomorrow?", "I want to change the time of my hair appointment at the salon."], "distractor": "update my calender events"}
{"gold_tgt": "( FenceAttendee )", "bin": 0.7, "data_idx": 3953, "pred_tgts": ["(FenceScope)", "(FenceSwitchTabs)", "(GenericPleasantry)"], "pred_translated": ["WHEN I WILL MEET MY FATHER?", "SHOW MY CONTACTS", "WHAT CAN I HELP IS CORRECT"], "distractor": "My easter listing ends at 8am on monday"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventOnDateWithTimeRange ( EventOnDate ( NextDOW ( Friday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ( TimeToTime ( NumberPM 2L ) ( NumberPM 4L ) ) ) ) )", "bin": 0.7, "data_idx": 12761, "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (NextDOW (Friday)) (^(Event) EmptyStructConstraint) (NumberPM 2L) (NumberPM 4L))))", "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)) (TimeToTime (NumberPM 2L) (NumberPM 4L)))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (NextDOW (Friday)) (^(Event) EmptyStructConstraint) (NumberPM 2L) (NumberPM 4L))))) 0L))"], "pred_translated": ["Can you find any meetings scheduled between 2 and 4 pm next Friday?", "Can you find any meetings scheduled between 2 and 4 pm next Friday?", "Do I have anything between 2 and 4 pm next Friday?"], "distractor": "What can you help me with?"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventOnDateWithTimeRange ( EventOnDate ( NextDOW ( Friday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ( TimeToTime ( NumberPM 2L ) ( NumberPM 4L ) ) ) ) )", "bin": 0.7, "data_idx": 12761, "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (NextDOW (Friday)) (^(Event) EmptyStructConstraint) (NumberPM 2L) (NumberPM 4L))))", "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)) (TimeToTime (NumberPM 2L) (NumberPM 4L)))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (NextDOW (Friday)) (^(Event) EmptyStructConstraint) (NumberPM 2L) (NumberPM 4L))))) 0L))"], "pred_translated": ["Can you find any meetings scheduled between 2 and 4 pm next Friday?", "Can you find any meetings scheduled between 2 and 4 pm next Friday?", "Do I have anything between 2 and 4 pm next Friday?"], "distractor": "Change the time to 0845"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( UpdateEventIntensionConstraint ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Willy \" ) ) ) ) ) ) ) ) ) )", "bin": 0.7, "data_idx": 10050, "pred_tgts": ["(FenceSpecify)", "(FenceOther)", "(FenceMultiAction)"], "pred_translated": ["No, I need it to be longer.", "Why not?", "cancel the today events on calender"], "distractor": "can you change the meeting time"}
{"gold_tgt": "( FenceOther )", "bin": 0.7, "data_idx": 3076, "pred_tgts": ["(FenceSpecify)", "(FenceOther)", "(PleasantryCalendar)"], "pred_translated": ["I want to change the date of my doctor appointment.", "Yes April 25 works", "I need help with my calendar"], "distractor": "Is Janie coming to that?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( & ( Event.subject_? ( ?= \" plan anniversary dinner for the company \" ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( NextDOW ( Monday ) ) ( NumberAM 10L ) ) ) ) ) ( Event.duration_? ( ?= ( toHours 1 ) ) ) ) ( Event.attendees_? ( & ( & ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Lisa \" ) ) ) ) ) ) ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Phoebe \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Jennifer \" ) ) ) ) ) ) ) ) ) ) ) )", "bin": 0.7, "data_idx": 4233, "pred_tgts": ["(FenceAttendee)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" plan anniversary dinner for \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 10L))))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Lisa \")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Phoebe \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jennifer \"))))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" plan anniversary dinner \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 10L))))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Lisa \")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Phoebe \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jennifer \"))))))))))))"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "Add plan anniversary dinner for Monday at 10 pm for 1 hour with Lisa, Phoebe, and Jennifer.", "Add plan anniversary dinner with Lisa, Phoebe, and Jennifer on Monday at 10 pm for 1 hour."], "distractor": "How do I remove an event?"}
{"gold_tgt": "( Yield ( == ( ResponseStatus.response ( AttendeeResponseStatus ( AttendeeFromEvent ( FindLastEvent ( EventDuringRange ( ^ ( Event ) EmptyStructConstraint ) ( FullYearofYear ( LastYear ) ) ) ) ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Mary \" ) ) ) ) ) ) ) ) ( ResponseStatusType.Accepted ) ) )", "bin": 0.7, "data_idx": 6827, "pred_tgts": ["(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (FindLastEvent (EventDuringRange (Event.subject_? (?~= \" final meeting \")) (FullYearofYear (LastYear)))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mary \")))))))) (ResponseStatusType.Accepted)))", "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (FindLastEvent (EventDuringRange (Event.subject_? (?~= \" final \")) (FullYearofYear (LastYear)))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mary \")))))))) (ResponseStatusType.Accepted)))", "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (FindLastEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullYearofYear (LastYear)))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mary \")))))))) (ResponseStatusType.Accepted)))"], "pred_translated": ["Was Mary at last year's final meeting?", "Was Mary at the last meeting of last year?", "Was Mary at the last meeting I had last year?"], "distractor": "The later one."}
{"gold_tgt": "( PleasantryCalendar )", "bin": 0.7, "data_idx": 1318, "pred_tgts": ["(GenericPleasantry)", "(PleasantryCalendar)", "(PleasantryAnythingElseCombined)"], "pred_translated": ["What can you do?", "How do I search for an event?", "ok"], "distractor": "When am I free in April?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.attendees_? ( & ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Chelsea \" ) ) ) ) ) ) ( AttendeeListExcludesRecipient ( ?= ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Wify \" ) ) ) ) ) ) ) ) ) ) ) )", "bin": 0.7, "data_idx": 6464, "pred_tgts": ["(FenceAttendee)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" dinner \")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Megan \"))))))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Chelsea \")))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Wify \"))))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" dinner with Megan \")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Megan \"))))))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Chelsea \")))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Wify \"))))))))))))"], "pred_translated": ["Add Wify to my address book please", "Add Chelsea to dinner with Megan and take off Wify.", "Add Chelsea to dinner with Megan and take off Wify."], "distractor": "Hello"}
{"gold_tgt": "( FenceDateTime )", "bin": 0.7, "data_idx": 12428, "pred_tgts": ["(FenceDateTime)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (orConstraint (?= (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberAM 10L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Carmen \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (orConstraint (DateTime.date_? (?= (NextDOW (Saturday)))) (DateTime.time_? (?= (NumberAM 10L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Carmen \")))))))))))"], "pred_translated": ["Do I have any meetings with Clinton this week?", "I need to meet with Carmen on Saturday at 10 am.", "I need to meet with Carmen on Saturday at 10 am."], "distractor": "Sorry I meant to say Victor."}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.location_? ( ^ ( LocationKeyphrase ) AlwaysFalseConstraint ) ) ) ) )", "bin": 0.7, "data_idx": 342, "pred_tgts": ["(DoNotConfirm)", "(FenceSpecify)", "(PleasantryAnythingElseCombined)"], "pred_translated": ["no", "can you change the location", "plants are the best"], "distractor": "What will the low be in Sacramento on Tuesday?"}
{"gold_tgt": "( Yield ( Event.organizer ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateWithTimeRange ( EventOnDate ( NextDOW ( Monday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ( Morning ) ) ) ) ) ) )", "bin": 0.7, "data_idx": 1161, "pred_tgts": ["(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)) (Morning)))))))", "(Yield (Event.organizer (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)) (Morning)))))))", "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (DateTimeConstraint (Morning) (NextDOW (Monday)))))))))"], "pred_translated": ["Where is my Monday morning meeting?", "Who organized the meeting on Monday morning?", "Where is my Monday morning meeting?"], "distractor": "Make an event to go to Sam on Thursday at 5 pm at Sam's house."}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "bin": 0.7, "data_idx": 3789, "pred_tgts": ["(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(Yield (Execute (ConfirmCreateAndReturnAction (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))", "(Yield (Execute (ConfirmCreateAndReturnAction (EventAtTime (^(Event) EmptyStructConstraint) (NumberPM 2L)))))"], "pred_translated": ["Yes", "Yes 2:00 pm is perfect", "Yes, lab is at 2."], "distractor": "Add Shuffle for the 26th."}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.7, "data_idx": 8669, "pred_tgts": ["(GenericPleasantry)", "(PleasantryAnythingElseCombined)", "(PleasantryCalendar)"], "pred_translated": ["Hello", "no thanks", "I need help with my calendar"], "distractor": "No, dinner should be at 8 pm on Thursday."}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "bin": 0.7, "data_idx": 8461, "pred_tgts": ["(Yield (Execute (ConfirmCreateAndReturnAction (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday))))))))", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(PleasantryAnythingElseCombined)"], "pred_translated": ["Yes, the party on Friday looks good.", "Yes it does.", "Russian birds don't know me."], "distractor": "Is Janie coming to that?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventDuringRange ( Event.subject_? ( ?~= \" flight \" ) ) ( NextWeekList ) ) ) ) ) ) ( Event.start_? ( DateTime.time_? ( ?> ( Execute ( refer ( & ( ^ ( Time ) roleConstraint ( Path.apply \" start \" ) ) ( extensionConstraint ( ^ ( Time ) EmptyStructConstraint ) ) ) ) ) ) ) ) ) ) )", "bin": 0.7, "data_idx": 6796, "pred_tgts": ["(FenceSpecify)", "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" flight \")) (NextWeekList)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?> (DateTime.time (Event.start x0)))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" flight \")) (NextWeekList)))))) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"], "pred_translated": ["update my calender events", "Can you change my flight next week to later in the day?", "Can you make my flight next week a little later in the day?"], "distractor": "Find my meeting with Brian."}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventDuringRange ( Event.attendees_? ( & ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Betty \" ) ) ) ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Al \" ) ) ) ) ) ( FullMonthofMonth ( March ) ( Year.apply 2020L ) ) ) ) )", "bin": 0.7, "data_idx": 8608, "pred_tgts": ["(FenceDateTime)", "(Yield (FindEventWrapperWithDefaults (& (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Betty \"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Al \"))))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (March) (Year.apply 2020L))))))", "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Betty \"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Al \"))))) (FullMonthofMonth (March) (Year.apply 2020L)))))"], "pred_translated": ["Can you tell me when my next block of free time is?", "Do I have anything in March 2020 with Betty and Al?", "Do I have anything scheduled with Betty and Al in March 2020?"], "distractor": "Do I have anything not in Bellevue?"}
{"gold_tgt": "( Yield ( IsFree ( RecipientAvailability ( & ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( NextDOW ( Friday ) ) ( NumberAM 8L ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( toRecipient ( CurrentUser ) ) ) ) ) true ) ) )", "bin": 0.7, "data_idx": 13239, "pred_tgts": ["(Yield (RecipientAvailability (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 8L)))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true))", "(Yield (IsFree (RecipientAvailability (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 8L)))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))", "(Yield (RecipientAvailability (& (Event.start_? (DateTimeFromDowConstraint (?= (Friday)) (NumberAM 8L))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true))"], "pred_translated": ["Am I free on Friday at 8 am?", "Am I free on Friday at 8 am?", "Am I free on Friday at 8 am?"], "distractor": "What is the address of the salon I have a hair appointment at tomorrow?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.start_? ( DateTime.time_? ( ?= ( HourMinuteMilitary 8L 5L ) ) ) ) ) ) )", "bin": 0.7, "data_idx": 13256, "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinuteMilitary 8L 45L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinuteMilitary 8L 15L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinuteMilitary 8L 50L)))))))"], "pred_translated": ["Change the time to 0845", "Change the time to 0815", "Change the time to 0850"], "distractor": "When was my hair dyed dyed event?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventDuringRange ( Event.subject_? ( ?~= \" flight \" ) ) ( NextWeekList ) ) ) ) ) ) ( Event.start_? ( DateTime.time_? ( ?> ( Execute ( refer ( & ( ^ ( Time ) roleConstraint ( Path.apply \" start \" ) ) ( extensionConstraint ( ^ ( Time ) EmptyStructConstraint ) ) ) ) ) ) ) ) ) ) )", "bin": 0.7, "data_idx": 6796, "pred_tgts": ["(FenceSpecify)", "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" flight \")) (NextWeekList)))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (DateTime.time_? (?> (DateTime.time (Event.start x0)))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" flight \")) (NextWeekList)))))) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))"], "pred_translated": ["update my calender events", "Can you change my flight next week to later in the day?", "Can you make my flight next week a little later in the day?"], "distractor": "I need to edit the business trip"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( & ( Event.subject_? ( negate ( ?~= \" coffee break \" ) ) ) ( EventOnDate ( NextDOW ( Friday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) )", "bin": 0.7, "data_idx": 5769, "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (negate (?~= \" coffee break \"))))))", "(Yield (FindEventWrapperWithDefaults (& (Event.subject_? (negate (?~= \" coffee break \"))) (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))", "(Yield (FindEventWrapperWithDefaults (Event.subject_? (negate (?~= \" coffee break \")))))"], "pred_translated": ["What do I have on Friday that's not a coffee break?", "What do I have on Friday that's not a coffee break?", "What do I have that's not a coffee break?"], "distractor": "Am I free on Friday at 8 am?"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( & ( Event.subject_? ( negate ( ?~= \" coffee break \" ) ) ) ( EventOnDate ( NextDOW ( Friday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) )", "bin": 0.7, "data_idx": 5769, "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (negate (?~= \" coffee break \"))))))", "(Yield (FindEventWrapperWithDefaults (& (Event.subject_? (negate (?~= \" coffee break \"))) (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))", "(Yield (FindEventWrapperWithDefaults (Event.subject_? (negate (?~= \" coffee break \")))))"], "pred_translated": ["What do I have on Friday that's not a coffee break?", "What do I have on Friday that's not a coffee break?", "What do I have that's not a coffee break?"], "distractor": "Thank you"}
{"gold_tgt": "( FenceReminder )", "bin": 0.7, "data_idx": 11565, "pred_tgts": ["(FenceReminder)", "(FenceTeams)", "(FenceAttendee)"], "pred_translated": ["Remind me of the first flight to london", "Who reports to me?", "Please schedule a meeting with the pope tomorrow."], "distractor": "Make me an all day orientation for this weekend"}
{"gold_tgt": "( FenceMultiAction )", "bin": 0.7, "data_idx": 9032, "pred_tgts": ["(FenceMultiAction)", "(FenceAttendee)", "(FenceSpecify)"], "pred_translated": ["I need to cancel all my meetings for tomorrow.", "Please schedule a meeting with the pope tomorrow.", "I need to change the date of my doctor's appointment"], "distractor": "ok"}
{"gold_tgt": "( Yield ( == ( Event.location ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( LocationKeyphrase.apply \" the Bellagio \" ) ) )", "bin": 0.7, "data_idx": 6184, "pred_tgts": ["(Yield (== (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (LocationKeyphrase.apply \" Bellagio Bellagio \")))", "(Yield (== (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (LocationKeyphrase.apply \" the Bellagio \")))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.location_? (?= (LocationKeyphrase.apply \" the Bellagio \")))))) 0L))"], "pred_translated": ["Is it at the Bellagio Bellagion?", "Is it at the Bellagio?", "Do I have a meeting at the Bellagio?"], "distractor": "Change my 9am coffee to 10am"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" hair appointment \" ) ) ( Event.start_? ( DateTime.date_? ( ?= ( Tomorrow ) ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" salon \" ) ) ) ) ) ) )", "bin": 0.7, "data_idx": 614, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" I have a hair appointment \")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.location_? (?= (LocationKeyphrase.apply \" salon \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" hair appointment \")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.location_? (?= (LocationKeyphrase.apply \" salon \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" I have a hair appointment at the salon \")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))) (Event.location_? (?= (LocationKeyphrase.apply \" salon \")))))))"], "pred_translated": ["I have a hair appointment tomorrow at the salon", "I need a hair appointment tomorrow at the salon", "I have a hair appointment at the salon tomorrow"], "distractor": "Schedule a meeting with Dan Marton and his skip next week."}
{"gold_tgt": "( FenceOther )", "bin": 0.7, "data_idx": 3076, "pred_tgts": ["(FenceSpecify)", "(FenceOther)", "(PleasantryCalendar)"], "pred_translated": ["I want to change the date of my doctor appointment.", "Yes April 25 works", "I need help with my calendar"], "distractor": "make that 9-10:30"}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "bin": 0.7, "data_idx": 8461, "pred_tgts": ["(Yield (Execute (ConfirmCreateAndReturnAction (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Friday))))))))", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(PleasantryAnythingElseCombined)"], "pred_translated": ["Yes, the party on Friday looks good.", "Yes it does.", "Russian birds don't know me."], "distractor": "what is my address book?"}
{"gold_tgt": "( Yield ( == ( ResponseStatus.response ( AttendeeResponseStatus ( AttendeeFromEvent ( FindLastEvent ( EventDuringRange ( ^ ( Event ) EmptyStructConstraint ) ( FullYearofYear ( LastYear ) ) ) ) ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Mary \" ) ) ) ) ) ) ) ) ( ResponseStatusType.Accepted ) ) )", "bin": 0.7, "data_idx": 6827, "pred_tgts": ["(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (FindLastEvent (EventDuringRange (Event.subject_? (?~= \" final meeting \")) (FullYearofYear (LastYear)))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mary \")))))))) (ResponseStatusType.Accepted)))", "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (FindLastEvent (EventDuringRange (Event.subject_? (?~= \" final \")) (FullYearofYear (LastYear)))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mary \")))))))) (ResponseStatusType.Accepted)))", "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (FindLastEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullYearofYear (LastYear)))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mary \")))))))) (ResponseStatusType.Accepted)))"], "pred_translated": ["Was Mary at last year's final meeting?", "Was Mary at the last meeting of last year?", "Was Mary at the last meeting I had last year?"], "distractor": "Remind me of the first flight to london"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.attendees_? ( & ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Chelsea \" ) ) ) ) ) ) ( AttendeeListExcludesRecipient ( ?= ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Wify \" ) ) ) ) ) ) ) ) ) ) ) )", "bin": 0.7, "data_idx": 6464, "pred_tgts": ["(FenceAttendee)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" dinner \")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Megan \"))))))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Chelsea \")))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Wify \"))))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" dinner with Megan \")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Megan \"))))))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Chelsea \")))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Wify \"))))))))))))"], "pred_translated": ["Add Wify to my address book please", "Add Chelsea to dinner with Megan and take off Wify.", "Add Chelsea to dinner with Megan and take off Wify."], "distractor": "Schedule a jog that ends at brunch."}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEventFromConstraint ( Event.start_? ( DateTime.date_? ( ?= ( nextDayOfMonth ( Today ) 3L ) ) ) ) ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.74, "data_idx": 4069, "pred_tgts": ["(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.day_? (?= (Day.apply 3L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 3L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEvent 3L (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["The one on the 3rd works better", "The one on the 3rd", "I like the 3rd one"], "distractor": "Do you know where the lab is located?"}
{"gold_tgt": "( PleasantryCalendar )", "bin": 0.74, "data_idx": 13144, "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))", "(FenceOther)", "(PleasantryCalendar)"], "pred_translated": ["What events do I have scheduled?", "Can you tell me the weather for tomorrow in Greenville, NC?", "I need help with my calendar"], "distractor": "Can you push my meeting back an hour?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( DateTimeConstraint ( Afternoon ) ( NextDOW ( Wednesday ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" the bronx \" ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 12854, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Wednesday)))) (Event.location_? (?= (LocationKeyphrase.apply \" bronx \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Wednesday)))) (Event.location_? (?= (LocationKeyphrase.apply \" the bronx \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" meeting in the bronx \")) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Wednesday))))) (Event.location_? (?= (LocationKeyphrase.apply \" bronx \")))))))"], "pred_translated": ["create a meeting in bronx for wednesday afternoon", "I'm going to the bronx on Wednesday afternoon.", "create meeting in the bronx on wednesday afternoon"], "distractor": "Create a weekend retreat for all weekend"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.start_? ( DateTime.date_? ( LateDateRange ( SeasonWinter ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 6651, "pred_tgts": ["(FenceDateTime)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (LateDateRange (SeasonWinter))))))", "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (LateDateRange (SeasonWinter)))))"], "pred_translated": ["How about drinking hot chocolate in the winter?", "Hmm, let's make that late winter.", "What do I have planned for late winter?"], "distractor": "I need to meet with my boss tomorrow around 2 pm"}
{"gold_tgt": "( Yield ( WeatherAggregate ( WeatherQuantifier.Average ) ( temperature ) ( WeatherQueryApi ( AtPlace ( Here ) ) ( DateTime.date_? ( ThisWeekend ) ) ) ) )", "bin": 0.74, "data_idx": 9966, "pred_tgts": ["(FenceWeather)", "(FenceScope)", "(FenceTriviaQa)"], "pred_translated": ["What causes hail?", "How old are you?", "How many months have 30 days?"], "distractor": "Create a meeting in the afternoon with Karl Boon"}
{"gold_tgt": "( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.attendees_? ( negate ( ^ ( ( List Attendee ) ) AlwaysFalseConstraint ) ) ) ( EventDuringRange ( ^ ( Event ) EmptyStructConstraint ) ( FullMonthofMonth ( May ) ) ) ) ) ) ) 0L ) )", "bin": 0.74, "data_idx": 2669, "pred_tgts": ["(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (^(Recipient) EmptyStructConstraint))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (May))))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (negate (^((List Attendee)) AlwaysFalseConstraint))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (May))))))) 0L))", "(Yield (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (^(Recipient) EmptyStructConstraint))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (May))))))"], "pred_translated": ["Do I have anything in May with people coming?", "Do I have any events in May with people attending?", "Okay, great! Can you also tell me if I have any meetings with other people attending during next May?"], "distractor": "What is your name?"}
{"gold_tgt": "( Yield ( WeatherAggregate ( WeatherQuantifier.Min ) ( temperature ) ( Execute ( refer ( extensionConstraint ( ^ ( WeatherTable ) AlwaysTrueConstraint ) ) ) ) ) )", "bin": 0.74, "data_idx": 2904, "pred_tgts": ["(FenceWeather)", "(FenceAggregation)", "(FenceOther)"], "pred_translated": ["When will it rain next in Des Moines, WA?", "How much time will I be in meetings this week?", "When will it rain next in Des Moines, WA?"], "distractor": "I need to change the date of my doctor's appointment"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( EventAllDayStartingDateForPeriod ( ^ ( Event ) EmptyStructConstraint ) ( ClosestDay ( Execute ( refer ( & ( ^ ( Date ) roleConstraint ( Path.apply \" start \" ) ) ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ) ( Day.apply 15L ) ) ( toDays 3 ) ) ) ) )", "bin": 0.74, "data_idx": 9582, "pred_tgts": ["(FenceDateTime)", "(FenceMultiAction)", "(FenceSpecify)"], "pred_translated": ["Create an event for the fantasy football tournament lasting all of next week.", "I need you to delete all my meetings for the entire week.", "please update my events in my calender"], "distractor": "Please schedule a meeting with the pope tomorrow."}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.start_? ( DateTime.time_? ( ?= ( NumberPM 8L ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 10958, "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 8L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^(Time) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Time) EmptyStructConstraint))) (intension (NumberAM 8L)))))"], "pred_translated": ["Can you set it up for 8?", "Change the time to 8pm", "Change the time to 8am"], "distractor": "Make the meeting with Sherry 1 hour longer."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( EventAllDayForDateRange ( Event.subject_? ( ?= \" weekend retreat \" ) ) ( NextWeekend ) ) ) ) )", "bin": 0.74, "data_idx": 1262, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" weekend retreat \")) (Event.start_? (DateTime.date_? (NextWeekend)))))))", "(FenceDateTime)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \" weekend retreat \")) (NextWeekend)))))"], "pred_translated": ["Create a weekend retreat next weekend.", "Can you tell me when my next block of free time is?", "Create a weekend retreat for all weekend"], "distractor": "Change my 9am coffee to 10am"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.start_? ( DateTime.date_? ( LateDateRange ( SeasonWinter ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 6651, "pred_tgts": ["(FenceDateTime)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (LateDateRange (SeasonWinter))))))", "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (LateDateRange (SeasonWinter)))))"], "pred_translated": ["How about drinking hot chocolate in the winter?", "Hmm, let's make that late winter.", "What do I have planned for late winter?"], "distractor": "fix the second one"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Saturday ) ) ( Event.subject_? ( ?~= \" beach outing \" ) ) ) ) )", "bin": 0.74, "data_idx": 880, "pred_tgts": ["(Yield (WeatherQueryApi (AtPlace (FindPlace (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \" beach outing \"))))))))) (DateTime.date_? (?= (NextDOW (Saturday))))))", "(Yield (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (NextDOW (Saturday))))))", "(Yield (WeatherQueryApi (AtPlace (FindPlace (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" beach outing \")))))))) (DateTime.date_? (?= (NextDOW (Saturday))))))"], "pred_translated": ["What will the weather be like for my beach outing on Saturday?", "What will the weather be like on Saturday?", "What will the weather be like for my beach outing on Saturday?"], "distractor": "Make it end at 11"}
{"gold_tgt": "( FenceReminder )", "bin": 0.74, "data_idx": 4375, "pred_tgts": ["(FenceReminder)", "(FenceOther)", "(FenceMultiAction)"], "pred_translated": ["Remind me of the first flight to london", "Can you tell me the weather for tomorrow in Greenville, NC?", "I need to cancel all my meetings for tomorrow."], "distractor": "Change my dental appointment from 3:30 to 3:00."}
{"gold_tgt": "( Yield ( WeatherAggregate ( WeatherQuantifier.Min ) ( temperature ) ( Execute ( refer ( extensionConstraint ( ^ ( WeatherTable ) AlwaysTrueConstraint ) ) ) ) ) )", "bin": 0.74, "data_idx": 2904, "pred_tgts": ["(FenceWeather)", "(FenceAggregation)", "(FenceOther)"], "pred_translated": ["When will it rain next in Des Moines, WA?", "How much time will I be in meetings this week?", "When will it rain next in Des Moines, WA?"], "distractor": "The second one, but make it an hour."}
{"gold_tgt": "( FenceMultiAction )", "bin": 0.74, "data_idx": 10992, "pred_tgts": ["(FenceOther)", "(FenceMultiAction)", "(FencePeopleQa)"], "pred_translated": ["Can you tell me the weather for tomorrow in Greenville, NC?", "I need to cancel all my meetings for tomorrow.", "Why didn't Mom come to my birthday party?"], "distractor": "Make an event for summer"}
{"gold_tgt": "( Yield ( DeleteCommitEventWrapper ( DeletePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Friday ) ) ( Event.subject_? ( ?~= \" dinner \" ) ) ) ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 4522, "pred_tgts": ["(DoNotConfirm)", "(FenceSpecify)", "(PleasantryAnythingElseCombined)"], "pred_translated": ["No", "Can you change the time of my dinner tomorrow?", "spaghetti and meatballs"], "distractor": "Who has not tentatively accepted the invitation?"}
{"gold_tgt": "( Yield ( DeleteCommitEventWrapper ( DeletePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventDuringRange ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" George \" ) ) ) ) ( WeekOfDateNew ( PeriodBeforeDate ( Today ) ( toWeeks 2 ) ) ) ) ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 12416, "pred_tgts": ["(FenceDateTime)", "(FenceMultiAction)", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (PeriodBeforeDate (Today) (toWeeks 2)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" George \"))))))))))))"], "pred_translated": ["Can you tell me when my next block of free time is?", "I need to cancel all my meetings for tomorrow.", "Delete the meeting with George two weeks ago"], "distractor": "Create a weekend retreat next weekend."}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( EventOnDate ( MD 6L ( December ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) )", "bin": 0.74, "data_idx": 3297, "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (MD 6L (November)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (MD 6L (December)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (MD 6L (Dec) (December)) (^(Event) EmptyStructConstraint)))))"], "pred_translated": ["What about the 6th?", "And what about December 6th?", "And what about December 6th?"], "distractor": "Show me as busy during that time."}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" dental appointment \" ) ) ) ) ) ) ( Event.start_? ( DateTime.time_? ( ?= ( NumberPM 3L ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 7902, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (Event.subject_? (?~= \" dental appointment \")) (HourMinutePm 3L 30L)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (Event.subject_? (?~= \" dental appointment \")) (NumberPM 3L)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" dental appointment \")) (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 30L))))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 3L)))))))"], "pred_translated": ["Change my dental appointment from 3:30 to 3:00.", "Change my dental appointment from 3:00 to 3:30.", "Change my dental appointment from 3:30 to 3:00."], "distractor": "Schedule a meeting with Karl Boon on Thursday at 2:30 PM."}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.start_? ( DateTime.time_? ( ?= ( NumberPM 8L ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 10958, "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 8L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^(Time) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Time) EmptyStructConstraint))) (intension (NumberAM 8L)))))"], "pred_translated": ["Can you set it up for 8?", "Change the time to 8pm", "Change the time to 8am"], "distractor": "I don't know yet."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( DateTime.date_? ( ?= ( MD 15L ( November ) ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Abby \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 8466, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(FenceOther)", "(FenceSpecify)"], "pred_translated": ["thank you", "defer the next meeting with Angelo Louis", "can you change the meeting time"], "distractor": "Yes"}
{"gold_tgt": "( let ( x0 ( PersonName.apply \" Tammy \" ) ) ( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.attendees_? ( & ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) x0 ) ) ( AttendeeListHasRecipient ( FindManager ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) x0 ) ) ) ) ) ) ) ) ) ) ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( NextDOW ( Monday ) ) ( NumberAM 8L ) ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 12622, "pred_tgts": ["(let (x0 (PersonName.apply \" Tammy \") x1 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)))))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x1) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x1)) (Monday)) (NumberAM 8L))))))))", "(let (x0 (PersonName.apply \" Tammy \" \" Tammy \") x1 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0 (PersonName.apply))))))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x1) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x1)) (Monday)) (NumberAM 8L))))))))", "(let (x0 (PersonName.apply \"8\") x1 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)))))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x1) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x1)) (Monday)) (NumberAM 8L))))))))"], "pred_translated": ["Change the meeting with Tammy and her boss to 8:00 am on Monday.", "Move the meeting with Tammy and her boss to Monday at 8 am.", "Change the meeting with 8 and his boss to Monday at 8 am."], "distractor": "I need to change the date of my doctor's appointment"}
{"gold_tgt": "( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.location_? ( negate ( ?= ( LocationKeyphrase.apply \" Philadelphia \" ) ) ) ) ) ) ) 0L ) )", "bin": 0.74, "data_idx": 8695, "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (Event.location_? (negate (?= (LocationKeyphrase.apply \" Philadelphia \"))))))", "(FenceOther)", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.location_? (negate (?= (LocationKeyphrase.apply \" Philadelphia \"))))))))"], "pred_translated": ["Show me events that are not in Philadelphia.", "Where am I going next month?", "What do I have that isn't in Philadelphia?"], "distractor": "Can you change the conference time?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( EventAllDayForDateRange ( Event.subject_? ( ?= \" weekend retreat \" ) ) ( NextWeekend ) ) ) ) )", "bin": 0.74, "data_idx": 1262, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" weekend retreat \")) (Event.start_? (DateTime.date_? (NextWeekend)))))))", "(FenceDateTime)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \" weekend retreat \")) (NextWeekend)))))"], "pred_translated": ["Create a weekend retreat next weekend.", "Can you tell me when my next block of free time is?", "Create a weekend retreat for all weekend"], "distractor": "ok"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( EventAllDayStartingDateForPeriod ( ^ ( Event ) EmptyStructConstraint ) ( ClosestDay ( Execute ( refer ( & ( ^ ( Date ) roleConstraint ( Path.apply \" start \" ) ) ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ) ( Day.apply 15L ) ) ( toDays 3 ) ) ) ) )", "bin": 0.74, "data_idx": 9582, "pred_tgts": ["(FenceDateTime)", "(FenceMultiAction)", "(FenceSpecify)"], "pred_translated": ["Create an event for the fantasy football tournament lasting all of next week.", "I need you to delete all my meetings for the entire week.", "please update my events in my calender"], "distractor": "Please schedule a meeting with the pope tomorrow."}
{"gold_tgt": "( Yield ( IsCloudy ( Execute ( refer ( extensionConstraint ( ^ ( WeatherTable ) AlwaysTrueConstraint ) ) ) ) ) )", "bin": 0.74, "data_idx": 11099, "pred_tgts": ["(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (cloudCover) (WeatherQueryApi (AtPlace (FindPlace (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))) (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Max) (cloudCover) (WeatherQueryApi (AtPlace (FindPlace (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))) (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Sum) (rainPrecipIntensity) (WeatherQueryApi (AtPlace (FindPlace (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))) (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))))"], "pred_translated": ["Will it be overcast that day?", "Will it be overcast that day?", "How much will it rain that day?"], "distractor": "Yes 2:00 pm is perfect"}
{"gold_tgt": "( Yield ( WeatherAggregate ( WeatherQuantifier.Min ) ( temperature ) ( Execute ( refer ( extensionConstraint ( ^ ( WeatherTable ) AlwaysTrueConstraint ) ) ) ) ) )", "bin": 0.74, "data_idx": 2904, "pred_tgts": ["(FenceWeather)", "(FenceAggregation)", "(FenceOther)"], "pred_translated": ["When will it rain next in Des Moines, WA?", "How much time will I be in meetings this week?", "When will it rain next in Des Moines, WA?"], "distractor": "When am I free in 2 months?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( UpdateEventIntensionConstraint ) ( Event.attendees_? ( & ( AttendeeListExcludesRecipient ( ?= ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Jojo \" ) ) ) ) ) ) ) ( AttendeeListExcludesRecipient ( ?= ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Chase \" ) ) ) ) ) ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 907, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" hustlin \")))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jojo \"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Chase \"))))))))))))"], "pred_translated": ["Remove Megan from the meeting", "No, I need Robin instead.", "Can you remove Jojo and Chase from the hustlin event?"], "distractor": "can you change the location"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( DateTime.date_? ( SeasonSummer ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" bahamas \" ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 7884, "pred_tgts": ["(FenceDateTime)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" going to the bahamas \")) (Event.start_? (DateTime.date_? (SeasonSummer)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (SeasonSummer))) (Event.location_? (?= (LocationKeyphrase.apply \" bahamas \")))))))"], "pred_translated": ["Anything later than that?", "i'm going to the bahamas this summer", "i want to spend the summer in bahamas"], "distractor": "Who reports to me?"}
{"gold_tgt": "( FenceMultiAction )", "bin": 0.74, "data_idx": 10992, "pred_tgts": ["(FenceOther)", "(FenceMultiAction)", "(FencePeopleQa)"], "pred_translated": ["Can you tell me the weather for tomorrow in Greenville, NC?", "I need to cancel all my meetings for tomorrow.", "Why didn't Mom come to my birthday party?"], "distractor": "Yes. Mark me out of office for the rest of the week."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( ?= ( Event.end ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" the printers \" ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 12903, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))) (Event.location_? (?= (LocationKeyphrase.apply \" printers \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))) (Event.location_? (?= (LocationKeyphrase.apply \" the printers \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" meeting at the printers \")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \" printers \")))))))"], "pred_translated": ["Thanks, now set up a meeting at the printer after", "I need to go to the printers after that", "Can you schedule a meeting at the printers after that?"], "distractor": "I need help with my calendar"}
{"gold_tgt": "( PleasantryCalendar )", "bin": 0.74, "data_idx": 13144, "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))", "(FenceOther)", "(PleasantryCalendar)"], "pred_translated": ["What events do I have scheduled?", "Can you tell me the weather for tomorrow in Greenville, NC?", "I need help with my calendar"], "distractor": "Can you change the date of my doctor appointment?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( AroundDateTime ( DateAtTimeWithDefaults ( NextDOW ( Friday ) ) ( NumberPM 4L ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" jennifer \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 4177, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" jennifer \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 4L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" jennifer \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (TimeAround (NumberPM 4L)) (NextDOW (Friday)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" jennifer \")))))))))))"], "pred_translated": ["Add a meeting with jennifer at 4 on friday", "I need to meet with jennifer this friday around 4 pm", "I need a meeting with jennifer friday around 4 pm"], "distractor": "Yes April 25 works"}
{"gold_tgt": "( FenceReminder )", "bin": 0.74, "data_idx": 10971, "pred_tgts": ["(FenceReminder)", "(FenceTeams)", "(FenceOther)"], "pred_translated": ["Remind me of the first flight to london", "Who reports to me?", "Can you tell me the weather for tomorrow in Greenville, NC?"], "distractor": "Who am I having lunch with?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( & ( Event.start_? ( DateTime.time_? ( ?= ( HourMilitary 15L ) ) ) ) ( Event.duration_? ( ?= ( toHours 1 ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 9478, "pred_tgts": ["(FenceDateTime)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (HourMinuteMilitary 15L 0L)))) (Event.duration_? (?= (toHours 1)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (HourMilitary 15L)))) (Event.duration_? (?= (toHours 1)))))))"], "pred_translated": ["Can you make the meeting a little earlier?", "1400 won't work anymore, let's go with 1500 for an hour.", "No, I need it to start at 15h for an hour."], "distractor": "Set up a 5k run on Saturday from 8am to 12pm."}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( EventAllDayStartingDateForPeriod ( ^ ( Event ) EmptyStructConstraint ) ( ClosestDay ( Execute ( refer ( & ( ^ ( Date ) roleConstraint ( Path.apply \" start \" ) ) ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ) ( Day.apply 15L ) ) ( toDays 3 ) ) ) ) )", "bin": 0.74, "data_idx": 9582, "pred_tgts": ["(FenceDateTime)", "(FenceMultiAction)", "(FenceSpecify)"], "pred_translated": ["Create an event for the fantasy football tournament lasting all of next week.", "I need you to delete all my meetings for the entire week.", "please update my events in my calender"], "distractor": "How do I create a new event?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( EventAllDayOnDate ( Event.showAs_? ( ?= ( ShowAsStatus.OutOfOffice ) ) ) ( Today ) ) ) ) )", "bin": 0.74, "data_idx": 7585, "pred_tgts": ["(FenceDateTime)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventForRestOfToday (Event.showAs_? (?= (ShowAsStatus.OutOfOffice)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.showAs_? (?= (ShowAsStatus.OutOfOffice))) (Today)))))"], "pred_translated": ["Can you tell me when my next block of free time is?", "Mark me as out of office for the rest of today.", "Mark me as out of office all day"], "distractor": "What do I have that isn't in Philadelphia?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateTime ( NextTime ( NumberPM 3L ) ) ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Marissa \" ) ) ) ) ) ) ) ) ) ( Event.start_? ( DateTime.time_? ( ?= ( NumberPM 5L ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 12042, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Marissa \")))) (EventOnDateTime (NextTime (NumberPM 3L)) (^(Event) EmptyStructConstraint))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Marissa \")))) (EventAtTime (^(Event) EmptyStructConstraint) (NumberPM 3L))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Marissa \")))) (NumberPM 3L)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))))))"], "pred_translated": ["Move my 3 pm meeting with Marissa to 5 pm.", "Change my meeting with Marissa from 3 pm to 5 pm.", "Change my meeting with Marissa from 3 pm to 5 pm."], "distractor": "I have a secret project to work on in supply tomorrow at 2 pm."}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateTime ( NextTime ( NumberPM 3L ) ) ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Marissa \" ) ) ) ) ) ) ) ) ) ( Event.start_? ( DateTime.time_? ( ?= ( NumberPM 5L ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 12042, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Marissa \")))) (EventOnDateTime (NextTime (NumberPM 3L)) (^(Event) EmptyStructConstraint))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Marissa \")))) (EventAtTime (^(Event) EmptyStructConstraint) (NumberPM 3L))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Marissa \")))) (NumberPM 3L)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 5L)))))))"], "pred_translated": ["Move my 3 pm meeting with Marissa to 5 pm.", "Change my meeting with Marissa from 3 pm to 5 pm.", "Change my meeting with Marissa from 3 pm to 5 pm."], "distractor": "Can you tell me when my next block of free time is?"}
{"gold_tgt": "( let ( x0 ( PersonName.apply \" Tammy \" ) ) ( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.attendees_? ( & ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) x0 ) ) ( AttendeeListHasRecipient ( FindManager ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) x0 ) ) ) ) ) ) ) ) ) ) ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( NextDOW ( Monday ) ) ( NumberAM 8L ) ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 12622, "pred_tgts": ["(let (x0 (PersonName.apply \" Tammy \") x1 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)))))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x1) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x1)) (Monday)) (NumberAM 8L))))))))", "(let (x0 (PersonName.apply \" Tammy \" \" Tammy \") x1 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0 (PersonName.apply))))))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x1) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x1)) (Monday)) (NumberAM 8L))))))))", "(let (x0 (PersonName.apply \"8\") x1 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) x0)))))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x1) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x1)) (Monday)) (NumberAM 8L))))))))"], "pred_translated": ["Change the meeting with Tammy and her boss to 8:00 am on Monday.", "Move the meeting with Tammy and her boss to Monday at 8 am.", "Change the meeting with 8 and his boss to Monday at 8 am."], "distractor": "no thanks"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( EventOnDate ( MD 6L ( December ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) )", "bin": 0.74, "data_idx": 3297, "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (MD 6L (November)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (MD 6L (December)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (MD 6L (Dec) (December)) (^(Event) EmptyStructConstraint)))))"], "pred_translated": ["What about the 6th?", "And what about December 6th?", "And what about December 6th?"], "distractor": "Give me the 10 day forecast for Live Oak, Florida"}
{"gold_tgt": "( FenceReminder )", "bin": 0.74, "data_idx": 10971, "pred_tgts": ["(FenceReminder)", "(FenceTeams)", "(FenceOther)"], "pred_translated": ["Remind me of the first flight to london", "Who reports to me?", "Can you tell me the weather for tomorrow in Greenville, NC?"], "distractor": "Will it rain today?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( FindNumNextEvent ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Daniel \" ) ) ) ) 1L ) ) ( Event.start_? ( DateTime.time_? ( ?= ( NumberAM 11L ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 7153, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberAM 11L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Daniel \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberAM 11L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Daniel \")))) 1L)) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"], "pred_translated": ["put the meeting with Daniel at 11.00 am", "can you arrange with 11:00 AM", "Move my next meeting with Daniel to 11 am."], "distractor": "I need to meet up with Kim next weekend"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventOnDate ( Tomorrow ) ( Event.subject_? ( negate ( ?~= \" jog \" ) ) ) ) ) )", "bin": 0.74, "data_idx": 6697, "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (& (Event.subject_? (negate (?~= \" jog \"))) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))", "(Yield (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (negate (?~= \" jog \"))))))", "(Yield (FindEventWrapperWithDefaults (& (Event.subject_? (negate (?~= \" a jog \"))) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))"], "pred_translated": ["What do I have tomorrow that's not called jog?", "What do I have tomorrow that's not called jog?", "What do I have tomorrow that's not a jog?"], "distractor": "How many months have 30 days?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( UpdateEventIntensionConstraint ) ( Event.attendees_? ( & ( AttendeeListExcludesRecipient ( ?= ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Jojo \" ) ) ) ) ) ) ) ( AttendeeListExcludesRecipient ( ?= ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Chase \" ) ) ) ) ) ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 907, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" hustlin \")))))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jojo \"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Chase \"))))))))))))"], "pred_translated": ["Remove Megan from the meeting", "No, I need Robin instead.", "Can you remove Jojo and Chase from the hustlin event?"], "distractor": "What is the chance of rain today in Lafayette GA"}
{"gold_tgt": "( Yield ( WillRain ( WeatherQueryApi ( AtPlace ( FindPlace ( LocationKeyphrase.apply \" Lafayette GA \" ) ) ) ( DateTime.date_? ( ?= ( Today ) ) ) ) ) )", "bin": 0.74, "data_idx": 4787, "pred_tgts": ["(Yield (WeatherAggregate (WeatherQuantifier.Sum) (rainPrecipIntensity) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Lafayette GA \"))) (DateTime.date_? (?= (Today))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (rainPrecipProbability) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Lafayette GA \"))) (DateTime.date_? (?= (Today))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Sum) (rainPrecipProbability) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Lafayette GA \"))) (DateTime.date_? (?= (Today))))))"], "pred_translated": ["How much rain is Lafayette GA going to get", "What is the chance of rain today in Lafayette GA", "What is the chance of rain today in Lafayette GA"], "distractor": "defer the next meeting Simmons"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( Event.showAs_? ( ?= ( ShowAsStatus.Busy ) ) ) ) ) )", "bin": 0.74, "data_idx": 13247, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.showAs_? (?= (ShowAsStatus.Busy))))))"], "pred_translated": ["What is the chat id", "update my calender events", "Mark my calendar as busy"], "distractor": "Yes. Mark me out of office for the rest of the day."}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( & ( Event.start_? ( DateTime.time_? ( ?= ( HourMilitary 15L ) ) ) ) ( Event.duration_? ( ?= ( toHours 1 ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 9478, "pred_tgts": ["(FenceDateTime)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (HourMinuteMilitary 15L 0L)))) (Event.duration_? (?= (toHours 1)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (HourMilitary 15L)))) (Event.duration_? (?= (toHours 1)))))))"], "pred_translated": ["Can you make the meeting a little earlier?", "1400 won't work anymore, let's go with 1500 for an hour.", "No, I need it to start at 15h for an hour."], "distractor": "please change my tomorrow end event"}
{"gold_tgt": "( Yield ( PlaceHasFeature ( PlaceFeature.HappyHour ) ( singleton ( PlaceSearchResponse.results ( FindPlaceMultiResults ( LocationKeyphrase.apply \" Wild River Grille in Reno \" ) ) ) ) ) )", "bin": 0.74, "data_idx": 1422, "pred_tgts": ["(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" Wild River Grille in Reno \"))))))", "(Yield (PlaceHasFeature (PlaceFeature.GoodforGroups) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" Wild River Grille in Reno \"))))))", "(Yield (PlaceHasFeature (PlaceFeature.WaiterService) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" Wild River Grille in Reno \"))))))"], "pred_translated": ["Does Wild River Grille in Reno have takeout?", "Does Wild River Grille in Reno have group seating?", "Does Wild River Grille in Reno have waiter service?"], "distractor": "Find my power hours on Saturday"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" Performance review \" ) ) ) ) ) ) ( & ( Event.start_? ( DateTime.date_? ( ?= ( NextDOW ( Sunday ) ) ) ) ) ( Event.duration_? ( ?= ( toMinutes 45 ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 8525, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Performance review \")))))) (Event.duration_? (?= (toMinutes 45))))))", "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Performance review \")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Sunday))))) (Event.duration_? (?= (toMinutes 45))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Performance review \")))))) (& (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday))))) (Event.duration_? (?= (toMinutes 45)))))))"], "pred_translated": ["Make Performance review 45 minutes long.", "Make Performance review 45 minutes on Sunday.", "Update Performance review to 45 minutes on Sunday."], "distractor": "What time is my appointment?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( DateTime.date_? ( SeasonSummer ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" bahamas \" ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 7884, "pred_tgts": ["(FenceDateTime)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" going to the bahamas \")) (Event.start_? (DateTime.date_? (SeasonSummer)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (SeasonSummer))) (Event.location_? (?= (LocationKeyphrase.apply \" bahamas \")))))))"], "pred_translated": ["Anything later than that?", "i'm going to the bahamas this summer", "i want to spend the summer in bahamas"], "distractor": "Okay, great! Can you also tell me if I have any meetings with other people attending during next May?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( Event.start_? ( DateTime.date_? ( Date.dayOfWeek_? ( negate ( Weekend ) ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 5439, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(PleasantryCalendar)"], "pred_translated": ["Can you tell me the weather for tomorrow in Greenville, NC?", "I need to change the date of my doctor's appointment", "I need help with my calendar"], "distractor": "Can you tell me when my next block of free time is?"}
{"gold_tgt": "( Yield ( WillRain ( WeatherQueryApi ( AtPlace ( FindPlace ( LocationKeyphrase.apply \" Lafayette GA \" ) ) ) ( DateTime.date_? ( ?= ( Today ) ) ) ) ) )", "bin": 0.74, "data_idx": 4787, "pred_tgts": ["(Yield (WeatherAggregate (WeatherQuantifier.Sum) (rainPrecipIntensity) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Lafayette GA \"))) (DateTime.date_? (?= (Today))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (rainPrecipProbability) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Lafayette GA \"))) (DateTime.date_? (?= (Today))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Sum) (rainPrecipProbability) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Lafayette GA \"))) (DateTime.date_? (?= (Today))))))"], "pred_translated": ["How much rain is Lafayette GA going to get", "What is the chance of rain today in Lafayette GA", "What is the chance of rain today in Lafayette GA"], "distractor": "Where did I have my lunch meeting last Thursday?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( Event.showAs_? ( ?= ( ShowAsStatus.Busy ) ) ) ) ) )", "bin": 0.74, "data_idx": 13247, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.showAs_? (?= (ShowAsStatus.Busy))))))"], "pred_translated": ["What is the chat id", "update my calender events", "Mark my calendar as busy"], "distractor": "What about the ski trip in December?"}
{"gold_tgt": "( Yield ( < ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Monday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) 1L ) )", "bin": 0.74, "data_idx": 11394, "pred_tgts": ["(FenceOther)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))))))", "(Yield (< (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))) 1L))"], "pred_translated": ["Can you show me how to add en event to my calendar", "Can you make an event for Monday?", "Is my schedule clear next Monday?"], "distractor": "Show me as busy during that time."}
{"gold_tgt": "( Yield ( IsCloudy ( Execute ( refer ( extensionConstraint ( ^ ( WeatherTable ) AlwaysTrueConstraint ) ) ) ) ) )", "bin": 0.74, "data_idx": 11099, "pred_tgts": ["(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (cloudCover) (WeatherQueryApi (AtPlace (FindPlace (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))) (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Max) (cloudCover) (WeatherQueryApi (AtPlace (FindPlace (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))) (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Sum) (rainPrecipIntensity) (WeatherQueryApi (AtPlace (FindPlace (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))) (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))))"], "pred_translated": ["Will it be overcast that day?", "Will it be overcast that day?", "How much will it rain that day?"], "distractor": "update my calender events"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( DateTimeConstraint ( ?> ( NumberPM 2L ) ) ( Today ) ) ) ( Event.duration_? ( ?= ( toHours 1 ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 13354, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (OnDateAfterTime (Today) (NumberPM 2L))) (Event.duration_? (?= (toHours 1)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (?> (NumberPM 2L)) (Today))) (Event.duration_? (?= (toHours 1)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?> (DateAtTimeWithDefaults (Today) (NumberPM 2L)))) (Event.duration_? (?= (toHours 1)))))))"], "pred_translated": ["I need a 1 hour meeting today after 2 pm", "I need a 1 hour meeting today after 2 pm", "I need a 1 hour meeting today after 2 pm"], "distractor": "Is it going to rain this afternoon?"}
{"gold_tgt": "( FenceReminder )", "bin": 0.74, "data_idx": 4375, "pred_tgts": ["(FenceReminder)", "(FenceOther)", "(FenceMultiAction)"], "pred_translated": ["Remind me of the first flight to london", "Can you tell me the weather for tomorrow in Greenville, NC?", "I need to cancel all my meetings for tomorrow."], "distractor": "Yes it looks right."}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( EventOnDate ( MD 6L ( December ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) )", "bin": 0.74, "data_idx": 3297, "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (MD 6L (November)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (MD 6L (December)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (MD 6L (Dec) (December)) (^(Event) EmptyStructConstraint)))))"], "pred_translated": ["What about the 6th?", "And what about December 6th?", "And what about December 6th?"], "distractor": "make it on another day"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.start_? ( DateTime.time_? ( ?= ( NumberPM 8L ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 10958, "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 8L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^(Time) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Time) EmptyStructConstraint))) (intension (NumberAM 8L)))))"], "pred_translated": ["Can you set it up for 8?", "Change the time to 8pm", "Change the time to 8am"], "distractor": "Yes it does."}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEventFromConstraint ( Event.start_? ( DateTime.date_? ( ?= ( nextDayOfMonth ( Today ) 3L ) ) ) ) ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.74, "data_idx": 4069, "pred_tgts": ["(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.day_? (?= (Day.apply 3L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 3L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEvent 3L (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["The one on the 3rd works better", "The one on the 3rd", "I like the 3rd one"], "distractor": "How do I delete an event?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateTime ( DateAtTimeWithDefaults ( Tomorrow ) ( NumberPM 5L ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ( Event.start_? ( DateTime.time_? ( ?= ( NumberPM 4L ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 4774, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Yesterday) (NumberPM 5L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 4L)))))))"], "pred_translated": ["Move my 5pm tomorrow to 4pm.", "Change my meeting tomorrow from 5pm to 4pm", "Move yesterday's meeting at 5 pm to tomorrow at 4 pm."], "distractor": "Can you tell me what the weather will be like in Utica, NY?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.start_? ( DateTime.date_? ( LateDateRange ( SeasonWinter ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 6651, "pred_tgts": ["(FenceDateTime)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (LateDateRange (SeasonWinter))))))", "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (LateDateRange (SeasonWinter)))))"], "pred_translated": ["How about drinking hot chocolate in the winter?", "Hmm, let's make that late winter.", "What do I have planned for late winter?"], "distractor": "What do I have going on between 8 am and 8 pm today?"}
{"gold_tgt": "( PleasantryCalendar )", "bin": 0.74, "data_idx": 3358, "pred_tgts": ["(FenceSpecify)", "(PleasantryCalendar)", "(FenceOther)"], "pred_translated": ["I would like to update my calendar", "I would like to update my calendar", "How do you create a calendar event?"], "distractor": "Can you tell me the weather for tomorrow in Greenville, NC?"}
{"gold_tgt": "( Yield ( WeatherAggregate ( WeatherQuantifier.Min ) ( temperature ) ( Execute ( refer ( extensionConstraint ( ^ ( WeatherTable ) AlwaysTrueConstraint ) ) ) ) ) )", "bin": 0.74, "data_idx": 2904, "pred_tgts": ["(FenceWeather)", "(FenceAggregation)", "(FenceOther)"], "pred_translated": ["When will it rain next in Des Moines, WA?", "How much time will I be in meetings this week?", "When will it rain next in Des Moines, WA?"], "distractor": "Can you change the location of the meeting?"}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "bin": 0.74, "data_idx": 12359, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(FenceSpecify)"], "pred_translated": ["ok", "THANKS OK", "Accepted but change the time."], "distractor": "Please accept the party's party invite from Tammy and tell Ron that I'm excited to join!"}
{"gold_tgt": "( Yield ( DeleteCommitEventWrapper ( DeletePreflightEventWrapper ( Event.id ( FindNumNextEvent ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Micheal Joe \" ) ) ) ) 1L ) ) ) ) )", "bin": 0.74, "data_idx": 1572, "pred_tgts": ["(DoNotConfirm)", "(FenceOther)", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Micheal Joe \")))))))))))"], "pred_translated": ["no", "Show me as busy during that time.", "Cancel the meeting with Micheal Joe"], "distractor": "I would like to remove an event"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( Event.start_? ( DateTime.date_? ( Date.dayOfWeek_? ( negate ( Weekend ) ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 5439, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(PleasantryCalendar)"], "pred_translated": ["Can you tell me the weather for tomorrow in Greenville, NC?", "I need to change the date of my doctor's appointment", "I need help with my calendar"], "distractor": "How old are you?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.start_? ( DateTime.date_? ( LateDateRange ( SeasonWinter ) ) ) ) ) ) )", "bin": 0.74, "data_idx": 6651, "pred_tgts": ["(FenceDateTime)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (LateDateRange (SeasonWinter))))))", "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (LateDateRange (SeasonWinter)))))"], "pred_translated": ["How about drinking hot chocolate in the winter?", "Hmm, let's make that late winter.", "What do I have planned for late winter?"], "distractor": "Is Patriot Day next week?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" suicide meeting \" ) ) ( Event.start_? ( DateTimeConstraint ( Afternoon ) ( Today ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 214, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \" suicide meeting \"))))))) (Event.start_? (DateTime.time_? (Afternoon))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" suicide meeting \")) (Event.start_? (DateTimeConstraint (Afternoon) (Today)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \" suicide meeting \"))))))) (Event.start_? (DateTimeConstraint (Afternoon) (Today))))))"], "pred_translated": ["I need to move today's suicide meeting to this afternoon.", "schedule a suicide meeting this afternoon", "I need to move today's suicide meeting to this afternoon."], "distractor": "Yes April 25 works"}
{"gold_tgt": "( FenceAttendee )", "bin": 0.78, "data_idx": 10589, "pred_tgts": ["(FenceAttendee)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" meeting with the BOD \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))))))"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "Can you schedule a meeting with the BOD on Tuesday?", "create meeting on tuesday"], "distractor": "For my meeting at 3pm Paul and Alexandria can't make it but Jane and Sam can."}
{"gold_tgt": "( let ( x0 ( nextDayOfMonth ( Today ) 14L ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( EventAllDayForDateRange ( Event.location_? ( ?= ( LocationKeyphrase.apply \" Duluth \" ) ) ) ( DateAndConstraint x0 ( nextDayOfMonth x0 18L ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 9579, "pred_tgts": ["(let (x0 (nextDayOfMonth (Today) 14L)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (?= (LocationKeyphrase.apply \" Duluth \"))) (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (DateAndConstraint x0 (nextDayOfMonth x0 18L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 14L)))) (Event.location_? (?= (LocationKeyphrase.apply \" Duluth \")))))))", "(let (x0 (nextDayOfMonth (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) 14L)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (?= (LocationKeyphrase.apply \" Duluth \"))) (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (DateAndConstraint x0 (nextDayOfMonth x0 18L))))))))"], "pred_translated": ["I will be in Duluth from the 14th to the 18th", "I will be in Duluth on the 14th", "I will be in Duluth from the 14th to the 18th"], "distractor": "Do I have any meetings scheduled with Damon Ellery?"}
{"gold_tgt": "( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.id_? ( negate ( ?= ( Event.id ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ) ) ( EventDuringRange ( Event.subject_? ( ?~= \" conferences \" ) ) ( FullMonthofLastMonth ) ) ) ) ) ) 0L ) )", "bin": 0.78, "data_idx": 10874, "pred_tgts": ["(FenceDateTime)", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.subject_? (?~= \" conferences \"))) (FullMonthofLastMonth))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventDuringRange (Event.subject_? (?~= \" conferences \")) (FullMonthofLastMonth)))))) 0L))"], "pred_translated": ["Please make that 9-10:30 am in the morning instead.", "Did I have any other conferences last month?", "Did I attend any other conferences last month?"], "distractor": "Yes, the party on Friday looks good."}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateTime ( NextTime ( NumberPM 2L ) ) ( Event.subject_? ( ?~= \" lunch \" ) ) ) ) ) ) ) ( Event.start_? ( DateTime.time_? ( ?= ( NumberPM 1L ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 4400, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (Event.subject_? (?~= \" lunch \")) (NumberPM 2L)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 2L)) (Event.subject_? (?~= \" lunch \"))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" lunch \")) (Event.start_? (DateTime.time_? (?= (NumberPM 2L))))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))"], "pred_translated": ["Change lunch from 2pm to 1pm.", "Change lunch from 2pm to 1pm.", "Change lunch from 2pm to 1pm."], "distractor": "I need a hair cut at the salon after that"}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "bin": 0.78, "data_idx": 1427, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(PleasantryCalendar)", "(FenceSpecify)"], "pred_translated": ["Thank you very much", "Yes Help Me", "update my calender events"], "distractor": "update my calender events"}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "bin": 0.78, "data_idx": 1427, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(PleasantryCalendar)", "(FenceSpecify)"], "pred_translated": ["Thank you very much", "Yes Help Me", "update my calender events"], "distractor": "I need to change the date of my doctor's appointment"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" hair cut \" ) ) ( Event.start_? ( ?= ( Event.end ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" salon \" ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 4108, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" getting my hair cut \")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \" salon \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" hair cut \")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \" salon \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" hair my hair \")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \" salon \")))))))"], "pred_translated": ["After that I'll be getting my hair cut at the salon.", "I need a hair cut at the salon after that", "Add hair my hair at the salon after that."], "distractor": "Sorry I meant to say Victor."}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.78, "data_idx": 3321, "pred_tgts": ["(PleasantryCalendar)", "(PleasantryAnythingElseCombined)", "(GenericPleasantry)"], "pred_translated": ["yes", "no thanks", "hello"], "distractor": "Can you tell me when my next block of free time is?"}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEventFromConstraint ( Event.start_? ( DateTime.date_? ( ?= ( MD 12L ( July ) ) ) ) ) ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.78, "data_idx": 5221, "pred_tgts": ["(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 15L (July))))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 19L (July))))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 17L (July))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["jul 15, wed", "jul 19 looks good", "July 17 works best"], "distractor": "Can you tell me when my next block of free time is?"}
{"gold_tgt": "( FenceScope )", "bin": 0.78, "data_idx": 1353, "pred_tgts": ["(FenceReminder)", "(FenceScope)", "(FenceSwitchTabs)"], "pred_translated": ["Remind me of the first flight to london", "How old are you?", "Email Cecelia Waller that the meeting is set"], "distractor": "Please make that 9-10:30 am in the morning instead."}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.subject_? ( ?~= \" interview \" ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" old office \" ) ) ) ) ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" my new office \" ) ) ) ) ) )", "bin": 0.78, "data_idx": 1087, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(FenceConferenceRoom)"], "pred_translated": ["Do you have the address for the secondary location?", "Can you change the location of the meeting?", "And change the location to the Spirit Room."], "distractor": "Do I have anything else that day?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" go on a date \" ) ) ( Event.start_? ( DateTime.date_? ( ?= ( MD 6L ( April ) ) ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Ashley \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 619, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" date \")) (Event.start_? (DateTime.date_? (?= (MD 6L (April)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ashley \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" go on a date \")) (Event.start_? (DateTime.date_? (?= (MD 6L (April)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ashley \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" go on a a date \")) (Event.start_? (DateTime.date_? (?= (MD 6L (April)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ashley \")))))))))))"], "pred_translated": ["Add date with Ashley on April 6", "Add go on a date with Ashley on April 6", "Add go on a a date with Ashley on April 6"], "distractor": "Create meeting S on Tuesday with Jim M, Jim S, and Jane M."}
{"gold_tgt": "( FenceScope )", "bin": 0.78, "data_idx": 3754, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(FenceScope)"], "pred_translated": ["How do I delete an event?", "I need to update my caledar", "Can you help me organize my caledar?"], "distractor": "yes the 6th works"}
{"gold_tgt": "( FenceOther )", "bin": 0.78, "data_idx": 868, "pred_tgts": ["(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(FenceSpecify)", "(FenceOther)"], "pred_translated": ["Yes it does.", "can you change the appointment time", "Please show me the next timeslot for the same appointment."], "distractor": "what will the temperature be"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( FindNumNextEvent ( Event.subject_? ( ?~= \" training \" ) ) 1L ) ) ( Event.attendees_? ( & ( AttendeeListExcludesRecipient ( ?= ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Tom \" ) ) ) ) ) ) ) ( AttendeeListExcludesRecipient ( ?= ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Sally \" ) ) ) ) ) ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 12487, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(FenceDateTime)"], "pred_translated": ["Schedule my meeting with my Trainer in the first available time.", "Trainer name is Damon Straeter", "Schedule a meeting with Trainer for the last day of the month."], "distractor": "Show some different timing."}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEventFromConstraint ( Event.start_? ( DateTime.time_? ( ?= ( NumberPM 1L ) ) ) ) ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.78, "data_idx": 9788, "pred_tgts": ["(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))", "(FenceOther)", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["the first one", "How do I create a calendar?", "1pm"], "distractor": "Change my meeting with Bill from Thursday to Friday at 10 am."}
{"gold_tgt": "( FenceScope )", "bin": 0.78, "data_idx": 3754, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(FenceScope)"], "pred_translated": ["How do I delete an event?", "I need to update my caledar", "Can you help me organize my caledar?"], "distractor": "Change my dental appointment from 3:30 to 3:00."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" go on a date \" ) ) ( Event.start_? ( DateTime.date_? ( ?= ( MD 6L ( April ) ) ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Ashley \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 619, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" date \")) (Event.start_? (DateTime.date_? (?= (MD 6L (April)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ashley \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" go on a date \")) (Event.start_? (DateTime.date_? (?= (MD 6L (April)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ashley \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" go on a a date \")) (Event.start_? (DateTime.date_? (?= (MD 6L (April)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ashley \")))))))))))"], "pred_translated": ["Add date with Ashley on April 6", "Add go on a date with Ashley on April 6", "Add go on a a date with Ashley on April 6"], "distractor": "Who reports to me?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.subject_? ( ?~= \" interview \" ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" old office \" ) ) ) ) ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" my new office \" ) ) ) ) ) )", "bin": 0.78, "data_idx": 1087, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(FenceConferenceRoom)"], "pred_translated": ["Do you have the address for the secondary location?", "Can you change the location of the meeting?", "And change the location to the Spirit Room."], "distractor": "Remind me of the first flight to london"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( DateTime.time_? ( Afternoon ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Karl Boon \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 8867, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Afternoon) (Today))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Karl Boon \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.time_? (Afternoon))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Karl Boon \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Afternoon) (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Karl Boon \")))))))))))"], "pred_translated": ["I want to meet with Karl Boon this afternoon.", "Create a meeting in the afternoon with Karl Boon", "Schedule a meeting with Karl Boon for this afternoon."], "distractor": "Do I have free time at the end of the day on Friday?"}
{"gold_tgt": "( Yield ( Event.responseStatus ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( MD 20L ( August ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 13055, "pred_tgts": ["(Yield (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (previousMonthDay (Today) (August) 20L) (^(Event) EmptyStructConstraint)))))))", "(Yield (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 20L (August)) (^(Event) EmptyStructConstraint)))))))", "(Yield (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (previousDayOfMonth (Today) 20L) (^(Event) EmptyStructConstraint)))))))"], "pred_translated": ["What was my response status for the event on August 20?", "august 20 event my response", "What was my response to the event on the 20th?"], "distractor": "How did Alex respond to the picnic?"}
{"gold_tgt": "( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.id_? ( negate ( ?= ( Event.id ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ) ) ( EventDuringRange ( Event.subject_? ( ?~= \" conferences \" ) ) ( FullMonthofLastMonth ) ) ) ) ) ) 0L ) )", "bin": 0.78, "data_idx": 10874, "pred_tgts": ["(FenceDateTime)", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.subject_? (?~= \" conferences \"))) (FullMonthofLastMonth))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventDuringRange (Event.subject_? (?~= \" conferences \")) (FullMonthofLastMonth)))))) 0L))"], "pred_translated": ["Please make that 9-10:30 am in the morning instead.", "Did I have any other conferences last month?", "Did I attend any other conferences last month?"], "distractor": "can you change the time of the appointment"}
{"gold_tgt": "( do ( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) ) ( Yield ( EventAttendance ( RespondComment.apply \" I have to clean my house that day \" ) :event ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Saturday ) ) ( Event.subject_? ( ?~= \" go to the movies \" ) ) ) ) ) ) :response ( ResponseStatusType.Declined ) ) ) )", "bin": 0.78, "data_idx": 9981, "pred_tgts": ["(Yield (EventAttendance (RespondComment.apply \" I have to clean my house that day. \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \" go to the movies \")))))) :response (ResponseStatusType.Declined)))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" I have to clean my house that day. \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \" go to the movies \")))))) :response (ResponseStatusType.Declined))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" I have to clean my house that day \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \" go to the movies \")))))) :response (ResponseStatusType.Declined))))"], "pred_translated": ["Decline my invitation to go to the movies on Saturday and say that I have to clean my house that day.", "Yes, that's good. Decline go to the movies on Saturday and say that I have to clean my house that day.", "Yes, that's good. Decline go to the movies on Saturday and say that I have to clean my house that day."], "distractor": "What about at Ihop next week?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" doctor's appointment \" ) ) ) ) ) ) ( Event.start_? ( DateTime.time_? ( ?= ( NumberPM 4L ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 9228, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (Event.subject_? (?~= \" doctor's appointment \")) (NumberPM 2L)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" doctor's appointment \")) (Event.start_? (DateTime.time_? (?= (NumberPM 2L))))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (Event.subject_? (?~= \" doctor 's \")) (NumberPM 2L)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 4L)))))))"], "pred_translated": ["Change my doctor's appointment from 2pm to 4pm.", "Change my doctor's appointment from 2pm to 4pm.", "Change doctor's from 2pm to 4pm"], "distractor": "I need to update my calendar"}
{"gold_tgt": "( Yield ( DeleteCommitEventWrapper ( DeletePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Wednesday ) ) ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" John \" ) ) ) ) ) ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 1534, "pred_tgts": ["(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" John \")))) (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" John \"))))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" John \")))))))))))"], "pred_translated": ["Cancel my meeting with John on Wednesday.", "Cancel my meeting with John on Wednesday.", "Cancel my meeting with John"], "distractor": "Why didn't Mom come to my birthday party?"}
{"gold_tgt": "( Yield ( PlaceHasFeature ( PlaceFeature.FamilyFriendly ) ( Execute ( refer ( extensionConstraint ( ^ ( Place ) EmptyStructConstraint ) ) ) ) ) )", "bin": 0.78, "data_idx": 11474, "pred_tgts": ["(FenceScope)", "(FenceAttendee)", "(FenceTriviaQa)"], "pred_translated": ["Do they have a patio?", "Do they have a patio where we can sit?", "Is there a holiday this weekend?"], "distractor": "I need to update my caledar"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( UpdateEventIntensionConstraint ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Jared \" ) ) ) ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 3170, "pred_tgts": ["(FenceSpecify)", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jared \"))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jared \")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jared \")))))))))))"], "pred_translated": ["Can you change the time?", "I meant Jared", "Jared and Jared"], "distractor": "please don't make change"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Megan \" ) ) ) ) ) ) ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( NextDOW ( Monday ) ) ( NumberPM 3L ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 129, "pred_tgts": ["(FenceSpecify)", "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Megan \")))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Monday)) (NumberPM 3L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Megan \")))))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 3L)))))))"], "pred_translated": ["I need to change the date of my doctor's appointment", "Please reschedule my appointment with Megan for Monday at 3 PM.", "Please reschedule my appointment with Megan for next Monday at 3pm."], "distractor": "And the next day after that?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" suicide meeting \" ) ) ( Event.start_? ( DateTimeConstraint ( Afternoon ) ( Today ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 214, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \" suicide meeting \"))))))) (Event.start_? (DateTime.time_? (Afternoon))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" suicide meeting \")) (Event.start_? (DateTimeConstraint (Afternoon) (Today)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \" suicide meeting \"))))))) (Event.start_? (DateTimeConstraint (Afternoon) (Today))))))"], "pred_translated": ["I need to move today's suicide meeting to this afternoon.", "schedule a suicide meeting this afternoon", "I need to move today's suicide meeting to this afternoon."], "distractor": "Schedule a meeting with Kim tomorrow at 4:15 pm."}
{"gold_tgt": "( FenceAttendee )", "bin": 0.78, "data_idx": 10589, "pred_tgts": ["(FenceAttendee)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" meeting with the BOD \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))))))"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "Can you schedule a meeting with the BOD on Tuesday?", "create meeting on tuesday"], "distractor": "Remind me of the first flight to london"}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmUpdateAndReturnActionIntension ( Event.subject_? ( ?~= \" party \" ) ) ) ) )", "bin": 0.78, "data_idx": 8453, "pred_tgts": ["(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(FenceSpecify)", "(Yield (Execute (ConfirmCreateAndReturnAction (Event.subject_? (?~= \" party \")))))"], "pred_translated": ["Yes it looks right.", "I need to change the time of the staff meeting.", "Yes schedule the party"], "distractor": "1400 won't work anymore, let's go with 1500 for an hour."}
{"gold_tgt": "( Yield ( PlaceHasFeature ( PlaceFeature.FamilyFriendly ) ( Execute ( refer ( extensionConstraint ( ^ ( Place ) EmptyStructConstraint ) ) ) ) ) )", "bin": 0.78, "data_idx": 11474, "pred_tgts": ["(FenceScope)", "(FenceAttendee)", "(FenceTriviaQa)"], "pred_translated": ["Do they have a patio?", "Do they have a patio where we can sit?", "Is there a holiday this weekend?"], "distractor": "Yes schedule the party"}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.78, "data_idx": 3321, "pred_tgts": ["(PleasantryCalendar)", "(PleasantryAnythingElseCombined)", "(GenericPleasantry)"], "pred_translated": ["yes", "no thanks", "hello"], "distractor": "please make a meet with my doctor"}
{"gold_tgt": "( FenceMultiAction )", "bin": 0.78, "data_idx": 200, "pred_tgts": ["(FenceMultiAction)", "(Yield (Execute (ChooseCreateEventFromConstraint (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 5L (June)) (NumberAM 11L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 11L 30L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (& (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 11L 30L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["Yes, the second one. And make it at Panera.", "Yes June 5th at 11:00 AM - 11:30 AM", "Yes, the 11:00 AM - 11:30 AM timeslot works."], "distractor": "I need to edit the business trip"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( & ( Event.subject_? ( ?= \" quarterly Accounts Review \" ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( Tomorrow ) ( NumberAM 9L ) ) ) ) ) ( Event.duration_? ( ?= ( toHours 3 ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" City Center \" ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 1512, "pred_tgts": ["(FenceConferenceRoom)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" quarterly Accounts Review \")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L))))) (Event.duration_? (?= (toHours 3)))) (Event.location_? (& (?= (LocationKeyphrase.apply \" City Center \")) (roomRequest)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" quarterly Accounts \")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberAM 9L))))) (Event.duration_? (?= (toHours 3)))) (Event.location_? (& (?= (LocationKeyphrase.apply \" City Center \")) (roomRequest)))))))"], "pred_translated": ["Change the location of the staff meeting tomorrow to Conference Room B.", "Book a room at City Center for my quarterly Accounts Review tomorrow at 9 am for 3 hours.", "Get me a room at City Center for 3 hours tomorrow at 9 am for quarterly accounts."], "distractor": "Do you think mother will be able to make it?"}
{"gold_tgt": "( FenceOther )", "bin": 0.78, "data_idx": 4011, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(FenceOther)", "(FenceSpecify)"], "pred_translated": ["thank you", "please don't make change", "please don't make change"], "distractor": "I need to meet with jennifer this friday around 4 pm"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.end_? ( DateTime.time_? ( ?= ( NumberPM 11L ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 12092, "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberAM 11L)))))))", "(FenceSpecify)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 11L)))))))"], "pred_translated": ["Make it end at 11", "update my calender events", "Make it end at 11"], "distractor": "Email Cecelia Waller that the meeting is set"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" lunch \" ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( Tomorrow ) ( NumberPM 12L ) ) ) ) ) ( Event.duration_? ( ?= ( toHours 2 ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 6833, "pred_tgts": ["(FenceOther)", "(FenceScope)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" break for lunch \")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 12L))))) (Event.duration_? (?= (toHours 2)))))))"], "pred_translated": ["Can you tell me the weather for tomorrow in Greenville, NC?", "How old are you?", "Add a two hour break for lunch to my calendar tomorrow at 12 p.m."], "distractor": "I need to change the date of my doctor's appointment"}
{"gold_tgt": "( FenceOther )", "bin": 0.78, "data_idx": 4011, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(FenceOther)", "(FenceSpecify)"], "pred_translated": ["thank you", "please don't make change", "please don't make change"], "distractor": "Please schedule a meeting with the pope tomorrow."}
{"gold_tgt": "( let ( x0 ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( Yield ( WillRain ( WeatherQueryApi ( AtPlace ( FindPlace ( Event.location x0 ) ) ) ( DateTime.date_? ( ?= ( DateTime.date ( Event.start x0 ) ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 11315, "pred_tgts": ["(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (Event.location (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))) (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))))", "(Yield (WillRain (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))", "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))))"], "pred_translated": ["Will it rain that day?", "Will it rain?", "Will it rain that day?"], "distractor": "Change the location of the staff meeting tomorrow to Conference Room B."}
{"gold_tgt": "( FenceSpecify )", "bin": 0.78, "data_idx": 4321, "pred_tgts": ["(FenceMultiAction)", "(PleasantryCalendar)", "(FenceSpecify)"], "pred_translated": ["I need to cancel all my meetings for tomorrow.", "I need help with my calendar", "I need to change the date of my doctor's appointment"], "distractor": "How old are you?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" An evening with #44 \" ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( NextDOW ( Tuesday ) ) ( NumberPM 7L ) ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 7792, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" An evening with #44 \")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 1L (April)) (NumberPM 7L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" An evening with #44 \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 7L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" An evening with #44 \")) (Event.start_? (?= (DateAtTimeWithDefaults (MD \\ \\(\\ L (April)) (NumberPM 7L))))))))"], "pred_translated": ["Create \"An evening with #44\" for April 1st at 7pm.", "create \"An evening with #44\" on tuesday at 7", "Create \"An evening with #44\" for April 7th at 7pm."], "distractor": "Do I have any meetings with Clinton this week?"}
{"gold_tgt": "( FenceMultiAction )", "bin": 0.78, "data_idx": 6152, "pred_tgts": ["(FenceMultiAction)", "(FenceDateTime)", "(let (x0 (NextDOW (Saturday))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bill \")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" ted \")))))))) (EventAllDayForDateRange (Event.subject_? (?= \" golf trip \")) (DateAndConstraint x0 (nextDayOfWeek x0 (Sunday)))))))))"], "pred_translated": ["I need to cancel all my meetings for tomorrow.", "Can you tell me when my next block of free time is?", "Schedule a golf trip with bill and ted from Saturday to Sunday."], "distractor": "Can you set it up for 8?"}
{"gold_tgt": "( FenceOther )", "bin": 0.78, "data_idx": 7993, "pred_tgts": ["(FenceOther)", "(FencePeopleQa)", "(FenceSpecify)"], "pred_translated": ["defer the next meeting with Henry", "Is Megans address in Compton?", "Show me another timing to the meeting."], "distractor": "What do I have on my calendar for the rest of the week?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" An evening with #44 \" ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( NextDOW ( Tuesday ) ) ( NumberPM 7L ) ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 7792, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" An evening with #44 \")) (Event.start_? (?= (DateAtTimeWithDefaults (MD 1L (April)) (NumberPM 7L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" An evening with #44 \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 7L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" An evening with #44 \")) (Event.start_? (?= (DateAtTimeWithDefaults (MD \\ \\(\\ L (April)) (NumberPM 7L))))))))"], "pred_translated": ["Create \"An evening with #44\" for April 1st at 7pm.", "create \"An evening with #44\" on tuesday at 7", "Create \"An evening with #44\" for April 7th at 7pm."], "distractor": "What time is my meeting with my boss on Wednesday?"}
{"gold_tgt": "( Yield ( Event.start ( FindNumNextEvent ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Maddy \" ) ) ) ) 1L ) ) )", "bin": 0.78, "data_idx": 10126, "pred_tgts": ["(FenceAttendee)", "(FencePeopleQa)", "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Maddy \")))) 1L)))"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "Why didn't Mom come to my birthday party?", "When is my next meeting with Maddy?"], "distractor": "can you change the appointment time"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( DateTime.time_? ( Afternoon ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Karl Boon \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 8867, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Afternoon) (Today))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Karl Boon \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.time_? (Afternoon))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Karl Boon \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (Afternoon) (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Karl Boon \")))))))))))"], "pred_translated": ["I want to meet with Karl Boon this afternoon.", "Create a meeting in the afternoon with Karl Boon", "Schedule a meeting with Karl Boon for this afternoon."], "distractor": "Can you change my Doctor appointment from Friday to Saturday at 3:00 PM?"}
{"gold_tgt": "( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.id_? ( negate ( ?= ( Event.id ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ) ) ( EventDuringRange ( Event.subject_? ( ?~= \" conferences \" ) ) ( FullMonthofLastMonth ) ) ) ) ) ) 0L ) )", "bin": 0.78, "data_idx": 10874, "pred_tgts": ["(FenceDateTime)", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.subject_? (?~= \" conferences \"))) (FullMonthofLastMonth))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventDuringRange (Event.subject_? (?~= \" conferences \")) (FullMonthofLastMonth)))))) 0L))"], "pred_translated": ["Please make that 9-10:30 am in the morning instead.", "Did I have any other conferences last month?", "Did I attend any other conferences last month?"], "distractor": "I need help with my calendar"}
{"gold_tgt": "( FenceScope )", "bin": 0.78, "data_idx": 11386, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" program want to watch \")) (Event.start_? (?= (Execute (refer (extensionConstraint (^(DateTime) EmptyStructConstraint))))))))))"], "pred_translated": ["Can you show me how to add en event to my calendar?", "can you change the meeting time", "program want to watch"], "distractor": "when is the next time it wont rain"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" go on a date \" ) ) ( Event.start_? ( DateTime.date_? ( ?= ( MD 6L ( April ) ) ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Ashley \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 619, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" date \")) (Event.start_? (DateTime.date_? (?= (MD 6L (April)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ashley \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" go on a date \")) (Event.start_? (DateTime.date_? (?= (MD 6L (April)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ashley \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" go on a a date \")) (Event.start_? (DateTime.date_? (?= (MD 6L (April)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ashley \")))))))))))"], "pred_translated": ["Add date with Ashley on April 6", "Add go on a date with Ashley on April 6", "Add go on a a date with Ashley on April 6"], "distractor": "Start at 8 am."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" hair cut \" ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( Yesterday ) ( NumberPM 1L ) ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Sharon \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 178, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" hair cut \")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 2L) (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sharon \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" hair cut \")) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDay (Today) (Day.apply 2L)) (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sharon \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" hair cut \")) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDay (Yesterday) (Day.apply 2L)) (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sharon \")))))))))))"], "pred_translated": ["Schedule a hair cut with Sharon on the 2nd at 1 pm.", "Schedule a hair cut with Sharon on the 2nd at 1 pm.", "I got my hair cut from Sharon on the 2nd at 1 pm."], "distractor": "Paige Ashworth?"}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmUpdateAndReturnActionIntension ( Event.subject_? ( ?~= \" party \" ) ) ) ) )", "bin": 0.78, "data_idx": 8453, "pred_tgts": ["(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(FenceSpecify)", "(Yield (Execute (ConfirmCreateAndReturnAction (Event.subject_? (?~= \" party \")))))"], "pred_translated": ["Yes it looks right.", "I need to change the time of the staff meeting.", "Yes schedule the party"], "distractor": "Who reports to me?"}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "bin": 0.78, "data_idx": 1427, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(PleasantryCalendar)", "(FenceSpecify)"], "pred_translated": ["Thank you very much", "Yes Help Me", "update my calender events"], "distractor": "What do I have that's not a coffee break?"}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "bin": 0.78, "data_idx": 7313, "pred_tgts": ["(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(FenceSpecify)"], "pred_translated": ["Yes, the first one.", "Yes", "I need to update my appointment with Fiona Mason"], "distractor": "Add Chelsea to dinner with Megan and take off Wify."}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.subject_? ( ?~= \" interview \" ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" old office \" ) ) ) ) ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" my new office \" ) ) ) ) ) )", "bin": 0.78, "data_idx": 1087, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(FenceConferenceRoom)"], "pred_translated": ["Do you have the address for the secondary location?", "Can you change the location of the meeting?", "And change the location to the Spirit Room."], "distractor": "Hello"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( ?= ( NextTime ( NumberAM 11L ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Paige ashworth \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 10471, "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberAM 11L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Paige ashworth \")))))))))))", "(Yield (Execute (ConfirmCreateAndReturnAction (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"], "pred_translated": ["can you change the time to 11am", "meeting with Paige ashworth 11am", "yes 11am"], "distractor": "Do I have any events in May with people attending?"}
{"gold_tgt": "( Yield ( PlaceHasFeature ( PlaceFeature.FamilyFriendly ) ( Execute ( refer ( extensionConstraint ( ^ ( Place ) EmptyStructConstraint ) ) ) ) ) )", "bin": 0.78, "data_idx": 11474, "pred_tgts": ["(FenceScope)", "(FenceAttendee)", "(FenceTriviaQa)"], "pred_translated": ["Do they have a patio?", "Do they have a patio where we can sit?", "Is there a holiday this weekend?"], "distractor": "can you change the time"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" hair cut \" ) ) ( Event.start_? ( ?= ( Event.end ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" salon \" ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 4108, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" getting my hair cut \")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \" salon \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" hair cut \")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \" salon \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" hair my hair \")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.location_? (?= (LocationKeyphrase.apply \" salon \")))))))"], "pred_translated": ["After that I'll be getting my hair cut at the salon.", "I need a hair cut at the salon after that", "Add hair my hair at the salon after that."], "distractor": "Can you tell me the weather for tomorrow in Greenville, NC?"}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEventFromConstraint ( Event.start_? ( DateTime.time_? ( ?= ( NumberAM 10L ) ) ) ) ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.78, "data_idx": 12780, "pred_tgts": ["(FenceMultiAction)", "(Yield (Execute (ChooseCreateEventFromConstraint (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" cher \")))))))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["The second one, but make it an hour.", "yes the one at 10am with cher", "Yes"], "distractor": "I need a movie night date after 3 pm tomorrow"}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEventFromConstraint ( Event.start_? ( DateTime.date_? ( ?= ( MD 12L ( July ) ) ) ) ) ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.78, "data_idx": 5221, "pred_tgts": ["(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 15L (July))))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 19L (July))))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 17L (July))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["jul 15, wed", "jul 19 looks good", "July 17 works best"], "distractor": "what is my next event on my calender"}
{"gold_tgt": "( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.id_? ( negate ( ?= ( Event.id ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ) ) ( EventDuringRange ( Event.subject_? ( ?~= \" dinners \" ) ) ( LastWeekNew ) ) ) ) ) ) 0L ) )", "bin": 0.78, "data_idx": 2658, "pred_tgts": ["(FenceDateTime)", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.subject_? (?~= \" dinners \"))) (LastWeekNew))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" dinners \")) (LastWeekNew))))) 0L))"], "pred_translated": ["Was the dinner last week or this week?", "Did I have any other dinners last week?", "Did I have any dinners last week?"], "distractor": "Make me a meeting with Abby, her boss, and his boss next week"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.end_? ( DateTime.time_? ( ?= ( NumberPM 11L ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 12092, "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberAM 11L)))))))", "(FenceSpecify)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 11L)))))))"], "pred_translated": ["Make it end at 11", "update my calender events", "Make it end at 11"], "distractor": "How about drinking hot chocolate in the winter?"}
{"gold_tgt": "( let ( x0 ( nextDayOfMonth ( Today ) 14L ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( EventAllDayForDateRange ( Event.location_? ( ?= ( LocationKeyphrase.apply \" Duluth \" ) ) ) ( DateAndConstraint x0 ( nextDayOfMonth x0 18L ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 9579, "pred_tgts": ["(let (x0 (nextDayOfMonth (Today) 14L)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (?= (LocationKeyphrase.apply \" Duluth \"))) (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (DateAndConstraint x0 (nextDayOfMonth x0 18L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 14L)))) (Event.location_? (?= (LocationKeyphrase.apply \" Duluth \")))))))", "(let (x0 (nextDayOfMonth (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) 14L)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (?= (LocationKeyphrase.apply \" Duluth \"))) (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (DateAndConstraint x0 (nextDayOfMonth x0 18L))))))))"], "pred_translated": ["I will be in Duluth from the 14th to the 18th", "I will be in Duluth on the 14th", "I will be in Duluth from the 14th to the 18th"], "distractor": "Yes it does."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" hair cut \" ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( Yesterday ) ( NumberPM 1L ) ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Sharon \" ) ) ) ) ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 178, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" hair cut \")) (Event.start_? (?= (DateAtTimeWithDefaults (nextDayOfMonth (Today) 2L) (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sharon \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" hair cut \")) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDay (Today) (Day.apply 2L)) (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sharon \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" hair cut \")) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDay (Yesterday) (Day.apply 2L)) (NumberPM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sharon \")))))))))))"], "pred_translated": ["Schedule a hair cut with Sharon on the 2nd at 1 pm.", "Schedule a hair cut with Sharon on the 2nd at 1 pm.", "I got my hair cut from Sharon on the 2nd at 1 pm."], "distractor": "please update my events in my calender"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" Dentist appointment \" ) ) ( Event.start_? ( DateTimeConstraint ( ?< ( NumberPM 2L ) ) ( NextDOW ( Wednesday ) ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 9186, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Dentist appointment \")) (Event.start_? (OnDateBeforeTime (NextDOW (Wednesday)) (NumberPM 2L)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Dentist \")) (Event.start_? (OnDateBeforeTime (NextDOW (Wednesday)) (NumberPM 2L)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Dentist appointment \")) (Event.start_? (DateTimeConstraint (?< (NumberPM 2L)) (NextDOW (Wednesday))))))))"], "pred_translated": ["I need a Dentist appointment before 2 pm Wednesday", "I need an appointment before 2 pm Wednesday called Dentist.", "I need a Dentist appointment before 2 pm Wednesday"], "distractor": "Please schedule a meeting with the pope tomorrow."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" suicide meeting \" ) ) ( Event.start_? ( DateTimeConstraint ( Afternoon ) ( Today ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 214, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \" suicide meeting \"))))))) (Event.start_? (DateTime.time_? (Afternoon))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" suicide meeting \")) (Event.start_? (DateTimeConstraint (Afternoon) (Today)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \" suicide meeting \"))))))) (Event.start_? (DateTimeConstraint (Afternoon) (Today))))))"], "pred_translated": ["I need to move today's suicide meeting to this afternoon.", "schedule a suicide meeting this afternoon", "I need to move today's suicide meeting to this afternoon."], "distractor": "show me all finance meetings"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( FindNumNextEvent ( Event.subject_? ( ?~= \" training \" ) ) 1L ) ) ( Event.attendees_? ( & ( AttendeeListExcludesRecipient ( ?= ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Tom \" ) ) ) ) ) ) ) ( AttendeeListExcludesRecipient ( ?= ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Sally \" ) ) ) ) ) ) ) ) ) ) ) )", "bin": 0.78, "data_idx": 12487, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(FenceDateTime)"], "pred_translated": ["Schedule my meeting with my Trainer in the first available time.", "Trainer name is Damon Straeter", "Schedule a meeting with Trainer for the last day of the month."], "distractor": "Yes it does."}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.78, "data_idx": 3212, "pred_tgts": ["(WeatherPleasantry)", "(GenericPleasantry)", "(PleasantryCalendar)"], "pred_translated": ["what is the weather like in denver", "hello", "update my calendar"], "distractor": "I need to cancel all my meetings for tomorrow."}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEventFromConstraint ( Event.start_? ( DateTime.date_? ( ?= ( MD 12L ( July ) ) ) ) ) ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.78, "data_idx": 5221, "pred_tgts": ["(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 15L (July))))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 19L (July))))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 17L (July))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["jul 15, wed", "jul 19 looks good", "July 17 works best"], "distractor": "I need to meet with jennifer this friday around 4 pm"}
{"gold_tgt": "( FenceOther )", "bin": 0.78, "data_idx": 868, "pred_tgts": ["(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(FenceSpecify)", "(FenceOther)"], "pred_translated": ["Yes it does.", "can you change the appointment time", "Please show me the next timeslot for the same appointment."], "distractor": "Do I have anything not in Bellevue tomorrow?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.subject_? ( ?~= \" interview \" ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" old office \" ) ) ) ) ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" my new office \" ) ) ) ) ) )", "bin": 0.78, "data_idx": 1087, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(FenceConferenceRoom)"], "pred_translated": ["Do you have the address for the secondary location?", "Can you change the location of the meeting?", "And change the location to the Spirit Room."], "distractor": "Why didn't Mom come to my birthday party?"}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEventFromConstraint ( Event.start_? ( DateTime.time_? ( ?= ( NumberPM 1L ) ) ) ) ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.83, "data_idx": 11144, "pred_tgts": ["(FenceOther)", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (& (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 30L (April)) (NumberPM 1L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 1L 30L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Alex \")))))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["fix the first one", "1 pm works", "Yes, please schedule the meeting with Alex for April 30th at 1 pm to 1:30 pm."], "distractor": "Is there a holiday this weekend?"}
{"gold_tgt": "( Yield ( DeleteCommitEventWrapper ( DeletePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( MDY 24L ( toMonth 12L ) ( Year.apply 19L ) ) ( Event.subject_? ( ?~= \" company part \" ) ) ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 1316, "pred_tgts": ["(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 24L (toMonth 12L)) (Event.subject_? (?~= \" company part \"))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MDY 24L (toMonth 12L) (Year.apply 19L)) (Event.subject_? (?~= \" company part \"))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 12L (toMonth 12L)) (Event.subject_? (?~= \" company part \"))))))))))"], "pred_translated": ["Cancel the company part on 12/24", "Cancel the company part on 12/24/19", "Cancel the company part on 12/12"], "distractor": "Why didn't Mom come to my birthday party?"}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.83, "data_idx": 1060, "pred_tgts": ["(FenceWeather)", "(PleasantryAnythingElseCombined)", "(FenceScope)"], "pred_translated": ["When will it rain next?", "Thank you", "What is the average tempature for this time of year?"], "distractor": "yes 11am"}
{"gold_tgt": "( Yield ( DeleteCommitEventWrapper ( DeletePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" conference room meeting \" ) ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 9846, "pred_tgts": ["(FenceConferenceRoom)", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (Lunch)) (Event.subject_? (?~= \" conference room meeting \"))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (Lunch)) (Event.subject_? (?~= \" conference room meeting \"))))))))))"], "pred_translated": ["Change the location of the staff meeting tomorrow to Conference Room B.", "Delete my conference room meeting during lunch time.", "Delete my conference room meeting today during lunch time."], "distractor": "I need to change the date of my doctor's appointment"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( & ( Event.location_? ( ?= ( LocationKeyphrase.apply \" Ihop \" ) ) ) ( EventDuringRange ( ^ ( Event ) EmptyStructConstraint ) ( NextWeekList ) ) ) ) ) )", "bin": 0.83, "data_idx": 12860, "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (Event.location_? (?= (LocationKeyphrase.apply \" Ihop \"))) (NextWeekList)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (& (Event.location_? (?= (LocationKeyphrase.apply \" Ihop \"))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))))", "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.location_? (?= (LocationKeyphrase.apply \" Ihop \"))) (NextWeekList))))"], "pred_translated": ["What about at Ihop next week?", "I meant next week at Ihop", "What meetings do I have at Ihop next week?"], "distractor": "I need to move today's suicide meeting to this afternoon."}
{"gold_tgt": "( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventDuringRange ( Event.subject_? ( ?~= \" Thanksgiving \" ) ) ( LastWeekNew ) ) ) ) ) 0L ) )", "bin": 0.83, "data_idx": 8302, "pred_tgts": ["(Yield (allows (LastWeekNew) (previousHoliday (Today) (Holiday.Thanksgiving))))", "(Yield (allows (LastWeekNew) (NextHolidayFromToday (Holiday.Thanksgiving))))", "(Yield (HolidayYear (Holiday.Thanksgiving) (LastYear)))"], "pred_translated": ["Was Thanksgiving last week?", "Was Thanksgiving last week?", "When was Thanksgiving last year?"], "distractor": "What do I have planned for late winter?"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( & ( Event.id_? ( negate ( ?= ( Event.id ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ) ) ( EventOnDate ( Execute ( refer ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) )", "bin": 0.83, "data_idx": 11496, "pred_tgts": ["(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)))))) 0L))", "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint))))) 0L))"], "pred_translated": ["Do I have anything else scheduled on that day?", "What else do I have scheduled on that day?", "Do I have anything else that day?"], "distractor": "What are my last two events on friday?"}
{"gold_tgt": "( Yield ( Execute ( NewClobber ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ( extensionConstraint ( ^ ( Number ) AlwaysTrueConstraint ) ) ( intension 3 ) ) ) )", "bin": 0.83, "data_idx": 12830, "pred_tgts": ["(Yield (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 3L)) (extensionConstraint (^(Event) EmptyStructConstraint))))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(Number) AlwaysTrueConstraint)) (intension 3))))", "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"], "pred_translated": ["How bout the third event?", "How bout my third event?", "What is the second event?"], "distractor": "Do they have a patio where we can sit?"}
{"gold_tgt": "( let ( x0 ( NextTime ( NumberPM 1L ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( & ( Event.subject_? ( ?= \" pick meeting \" ) ) ( Event.start_? ( ?= x0 ) ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x0 ( HourMinutePm 1L 30L ) ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" pope \" ) ) ) ) ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 8682, "pred_tgts": ["(FenceScope)", "(FenceOther)", "(FenceSwitchTabs)"], "pred_translated": ["Please give me Pope Francis' home address.", "please update my phone number", "Can you forward this contact to Bill?"], "distractor": "What do I have this week that's not training?"}
{"gold_tgt": "( let ( x0 ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.location_? ( ?= ( LocationKeyphrase.apply \" work \" ) ) ) ) ) ) ) ( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id x0 ) ( Event.start_? ( ?= ( adjustByPeriodDuration ( Event.start x0 ) ( PeriodDuration.apply :duration ( toHours 2 ) ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 10207, "pred_tgts": ["(FenceSpecify)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.location_? (?= (LocationKeyphrase.apply \" work \"))))))) (Event.duration_? (?= (toHours 2))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.location_? (?= (LocationKeyphrase.apply \" work meeting \"))))))) (Event.duration_? (?= (toHours 2))))))"], "pred_translated": ["I need to change the date of my doctor's appointment", "Change the location of my meeting at work to be for two hours.", "Extend the work meeting duration to two hours."], "distractor": "Update Appointment on Friday to 3:30 pm."}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEventFromConstraint ( Event.start_? ( DateTime.time_? ( ?= ( NumberPM 1L ) ) ) ) ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.83, "data_idx": 11144, "pred_tgts": ["(FenceOther)", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (& (& (Event.start_? (?= (DateAtTimeWithDefaults (MD 30L (April)) (NumberPM 1L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 1L 30L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Alex \")))))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["fix the first one", "1 pm works", "Yes, please schedule the meeting with Alex for April 30th at 1 pm to 1:30 pm."], "distractor": "Mark me as busy from 6 am to 10 pm tomorrow."}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.83, "data_idx": 8239, "pred_tgts": ["(GenericPleasantry)", "(PleasantryAnythingElseCombined)", "(PleasantryCalendar)"], "pred_translated": ["Hello", "no thanks", "I need help with my calendar"], "distractor": "Schedule a meeting with Karl Boon for this afternoon."}
{"gold_tgt": "( Yield ( Execute ( ConfirmDeleteAndReturnAction ( Event.subject_? ( ?~= \" all-hands meeting \" ) ) ) ) )", "bin": 0.83, "data_idx": 12826, "pred_tgts": ["(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(PleasantryAnythingElseCombined)", "(FenceMultiAction)"], "pred_translated": ["Yes it is.", "dundudundunnn", "Cancel everything for that day, actually."], "distractor": "Is it raining in Branford, FL right now?"}
{"gold_tgt": "( Yield ( DeleteCommitEventWrapper ( DeletePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" meeting with endodontics \" ) ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 6237, "pred_tgts": ["(FenceAttendee)", "(FenceSpecify)", "(FenceMultiAction)"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "update my calender events", "Can you cancel any events for tomorrow?"], "distractor": "Give me the 10 day forecast for Live Oak, Florida"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( & ( Event.start_? ( DateTime.time_? ( ?= ( NumberAM 9L ) ) ) ) ( Event.end_? ( DateTime.time_? ( ?= ( NumberAM 10L ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 12687, "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 10L))))))))", "(FenceOther)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (NumberAM 10L))))))))"], "pred_translated": ["make that 9-10am", "Show me as busy during that time.", "make that 9-10am"], "distractor": "no thanks"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" finance meetings \" ) ) ) )", "bin": 0.83, "data_idx": 2201, "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.subject_? (?~= \" finance meetings \")))))", "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \" finance meetings \"))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.subject_? (?~= \" finance meetings \")))))) 0L))"], "pred_translated": ["What other finance meetings do I have?", "show me all finance meetings", "Do I have any other finance meetings?"], "distractor": "Delete Lunch tomorrow"}
{"gold_tgt": "( Yield ( Execute ( NewClobber ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ( extensionConstraint ( alwaysTrueConstraintConstraint ( ^ ( ( List Attendee ) ) AlwaysTrueConstraint ) ) ) ( intension ( & ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Jennifer \" ) ) ) ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Abby \" ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 4167, "pred_tgts": ["(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (alwaysTrueConstraintConstraint (^((List Attendee)) AlwaysTrueConstraint))) (intension (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jennifer \")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \")))))))))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (alwaysTrueConstraintConstraint (^((List Attendee)) AlwaysTrueConstraint))) (intension (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jennifer \"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \"))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jennifer \"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \"))))))))"], "pred_translated": ["What about with Jennifer and Abby?", "What about with Jennifer and Abby?", "What about with Jennifer and Abby?"], "distractor": "Add a coffee break at 11:01 AM."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( EventAllDayStartingDateForPeriod ( Event.subject_? ( ?= \" on vacation \" ) ) ( Today ) ( toDays 2 ) ) ) ) )", "bin": 0.83, "data_idx": 1764, "pred_tgts": ["(FenceDateTime)", "(FenceOther)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \" on vacation \")) (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 2)))))"], "pred_translated": ["Can you tell me when my next block of free time is?", "Can you tell me the weather for tomorrow in Greenville, NC?", "I'll be on vacation for 2 days"], "distractor": "What do I have on Friday that's not a coffee break?"}
{"gold_tgt": "( let ( x0 ( DateAtTimeWithDefaults ( NextDOW ( Friday ) ) ( NumberPM 7L ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" FOOTBALL GAME \" ) ) ( Event.start_? ( ?= x0 ) ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x0 ( HourMinutePm 7L 30L ) ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 185, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(FenceSpecify)", "(FenceOther)"], "pred_translated": ["thank you", "can you change the meeting time", "Can you show me how to add en event to my calendar?"], "distractor": "My easter listing ends at 8 pm on monday"}
{"gold_tgt": "( let ( x0 ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) x1 ( DateAtTimeWithDefaults ( DateTime.date ( Event.start x0 ) ) ( NumberAM 9L ) ) ) ( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id x0 ) ( & ( Event.start_? ( ?= x1 ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x1 ( HourMinuteAm 10L 30L ) ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 7509, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 10L 30L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 9L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L))))))))"], "pred_translated": ["make that 9-10:30", "make that 9-10:30", "make that 9-10:30"], "distractor": "How many months have 30 days?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateTime ( DateAtTimeWithDefaults ( NextDOW ( Tuesday ) ) ( NumberPM 7L ) ) ( Event.subject_? ( ?~= \" roller skating practice \" ) ) ) ) ) ) ) ( Event.duration_? ( ?= ( toHours 1 ) ) ) ) ) )", "bin": 0.83, "data_idx": 9360, "pred_tgts": ["(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" roller skating practice \")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Tuesday)) (NumberPM 7L)))) (Event.duration_? (?= (toHours 1))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" roller skating practice \")))))) (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 7L)))) (Event.duration_? (?= (toHours 1)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 7L)) (Event.subject_? (?~= \" roller skating practice \"))))))) (Event.duration_? (?= (toHours 1))))))"], "pred_translated": ["Modify roller skating practice to make it 1 hour long on Tuesday at 7:00 pm.", "Modify roller skating practice to make it 1 hour long on Tuesday at 7:00 pm.", "Modify roller skating practice on Tuesday at 7:00 pm to make it 1 hour long."], "distractor": "Can you tell me the weather for tomorrow in Greenville, NC?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" conference room c \" ) ) ) ) ) )", "bin": 0.83, "data_idx": 1007, "pred_tgts": ["(FenceConferenceRoom)", "(FenceMultiAction)", "(FenceAttendee)"], "pred_translated": ["Can you change the location of my meeting tomorrow to the conference room on the 3rd floor instead of my office", "I need to clear my schedule this afternoon.", "Can you add people to the meeting?"], "distractor": "What about the rest of the week?"}
{"gold_tgt": "( Yield ( DeleteCommitEventWrapper ( DeletePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" meeting with endodontics \" ) ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 6237, "pred_tgts": ["(FenceAttendee)", "(FenceSpecify)", "(FenceMultiAction)"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "update my calender events", "Can you cancel any events for tomorrow?"], "distractor": "Where is the closest bathroom?"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Paige Ashworth \" ) ) ) ) ) )", "bin": 0.83, "data_idx": 10375, "pred_tgts": ["(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Paige Ashworth \"))))))) 0L))", "(FencePeopleQa)", "(FenceOther)"], "pred_translated": ["Do I have any events with Paige Ashworth?", "Paige Ashworth?", "Paige Ashworth?"], "distractor": "Create \"An evening with #44\" for April 7th at 7pm."}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.83, "data_idx": 8581, "pred_tgts": ["(GenericPleasantry)", "(PleasantryAnythingElseCombined)", "(PleasantryCalendar)"], "pred_translated": ["Hello", "no thanks", "I need help with my calendar"], "distractor": "program want to watch"}
{"gold_tgt": "( FenceSwitchTabs )", "bin": 0.83, "data_idx": 13029, "pred_tgts": ["(FenceOther)", "(FenceScope)", "(FenceSwitchTabs)"], "pred_translated": ["Can you tell me the weather for tomorrow in Greenville, NC?", "How old are you?", "Email Cecelia Waller that the meeting is set"], "distractor": "Make me a 5 day event starting on the 7th"}
{"gold_tgt": "( Yield ( WillRain ( WeatherQueryApi ( AtPlace ( FindPlace ( LocationKeyphrase.apply \" Branford, FL \" ) ) ) ( DateTime.date_? ( ?= ( Today ) ) ) ) ) )", "bin": 0.83, "data_idx": 587, "pred_tgts": ["(FenceWeather)", "(Yield (IsRainy (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Branford, FL \"))) (DateTime.date_? (?= (Today))))))", "(FenceScope)"], "pred_translated": ["I want to go fishing and want the weather for High Springs, FL", "Is it raining in Branford, FL right now?", "I want to go fishing and want the weather for High Springs, FL to be clear."], "distractor": "Make me a 5 day event starting on the 5th"}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.83, "data_idx": 2557, "pred_tgts": ["(GenericPleasantry)", "(PleasantryAnythingElseCombined)", "(PleasantryCalendar)"], "pred_translated": ["Hello", "no thanks", "I need help with my calendar"], "distractor": "Am I free on Friday at 8 am?"}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "bin": 0.83, "data_idx": 4799, "pred_tgts": ["(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))", "(PleasantryAnythingElseCombined)", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"], "pred_translated": ["The 2nd one works.", "Pancakes.", "This looks much better"], "distractor": "Can you change my Doctor appointment from Friday to Saturday at 3:00 PM?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( & ( Event.location_? ( ?= ( LocationKeyphrase.apply \" Ihop \" ) ) ) ( EventDuringRange ( ^ ( Event ) EmptyStructConstraint ) ( NextWeekList ) ) ) ) ) )", "bin": 0.83, "data_idx": 12860, "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (Event.location_? (?= (LocationKeyphrase.apply \" Ihop \"))) (NextWeekList)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (& (Event.location_? (?= (LocationKeyphrase.apply \" Ihop \"))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))))", "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.location_? (?= (LocationKeyphrase.apply \" Ihop \"))) (NextWeekList))))"], "pred_translated": ["What about at Ihop next week?", "I meant next week at Ihop", "What meetings do I have at Ihop next week?"], "distractor": "Schedule a meeting with Cher Roydon in 2 hours and 1 minutes"}
{"gold_tgt": "( let ( x0 ( nextDayOfMonth ( Today ) 3L ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" candy binge \" ) ) ( Event.start_? ( DateTime.date_? ( ?= x0 ) ) ) ) ( Event.end_? ( DateTime.date_? ( ?= ( nextDayOfMonth x0 7L ) ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 10413, "pred_tgts": ["(let (x0 (nextDayOfMonth (Today) 3L)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \" candy binge \")) (DateAndConstraint x0 (nextDayOfMonth x0 7L)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" candy binge \")) (Event.end_? (DateTime.date_? (?= (nextDayOfMonth (Today) 7L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \" candy binge \")) (nextDayOfMonth (Today) 3L) (toDays 7)))))"], "pred_translated": ["Schedule a candy binge from the 3rd to the 7th.", "Schedule candy binge until the 7th.", "Schedule a candy binge for 7 days starting on the 3rd."], "distractor": "Can you change the time for my dentist appointment?"}
{"gold_tgt": "( Yield ( Execute ( refer ( cursorNext ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) )", "bin": 0.83, "data_idx": 757, "pred_tgts": ["(Yield (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L))", "(FenceOther)", "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"], "pred_translated": ["what is my next event on my calender", "No, I want it to start at 7 pm.", "What was the other event?"], "distractor": "Who reports to me?"}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEvent 2L ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.83, "data_idx": 6751, "pred_tgts": ["(FenceMultiAction)", "(FenceSpecify)", "(FenceOther)"], "pred_translated": ["The second one, but make it an hour.", "fix the first one", "The first option. Add that it is at Rusty's."], "distractor": "ok"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( & ( Event.start_? ( DateTime.time_? ( ?= ( NumberAM 9L ) ) ) ) ( Event.end_? ( DateTime.time_? ( ?= ( NumberAM 10L ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 12687, "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 10L))))))))", "(FenceOther)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (NumberAM 10L))))))))"], "pred_translated": ["make that 9-10am", "Show me as busy during that time.", "make that 9-10am"], "distractor": "Did I have any dinners last week?"}
{"gold_tgt": "( let ( x0 ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) x1 ( DateAtTimeWithDefaults ( DateTime.date ( Event.start x0 ) ) ( NumberAM 9L ) ) ) ( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id x0 ) ( & ( Event.start_? ( ?= x1 ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x1 ( HourMinuteAm 10L 30L ) ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 7509, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 10L 30L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 9L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L))))))))"], "pred_translated": ["make that 9-10:30", "make that 9-10:30", "make that 9-10:30"], "distractor": "Did I have any other conferences last month?"}
{"gold_tgt": "( let ( x0 ( NextTime ( NumberPM 1L ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( & ( Event.subject_? ( ?= \" pick meeting \" ) ) ( Event.start_? ( ?= x0 ) ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x0 ( HourMinutePm 1L 30L ) ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" pope \" ) ) ) ) ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 8682, "pred_tgts": ["(FenceScope)", "(FenceOther)", "(FenceSwitchTabs)"], "pred_translated": ["Please give me Pope Francis' home address.", "please update my phone number", "Can you forward this contact to Bill?"], "distractor": "Change the meeting with Tammy and her boss to 8:00 am on Monday."}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "bin": 0.83, "data_idx": 4799, "pred_tgts": ["(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))", "(PleasantryAnythingElseCombined)", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))"], "pred_translated": ["The 2nd one works.", "Pancakes.", "This looks much better"], "distractor": "defer the next meeting with Angelo Louis"}
{"gold_tgt": "( FenceScope )", "bin": 0.83, "data_idx": 8337, "pred_tgts": ["(WeatherPleasantry)", "(GenericPleasantry)", "(PleasantryCalendar)"], "pred_translated": ["What can you tell me about the weather?", "Henrietta", "I need to update my calendar"], "distractor": "yes the 6th works"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" talk to bob \" ) ) ( Event.start_? ( DateTime.date_? ( NextWeekList ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 6105, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" talk to bob \")) (Event.start_? (DateTime.date_? (EarlyDateRange (NextWeekList))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" talk to bob \")) (Event.start_? (DateTime.date_? (NextWeekList)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" talk to bob \")) (Event.start_? (& (DateTime.date_? (NextWeekList)) (DateTime.date_? (NextWeekList))))))))"], "pred_translated": ["Schedule talk to bob early next week", "i need an appointment next week to talk to bob", "next week talk to bob"], "distractor": "Add Chelsea to dinner with Megan and take off Wify."}
{"gold_tgt": "( let ( x0 ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Bill \" ) ) ) ) ( EventOnDate ( NextDOW ( Thursday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ) ( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id x0 ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( ClosestDayOfWeek ( DateTime.date ( Event.start x0 ) ) ( Friday ) ) ( NumberAM 10L ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 7432, "pred_tgts": ["(FenceMultiAction)", "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Bill \"))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)) (NumberAM 10L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Bill \"))))))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 10L)))))))"], "pred_translated": ["I need to cancel all my meetings for tomorrow.", "Change my meeting with Bill from Thursday to Friday at 10 am.", "Move my meeting with Bill from Thursday to Friday at 10 am."], "distractor": "Schedule a meeting with Kim tomorrow at 8:15 PM."}
{"gold_tgt": "( FenceScope )", "bin": 0.83, "data_idx": 3765, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(FenceScope)"], "pred_translated": ["Can you change the time of my doctor appointment?", "Can you change the doctor's appointment for Karl Boon", "Hello! Can you tell me the best Travel agent in OH?"], "distractor": "please make a meet with my doctor"}
{"gold_tgt": "( let ( x0 ( DateAtTimeWithDefaults ( NextDOW ( Friday ) ) ( NumberPM 7L ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" FOOTBALL GAME \" ) ) ( Event.start_? ( ?= x0 ) ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x0 ( HourMinutePm 7L 30L ) ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 185, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(FenceSpecify)", "(FenceOther)"], "pred_translated": ["thank you", "can you change the meeting time", "Can you show me how to add en event to my calendar?"], "distractor": "what is my next event on my calender"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( & ( Event.start_? ( DateTime.time_? ( ?= ( NumberAM 9L ) ) ) ) ( Event.end_? ( DateTime.time_? ( ?= ( NumberAM 10L ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 12687, "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 10L))))))))", "(FenceOther)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (NumberAM 10L))))))))"], "pred_translated": ["make that 9-10am", "Show me as busy during that time.", "make that 9-10am"], "distractor": "I am in Roseville Roseville"}
{"gold_tgt": "( Yield ( DeleteCommitEventWrapper ( DeletePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventDuringRange ( Event.subject_? ( ?~= \" Foam Dance Party \" ) ) ( WeekOfDateNew ( PeriodBeforeDate ( Today ) ( toWeeks 2 ) ) ) ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 12419, "pred_tgts": ["(FenceDateTime)", "(FenceMultiAction)", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (PeriodBeforeDate (Today) (toWeeks 2)) (Event.subject_? (?~= \" Foam Dance Party \"))))))))))"], "pred_translated": ["Please put that I was too sick to attend my foam dance party two weekends ago.", "Can you cancel all events on Saturday and Sunday?", "Delete my Foam Dance Party from two weeks ago."], "distractor": "Can you show me how to add en event to my calendar"}
{"gold_tgt": "( let ( x0 ( DateAtTimeWithDefaults ( MD 17L ( September ) ) ( NumberAM 10L ) ) ) ( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( & ( Event.start_? ( ?= x0 ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x0 ( NumberAM 11L ) ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 5822, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.end_? (DateTime.time_? (?= (NumberAM 11L))))))))"], "pred_translated": ["What is the second business trip I have next month?", "I need to edit the business trip", "Can you change the time to 10-11am"], "distractor": "Delete all events for last Thursday. I was sick."}
{"gold_tgt": "( Yield ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Brian \" ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 6386, "pred_tgts": ["(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Brian \"))))))", "(FenceSpecify)", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Brian \"))))))))"], "pred_translated": ["And with Brian?", "change the meeting time", "Find my meeting with Brian."], "distractor": "Schedule a meeting with him and his skip next week."}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" the uptown branch \" ) ) ) ) ) )", "bin": 0.83, "data_idx": 7000, "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \" uptown branch \"))))))", "(FenceOther)", "(FenceConferenceRoom)"], "pred_translated": ["have this take place at the uptown branch", "What's the street address for the Starbucks downtown?", "Add a location of the Starbucks downtown to my meeting with Gwen. It is in Conference Room B."], "distractor": "The 2nd one works."}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Barack Obama \" ) ) ) ) ) )", "bin": 0.83, "data_idx": 4313, "pred_tgts": ["(DoNotConfirm)", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Barack Obama \"))))))) 0L))", "(do (DoNotConfirm) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Barack Obama \"))))))) 0L)))"], "pred_translated": ["No", "Do I have any events with Barack Obama?", "No. Do I have any meetings with Barack Obama?"], "distractor": "Make me an all day orientation for this weekend"}
{"gold_tgt": "( FenceTriviaQa )", "bin": 0.83, "data_idx": 6646, "pred_tgts": ["(Yield (Today))", "(FenceTriviaQa)", "(FenceScope)"], "pred_translated": ["What is today's date?", "how many calandar dates can you make?", "hi, i need help with my calendar"], "distractor": "Do they have a patio?"}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "bin": 0.83, "data_idx": 11551, "pred_tgts": ["(Yield (Execute (ConfirmCreateAndReturnAction (Event.start_? (DateTime.date_? (?= (MD 16L (April))))))))", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 16L (April))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["April 16 works", "Yes it does.", "April 16 works"], "distractor": "Set up a meeting at the Pleasure Pier in Galveston for next weekend to see my family."}
{"gold_tgt": "( Yield ( WillRain ( WeatherQueryApi ( AtPlace ( FindPlace ( LocationKeyphrase.apply \" Branford, FL \" ) ) ) ( DateTime.date_? ( ?= ( Today ) ) ) ) ) )", "bin": 0.83, "data_idx": 587, "pred_tgts": ["(FenceWeather)", "(Yield (IsRainy (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Branford, FL \"))) (DateTime.date_? (?= (Today))))))", "(FenceScope)"], "pred_translated": ["I want to go fishing and want the weather for High Springs, FL", "Is it raining in Branford, FL right now?", "I want to go fishing and want the weather for High Springs, FL to be clear."], "distractor": "Can you find any meetings scheduled between 2 and 4 pm next Friday?"}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.83, "data_idx": 10925, "pred_tgts": ["(GenericPleasantry)", "(PleasantryAnythingElseCombined)", "(PleasantryCalendar)"], "pred_translated": ["Hello", "no thanks", "I need help with my calendar"], "distractor": "Can you tell me the weather for tomorrow in Greenville, NC?"}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.83, "data_idx": 6290, "pred_tgts": ["(PleasantryAnythingElseCombined)", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(RepeatAgent)"], "pred_translated": ["OK THANK YOU", "Yes", "what are you sure about that?"], "distractor": "I need to change the date of my doctor's appointment"}
{"gold_tgt": "( Yield ( DeleteCommitEventWrapper ( DeletePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" meeting with endodontics \" ) ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 6237, "pred_tgts": ["(FenceAttendee)", "(FenceSpecify)", "(FenceMultiAction)"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "update my calender events", "Can you cancel any events for tomorrow?"], "distractor": "Do I have any free time on Monday?"}
{"gold_tgt": "( let ( x0 ( DateTimeAndConstraintBetweenEvents ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" lunch \" ) ) ) ) ) ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" corporate dinner \" ) ) ) ) ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.start_? x0 ) ( Event.end_? x0 ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Tom \" ) ) ) ) ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 12324, "pred_tgts": ["(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" lunch \"))))) x1 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" corporate dinner \")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTimeAndConstraintBetweenEvents x0 x1)) (Event.end_? (DateTimeAndConstraintBetweenEvents x0 x1))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Tom \"))))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeAndConstraintBetweenEvents (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" lunch dinner \"))))) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" corporate dinner \"))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Tom \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeAndConstraintBetweenEvents (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" lunch \"))))) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" corporate dinner \"))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Tom \")))))))))))"], "pred_translated": ["I need to meet with Tom between lunch and the corporate dinner.", "Can you add a meeting with Tom between my lunch dinner and the corporate dinner?", "Can you add a meeting with Tom between lunch and the corporate dinner?"], "distractor": "Add Sonia to my address book"}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.83, "data_idx": 8581, "pred_tgts": ["(GenericPleasantry)", "(PleasantryAnythingElseCombined)", "(PleasantryCalendar)"], "pred_translated": ["Hello", "no thanks", "I need help with my calendar"], "distractor": "How bout the third event?"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventDuringRange ( ^ ( Event ) EmptyStructConstraint ) ( SeasonSummer ) ) ) )", "bin": 0.83, "data_idx": 4450, "pred_tgts": ["(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (SeasonSummer))))) 0L))", "(FenceDateTime)", "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (SeasonSummer))))"], "pred_translated": ["Do I have an event in the summer?", "Can you tell me when my next block of free time is?", "What do I have going on this summer?"], "distractor": "Schedule a meeting with Karl Boon on Thursday at 6:30 PM."}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( & ( Event.id_? ( negate ( ?= ( Event.id ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ) ) ( EventOnDate ( Execute ( refer ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) )", "bin": 0.83, "data_idx": 11496, "pred_tgts": ["(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)))))) 0L))", "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint))))) 0L))"], "pred_translated": ["Do I have anything else scheduled on that day?", "What else do I have scheduled on that day?", "Do I have anything else that day?"], "distractor": "What can you do?"}
{"gold_tgt": "( FenceScope )", "bin": 0.83, "data_idx": 3765, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(FenceScope)"], "pred_translated": ["Can you change the time of my doctor appointment?", "Can you change the doctor's appointment for Karl Boon", "Hello! Can you tell me the best Travel agent in OH?"], "distractor": "And what about December 6th?"}
{"gold_tgt": "( Yield ( DeleteCommitEventWrapper ( DeletePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateTime ( DateAtTimeWithDefaults ( Today ) ( NumberPM 3L ) ) ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" smith \" ) ) ) ) ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 4508, "pred_tgts": ["(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindNumNextEvent (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 3L)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" smith \"))))) 1L)))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 3L)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" smith \"))))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindNumNextEvent (EventOnDateTime (NextTime (NumberPM 3L)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" smith \"))))) 1L)))))"], "pred_translated": ["cancel the next meeting with smith at 3 pm today", "cancel the meeting with smith at 3pm today", "cancel the next meeting with smith at 3 pm"], "distractor": "Is my team meeting on July 4th?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( Tomorrow ) ( Event.subject_? ( ?~= \" Meeting \" ) ) ) ) ) ) ) ( Event.subject_? ( ?= \" Lunch with Boss \" ) ) ) ) )", "bin": 0.83, "data_idx": 11520, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))) (Event.subject_? (?= \" Lunch with Boss \")))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \" Meeting \"))))))) (Event.subject_? (?= \" Lunch with Boss \")))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Meeting \")) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))))) (Event.subject_? (?= \" Lunch with Boss \")))))"], "pred_translated": ["Change tomorrows meeting title to \"Lunch with Boss\".", "Change tomorrow's meeting title to \"Lunch with Boss\".", "Change tomorrow's meeting name to \"Lunch with Boss\"."], "distractor": "Can you reschedule my meeting with Tom to Friday around 2 pm?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( EventOnDate ( NextDOW ( Wednesday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) )", "bin": 0.83, "data_idx": 10919, "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Wednesday)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint)))))", "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint))))"], "pred_translated": ["What about Wednesday?", "How about next Wednesday?", "What do I have going on next Wednesday?"], "distractor": "How old are you?"}
{"gold_tgt": "( let ( x0 ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) x1 ( DateAtTimeWithDefaults ( DateTime.date ( Event.start x0 ) ) ( NumberAM 9L ) ) ) ( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id x0 ) ( & ( Event.start_? ( ?= x1 ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x1 ( HourMinuteAm 10L 30L ) ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 7509, "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 10L 30L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 9L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L))))))))"], "pred_translated": ["make that 9-10:30", "make that 9-10:30", "make that 9-10:30"], "distractor": "Please give me Pope Francis' home address."}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEventFromConstraint ( Event.start_? ( DateTime.date_? ( ?= ( nextDayOfMonth ( Today ) 6L ) ) ) ) ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "bin": 0.83, "data_idx": 5030, "pred_tgts": ["(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.day_? (?= (Day.apply 6L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(FenceOther)", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 6L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["yes the 6th works", "yes", "yes the 6th works"], "distractor": "The one on the 3rd"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( UpdateEventIntensionConstraint ) ( Event.start_? ( DateTime.time_? ( ?> ( NumberPM 6L ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 1795, "pred_tgts": ["(FenceOther)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberPM 6L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?> (NumberPM 6L)))))))"], "pred_translated": ["please change my choir practice", "No, I want it to start at 6 pm", "No, it needs to be later than 6."], "distractor": "please make a meet with my doctor"}
{"gold_tgt": "( let ( x0 ( NextTime ( NumberPM 1L ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( & ( Event.subject_? ( ?= \" pick meeting \" ) ) ( Event.start_? ( ?= x0 ) ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x0 ( HourMinutePm 1L 30L ) ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" pope \" ) ) ) ) ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 8682, "pred_tgts": ["(FenceScope)", "(FenceOther)", "(FenceSwitchTabs)"], "pred_translated": ["Please give me Pope Francis' home address.", "please update my phone number", "Can you forward this contact to Bill?"], "distractor": "memphis tn"}
{"gold_tgt": "( let ( x0 ( nextDayOfMonth ( Today ) 3L ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" candy binge \" ) ) ( Event.start_? ( DateTime.date_? ( ?= x0 ) ) ) ) ( Event.end_? ( DateTime.date_? ( ?= ( nextDayOfMonth x0 7L ) ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 10413, "pred_tgts": ["(let (x0 (nextDayOfMonth (Today) 3L)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \" candy binge \")) (DateAndConstraint x0 (nextDayOfMonth x0 7L)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" candy binge \")) (Event.end_? (DateTime.date_? (?= (nextDayOfMonth (Today) 7L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \" candy binge \")) (nextDayOfMonth (Today) 3L) (toDays 7)))))"], "pred_translated": ["Schedule a candy binge from the 3rd to the 7th.", "Schedule candy binge until the 7th.", "Schedule a candy binge for 7 days starting on the 3rd."], "distractor": "The duration should be for two hours."}
{"gold_tgt": "( Yield ( allows ( NextWeekList ) ( NextHolidayFromToday ( Holiday.PatriotDay ) ) ) )", "bin": 0.83, "data_idx": 11819, "pred_tgts": ["(Yield (NextHolidayFromToday (Holiday.PatriotDay)))", "(Yield (allows (NextWeekList) (NextHolidayFromToday (Holiday.PatriotDay))))", "(Yield (NextHolidayFromToday (Holiday.StPatricksDay)))"], "pred_translated": ["When is Patriot Day", "Is Patriot Day next week?", "When is St. Patrick's Day?"], "distractor": "I need help with my calendar"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" memo \" ) ) ( Event.start_? ( DateTime.date_? ( ?= ( MD 29L ( April ) ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 3646, "pred_tgts": ["(FenceScope)", "(FenceReminder)", "(FencePeopleQa)"], "pred_translated": ["How old are you?", "Remind me of the first flight to london", "Why didn't Mom come to my birthday party?"], "distractor": "Why am I single?"}
{"gold_tgt": "( Yield ( IsCold ( WeatherQueryApi ( AtPlace ( FindPlace ( LocationKeyphrase.apply \" Lake City, Florida \" ) ) ) ( DateTime.date_? ( ThisWeekend ) ) ) ) )", "bin": 0.83, "data_idx": 580, "pred_tgts": ["(Yield (NeedsJacket (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Lake City, Florida \"))) (DateTime.date_? (ThisWeekend)))))", "(Yield (NeedsJacket (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Lake City \"))) (DateTime.date_? (ThisWeekend)))))", "(Yield (IsRainy (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Lake City, Florida \"))) (DateTime.date_? (ThisWeekend)))))"], "pred_translated": ["Will I need a jacket when I go to Lake City, Florida this weekend?", "Will I need a jacket when I am outside Lake City this weekend?", "Will it be rainy this weekend in Lake City, Florida?"], "distractor": "How old are you?"}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.83, "data_idx": 12680, "pred_tgts": ["(GenericPleasantry)", "(PleasantryAnythingElseCombined)", "(PleasantryCalendar)"], "pred_translated": ["Hello", "no thanks", "I need help with my calendar"], "distractor": "Create an event for the fantasy football tournament lasting all of next week."}
{"gold_tgt": "( Yield ( == ( ResponseStatus.response ( AttendeeResponseStatus ( AttendeeFromEvent ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.subject_? ( ?~= \" AI show \" ) ) ( EventOnDate ( NextDOW ( Wednesday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Walter Bishop \" ) ) ) ) ) ) ) ) ( ResponseStatusType.Accepted ) ) )", "bin": 0.83, "data_idx": 5543, "pred_tgts": ["(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (Event.subject_? (?~= \" AI show \")))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Walter Bishop \")))))))) (ResponseStatusType.Accepted)))", "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" AI show \")) (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint)))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Walter Bishop \")))))))) (ResponseStatusType.Accepted)))", "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?= \" AI show \")) (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint)))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Walter Bishop \")))))))) (ResponseStatusType.Accepted)))"], "pred_translated": ["Will Walter Bishop be attending the AI show next Wednesday?", "Will Walter Bishop be attending the AI show on Wednesday?", "Will Walter Bishop be attending the AI show on Wednesday?"], "distractor": "no thanks"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateTime ( DateAtTimeWithDefaults ( NextDOW ( Tuesday ) ) ( NumberPM 7L ) ) ( Event.subject_? ( ?~= \" roller skating practice \" ) ) ) ) ) ) ) ( Event.duration_? ( ?= ( toHours 1 ) ) ) ) ) )", "bin": 0.83, "data_idx": 9360, "pred_tgts": ["(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" roller skating practice \")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Tuesday)) (NumberPM 7L)))) (Event.duration_? (?= (toHours 1))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" roller skating practice \")))))) (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 7L)))) (Event.duration_? (?= (toHours 1)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 7L)) (Event.subject_? (?~= \" roller skating practice \"))))))) (Event.duration_? (?= (toHours 1))))))"], "pred_translated": ["Modify roller skating practice to make it 1 hour long on Tuesday at 7:00 pm.", "Modify roller skating practice to make it 1 hour long on Tuesday at 7:00 pm.", "Modify roller skating practice on Tuesday at 7:00 pm to make it 1 hour long."], "distractor": "What about on the 6th?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" vacation begins \" ) ) ( Event.start_? ( DateTime.date_? ( ?= ( NextDOW ( Saturday ) ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 1765, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" vacation \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" vacation begins \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" vacation __User \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))))))"], "pred_translated": ["Mark vacation on saturday", "vacation begins on saturday", "add vacation __User to my calendar on saturday"], "distractor": "Can you change the location of the meeting?"}
{"gold_tgt": "( Yield ( Execute ( ConfirmDeleteAndReturnAction ( Event.subject_? ( ?~= \" all-hands meeting \" ) ) ) ) )", "bin": 0.83, "data_idx": 12826, "pred_tgts": ["(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(PleasantryAnythingElseCombined)", "(FenceMultiAction)"], "pred_translated": ["Yes it is.", "dundudundunnn", "Cancel everything for that day, actually."], "distractor": "When is Boxing Day this year?"}
{"gold_tgt": "( Yield ( EventAttendance ( RespondComment.apply \" sorry I have a doctors appointment \" ) :event ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( MD 29L ( February ) ) ( Event.subject_? ( ?~= \" conference \" ) ) ) ) ) ) :response ( ResponseStatusType.Declined ) ) )", "bin": 0.83, "data_idx": 5018, "pred_tgts": ["(Yield (EventAttendance (RespondComment.apply \" sorry I have a doctors appointment \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MDY 29L (February) (Year.apply 2020L)) (Event.subject_? (?~= \" conference \")))))) :response (ResponseStatusType.Declined)))", "(Yield (EventAttendance (RespondComment.apply \" sorry I have a doctors \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MDY 29L (February) (Year.apply 2020L)) (Event.subject_? (?~= \" conference \")))))) :response (ResponseStatusType.Declined)))", "(Yield (EventAttendance (RespondComment.apply \" sorry I have a doctors appointment \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 29L (February)) (Event.subject_? (?~= \" conference \")))))) :response (ResponseStatusType.Declined)))"], "pred_translated": ["Decline the conference on Feb 29 2020 and say sorry I have a doctors appointment.", "Decline the conference on Feb 29 2020 and say sorry I have a doctors", "Decline the conference on Feb 29 and say sorry I have a doctors appointment."], "distractor": "I need to change the date of my doctor's appointment"}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.83, "data_idx": 10925, "pred_tgts": ["(GenericPleasantry)", "(PleasantryAnythingElseCombined)", "(PleasantryCalendar)"], "pred_translated": ["Hello", "no thanks", "I need help with my calendar"], "distractor": "What time is my meeting with my boss on Wednesday?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( DateTime.date_? ( ?= ( NextDOW ( Tuesday ) ) ) ) ) ( Event.attendees_? ( & ( & ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Jim M \" ) ) ) ) ) ) ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Jim S \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Jane M \" ) ) ) ) ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 7503, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jim M \")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jim S \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jane M. \"))))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jim M \")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jim S \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jane \"))))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" meeting S \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday)))))) (Event.attendees_? (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jim M \")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jim S \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jane M. \"))))))))))))"], "pred_translated": ["Make a meeting with Jim M, Jim S, and Jane M. on Tuesday.", "Make a meeting with Jim M, Jim S, and Jane on Tuesday.", "Create meeting S on Tuesday with Jim M, Jim S, and Jane M."], "distractor": "Can you move my meeting to later in the day?"}
{"gold_tgt": "( FenceTriviaQa )", "bin": 0.83, "data_idx": 6646, "pred_tgts": ["(Yield (Today))", "(FenceTriviaQa)", "(FenceScope)"], "pred_translated": ["What is today's date?", "how many calandar dates can you make?", "hi, i need help with my calendar"], "distractor": "HOW CAN I HELP YOU"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( NextDOW ( Sunday ) ) ( NumberPM 8L ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 8841, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberAM 8L)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 8L)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (?= (NumberAM 8L)) (NextDOW (Sunday)))))))"], "pred_translated": ["Make me a new meeting next Sunday at 8 am", "Make me a new meeting next Sunday at 8 pm", "Can you schedule me an event on Sunday at 8"], "distractor": "Will it rain today?"}
{"gold_tgt": "( Yield ( FindNumNextEvent ( EventDuringRange ( ^ ( Event ) EmptyStructConstraint ) ( FullMonthofMonth ( March ) ) ) 3L ) )", "bin": 0.83, "data_idx": 12568, "pred_tgts": ["(Yield (Event.start (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (March))) 3L)))", "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (March))) 3L))", "(Yield (DateTime.time (Event.start (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (March))) 3L))))"], "pred_translated": ["When does my third event in march start?", "Whats my third event in march?", "What time is my third event in march?"], "distractor": "Does Wild River Grille in Reno have group seating?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( UpdateEventIntensionConstraint ) ( Event.start_? ( DateTime.time_? ( ?> ( NumberPM 6L ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 1795, "pred_tgts": ["(FenceOther)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberPM 6L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?> (NumberPM 6L)))))))"], "pred_translated": ["please change my choir practice", "No, I want it to start at 6 pm", "No, it needs to be later than 6."], "distractor": "Can you tell me who David's manager is?"}
{"gold_tgt": "( PleasantryAnythingElseCombined )", "bin": 0.83, "data_idx": 12680, "pred_tgts": ["(GenericPleasantry)", "(PleasantryAnythingElseCombined)", "(PleasantryCalendar)"], "pred_translated": ["Hello", "no thanks", "I need help with my calendar"], "distractor": "The one on the 3rd"}
{"gold_tgt": "( Yield ( allows ( NextWeekList ) ( NextHolidayFromToday ( Holiday.PatriotDay ) ) ) )", "bin": 0.83, "data_idx": 11819, "pred_tgts": ["(Yield (NextHolidayFromToday (Holiday.PatriotDay)))", "(Yield (allows (NextWeekList) (NextHolidayFromToday (Holiday.PatriotDay))))", "(Yield (NextHolidayFromToday (Holiday.StPatricksDay)))"], "pred_translated": ["When is Patriot Day", "Is Patriot Day next week?", "When is St. Patrick's Day?"], "distractor": "Where did I have lunch last Thursday?"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" finance meetings \" ) ) ) )", "bin": 0.83, "data_idx": 2201, "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.subject_? (?~= \" finance meetings \")))))", "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \" finance meetings \"))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.subject_? (?~= \" finance meetings \")))))) 0L))"], "pred_translated": ["What other finance meetings do I have?", "show me all finance meetings", "Do I have any other finance meetings?"], "distractor": "Will I need a jacket when I am outside Lake City this weekend?"}
{"gold_tgt": "( Yield ( Execute ( refer ( cursorNext ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) )", "bin": 0.83, "data_idx": 757, "pred_tgts": ["(Yield (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L))", "(FenceOther)", "(Yield (Execute (refer (cursorNext (extensionConstraint (^(Event) EmptyStructConstraint))))))"], "pred_translated": ["what is my next event on my calender", "No, I want it to start at 7 pm.", "What was the other event?"], "distractor": "Do I have anything scheduled at the end of the day on Friday?"}
{"gold_tgt": "( do ( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) ) ( FenceRecurring ) )", "bin": 0.83, "data_idx": 11697, "pred_tgts": ["(FenceDateTime)", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceDateTime))", "(FenceRecurring)"], "pred_translated": ["What about the day after next?", "Yes. Do I have any other meetings that week?", "Can you make this recurring every week?"], "distractor": "How many days do I have completely free next month?"}
{"gold_tgt": "( let ( x0 ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Bill \" ) ) ) ) ( EventOnDate ( NextDOW ( Thursday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ) ( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id x0 ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( ClosestDayOfWeek ( DateTime.date ( Event.start x0 ) ) ( Friday ) ) ( NumberAM 10L ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 7432, "pred_tgts": ["(FenceMultiAction)", "(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Bill \"))))))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Friday)) (NumberAM 10L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Bill \"))))))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberAM 10L)))))))"], "pred_translated": ["I need to cancel all my meetings for tomorrow.", "Change my meeting with Bill from Thursday to Friday at 10 am.", "Move my meeting with Bill from Thursday to Friday at 10 am."], "distractor": "No actually just make an event in the summer"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( & ( Event.location_? ( ?= ( LocationKeyphrase.apply \" Ihop \" ) ) ) ( EventDuringRange ( ^ ( Event ) EmptyStructConstraint ) ( NextWeekList ) ) ) ) ) )", "bin": 0.83, "data_idx": 12860, "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (Event.location_? (?= (LocationKeyphrase.apply \" Ihop \"))) (NextWeekList)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (& (Event.location_? (?= (LocationKeyphrase.apply \" Ihop \"))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))))", "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.location_? (?= (LocationKeyphrase.apply \" Ihop \"))) (NextWeekList))))"], "pred_translated": ["What about at Ihop next week?", "I meant next week at Ihop", "What meetings do I have at Ihop next week?"], "distractor": "Is my dentist appointment on July 4th?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateTime ( DateAtTimeWithDefaults ( NextDOW ( Tuesday ) ) ( NumberPM 7L ) ) ( Event.subject_? ( ?~= \" roller skating practice \" ) ) ) ) ) ) ) ( Event.duration_? ( ?= ( toHours 1 ) ) ) ) ) )", "bin": 0.83, "data_idx": 4825, "pred_tgts": ["(let (x0 (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" roller skating practice \")))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id x0) (& (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (DateTime.date (Event.start x0)) (Tuesday)) (NumberPM 7L)))) (Event.duration_? (?= (toHours 1))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" roller skating practice \")))))) (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 7L)))) (Event.duration_? (?= (toHours 1)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberPM 7L)) (Event.subject_? (?~= \" roller skating practice \"))))))) (Event.duration_? (?= (toHours 1))))))"], "pred_translated": ["Modify roller skating practice to make it 1 hour long on Tuesday at 7:00 pm.", "Modify roller skating practice to make it 1 hour long on Tuesday at 7:00 pm.", "Modify roller skating practice on Tuesday at 7:00 pm to make it 1 hour long."], "distractor": "Yes, the 11:00 AM - 11:30 AM timeslot works."}
{"gold_tgt": "( let ( x0 ( PersonName.apply \" Dan Marton \" ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( DateTime.date_? ( NextWeekList ) ) ) ( Event.attendees_? ( & ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) x0 ) ) ) ) ) ( AttendeeListHasRecipient ( FindManager ( FindManager ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) x0 ) ) ) ) ) ) ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 9999, "pred_tgts": ["(let (x0 (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Dan Marton \")))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (& (AttendeeListHasRecipient x0) (AttendeeListHasRecipient (FindManager (FindManager x0))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint)))))) (AttendeeListHasRecipient (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint))))))))))))))", "(do (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint)))))) (AttendeeListHasRecipient (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint)))))))))))))))"], "pred_translated": ["Schedule a meeting with Dan Marton and his skip next week.", "Schedule a meeting with him and his skip next week.", "Schedule a meeting with him and his skip next week."], "distractor": "can you change the time to 11am"}
{"gold_tgt": "( let ( x0 ( DateAtTimeWithDefaults ( MD 17L ( September ) ) ( NumberAM 10L ) ) ) ( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( & ( Event.start_? ( ?= x0 ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x0 ( NumberAM 11L ) ) ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 5822, "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.end_? (DateTime.time_? (?= (NumberAM 11L))))))))"], "pred_translated": ["What is the second business trip I have next month?", "I need to edit the business trip", "Can you change the time to 10-11am"], "distractor": "delete Saturday dinner"}
{"gold_tgt": "( PleasantryCalendar )", "bin": 0.83, "data_idx": 12098, "pred_tgts": ["(GenericPleasantry)", "(PleasantryCalendar)", "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cortana \")))))))"], "pred_translated": ["Hello", "I need help with my calendar", "Cortana"], "distractor": "I need to change the date of my doctor's appointment"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Paige Ashworth \" ) ) ) ) ) )", "bin": 0.83, "data_idx": 10375, "pred_tgts": ["(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Paige Ashworth \"))))))) 0L))", "(FencePeopleQa)", "(FenceOther)"], "pred_translated": ["Do I have any events with Paige Ashworth?", "Paige Ashworth?", "Paige Ashworth?"], "distractor": "I will be in Duluth from the 14th to the 18th"}
{"gold_tgt": "( FenceOther )", "bin": 0.83, "data_idx": 12889, "pred_tgts": ["(FenceSpecify)", "(PleasantryCalendar)", "(PleasantryAnythingElseCombined)"], "pred_translated": ["I need to delete something else", "What can you do?", "Thank you"], "distractor": "My easter listing ends at 8am on monday"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( EventAllDayStartingDateForPeriod ( Event.subject_? ( ?= \" on vacation \" ) ) ( Today ) ( toDays 2 ) ) ) ) )", "bin": 0.83, "data_idx": 1764, "pred_tgts": ["(FenceDateTime)", "(FenceOther)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (Event.subject_? (?= \" on vacation \")) (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 2)))))"], "pred_translated": ["Can you tell me when my next block of free time is?", "Can you tell me the weather for tomorrow in Greenville, NC?", "I'll be on vacation for 2 days"], "distractor": "Add date with Ashley on April 6"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventDuringRange ( Event.subject_? ( ?~= \" ski trip \" ) ) ( FullMonthofMonth ( December ) ) ) ) )", "bin": 0.83, "data_idx": 5478, "pred_tgts": ["(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" ski trip \")) (FullMonthofMonth (December)))))))", "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" ski trip \")) (FullMonthofMonth (December)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (Event.subject_? (?~= \" ski trip \")) (FullMonthofMonth (December))))))"], "pred_translated": ["Can you find my ski trip in December?", "Can you show me my ski trip in December?", "What about the ski trip in December?"], "distractor": "Can you tell me the weather for tomorrow in Greenville, NC?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( UpdateEventIntensionConstraint ) ( Event.start_? ( DateTime.time_? ( ?> ( NumberPM 6L ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 1795, "pred_tgts": ["(FenceOther)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberPM 6L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?> (NumberPM 6L)))))))"], "pred_translated": ["please change my choir practice", "No, I want it to start at 6 pm", "No, it needs to be later than 6."], "distractor": "create basketball game for work on sunday"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( Event.subject_? ( ?= \" meet with doctor \" ) ) ) ) )", "bin": 0.83, "data_idx": 3402, "pred_tgts": ["(FenceAttendee)", "(FenceTeams)", "(FencePeopleQa)"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "Who reports to me?", "Why didn't Mom come to my birthday party?"], "distractor": "create basketball game for work on monday"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" talk to bob \" ) ) ( Event.start_? ( DateTime.date_? ( NextWeekList ) ) ) ) ) ) )", "bin": 0.83, "data_idx": 6105, "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" talk to bob \")) (Event.start_? (DateTime.date_? (EarlyDateRange (NextWeekList))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" talk to bob \")) (Event.start_? (DateTime.date_? (NextWeekList)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" talk to bob \")) (Event.start_? (& (DateTime.date_? (NextWeekList)) (DateTime.date_? (NextWeekList))))))))"], "pred_translated": ["Schedule talk to bob early next week", "i need an appointment next week to talk to bob", "next week talk to bob"], "distractor": "Show me different times."}
