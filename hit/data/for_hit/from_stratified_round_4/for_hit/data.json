{"gold_tgt": "( Yield ( Execute ( ChooseCreateEventFromConstraint ( ^ ( Event ) EmptyStructConstraint ) ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "gold_src": "__User Hello . I want to schedule my appointment . Select this Thursday . __Agent Does one of these work ? __User OK __StartOfProgram\n", "min_probs": [0.1644761711359024, 0.4551464802259736, 0.051420096307992935, 0.0049004885368049145, 0.0024354183115065098, 0.00236281706020236, 0.0009469027863815427, 1.8698177164724818e-10, 1.2426346879343465e-10, 1.3536939709904407e-10], "bin": 0.15, "data_idx": "9002", "pred_tgts": ["(PleasantryAnythingElseCombined)", "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(FenceOther)", "(FenceSpecify)", "(DoNotConfirm)", "(PleasantryCalendar)", "(AgentStillHere)", "(Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))", "(Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["bye", "Yes", "How do I confirm?", "I want to change the time of my appointment on Thursday.", "No", "Hello. I need help with my calendar.", "Are you there?", "Yes", "Yes", "the first one"], "distractor": "Can you change the time to 8pm?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" Advisory Board Meeting \" ) ) ( Event.start_? ( DateTime.date_? ( ?= ( NextDOW ( Monday ) ) ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Shelley \" ) ) ) ) ) ) ) ) ) ) )", "gold_src": "__User Can you put Shelley on the schedule for Monday 's Advisory Board Meeting ? __StartOfProgram\n", "min_probs": [0.41032377011463383, 7.708235202104435e-05, 4.304946795620571e-07, 1.5041619816377883e-06, 1.4114393539072096e-08, 1.847534528511546e-10, 6.385019498241375e-10, 9.147910263536594e-11, 1.3795831097155485e-11, 5.372639438839499e-12], "bin": 0.45, "data_idx": "9154", "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \" Advisory Board Meeting \"))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Shelley \"))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Advisory Board Meeting \")) (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Shelley \"))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" Advisory Board Meeting \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Shelley \")))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Advisory Board Meeting \")) (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \" Advisory Board Meeting \")))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Shelley \"))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (^(Event) EmptyStructConstraint) (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \" Advisory Board Meeting \")))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Shelley \"))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Advisory Board Meeting \")))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Shelley \"))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Advisory Board Meeting \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday)))))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Shelley \"))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?= \" Advisory Board Meeting \")) (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Shelley \"))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Monday)) (Event.subject_? (?= \" Advisory Board Meeting \"))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Shelley \"))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Advisory Board __User \")) (EventOnDate (NextDOW (Monday)) (Event.subject_? (?~= \" Advisory Board Meeting \")))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Shelley \"))))))))))"], "pred_translated": ["Add Shelley to the Advisory Board Meeting on Monday.", "Can you add Shelley to Monday's Advisory Board Meeting?", "Put on calendar Advisory Board Meeting with Shelley on Monday.", "Add Shelley to the Advisory Board Meeting on Monday.", "Add Shelley to the Advisory Board Meeting on Monday.", "Add Shelley to the Advisory Board Meeting", "Add Shelley to the Advisory Board Meeting on Monday.", "Can you add Shelley to Monday's Advisory Board Meeting?", "Add Shelley to the Advisory Board Meeting on Monday.", "Add Shelley to Monday's Advisory Board Meeting."], "distractor": "Please schedule a meeting with the pope tomorrow."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( Event.start_? ( DateTime.date_? ( ?= ( Tomorrow ) ) ) ) ) ) )", "gold_src": "__User Perfect , thank you . __Agent Let me know if there 's anything else I can help you with . __User Make a appointment for tomorrow . __StartOfProgram\n", "min_probs": [0.9774088343683651, 5.037917068881229e-08, 2.2597992518227392e-08, 1.8200782914830945e-08, 7.493832028679045e-07, 2.32968013362167e-09, 1.3781985346997825e-05, 9.234722763352987e-14, 1.42053721985318e-13, 1.5623156929133834e-18], "bin": 0.95, "data_idx": "3956", "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventOnDate (Tomorrow) (Event.subject_? (?= \" appointment \"))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventOnDate (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))", "(Yield (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (Tomorrow))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" appointment \")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (^(Event) EmptyStructConstraint) (Tomorrow)))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (DateTime.time (Now))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" appointment for appointment \")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))))"], "pred_translated": ["Make a appointment for tomorrow", "I need to make another appointment.", "Make a appointment for tomorrow", "Make a appointment for tomorrow", "Make a appointment for tomorrow", "Make a appointment for tomorrow", "Make a appointment for tomorrow", "Make me an all day event for tomorrow", "Make a appointment for tomorrow at this time.", "Make a appointment for appointment tomorrow"], "distractor": "add fishing fishing on saturday"}
{"gold_tgt": "( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( negate ( ?~= \" work \" ) ) ) ) ) ) 0L ) )", "gold_src": "__User Show me events besides eating . __Agent I found 2 events not matching \" eating \" . __User Does my calender have anything that is not work ? __StartOfProgram\n", "min_probs": [0.15179577469825745, 0.010963521897792816, 0.007556505501270294, 0.3756772662899408, 3.409327920748961e-05, 0.03076035760342677, 2.1961570835352974e-05, 6.25433344977281e-06, 3.7467089726054507e-06, 4.258107185213056e-06], "bin": 0.15, "data_idx": "4057", "pred_tgts": ["(FenceOther)", "(PleasantryCalendar)", "(FenceSpecify)", "(Yield (FindEventWrapperWithDefaults (Event.subject_? (negate (?~= \" work \")))))", "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (negate (?~= \" work \")))))) 0L))", "(Yield (FindEventWrapperWithDefaults (Event.subject_? (negate (?= \" work \")))))", "(Yield (FindEventWrapperWithDefaults (Event.subject_? (negate (?~= \" Traveling \")))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))) 0L))", "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (negate (?~= \" work \")))))))"], "pred_translated": ["Show me events that are not eating.", "What can you do?", "Show me events that are not eating.", "Show me events that are not work related.", "Show events that are not eating.", "Do I have anything on my calendar besides work?", "Show me events that are not work related.", "Show me events that are not traveling.", "Do I have any upcoming events?", "Show me events that are not work related."], "distractor": "Add an all day event for fishing on saturday"}
{"gold_tgt": "( Yield ( Place.price ( singleton ( PlaceSearchResponse.results ( FindPlaceMultiResults ( LocationKeyphrase.apply \" The Wild Cow in Nashville \" ) ) ) ) ) )", "gold_src": "__User Can you find their number for me ? __Agent It 's ( 502 ) 452 - 9244 . __User Can you tell me how much The Wild Cow in Nashville costs ? __StartOfProgram\n", "min_probs": [0.6005582430133917, 1.0405467911419467e-10, 1.0444273200736698e-11, 7.970667056107964e-14, 8.716385930542042e-09, 4.584432362087161e-15, 1.4410958034296994e-13, 4.21067570006498e-15, 9.133752339483494e-18, 1.190493420232747e-19], "bin": 0.65, "data_idx": "7435", "pred_tgts": ["(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" The Wild Cow in Nashville \"))))))", "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" Wild Cow in Nashville \"))))))", "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" The Wild in Nashville \"))))))", "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" The Wild's in Nashville \"))))))", "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" The Wild \"))))))", "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" The Wild Restaurant in Nashville \"))))))", "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" The Wild's Nashville \"))))))", "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" Wild Wild in Nashville \"))))))", "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" The Wild Museum in Nashville \"))))))", "(Yield (Place.price (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" The Wild in Nashville in Nashville \"))))))"], "pred_translated": ["How much is The Wild Cow in Nashville?", "What is the price of Wild Cow in Nashville?", "What are the prices of The Wild in Nashville?", "How much is The Wild's in Nashville?", "What are the prices of The Wild", "What is the price of The Wild Restaurant in Nashville?", "What are the prices of The Wild's Nashville?", "What is the price of Wild Wild in Nashville?", "What is the price of Admission to The Wild Museum in Nashville?", "What is the price of The Wild in Nashville in Nashville?"], "distractor": "I like the earlier one."}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "gold_src": "__User The duration should be for two hours . Cancel the event prior to that one . __Agent I can only do one action at a time . If you separate your requests , I can help you . __User alright you can confirm the movies __StartOfProgram\n", "min_probs": [0.37437230348587036, 0.027210673317313194, 0.027184728533029556, 0.004238722380250692, 0.0027334410697221756, 0.010000629136920625, 0.06335400953384623, 2.662240891818393e-05, 7.677377239879905e-07, 1.7527959118643462e-09], "bin": 0.35, "data_idx": "3400", "pred_tgts": ["(PleasantryAnythingElseCombined)", "(FenceOther)", "(FenceSpecify)", "(FenceScope)", "(PleasantryCalendar)", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.subject_? (?~= \" movies \")) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (& (Event.subject_? (?~= \" movies \")) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?=))))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (& (Event.subject_? (?~= \" movies \")) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Wednesday)))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["That's alright.", "Cancel the event prior to that one.", "I need to change the date of my doctor's appointment.", "What do you think the staff meeting will be about?", "What can you do?", "Yes please cancel.", "The movies event looks good", "yes", "Do I have any days that I'm free to go to the movies?", "I'm going to the movies on Wednesday."], "distractor": "Learn spanish in winter"}
{"gold_tgt": "( Yield ( IsStormy ( WeatherQueryApi ( AtPlace ( FindPlace ( LocationKeyphrase.apply \" St. Louis \" ) ) ) ( DateTime.date_? ( ?= ( NextDOW ( Saturday ) ) ) ) ) ) )", "gold_src": "__User How hot will it be when I land in LA tonight ? __Agent The maximum temperature will be 0 . 00 \u00b0 F today . __User On Saturday in St. Louis will there be storms ? __StartOfProgram\n", "min_probs": [0.8064744156049377, 2.5577636500389486e-05, 1.9826257897524733e-05, 2.0759925431928577e-08, 2.0478147224473848e-09, 7.65756631384849e-10, 3.0528675402911543e-10, 2.4736001170847787e-10, 1.7926598012345555e-11, 7.973939124270536e-17], "bin": 0.85, "data_idx": "6225", "pred_tgts": ["(Yield (IsStormy (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" St. Louis \"))) (DateTime.date_? (?= (NextDOW (Saturday)))))))", "(Yield (IsRainy (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" St. Louis \"))) (DateTime.date_? (?= (NextDOW (Saturday)))))))", "(Yield (WillRain (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" St. Louis \"))) (DateTime.date_? (?= (NextDOW (Saturday)))))))", "(Yield (WillSleet (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" St. Louis \"))) (DateTime.date_? (?= (NextDOW (Saturday)))))))", "(Yield (IsSnowy (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" St. Louis \"))) (DateTime.date_? (?= (NextDOW (Saturday)))))))", "(Yield (WillSnow (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" St. Louis \"))) (DateTime.date_? (?= (NextDOW (Saturday)))))))", "(Yield (IsWindy (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" St. Louis \"))) (DateTime.date_? (?= (NextDOW (Saturday)))))))", "(Yield (Person.emailAddress (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" St. Louis \"))) (DateTime.date_? (?= (NextDOW (Saturday)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))) (Event.location_? (?= (LocationKeyphrase.apply \" St. Louis \")))))))", "(Yield (IsStormy (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" St. Louis in \"))) (DateTime.date_? (?= (NextDOW (Saturday)))))))"], "pred_translated": ["Is there going to be any storms in St. Louis on Saturday?", "Will it be raining in St. Louis on Saturday?", "Will it rain in St. Louis on Saturday?", "Will it be nice in St. Louis on Saturday?", "Will it be snowing in St. Louis on Saturday?", "Will it snow in St. Louis on Saturday?", "Will it be windy in St. Louis on Saturday?", "What is my email address for St. Louis on Saturday?", "I'm going to St. Louis on Saturday", "Is there going to be any storms coming through St. Louis in Saturday?"], "distractor": "when is my soccer game?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( EventOnDate ( MDY 1L ( June ) ( NextYear ) ) ( Event.subject_? ( ?= \" vacation \" ) ) ) ) ) )", "gold_src": "__User I would like to know what day presidents day falls on next year please . __Agent Presidents Day is on Monday , February 15 , 2021 . __User Can you put vacation on the first of June next year ? __StartOfProgram\n", "min_probs": [0.0071789296343922615, 0.11653145973502074, 0.016162860026187973, 0.0001343992351329783, 1.146075943647605e-05, 5.7760663349150665e-08, 7.783546605994742e-07, 7.876767966344509e-10, 7.344856110761012e-08, 6.249169649476001e-12], "bin": 0.15, "data_idx": "296", "pred_tgts": ["(FenceDateTime)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" vacation \")) (Event.start_? (DateTime.date_? (?= (MDY 1L (June) (NextYear)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" vacation \")) (Event.start_? (DateTime.date_? (NumberWeekOfMonth 1L (June))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" vacation \")) (Event.start_? (DateTime.date_? (FullMonthofMonth (June) (NextYear))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" vacation \")) (Event.start_? (DateTime.date_? (?= (HolidayYear (June) (NextYear)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (NumberWeekOfMonth 1L (June)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventDuringRange (Event.subject_? (?= \" vacation \")) (FullMonthofMonth (June) (NextYear))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (?= (MDY 1L (June) (NextYear))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" vacation \")) (Event.start_? (DateTime.date_? (WeekendOfMonth 1L (June))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" vacation \")) (Event.start_? (DateTime.date_? (?= (MDY 6L (June) (NextYear)))))))))"], "pred_translated": ["When is Arbor Day in 2021?", "Can you schedule a vacation on June 1 next year?", "Can you schedule a vacation for the first week of June?", "Can you put me down for vacation sometime in June next year?", "Can you put me down for vacation during June next year?", "i need to add an event for the first week of june", "Can you put me down for vacation in June next year?", "Can you make me an event for June 1 next year?", "Can you schedule a vacation for the first weekend in june?", "Can you put me down for vacation on June 6 next year?"], "distractor": "Can you create an event?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateTime ( NextTime ( NumberPM 1L ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ( Event.start_? ( DateTime.time_? ( ?= ( NumberPM 2L ) ) ) ) ) ) )", "gold_src": "__User Please remove my appointment at 1 PM . __Agent I did n't find any events on your calendar tomorrow at 1 : 00 PM . __User Please change my 1 PM appointment to 2 PM . __StartOfProgram\n", "min_probs": [0.003513198345899582, 0.29485805167144385, 0.008357058177630206, 0.0013641892931916795, 4.212298527056473e-09, 1.993368372406645e-08, 2.3894663795754994e-08, 1.5711675875969273e-10, 2.1544786207396828e-10, 1.6917318364038195e-09], "bin": 0.25, "data_idx": "5089", "pred_tgts": ["(FenceSpecify)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 1L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (^(Event) EmptyStructConstraint) (NumberPM 1L)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (DateTime.time_? (?= (NumberPM 1L)))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (?= (NextTime (NumberPM 1L)))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (^(Event) EmptyStructConstraint) (EventAtTime (^(Event) EmptyStructConstraint) (NumberPM 1L))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (NumberPM 1L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (?= (NextTime (NumberPM 2L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 1L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 1L)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))))))"], "pred_translated": ["I need to remove an appointment", "Please reschedule my appointment at 1 PM to 2 PM", "Please change my appointment at 1 PM to 2 PM.", "Please change my appointment at 1 PM to 2 PM", "Can you change the time to 2pm", "Please change my appointment at 1 PM to 2 PM.", "Please change my appointment at 1 PM to 2 PM.", "Please move my appointment at 1 PM to 2 PM.", "Please reschedule my appointment today at 1 PM to 2 PM.", "Please change my appointment at 1 PM to 2 PM."], "distractor": "Yes, that's good. Decline my RoundUp and say that I'm sick."}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( Event.start_? ( DateTime.date_? ( NextWeekList ) ) ) ) ) )", "gold_src": "__User cancel that please __Agent Is this what you want me to cancel ? __User Do n't cancel it , just move it to next week instead . __StartOfProgram\n", "min_probs": [0.6991965935685488, 0.003212263574823737, 0.0024438125547021627, 0.0014824670506641269, 0.0008594614337198436, 0.0008334695594385266, 0.0005451082805418549, 2.1862718787911147e-09, 5.624612929825564e-09, 7.647472556643382e-13], "bin": 0.65, "data_idx": "11368", "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (NextWeekList))))))", "(DoNotConfirm)", "(FenceSpecify)", "(FenceMultiAction)", "(FenceOther)", "(FenceDateTime)", "(do (DoNotConfirm) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (NextWeekList)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (NextWeekList))))))", "(do (DoNotConfirm) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))))"], "pred_translated": ["Yes and reschedule for next week.", "No, that's not it.", "No, just change the time.", "Cancel everything for that day, actually.", "defer the next meeting Simmons", "No, just reschedule it for next week at the same time.", "No, just move it to next week.", "No actually just move it to next week.", "I need to move my meeting to next week.", "No actually just move it to next week."], "distractor": "How do I create an event?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateTime ( DateAtTimeWithDefaults ( Tomorrow ) ( HourMinutePm 3L 30L ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ( Event.attendees_? ( & ( & ( & ( & ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Kevin \" ) ) ) ) ) ) ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Steve \" ) ) ) ) ) ) ) ( AttendeeListExcludesRecipient ( ?= ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" John \" ) ) ) ) ) ) ) ) ( AttendeeListExcludesRecipient ( ?= ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Kayla \" ) ) ) ) ) ) ) ) ( AttendeeListExcludesRecipient ( ?= ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Thomas \" ) ) ) ) ) ) ) ) ) ) ) )", "gold_src": "__User Please invite Kevin and Steve to tomorrow 's 3 : 30 meeting , and remove John , Kayla and Thomas __StartOfProgram\n", "min_probs": [0.12399687866147, 0.0898210063606906, 3.8008234828999093e-05, 2.8884120990414177e-05, 9.32052981903567e-08, 4.453945806571792e-09, 2.924957716259126e-09, 5.4691179153525685e-09, 8.536944270602275e-09, 8.35006148513881e-09], "bin": 0.15, "data_idx": "4714", "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.attendees_? (& (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (PersonName.apply \" Kevin \")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Steve \"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" John \")))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kayla \")))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Thomas \"))))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.attendees_? (& (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (EmptyStructConstraint) (PersonName.apply \" Kevin \")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Steve \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" John \"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kayla \")))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Thomas \"))))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.attendees_? (& (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (PersonName.apply \" Kevin \")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" John \"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" John \")))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kayla \")))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Thomas \"))))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.attendees_? (& (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (EmptyStructConstraint) (PersonName.apply \" Kevin \")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" John \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" John \"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kayla \")))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Thomas \"))))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.attendees_? (& (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (EmptyStructConstraint) (PersonName.apply \" Kevin \")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Steve \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Steve \"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kayla \")))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Thomas \"))))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.attendees_? (& (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (PersonName.apply \" Kevin \")))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Steve \")))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" John \"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kayla \")))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Thomas \"))))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.attendees_? (& (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (PersonName.apply \" Kevin \")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Steve \"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Steve \")))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kayla \")))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Thomas \"))))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (HourMinutePm 3L 30L)) (^(Event) EmptyStructConstraint)))))) (Event.attendees_? (& (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" John \"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kayla \")))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Thomas \"))))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.attendees_? (& (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (EmptyStructConstraint) (PersonName.apply \" Kevin \")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Steve \"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" John \")))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kayla \"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Thomas \"))))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.attendees_? (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (EmptyStructConstraint) (PersonName.apply \" Kevin \")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Steve \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" John \"))))))) (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kayla \"))))))) (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Thomas \")))))))))))))"], "pred_translated": ["Kevin will be replacing Steve, John, Kayla, and Thomas.", "Add Kevin, Steve, John and remove Kayla and Thomas.", "Add Kevin to the meeting and remove Kayla and Thomas.", "Add Kevin and John to the event and remove Kayla and Thomas.", "Add Kevin to the event and remove Kayla and Thomas.", "Kevin will be replacing Steve, John, Kayla, and Thomas.", "Add Kevin to the meeting and remove Steve, Kayla and Thomas.", "Remove John, Kayla, and Thomas from the 3:30 meeting tomorrow.", "Kevin will be replacing Steve and John with Kayla and Thomas.", "Add Kevin, Steve, John and remove Kayla and Thomas."], "distractor": "Who has not declined the happy hour __User"}
{"gold_tgt": "( do ( Yield ( Execute ( ChooseUpdateEventFromConstraint ( ^ ( Event ) EmptyStructConstraint ) ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" track meet \" ) ) ( Event.start_? ( DateTime.time_? ( TimeAround ( NumberPM 3L ) ) ) ) ) ) ) ) )", "gold_src": "__User Please change this to In N Out Burger and make it around 5 pm __Agent Does one of these work ? __User yes . now make me a track meet event around 3 pm __StartOfProgram\n", "min_probs": [0.09703688888327999, 0.007944372033313033, 0.0030048900259749736, 0.0002289473695553852, 2.413750666253819e-05, 1.3290820145242074e-06, 5.610333223776046e-06, 1.2363198111594407e-06, 4.5674630576191307e-07, 8.665156540398303e-08], "bin": 0.05, "data_idx": "9694", "pred_tgts": ["(do (Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" track meet \")) (Event.start_? (DateTime.time_? (TimeAround (NumberPM 3L)))))))))", "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" track meet \")) (Event.start_? (DateTime.time_? (TimeAround (NumberPM 3L)))))))))", "(do (Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" track meet \")) (Event.start_? (AroundDateTime (NextTime (NumberPM 3L)))))))))", "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" track meet \")) (Event.start_? (AroundDateTime (NextTime (NumberPM 3L)))))))))", "(do (Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" track meet \")) (Event.start_? (DateTimeConstraint (TimeAround (NumberPM 3L)) (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))))))", "(do (Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" track meet \")) (Event.start_? (?= (NextTime (NumberPM 3L)))))))))", "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" track meet \")) (Event.start_? (DateTimeConstraint (TimeAround (NumberPM 3L)) (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))))))", "(do (Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" track meet \")) (Event.start_? (DateTimeConstraint (TimeAround (NumberPM 3L)) (Today))))))))", "(do (Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" track meet \")) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 3L)))))))))", "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" track meet \")) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 3L)))))))))"], "pred_translated": ["Looks good. Now make my track meet start around 3 pm", "Yes. I also have a track meet that I want to attend around 3 pm", "Looks good. I also have a track meet at around 3 pm", "Yes. I also have a track meet that I want to attend around 3 pm", "Yes. I also have a track meet that day at around 3 pm", "Looks good. I also have a track meet at around 3 pm", "Yes. I also have a track meet that day at around 3 pm", "Looks good. I also have a track meet today around 3 pm", "Looks good. I also have a track meet that day around 3 pm", "Looks good. I also have a track meet that day around 3 pm"], "distractor": "meeting with john at sprint in 2 hours"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" lunch \" ) ) ( Event.start_? ( OnDateBeforeTime ( NextDOW ( Friday ) ) ( NumberPM 2L ) ) ) ) ) ) )", "gold_src": "__User first one is good __Agent I 've put that on your calendar . __User I will need another appointment on Friday for lunch sometime before 2 __StartOfProgram\n", "min_probs": [0.32976930090208956, 0.005454671905089704, 1.2538264857096828e-05, 1.540898361664883e-07, 2.5261084573424643e-05, 1.0602107985258434e-06, 6.373397601349041e-07, 2.4659830630330126e-07, 2.505362450977873e-07, 1.050351834772841e-14], "bin": 0.35, "data_idx": "8178", "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" lunch \")) (Event.start_? (OnDateBeforeTime (NextDOW (Friday)) (NumberPM 2L)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" lunch \")) (Event.start_? (DateTimeConstraint (?< (NumberPM 2L)) (NextDOW (Friday))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" lunch \")) (Event.start_? (?< (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (OnDateBeforeTime (NextDOW (Friday)) (NumberPM 2L))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" lunch \")) (Event.start_? (DateTimeAndConstraint (Now) (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventBeforeDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L)) (Event.subject_? (?= \" lunch \"))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" lunch \")) (Event.start_? (OnDateAfterTime (NextDOW (Friday)) (NumberPM 2L)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" lunch \")) (Event.start_? (DateTimeAndConstraint (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L)) (NextTime (NumberPM 2L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" lunch \")) (Event.start_? (DateTimeAndConstraint (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L))))))))", "(do (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (OnDateBeforeTime (NextDOW (Friday)) (NumberPM 2L)))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" lunch \")) (Event.start_? (OnDateBeforeTime (NextDOW (Friday)) (NumberPM 2L))))))))"], "pred_translated": ["I need a lunch before 2 pm Friday", "I need a lunch before 2 pm Friday", "I need a lunch before 2 pm Friday", "I need a meeting before 2 pm Friday", "I need to have a lunch before 2 pm Friday", "I need a lunch before 2 pm Friday", "I need a lunch after 2 pm Friday", "Can you schedule lunch between 2 and 2:30 pm on Friday?", "Can you schedule lunch for Friday after that around 2 pm?", "I need a lunch before 2 pm Friday"], "distractor": "Can you cancel my doctors appointment on Friday?"}
{"gold_tgt": "( let ( x0 ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Thursday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id x0 ) ( Event.start_? ( DateTimeConstraint ( Afternoon ) ( ClosestDayOfWeek ( DateTime.date ( Event.start x0 ) ) ( Friday ) ) ) ) ) ) ) )", "gold_src": "__User Cancel the meeting I had scheduled for this Thursday and switch it to Friday afternoon . __StartOfProgram\n", "min_probs": [0.040296271443367004, 0.0029437255480688875, 2.40611240807102e-08, 5.844283442793332e-09, 2.3835603994559152e-11, 5.114772946555792e-12, 4.440371193606314e-13, 1.846991131060912e-11, 4.3236760468869005e-16, 1.290159772875423e-16], "bin": 0.05, "data_idx": "2755", "pred_tgts": ["(FenceMultiAction)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Friday)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (Afternoon))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday))))))))) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Friday)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday))))))))) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Friday)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (previousDayOfWeek (Today) (Thursday)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Friday)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (^(Event) EmptyStructConstraint) (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint))))))) (Event.start_? (DateTimeConstraint (Afternoon) (NextDOW (Friday)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (DateTime.time (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (DateTime.date_? (?= (NextDOW (Thursday))))))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (DateTime.time (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Thursday))))))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Thursday)) (DateTime.time (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))))"], "pred_translated": ["I need to cancel all my meetings for tomorrow.", "Can you move my Thursday meeting to Friday afternoon?", "Can you change my meeting on Thursday to be in the afternoon?", "Can you move my meeting from Thursday to Friday afternoon?", "Change my meeting from Thursday to Friday afternoon.", "Move my meeting from last Thursday to this Friday afternoon.", "Can you move my Thursday meeting to Friday afternoon?", "Move my meeting on Thursday to the same time.", "Move my appointment on Thursday to the same time.", "Change my appointment on Thursday to next Thursday at the same time."], "distractor": "What do I have the day after that?"}
{"gold_tgt": "( let ( x0 ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id x0 ) ( Event.end_? ( DateTime.date_? ( ?= ( ClosestDayOfWeek ( DateTime.date ( Event.start x0 ) ) ( Saturday ) ) ) ) ) ) ) ) )", "gold_src": "__User What is my next all day event __Agent The next all - day event is \" Meeting with Damon Straeter , Abby Gonano , Dan Marton , and Jesse Rosenfeld \" tomorrow . __User Can you extend that to Saturday ? __StartOfProgram\n", "min_probs": [0.0073081535925247475, 4.037315982851454e-05, 2.920062059239554e-08, 4.2988477384243825e-07, 2.823820989604701e-08, 3.342100331891317e-08, 1.0894000984537913e-12, 2.321099429913155e-13, 9.384958683214527e-11, 9.932720668083433e-15], "bin": 0.05, "data_idx": "3945", "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.date_? (?= (NextDOW (Saturday))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.date_? (?= (ClosestDayOfWeek (DateTime.date (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Saturday))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (DateAndConstraint (nextDayOfWeek (Saturday)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.date_? (?= (nextDayOfWeek (DateTime.date (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Saturday))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (DateAndConstraint (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (nextDayOfWeek (Saturday)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.date_? (?=))) (Event.end_? (DateTime.date_? (?= (nextDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Saturday)))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.date_? (?=))) (Event.end_? (DateTime.date_? (?= (nextDayOfWeek (Saturday)))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.date_? (?= (Today)))) (Event.end_? (DateTime.date_? (?= (nextDayOfWeek (Saturday)))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.date_? (?= (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))) (Event.end_? (DateTime.date_? (?= (nextDayOfWeek (Saturday)))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.date_? (?=))) (Event.end_? (DateTime.date_? (?= (nextDayOfWeek (Execute (refer (extensionConstraint (^(DateTime) EmptyStructConstraint)))) (Saturday)))))))))"], "pred_translated": ["Can you change that to end on Saturday?", "Can you change that to end on Saturday?", "Can you make that an all day event lasting from tomorrow until Saturday?", "Can you extend that to the following Saturday?", "Can you make that an all day event from tomorrow until Saturday?", "Please make that event last from tomorrow until Saturday.", "Can you change that to last from tomorrow until Saturday?", "Make it from today until Saturday.", "Please make that event last from tomorrow until Saturday.", "Please make that event last from tomorrow until Saturday."], "distractor": "When does my next meeting end?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" Vacation \" ) ) ( EventAllDayForDateRange ( ^ ( Event ) EmptyStructConstraint ) ( DateAndConstraint ( NextDOW ( Monday ) ) ( NextDOW ( Tuesday ) ) ) ) ) ) ) )", "gold_src": "__User Can you delete the events on Monday and Tuesday ? __Agent I can only do one action at a time . If you separate your requests , I can help you . __User Create event for Monday and Tuesday called Vacation . __StartOfProgram\n", "min_probs": [0.79506915807724, 0.01806170493364334, 0.012771544978022575, 0.012285648845136166, 0.0022756082471460104, 4.302821536909721e-14, 1.1243848577268905e-17, 2.456592034473031e-19, 6.994251719028288e-20, 3.911168399968282e-19], "bin": 0.75, "data_idx": "8922", "pred_tgts": ["(FenceMultiAction)", "(FenceDateTime)", "(FenceOther)", "(FenceRecurring)", "(FenceSpecify)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" Vacation \")) (Event.start_? (DateTime.date_? (?= (Monday))))) (Event.end_? (DateTime.date_? (?= (nextDayOfWeek (NextDOW) (Tuesday)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" Vacation \")) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday) (Monday)))))) (Event.end_? (DateTime.date_? (?= (nextDayOfWeek (NextDOW) (Tuesday)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" Vacation \")) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday) (Tuesday)))))) (Event.end_? (DateTime.date_? (?= (nextDayOfWeek (NextDOW) (Tuesday)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" Vacation \")) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday) (Today) (Monday)))))) (Event.end_? (DateTime.date_? (?= (nextDayOfWeek (nextDayOfWeek) (Tuesday)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" Vacation \")) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Monday) (NextDOW (Monday)) (Monday)))))) (Event.end_? (DateTime.date_? (?= (nextDayOfWeek (nextDayOfWeek) (Tuesday)))))))))"], "pred_translated": ["Delete all events on Monday and Tuesday.", "What events do I have on Monday and Tuesday?", "How do I delete an event?", "I would like to create a recurring event on my calendar.", "please update my events in my calender", "Mark Monday through Tuesday as Vacation.", "Mark Monday through Tuesday as Vacation.", "Schedule a Vacation on Monday and Tuesday.", "Schedule a Vacation from this Monday to next Tuesday.", "Schedule a Vacation from Monday to Tuesday."], "distractor": "Add an all day event for fishing on saturday"}
{"gold_tgt": "( Yield ( DeleteCommitEventWrapper ( DeletePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" martin afterword \" ) ) ) ) ) ) ) ) ) ) )", "gold_src": "__User Yes please . Then recreate it for the week after __Agent I 've deleted your next event . Sorry , I ca n't handle that yet . __User ok make sure to delete the meeting with martin afterword __StartOfProgram\n", "min_probs": [0.5173492023517313, 2.5630884058663776e-05, 1.2374082424212064e-10, 2.452933652019808e-07, 9.481150164127417e-07, 3.2190097603450468e-06, 1.8072262241837207e-07, 7.226665555083637e-09, 2.459151015060596e-08, 2.633679995233518e-08], "bin": 0.55, "data_idx": "9784", "pred_tgts": ["(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" martin \")))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" meeting with martin \")))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" afterword with martin \")))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" meeting with martin \")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" martin \")))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" meeting \")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" martin \"))))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" martin \")))) (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" martin \")))) (DateTime.time (Now))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" martin \"))))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" martin \")))) (Execute (refer (& (^(DateTime) roleConstraint (Path.apply \" end \")) (extensionConstraint (^(DateTime) EmptyStructConstraint)))))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (Event.subject_? (?~= \" meeting \")) (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" martin \"))))))))))))))))"], "pred_translated": ["cancel the meeting with martin", "Cancel meeting with martin", "delete the afterword with martin", "cancel meeting with martin", "cancel the meeting with martin", "cancel the meeting with martin after this", "Delete my meeting with martin at this time", "Delete my meeting with martin after that", "Delete my meeting with martin after this", "cancel the meeting after martin"], "distractor": "Schedule a 1-1 with Amy today at 3 pm for 1 hour."}
{"gold_tgt": "( Yield ( Execute ( ChooseUpdateEvent ( Latest ) ( refer ( ^ ( UpdateEventResponse ) ActionIntensionConstraint ) ) ) ) )", "gold_src": "__User I need to move today 's staff meeting to Thursday afternoon . __Agent Does one of these work ? __User The later one works . __StartOfProgram\n", "min_probs": [0.22184033691883087, 0.08109150826931, 0.2854339810939414, 0.0010148528963327408, 2.300885742116844e-06, 5.191962770079599e-07, 4.717344452438117e-07, 4.2912908561721064e-10, 7.866525519772436e-10, 2.2709747438691804e-09], "bin": 0.25, "data_idx": "9826", "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(Yield (Execute (ChooseUpdateEvent (Latest) (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))", "(FenceDateTime)", "(Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEvent (Latest) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseUpdateEvent (BottomResult) (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseUpdateEvent (Earliest) (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseUpdateEventFromConstraint (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["Show me different times.", "Show some different timing.", "The later one.", "No, I need it to be later in the afternoon.", "yes", "I'll take the later one.", "The bottom one please", "The earlier one please", "The first one please.", "I like the later time."], "distractor": "What is the traffic like?"}
{"gold_tgt": "( Yield ( PersonFromRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Mike \" ) ) ) ) ) ) )", "gold_src": "__User schedule lunch with all departmental heads __Agent I can only look up names in your address book . Please use a full name and try again . __User Can you find Mike in my book ? __StartOfProgram\n", "min_probs": [0.8595221376845001, 0.0010156425414606929, 0.000964639475569129, 0.0002072109200526029, 7.149248145141934e-05, 3.557554079919922e-08, 1.8321262914721992e-06, 7.668836390648723e-10, 2.9985413400893627e-12, 5.076085380331507e-11], "bin": 0.85, "data_idx": "8188", "pred_tgts": ["(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mike \")))))))", "(FencePeopleQa)", "(FenceAttendee)", "(FenceScope)", "(Yield (PersonFromRecipient (RecipientFromRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mike \")))))", "(Yield (PersonFromRecipient (toRecipient (CurrentUser))))", "(Yield (PersonFromRecipient (FindManager (toRecipient (CurrentUser)))))", "(Yield (PersonFromRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mike \"))))))))", "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mike \"))))))))", "(do (Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mike \"))))))) (Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mike \"))))))))"], "pred_translated": ["Look up Mike in my address book", "Who are their bosses?", "Who are their bosses?", "Who are their bosses?", "Look up Mike in my address book", "What is my name?", "Who do I report to?", "Who is Mike's boss?", "What is Mike's phone number?", "Can you look up Mike and Mike"], "distractor": "Remove Damon from the meeting."}
{"gold_tgt": "( Yield ( DeleteCommitEventWrapper ( DeletePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateWithTimeRange ( EventOnDate ( Today ) ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" bob \" ) ) ) ) ) ( Afternoon ) ) ) ) ) ) ) ) )", "gold_src": "__User Cancel my meeting for this afternoon with bob . __StartOfProgram\n", "min_probs": [0.1048395132353731, 0.07601032415039433, 5.545322620579278e-05, 6.083347523020013e-07, 2.972307617896784e-06, 7.889404420040151e-07, 3.390458493316446e-07, 4.868371948048051e-08, 2.9631135661458523e-08, 2.2320619251675016e-09], "bin": 0.15, "data_idx": "11090", "pred_tgts": ["(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bob \"))))) (Afternoon)))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bob \")))) (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Afternoon))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.start_? (DateTimeConstraint (Afternoon) (Today))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bob \"))))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bob \")))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bob \"))))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bob \")))) (EventDuringRangeTime (^(Event) EmptyStructConstraint) (Afternoon))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bob \")))) (Event.start_? (DateTimeConstraint (Afternoon) (Today)))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bob \")))) (EventOnDate (Today) (^(Event) EmptyStructConstraint))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.start_? (DateTime.time_? (Afternoon))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bob \"))))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bob \")))) (EventOnDateTime (DateAtTimeWithDefaults (Today) (Noon)) (^(Event) EmptyStructConstraint))))))))))"], "pred_translated": ["Cancel my meeting with bob this afternoon", "Cancel my meeting this afternoon with bob.", "Cancel my meeting with bob this afternoon", "Cancel the meeting with bob", "Cancel the meeting with bob today", "Cancel my afternoon meeting with bob.", "Cancel my meeting with bob this afternoon", "Cancel the meeting with bob today", "Cancel my meeting with bob this afternoon", "Cancel my meeting today at noon with bob."], "distractor": "I meant training next month."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( Today ) ( NumberPM 3L ) ) ) ) ( Event.duration_? ( ?= ( toHours 1 ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Amy \" ) ) ) ) ) ) ) ) ) ) )", "gold_src": "__User Do I have anything scheduled today ? __Agent No , I did n't find any events for the rest of today . __User Add a one hour meeting with Amy to my schedule at 3 PM today . __StartOfProgram\n", "min_probs": [0.890419153770599, 2.8341978149894288e-05, 1.0900777295810085e-10, 2.6723646671917736e-10, 1.296438883945007e-10, 2.0565906093205666e-11, 1.4904719495242712e-11, 3.104751869988254e-11, 8.074510655095832e-12, 5.668836562123183e-12], "bin": 0.85, "data_idx": "11765", "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 3L)))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Amy \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 3L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Amy \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.duration_? (?= (toHours 1))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Amy \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" meeting \")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 3L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Amy \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 3L)))) (Event.isOneOnOne_? (?= (toHours 1)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Amy \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (NextTime (NumberPM 3L)))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Amy \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 3L)))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (AttendeeListHasRecipient (RecipientFromRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Amy \")))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 3L)))) (Event.location_? (?= (LocationKeyphrase.apply \" Amy \")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Amy \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTimeConstraint (?= (NumberPM 3L)) (Today))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Amy \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" meeting \")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 3L))))) (Event.duration_? (?= (toHours 1)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Amy \")))))))))))"], "pred_translated": ["Add a one hour meeting with Amy to my schedule today at 3 PM.", "Schedule a meeting with Amy at 3 pm today.", "Schedule a one hour meeting with Amy.", "Schedule a meeting with Amy at 3 pm today.", "Schedule a 1-1 with Amy today at 3 pm for 1 hour.", "Add a one hour meeting with Amy to my schedule at 3 PM.", "Add a one hour meeting with Amy to my schedule today at 3 PM.", "Schedule a meeting with Amy today at 3 pm.", "Add a one hour meeting with Amy to my schedule today at 3 PM.", "Add a one hour meeting with Amy to my schedule today at 3 PM."], "distractor": "Can you put me down for vacation in June next year?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.start_? ( DateTime.date_? ( ?= ( nextDayOfWeek ( Execute ( refer ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ( Monday ) ) ) ) ) ) ) )", "gold_src": "__User Good have that I have a meeting at 11 that day . __Agent Is this good ? __User Yes but reschedule it for the following Monday instead . __StartOfProgram\n", "min_probs": [0.5613569000835743, 0.00018744437405993934, 2.5274284632640788e-11, 6.451339893232532e-12, 1.2213363160006747e-11, 1.6649073566174178e-11, 2.2683327293761e-13, 2.900915065847376e-13, 5.402631908681912e-14, 2.3414557934227365e-15], "bin": 0.55, "data_idx": "8330", "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (nextDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Monday))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (nextDayOfWeek (Execute (refer (& (^(Date) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (Monday))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventRescheduled (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Monday))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (& (Event.start_? (DateTime.date_? (?= (nextDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Monday))))) (EventRescheduled (^(Event) EmptyStructConstraint))))))", "(do (refer (^(Event) ConstraintTypeIntension)) (Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (nextDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Monday)))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (nextDayOfWeek (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Monday))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (DowOfWeekNew (Monday) (WeekOfDateNew (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint))))))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?= (adjustByPeriodDuration (Execute (refer (extensionConstraint (^(DateTime) EmptyStructConstraint)))) (PeriodDuration.apply (toDays 1))))))))"], "pred_translated": ["Reschedule that meeting to the following Monday.", "Reschedule the meeting to the following Monday.", "Reschedule that please", "Can you change it to next Monday instead?", "No, it should be on Monday.", "Reschedule that meeting to the following Monday.", "Reschedule it for the following Monday.", "No, move it to the following Monday.", "No, it should be on Monday of that week.", "Can you move it to the next day?"], "distractor": "schedule down time with janice until 4\\2"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( ^ ( Event ) EmptyStructConstraint ) ) )", "gold_src": "__User The first one works __Agent I 've put that on your calendar . __User list all events __StartOfProgram\n", "min_probs": [0.2416972815990448, 0.48910817946137186, 0.006947438232600689, 0.005895786918699741, 0.00031213405112190395, 2.0821713176213475e-05, 6.220903058961789e-06, 4.822974165356051e-06, 2.804023190897253e-09, 2.1824407384100945e-09], "bin": 0.25, "data_idx": "10754", "pred_tgts": ["(FenceOther)", "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))", "(FenceMultiAction)", "(FenceAggregation)", "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \" events \"))))", "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \" list \"))))", "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Meeting \"))))", "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \" all \"))))", "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))", "(Yield (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (^(Event) EmptyStructConstraint))))"], "pred_translated": ["How do I add an event to my calendar?", "what's on my calendar?", "The second one, but make it an hour.", "How many times have I met with Clinton this week?", "events", "List my events please", "Search for \"Meeting\"", "Show me all events labeled \"all\"", "What is on my calendar for today?", "What did I have earlier today?"], "distractor": "Schedule a meeting with Barack Obama 10 months from now"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( NextDOW ( Monday ) ) ( NumberPM 12L ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" room 23 \" ) ) ) ) ) ) )", "gold_src": "__User Create meeting in room 23 on monday at 12 __StartOfProgram\n", "min_probs": [0.517351968035772, 0.0040409265348935654, 2.416472075080811e-07, 3.5932042044833893e-09, 1.7753240067222226e-08, 9.090009384684202e-09, 1.149475374042125e-09, 1.9753273571029085e-12, 1.2360366955135872e-12, 1.905938243239705e-14], "bin": 0.55, "data_idx": "3523", "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 12L)))) (Event.location_? (?= (LocationKeyphrase.apply \" room 23 \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" meeting \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 12L))))) (Event.location_? (?= (LocationKeyphrase.apply \" room 23 \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 12L)))) (Event.location_? (& (?= (LocationKeyphrase.apply \" room 23 \")) (roomRequest)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" meeting in room \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 12L))))) (Event.location_? (?= (LocationKeyphrase.apply \" room 23 \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" Team \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 12L))))) (Event.location_? (?= (LocationKeyphrase.apply \" room 23 \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" Meeting \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 12L))))) (Event.location_? (?= (LocationKeyphrase.apply \" room 23 \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" room \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 12L))))) (Event.location_? (?= (LocationKeyphrase.apply \" room 23 \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" meeting on room \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 12L))))) (Event.location_? (?= (LocationKeyphrase.apply \" room 23 \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" meeting in 23 \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 12L))))) (Event.location_? (?= (LocationKeyphrase.apply \" room 23 \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" meeting in on \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberPM 12L))))) (Event.location_? (?= (LocationKeyphrase.apply \" room 23 \")))))))"], "pred_translated": ["create meeting in room 23 on monday at 12", "create meeting on monday at 12 in room 23", "Book conference room 23 for Monday at 12pm.", "create meeting in room on monday at 12", "Make a meeting called Team on Monday at 12:00 pm in room 23.", "Create an event called \"Meeting\" on Monday at 12:00 pm in room 23.", "I need to book a room on Monday at 12:00 pm for room 23", "create meeting on room in room 23 on monday at 12", "create meeting in 23 on monday at 12", "create meeting in on monday at 12 in room 23"], "distractor": "Is Dan Schoffel invited?"}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEvent 2L ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "gold_src": "__User Can you give me an earlier option ? __Agent Does one of these work ? __User Please do the second work __StartOfProgram\n", "min_probs": [0.15979207424809325, 0.0008859208319336176, 0.0003169714764226228, 0.09433256742539128, 5.685484211426228e-05, 5.003239035161495e-13, 2.7045768736524374e-13, 2.8483970253417316e-12, 2.182015920171464e-12, 1.081157898208066e-09], "bin": 0.15, "data_idx": "6681", "pred_tgts": ["(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))", "(FenceOther)", "(FenceSpecify)", "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))", "(PleasantryAnythingElseCombined)", "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))", "(Yield (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint))))))"], "pred_translated": ["The 2nd one works.", "The later one works best.", "fix the second one", "The 2nd one works.", "I am not sure yet.", "ok", "ok", "The 1st one works.", "The first option.", "What is the second option?"], "distractor": "Can you make that an all day event from tomorrow until Saturday?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( UpdateEventIntensionConstraint ) ( Event.end_? ( DateTime.time_? ( ?= ( NumberPM 6L ) ) ) ) ) ) )", "gold_src": "__User Put tom as one of the attendees . __Agent Does this look right ? __User yes please make the end time 6 pm __StartOfProgram\n", "min_probs": [0.5067201022276974, 0.011227711103856564, 0.0015094825066626072, 0.0006556789739988744, 0.0003240873951706095, 1.6664947565018697e-07, 1.7624904160589614e-07, 4.714030736965151e-14, 1.7965639918349011e-16, 1.1658673490985754e-15], "bin": 0.55, "data_idx": "4314", "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberPM 6L)))))))", "(FenceOther)", "(FenceMultiAction)", "(FenceSpecify)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberPM 6L)))))))", "(Yield (Execute (^(Dynamic) ConfirmUpdateAndReturnActionIntension (Event.end_? (DateTime.time_? (?= (NumberPM 6L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 6L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberPM 3L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberPM 1L)))))))", "(do (Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint)))) (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberPM 6L))))))"], "pred_translated": ["Change the end time to 6:00 PM.", "Remove Damon from the meeting.", "Remove Tom from the event and replace him with John.", "Can you change the name of the event?", "Yes, but change the end time to 6:00 PM.", "The dinner will end at 6:00 PM.", "Can you extend this to 6PM please", "Change the end time to 3:00 PM.", "Change the end time to 1:00 PM.", "Change the end time to 6:00 PM."], "distractor": "I never went to the museum with Sam on the 22nd. Delete it."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( ^ ( Event ) EmptyStructConstraint ) ) ) )", "gold_src": "__User what is currently on my schedule __Agent Here 's what I found : __User can i schedule something __StartOfProgram\n", "min_probs": [0.41008472442626953, 0.27335435152053833, 0.07190101593732834, 0.0006349067552946508, 0.00035895657492801547, 0.0002439646632410586, 0.0578002424904247, 9.603779755914414e-09, 6.9739325297491684e-12, 2.029075744103335e-10], "bin": 0.45, "data_idx": "4987", "pred_tgts": ["(FenceSpecify)", "(PleasantryCalendar)", "(FenceOther)", "(PleasantryAnythingElseCombined)", "(FenceScope)", "(GenericPleasantry)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \" something \")))))", "(UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (^(Event) EmptyStructConstraint)))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (^(Event) EmptyStructConstraint))))"], "pred_translated": ["please update my calender", "what can you help me with", "what is my chat id", "ok", "what is currently on my calendar?", "hi", "Add an event to my calendar", "add something to my calendar", "Can you update that?", "Can you update that?"], "distractor": "How many inches?"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventForRestOfToday ( ^ ( Event ) EmptyStructConstraint ) ) ) )", "gold_src": "__User i payed well __Agent Let me know if there 's anything else I can help you with . __User ok fine , what about the rest of the day ? __StartOfProgram\n", "min_probs": [0.27598808674953546, 1.5504198352363962e-05, 0.00014810690566080848, 0.005523831406171141, 0.00010203943607727754, 0.00017574253317923305, 1.244209419336994e-06, 6.56818357074091e-08, 1.2106606836654008e-06, 1.9378391907806655e-13], "bin": 0.25, "data_idx": "8611", "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (EventForRestOfToday (^(Event) EmptyStructConstraint))))", "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))", "(Yield (FindEventWrapperWithDefaults (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint))))", "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventForRestOfToday (^(Event) EmptyStructConstraint))))) 0L))", "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))", "(Yield (FindEventWrapperWithDefaults (EventAfterDateTime (^(Event) EmptyStructConstraint) (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))", "(Yield (FindEventWrapperWithDefaults (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))", "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (^(Event) EmptyStructConstraint)))))", "(do (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint))))))"], "pred_translated": ["what about the rest of the day?", "today's calender", "What events do I have that day?", "What else do I have that day?", "Do I have anything later today?", "any other event on my calander today", "what is my next event on my calander", "What else do I have that day?", "What else do I have that day?", "What else do I have that day?"], "distractor": "Can you reschedule my Tuesday lunch?"}
{"gold_tgt": "( Yield ( Event.location ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" Climbing session 1 \" ) ) ) ) ) ) )", "gold_src": "__User I do nt have anything else there right ? __Agent I did n't find any other events . __User Where is my Climbing session 1 again ? __StartOfProgram\n", "min_probs": [0.33004262611594287, 0.0012482110884762764, 2.223377819502395e-09, 1.5541122407914978e-07, 8.160682859816129e-10, 6.657925477805353e-10, 6.042186684533325e-07, 4.3178431893690146e-07, 2.259525253937244e-07, 1.751761532797958e-14], "bin": 0.35, "data_idx": "2731", "pred_tgts": ["(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Climbing session 1 \")))))))", "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Climbing session \")))))))", "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Climbing session __User \")))))))", "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Climbing session \"))))))))", "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Climbing session? \")))))))", "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Climbing session again \")))))))", "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Climbing session \")) (Event.start_? (DateTime.date_? (?=)))))))))", "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Climbing session \")) (Event.subject_? (?~= \" Climbing session \"))))))))", "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Climbing session \")) (EventAtTime (^(Event) EmptyStructConstraint) (NumberPM 1L))))))))", "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD (Date.month (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))) (Event.subject_? (?~= \" Climbing session 1 \"))))))))"], "pred_translated": ["Where is my Climbing session 1?", "Where is my Climbing session?", "Where is my Climbing session __User", "Where is my Climbing session?", "Where is my Climbing session?", "Where is the Climbing session again?", "Where is my Climbing session?", "Where is my Climbing session?", "Where is my Climbing session at 1 pm?", "Where is the Climbing session 1 at that month?"], "distractor": "How do I create an event?"}
{"gold_tgt": "( Yield ( AttendeesWithNotResponse ( Event.attendees ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( ResponseStatusType.Accepted ) ) )", "gold_src": "__User who has not Declined to Team Lunch __Agent Here is the list of attendees who have not declined \" Team lunch \" : you and Kim Possible . __User So then who has not Accepted that ? __StartOfProgram\n", "min_probs": [0.9951443202786564, 0.00043167255353182554, 0.0003172266879118979, 5.553811934078112e-05, 4.295219696359709e-05, 2.136844042504422e-09, 7.138494711994245e-13, 5.916797830339419e-14, 1.0742019226151437e-15, 1.2734128413857484e-14], "bin": 0.95, "data_idx": "10212", "pred_tgts": ["(Yield (AttendeesWithNotResponse (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (ResponseStatusType.Accepted)))", "(RepeatAgent)", "(FenceOther)", "(FencePeopleQa)", "(FenceMultiAction)", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))", "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (ResponseStatusType.Accepted)))", "(Yield (AttendeesWithResponse (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (ResponseStatusType.Accepted)))", "(Yield (AttendeesWithNotResponse (Event.attendees (Execute (refer (extensionConstraint (Event.subject_? (?~= \" Accepted \")))))) (ResponseStatusType.Accepted)))", "(Yield (AttendeesWithNotResponse (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint))))))) (ResponseStatusType.Accepted)))"], "pred_translated": ["Who has not accepted that?", "Can you say that again?", "Who has not accepted the invite to Team Lunch?", "Who has not accepted the invite to the team lunch?", "Can you tell me who has not accepted the invite to the team lunch and then tell me why?", "Please cancel this event.", "Who has not accepted the invite to the event?", "Who has accepted that?", "Who has not accepted that", "Who has not accepted that?"], "distractor": "Anything between 4 and 5 pm that day?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.start_? ( DateTime.time_? ( ?= ( NumberPM 7L ) ) ) ) ) ) )", "gold_src": "__User Set a dinner date for 5 th of April __Agent Does one of these work ? __User No , at 7 PM __StartOfProgram\n", "min_probs": [0.8727121873774019, 0.00035283464239910245, 0.00018184668442700058, 6.497666223705386e-07, 2.2372427167761997e-12, 2.6424680964344156e-16, 8.328703162763724e-14, 1.2624552768367616e-12, 1.6914808316217563e-15, 1.9173338772942158e-16], "bin": 0.85, "data_idx": "3459", "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))))))", "(FenceOther)", "(DoNotConfirm)", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^(Time) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Time) EmptyStructConstraint))) (intension (NumberPM 7L)))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^((Constraint Time)) roleConstraint (Path.apply \" start \")) (^(Time) ConstraintTypeIntension)) (intension (?= (NumberPM 7L))))))", "(NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^(Time) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Time) EmptyStructConstraint))) (intension (NumberPM 7L)))", "(do (Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint)))) (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 7L))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))))))", "(do (refer (^(Event) ConstraintTypeIntension)) (Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 7L))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (TimeAround (NumberPM 7L)))))))"], "pred_translated": ["can you arrange with 7:00 PM", "The first one.", "no", "No, I want it to start at 7 pm.", "No, I want it to start at 7 pm.", "No, I want it to start at 7 pm.", "No, I want it to start at 7 pm.", "change the time to 7pm", "No, I want it to start at 7 pm.", "Can you make it around 7 pm?"], "distractor": "When does my next meeting end?"}
{"gold_tgt": "( Yield ( Person.phoneNumber ( PersonFromRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Ben \" ) ) ) ) ) ) ) )", "gold_src": "__User change the meeting with ben time at 10 . 00 am __Agent How is this ? __User I need to call Ben to inform him of the change . Do you have his number ? __StartOfProgram\n", "min_probs": [0.6242852807044983, 0.169005885720253, 0.05990375950932503, 0.0552496612071991, 0.021828845143318176, 0.009604536928236485, 0.007228413596749306, 0.0070846364833414555, 0.005766743328422308, 1.6956723230683744e-05], "bin": 0.65, "data_idx": "4699", "pred_tgts": ["(FenceScope)", "(FenceSwitchTabs)", "(FenceOther)", "(FenceNavigation)", "(FencePeopleQa)", "(FenceReminder)", "(FenceSpecify)", "(FenceAttendee)", "(FencePlaces)", "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ben \"))))))))"], "pred_translated": ["Prepare presentation materials", "email Ben that the meeting is set", "Defer the meeting with lee Chan", "How long will it take me to get to this location?", "I need Ben's home address.", "ok set alaram", "change the meeting with Ben", "please make a meet with my doctor", "What is the address of the amphitheater?", "What is Ben's phone number?"], "distractor": "Who has not declined the happy hour?"}
{"gold_tgt": "( Yield ( Execute ( NewClobber ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ( ^ ( Recipient ) ConstraintTypeIntension ) ( intension ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Erin \" ) ) ) ) ) )", "gold_src": "__User Do I have meeting with John tomorrow ? __Agent Yes , I found one event tomorrow . It 's \" Meeting with John and Damon Straeter \" from 2 : 00 to 2 : 30 PM . __User how about with Erin ? __StartOfProgram\n", "min_probs": [0.8863591917841589, 1.0271260417256329e-09, 4.489310426248778e-08, 3.454354558825963e-11, 1.5142672659991945e-12, 1.2354915199339844e-09, 3.0059086302744437e-12, 5.301171584939537e-13, 8.706038575531284e-15, 9.352045844724858e-16], "bin": 0.85, "data_idx": "8572", "pred_tgts": ["(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Erin \"))))))", "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Erin \"))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Erin \")))))))", "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Erin \")))))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \"))))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (alwaysTrueConstraintConstraint (^((List Attendee)) AlwaysTrueConstraint))) (intension (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Erin \"))))))))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^(Recipient) ConstraintTypeIntension) (intension (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Erin \"))))))))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (alwaysTrueConstraintConstraint (^((List Attendee)) AlwaysTrueConstraint))) (intension (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Erin \")))))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (alwaysTrueConstraintConstraint (^((List Attendee)) AlwaysTrueConstraint))) (intension (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Erin \")))))))))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (alwaysTrueConstraintConstraint (^((List Attendee)) AlwaysTrueConstraint))) (intension (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Erin \")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Erin \")))))))))))"], "pred_translated": ["What about with Erin?", "What do I have with Erin?", "What about with Erin?", "Who is Erin?", "What about with Abby?", "What about with Erin?", "What about with Erin?", "What about with Erin?", "What about with Erin?", "What about with Erin and Erin"], "distractor": "What about the next day?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" Spring Festival \" ) ) ( Event.start_? ( DateTime.date_? ( FullMonthofMonth ( April ) ) ) ) ) ) ) )", "gold_src": "__User Schedule Spring Festival for April . __StartOfProgram\n", "min_probs": [0.9678120015093311, 3.0271959003454687e-07, 8.551761720332395e-09, 1.0674728061028923e-09, 9.505120805668116e-09, 1.3765628743591963e-10, 4.4863101438375236e-10, 6.720403865826974e-11, 1.0263363116276339e-11, 9.987562629526688e-12], "bin": 0.95, "data_idx": "8036", "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Spring Festival \")) (Event.start_? (DateTime.date_? (FullMonthofMonth (April))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.date_? (FullMonthofMonth (April)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \" Spring Festival \")) (FullMonthofMonth (April))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventDuringRange (Event.subject_? (?= \" Spring Festival \")) (FullMonthofMonth (April))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Spring Festival \")) (Event.start_? (DateTime.date_? (Date.month_? (?= (April)))))))))", "(Yield (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Spring Festival \")) (Event.start_? (DateTime.date_? (FullMonthofMonth (April)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Spring Festival \")) (Event.start_? (DateTime.date_? (NumberWeekOfMonth 1L (April))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Spring Festival \")) (Event.start_? (DateTime.date_? (Date.month_? (FullMonthofMonth (April)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Spring Festival \")) (Event.start_? (& (DateTime.date_? (FullMonthofMonth (April)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Spring Festival \")) (Event.start_? (& (DateTime.date_? (?=)) (DateTime.date_? (FullMonthofMonth (April)))))))))"], "pred_translated": ["Spring Festival is in April", "Can you add an event to my calendar for April", "Can you add Spring Festival to my calendar for April?", "Spring Festival in April", "Spring Festival is in April", "Schedule Spring Festival for April.", "Schedule Spring Festival for the first week of April.", "Schedule Spring Festival for April.", "Spring Festival is in April", "Schedule Spring Festival for April."], "distractor": "Anything between 4 and 5 pm that day?"}
{"gold_tgt": "( Yield ( Event.start ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" soccer game \" ) ) ) ) ) ) )", "gold_src": "__User What time is the soccer game ? __StartOfProgram\n", "min_probs": [0.8765713722693402, 1.683654845030145e-05, 1.8444208350379914e-07, 8.202559234330573e-08, 3.465758818108365e-11, 2.188330817652772e-06, 3.560658349408931e-08, 1.5447015608446484e-09, 1.5740577585749974e-08, 6.487953488658854e-12], "bin": 0.85, "data_idx": "4213", "pred_tgts": ["(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" soccer game \")))))))", "(do (FindEventWrapperWithDefaults (Event.subject_? (?~= \" soccer game \"))) (Yield (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" soccer game \"))))))", "(Yield (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))", "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \" soccer game \"))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" soccer \")))))))", "(Yield (DateTime.time (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" soccer game \"))))))))", "(Yield (DateTime.date (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" soccer game \"))))))))", "(do (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" soccer game \"))))) (Yield (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?= \" soccer game \")))))))"], "pred_translated": ["when is my soccer game?", "When is my soccer game?", "When is my soccer game?", "What time is it?", "search for soccer game", "when is my soccer event?", "What time is the soccer game?", "What day is the soccer game?", "when is my soccer game?", "when is my soccer game?"], "distractor": "No, cancel that all day event."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( DateTime.date_? ( ?= ( previousMonthDay ( Today ) ( August ) 24L ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" joe \" ) ) ) ) ) ) ) ) ) ) )", "gold_src": "__User put meeting with joe last aug 24 __StartOfProgram\n", "min_probs": [0.25748407731030853, 0.02717670500454888, 4.540901804911755e-07, 3.059765540268102e-08, 7.2603930027258154e-09, 8.713023270643345e-08, 5.898748409334706e-11, 3.147087432189729e-09, 5.979356908181915e-10, 6.313318814717848e-09], "bin": 0.25, "data_idx": "5937", "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (previousMonthDay (Today) (August) 24L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" joe \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (MD 24L (August))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" joe \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (MDY 24L (August) (Year.apply 2019L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" joe \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (previousDayOfMonth (Today) 24L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" joe \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (MD 24L (August))))) (Event.attendees_? (AttendeeListHasRecipient (RecipientFromRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" joe \")))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" meeting \")) (Event.start_? (DateTime.date_? (?= (previousMonthDay (Today) (August) 24L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" joe \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (MDY 24L (August) (LastYear))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" joe \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (nextMonthDay (Today) (August) 24L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" joe \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (previousMonthDay (Today) (August) \\ 24\\ 17\\ L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" joe \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" meeting \")) (Event.start_? (DateTime.date_? (?= (MD 24L (August)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" joe \")))))))))))"], "pred_translated": ["put the meeting with joe on aug 24", "put meeting with joe at aug 24", "put meeting with joe at aug 24 2019", "put the meeting with joe on the 24th", "put meeting with joe at aug 24", "put the meeting with joe on aug 24", "put meeting with joe at aug 24 last year", "put meeting with joe at aug 24", "put the meeting with joe at aug 24 17", "put meeting with joe at aug 24"], "distractor": "postpone training to the next month"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventOnDate ( Today ) ( ^ ( Event ) EmptyStructConstraint ) ) ) )", "gold_src": "__User I keep forgetting things , so show my day __StartOfProgram\n", "min_probs": [0.3009682381760712, 0.07989740428595216, 0.0008983213338069618, 0.00021717216221226257, 0.000298039880503035, 4.2454009975949697e-07, 3.693338373894151e-06, 7.0979146085085e-07, 8.821310646889166e-10, 2.530831389553067e-13], "bin": 0.35, "data_idx": "6369", "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))", "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))", "(FenceOther)", "(Yield (Today))", "(Yield (FindEventWrapperWithDefaults (EventForRestOfToday (^(Event) EmptyStructConstraint))))", "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (Today))))", "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \" day \"))))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))))", "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (Now) (^(Event) EmptyStructConstraint))))", "(Yield (FindEventWrapperWithDefaults (EventOnDateBeforeTime (Today) (^(Event) EmptyStructConstraint) (DateTime.time (Now)))))"], "pred_translated": ["What is on my calendar for today?", "What events do I have scheduled?", "Can you tell me the weather for tomorrow in Greenville, NC?", "What is today's date?", "What do I have later today?", "What is on my calendar for today?", "What day is it?", "can you explained the meeting", "What's going on right now?", "What did I have earlier today?"], "distractor": "Can you reschedule my Tuesday Lunch?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.start_? ( ?= ( adjustByPeriodDuration ( Now ) ( PeriodDuration.apply :duration ( toHours 1 ) ) ) ) ) ) ) )", "gold_src": "__User schedule a meeting with amma at 6 pm __Agent Is this good ? __User actually it should be in 1 hour from now __StartOfProgram\n", "min_probs": [0.7787401305499361, 0.007295845542103052, 3.8923280283279165e-10, 5.5062829182815715e-09, 1.819211379684411e-08, 1.1522479960124862e-10, 2.135440590610525e-11, 8.88699150270492e-13, 1.5574963485160577e-10, 0.0], "bin": 0.75, "data_idx": "593", "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 1))))))))", "(FenceSpecify)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (DateTime.time (Now))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (adjustByDuration (DateTime.time (Now)) (toHours 1))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 1))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?= (adjustByPeriodDuration (PeriodDuration.apply :duration (toHours \" 1 1 in \"))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDateTime (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 1))) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?= (adjustByPeriodDuration (PeriodDuration.apply :duration (toHours \" 1 from 1 \"))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (adjustByDuration (Execute (refer (& (^(Time) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Time) EmptyStructConstraint))))) (toHours 1))))))))", "(Error)"], "pred_translated": ["postpone the meeting to one hour from now", "can you change the meeting time", "Make it start right now", "Make it an hour from now", "Push it to an hour from now.", "Push it back by 1 1 in.", "I meant the meeting in 1 hour.", "1 from 1 is better.", "Can you make it an hour later?", "wait i am not sure if it is ok or not"], "distractor": "What are the prices of The Wild in Nashville?"}
{"gold_tgt": "( do ( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) ) ( Yield ( EventAttendance :event ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventDuringRange ( Event.subject_? ( ?~= \" RoundUp \" ) ) ( NextWeekList ) ) ) ) ) :response ( ResponseStatusType.Declined ) ) ) )", "gold_src": "__User yes . Now I would like to decline the afterparty and say that I 'm still at work __Agent I have declined it . I will decline \" Afterparty \" and send a response to the organizer with the following comment : \" I 'm still at work \" . Is that ok ? __User Ok Perfect , then could you decline the RoundUp for next week . __StartOfProgram\n", "min_probs": [0.46089404512005727, 8.957846090478464e-06, 4.955469575686727e-11, 5.922445649576783e-09, 9.585856600137167e-15, 2.9730475702363575e-17, 1.4717332683779658e-16, 2.3225981163050345e-21, 8.159656024405876e-17, 1.7367688312633677e-21], "bin": 0.45, "data_idx": "3634", "pred_tgts": ["(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" RoundUp \")) (NextWeekList))))) :response (ResponseStatusType.Declined))))", "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" RoundUp \")) (NextWeekList))))) :response (ResponseStatusType.Declined)))", "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" RoundUp \"))))) :response (ResponseStatusType.Declined)))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" RoundUp \"))))) :response (ResponseStatusType.Declined))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?= \" RoundUp \")) (NextWeekList))))) :response (ResponseStatusType.Declined))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" RoundUp \")) (NextWeekList))))) :response (ResponseStatusType.Declined)))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" RoundUp day \")) (NextWeekList))))) :response (ResponseStatusType.Declined))))", "(Yield (EventAttendance (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" RoundUp \")) (NextWeekList))))) :event (Execute (^(Dynamic) ConfirmAndReturnAction)) :response (ResponseStatusType.Declined)))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (singleton) (Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" RoundUp \")) (NextWeekList))))) :response (ResponseStatusType.Declined))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" RoundUp \")) (NextWeekList))))) :event (RespondComment.apply \" decline \") :response (ResponseStatusType.Declined))))"], "pred_translated": ["Yes, that's good. Decline my RoundUp for next week.", "Decline the RoundUp next week", "can you decline the RoundUp", "Yes, that's good. Decline my RoundUp and say that I'm sick.", "Yes, that's good. Decline my RoundUp for next week.", "Yes, that's good. Decline my RoundUp for next week", "Yes, that's good. Decline RoundUp day next week", "Yes, that's good. Decline RoundUp next week as well.", "Yes, that's good. Decline RoundUp next week", "Yes, thank you. Decline my RoundUp for next week and say that I will be out of town."], "distractor": "What's the first thing going on right now?"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( ^ ( Event ) EmptyStructConstraint ) ) )", "gold_src": "__User ok delete all events one by one __Agent I can only do one action at a time . If you separate your requests , I can help you . __User WHEN YOU ARRANGE WITH EVENT __StartOfProgram\n", "min_probs": [0.709835729642819, 0.004169601947069168, 0.003957436420023441, 0.00010023266332343309, 0.0002298370130544091, 8.925383294339315e-05, 1.9920816440253444e-06, 2.562785500667534e-05, 2.371269861625399e-05, 0.0006513204384397397], "bin": 0.75, "data_idx": "7995", "pred_tgts": ["(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))))", "(PleasantryCalendar)", "(FenceOther)", "(Yield (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))", "(Yield (Event.start (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))", "(Yield (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))))", "(Yield (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" ARRANGE \")))))))"], "pred_translated": ["When is my appointment?", "I need help with my calendar", "Why is that?", "what events do I have coming up", "when is my next meeting?", "I need to make an appointment", "What is my next scheduled event?", "What is the meeting about?", "When is the meeting?", "WHEN IS MY ARRANGE"], "distractor": "The first option."}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Tuesday ) ) ( Event.subject_? ( ?~= \" lunch \" ) ) ) ) ) ) ) ( EventRescheduled ( ^ ( Event ) EmptyStructConstraint ) ) ) ) )", "gold_src": "__User I need to reschedule my Tuesday lunch . __StartOfProgram\n", "min_probs": [0.29422950744628906, 0.021469194442033768, 0.006734946742653847, 0.09370370786194392, 0.008506127356583007, 5.54714267858448e-07, 5.517218831780016e-10, 7.453145936101728e-10, 2.1757501031546943e-10, 1.96201172861972e-10], "bin": 0.25, "data_idx": "7367", "pred_tgts": ["(FenceSpecify)", "(PleasantryCalendar)", "(FenceOther)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \" lunch \"))))))) (EventRescheduled (^(Event) EmptyStructConstraint)))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" lunch \")) (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint))))))) (EventRescheduled (^(Event) EmptyStructConstraint)))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" lunch \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Tuesday)))))))))) (EventRescheduled (^(Event) EmptyStructConstraint)))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" lunch \")))))) (EventRescheduled (^(Event) EmptyStructConstraint)))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint)))))) (EventRescheduled (^(Event) EmptyStructConstraint)))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Tuesday)) (Event.subject_? (?~= \" Lunch \"))))))) (EventRescheduled (^(Event) EmptyStructConstraint)))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Lunch \")) (EventOnDate (NextDOW (Tuesday)) (^(Event) EmptyStructConstraint))))))) (EventRescheduled (^(Event) EmptyStructConstraint)))))"], "pred_translated": ["I need to change the date of my doctor's appointment", "I need help with my calendar", "Can you tell me the weather for tomorrow in Greenville, NC?", "I need to reschedule my lunch on Tuesday.", "Can you reschedule my Tuesday lunch?", "Can you reschedule my lunch on Tuesday?", "Please reschedule my lunch", "Can you reschedule my appointment on Tuesday?", "Can you reschedule my Tuesday Lunch?", "Can you reschedule my Tuesday Lunch?"], "distractor": "Add Shelley to the Advisory Board Meeting on Monday."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( ?= ( adjustByPeriodDuration ( Now ) ( PeriodDuration.apply ( toYears 10 ) ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Barack Obama \" ) ) ) ) ) ) ) ) ) ) )", "gold_src": "__User None __Agent Let me know if there 's anything else I can help you with . __User Book a meeting for 10 years from right now with Barack Obama __StartOfProgram\n", "min_probs": [0.10113862903123558, 0.031280774065188185, 0.00029996003898383146, 2.8245041284060576e-05, 1.191426876910221e-06, 2.532134443786329e-06, 1.6804248115355871e-06, 1.549116533728405e-06, 5.022322019366319e-07, 3.611403630843175e-07], "bin": 0.15, "data_idx": "7875", "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply (toYears 10))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Barack Obama \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (adjustByPeriod (Today) (toYears 10))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Barack Obama \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (NextPeriod (toYears 10)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Barack Obama \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (FullYearofYear (NextYear)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Barack Obama \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply (toDays 10))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Barack Obama \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (adjustByPeriod (DateTime.date (Now)) (toYears 10))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Barack Obama \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (FullYearofYear (+ 10 10)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Barack Obama \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (FullYearofYear (adjustByPeriod (Today) (toYears 10))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Barack Obama \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (FullYearofYear (Date.year (Today))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Barack Obama \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply (toMonths 10))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Barack Obama \")))))))))))"], "pred_translated": ["I need to meet with Barack Obama 10 years from now", "Meeting with Barack Obama in 10 years", "Set up a meeting with Barack Obama in 10 years", "Set up a meeting with Barack Obama next year", "Schedule a meeting with Barack Obama 10 days from now", "Please schedule a meeting with Barack Obama 10 years from now", "i need an event in 10 10 with Barack Obama", "Set up a meeting with Barack Obama in 10 years", "i need an event with Barack Obama this year", "Schedule a meeting with Barack Obama 10 months from now"], "distractor": "Can you change the time to 11am"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( Event.start_? ( DateTime.time_? ( ?= ( NumberAM 11L ) ) ) ) ) ) )", "gold_src": "__User YEH LIKE GOOD __Agent Let me know if there 's anything else I can help you with . __User Make it last to 11 : 00 AM actually . Thank you . __StartOfProgram\n", "min_probs": [0.0015244848327711225, 0.0011516083031892776, 0.23015967935175527, 0.015993619692806483, 1.689269324321477e-07, 6.318433377685285e-08, 8.783559359908818e-07, 3.5314577627862327e-12, 8.007785800823928e-14, 6.281776035421459e-14], "bin": 0.25, "data_idx": "11540", "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberAM 11L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberAM 11L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberAM 11L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))", "(do (Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint)))) (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberAM 11L))))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^(Time) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Time) EmptyStructConstraint))) (intension (NumberAM 11L)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))"], "pred_translated": ["defer the next meeting with Angelo Louis", "update my calender events", "have this ending at 11", "Can you extend this to 11AM please", "have this ending at 11", "Change the time to 11am", "Can you change the time to 11am", "have this ending at 11", "Can you change the time to 11am", "Can you change the time to 11am"], "distractor": "Kevin will be replacing Steve, John, Kayla, and Thomas."}
{"gold_tgt": "( Yield ( DeleteCommitEventWrapper ( DeletePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateTime ( DateAtTimeWithDefaults ( Today ) ( HourMinutePm 2L 30L ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ) ) )", "gold_src": "__User Add Fran to my 2 : 30 meeting today __Agent I did n't find any events at 2 : 30 PM . __User Remove my 2 : 30 meeting today __StartOfProgram\n", "min_probs": [0.9517546006988847, 5.763103039370337e-07, 3.970148273371686e-10, 7.385759453389414e-10, 8.443281212398377e-10, 6.153907403524704e-11, 8.921305734120939e-11, 5.074858563968338e-11, 1.177687043572541e-10, 5.151943321028519e-15], "bin": 0.95, "data_idx": "2566", "pred_tgts": ["(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (HourMinutePm 2L 30L)) (^(Event) EmptyStructConstraint)))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (?= (DateAtTimeWithDefaults (Today) (HourMinutePm 2L 30L)))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (^(Event) EmptyStructConstraint) (HourMinutePm 2L 30L)))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (NextTime (HourMinutePm 2L 30L)) (^(Event) EmptyStructConstraint)))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Today) (NumberPM 2L)) (^(Event) EmptyStructConstraint)))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (HourMinutePm 2L 30L)) (^(Event) EmptyStructConstraint)))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" meeting \")) (EventOnDateTime (DateAtTimeWithDefaults (Today) (HourMinutePm 2L 30L)) (^(Event) EmptyStructConstraint))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (HourMinutePm 2L 30L)))) (EventOnDateTime (DateAtTimeWithDefaults (Today) (HourMinutePm 2L 30L)) (^(Event) EmptyStructConstraint))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.start_? (DateTime.time_? (?= (HourMinutePm 2L 30L)))) (EventOnDateTime (DateAtTimeWithDefaults (Today) (Today) (HourMinutePm 2L 30L)) (^(Event) EmptyStructConstraint))))))))))"], "pred_translated": ["cancel my 2 : 30 meeting today", "cancel my 2 : 30 meeting today", "cancel my meeting today", "cancel my 2 : 30 meeting", "cancel my 2 : 30 meeting", "cancel my 2 pm meeting today", "cancel the 2 : 30 meeting on that day", "cancel my 2 : 30 meeting today", "Cancel my 2 : 30 meeting today", "Delete my 2 : 30 meeting today."], "distractor": "Can you search for an OBGYN appointment?"}
{"gold_tgt": "( Yield ( AttendeesWithNotResponse ( Event.attendees ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" happy hour \" ) ) ) ) ) ) ( ResponseStatusType.Declined ) ) )", "gold_src": "__User who has nt accepted the happy hour __Agent Here is the list of attendees who have not accepted \" happy hour \" : you and Kim Possible . Unfortunately , Kim Possible declined . __User Who has not declined the happy hour then ? __StartOfProgram\n", "min_probs": [0.9914030614676108, 1.2774069059205701e-11, 1.1093320329671555e-11, 4.621746821044187e-12, 1.616160795596825e-12, 1.2234362611323296e-16, 1.733881685701918e-13, 2.1805440409995527e-17, 9.671123227922098e-18, 5.295663733368229e-13], "bin": 0.95, "data_idx": "1158", "pred_tgts": ["(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" happy hour \")))))) (ResponseStatusType.Declined)))", "(Yield (AttendeesWithNotResponse (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (ResponseStatusType.Declined)))", "(Yield (AttendeesWithNotResponse (Event.attendees (Execute (refer (extensionConstraint (Event.subject_? (?~= \" happy hour \")))))) (ResponseStatusType.Declined)))", "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?= \" happy hour \")))))) (ResponseStatusType.Declined)))", "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" happy hour \")))))) (ResponseStatusType.TentativelyAccepted)))", "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" happy hour not \")))))) (ResponseStatusType.Declined)))", "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" happy hour \")))))) (ResponseStatusType.Declined)))", "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" happy hour then \")))))) (ResponseStatusType.Declined)))", "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" happy hour __User \")))))) (ResponseStatusType.Declined)))", "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \" happy hour \"))))))) (ResponseStatusType.Declined)))"], "pred_translated": ["Who has not declined the happy hour?", "Who has not declined that?", "Who has not declined the happy hour?", "Who has not declined the happy hour?", "who has not possibly accepted the happy hour", "Who has not declined the happy hour not?", "Who has declined the happy hour?", "who has not declined happy hour then?", "Who has not declined the happy hour __User", "Who has not declined the happy hour today?"], "distractor": "update my calender"}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEvent 2L ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "gold_src": "__User put meeting with johnny on calender __Agent Does one of these work ? __User fix the second one on calender __StartOfProgram\n", "min_probs": [0.7187512887822733, 0.07458051294088364, 0.024893153458833694, 0.0006741241086274385, 0.00023288041120395064, 9.320152457803488e-05, 1.6939389140039582e-08, 2.1809874235792756e-11, 1.905054968986941e-12, 5.831997436344999e-12], "bin": 0.75, "data_idx": "11076", "pred_tgts": ["(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))", "(FenceSpecify)", "(FenceOther)", "(PleasantryAnythingElseCombined)", "(PleasantryCalendar)", "(FenceMultiAction)", "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))", "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (FenceSpecify))"], "pred_translated": ["The 2nd one works great", "fix the second one", "put meeting with johnny", "THE LOOK IS GOOD", "i need prefernces", "The second one, but make it an hour.", "fix the second one", "OK THANK YOU", "fix the first one", "The 2nd one works well"], "distractor": "Please change my appointment at 1 PM to 2 PM"}
{"gold_tgt": "( Yield ( FindManager ( Execute ( refer ( extensionConstraint ( ^ ( Recipient ) EmptyStructConstraint ) ) ) ) ) )", "gold_src": "__User Who are Jake 's reports __Agent Jake Cobb has no direct reports . __User Who does he report to ? __StartOfProgram\n", "min_probs": [0.7870524482208943, 0.0035468884743750095, 0.000944756654682891, 2.464387885286074e-07, 2.2363586135321722e-07, 8.750998491228232e-07, 2.3024640162175184e-07, 2.5764040510166364e-09, 4.420844610960293e-10, 2.2088418668814216e-07], "bin": 0.75, "data_idx": "12", "pred_tgts": ["(Yield (FindManager (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint))))))", "(FencePeopleQa)", "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jake \")))))))", "(Yield (FindManager (toRecipient (CurrentUser))))", "(Yield (FindManager (Execute (refer (extensionConstraint) (extensionConstraint (^(Recipient) EmptyStructConstraint))))))", "(Yield (FindManager (FindManager (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))", "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint)))))))", "(Yield (RecipientWithNameLike (?= (FindManager (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))) (PersonName.apply \" Jake \")))", "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" reports \")))))))", "(do (Yield (FindManager (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))) (Yield (FindManager (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))"], "pred_translated": ["Who does he repot to?", "who does he report to?", "Who does Jake report to?", "Who do I report to?", "Who does he repot to?", "Who are his reports", "Who does he report to?", "Who does Jake report to?", "Who does he supervise?", "Who is his direct reports"], "distractor": "What about Saturday night?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" fishing \" ) ) ( Event.start_? ( DateTime.date_? ( ?= ( NextDOW ( Saturday ) ) ) ) ) ) ) ) )", "gold_src": "__User please , cancel the all appointments on April 19 __Agent I can only do one action at a time . If you separate your requests , I can help you . __User I m going fishing on Saturday __StartOfProgram\n", "min_probs": [0.783390416199893, 0.001271688842363226, 1.2254392602593338e-10, 4.235169344877579e-11, 3.138056140696709e-09, 3.4722331980274607e-07, 9.330165715782394e-09, 9.803763529011938e-13, 3.205069091541032e-12, 9.75862626156895e-13], "bin": 0.75, "data_idx": "4840", "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" fishing \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" going fishing \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?= \" fishing \"))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayOnDate (Event.subject_? (?= \" fishing \")) (NextDOW (Saturday))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" fishing fishing \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" fishing \")) (Event.start_? (DateTime.date_? (?= (previousDayOfWeek (Today) (Saturday)))))))))", "(Yield (CreatePreflightEventWrapper (& (Event.subject_? (?= \" fishing \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" fishing \")) (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" fishing __User \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" fishing \")) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Saturday)))))))))"], "pred_translated": ["Add fishing on saturday", "I'm going fishing this Saturday.", "Add fishing to my calendar on Saturday", "Add an all day event for fishing on saturday", "add fishing fishing on saturday", "I went fishing last Saturday", "Add fishing on saturday", "Add fishing on saturday", "I'm going fishing __User __User on Saturday", "Add fishing on saturday"], "distractor": "Who am I meeting with on January 2nd?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.start_? ( DateTime.date_? ( FullMonthofMonth ( NextMonth ) ) ) ) ) ) )", "gold_src": "__User Add training to the 10 th from 4 : 00 pm until 6 : 00 pm . __Agent Is this good ? __User how about next month ? __StartOfProgram\n", "min_probs": [0.4855461798782451, 0.0015558147570118308, 0.0005824943033161186, 4.890393938296622e-11, 2.8806906276705046e-13, 3.8658422400511414e-13, 1.2894550463733752e-14, 1.5776239386833216e-14, 1.447865432690002e-15, 5.254890755416542e-14], "bin": 0.45, "data_idx": "10729", "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth)))))))", "(FenceDateTime)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth))))))", "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (FullMonthofMonth (NextMonth))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (Date.month_? (?= (NextMonth))))))))", "(do (refer (^(Event) ConstraintTypeIntension)) (Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (& (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?= (adjustByPeriodDuration (Execute (refer (extensionConstraint (^(DateTime) EmptyStructConstraint)))) (PeriodDuration.apply (toMonths 1))))))))"], "pred_translated": ["Actually make it next month.", "Have training last all day the next day.", "I meant training next month.", "What do I have next month?", "Actually make it next month.", "I meant training next month.", "Actually change it to next month.", "Actually move it to next month.", "I meant training next month.", "postpone training to the next month"], "distractor": "Change the location of \"Family Road Trip\" in Chicago."}
{"gold_tgt": "( Yield ( WeatherAggregate ( WeatherQuantifier.Sum ) ( rainPrecipIntensity ) ( WeatherQueryApi ( AtPlace ( Here ) ) ( DateTime.date_? ( ?= ( Today ) ) ) ) ) )", "gold_src": "__User What will be the weather tomorrow __Agent It will be clear with a high of 0 . 00 \u00b0 F and a low of 0 . 00 \u00b0 F on Sun , October 28 . __User How much rain will we get today ? __StartOfProgram\n", "min_probs": [0.7773097760710133, 1.1687005947289346e-05, 8.551845212710022e-07, 1.5586940073530899e-10, 3.803311087851689e-09, 1.4854743099913938e-09, 4.798122248077611e-10, 7.144654787146545e-10, 1.3045640833141143e-12, 5.090517250157852e-13], "bin": 0.75, "data_idx": "6710", "pred_tgts": ["(Yield (WeatherAggregate (WeatherQuantifier.Sum) (rainPrecipIntensity) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))", "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))", "(Yield (inInches (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Sum) (rainPrecipIntensity) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Sum) (rainPrecipProbability) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (rainPrecipProbability) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Max) (rainPrecipProbability) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))", "(Yield (size (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today)))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Average) (rainPrecipProbability) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Max) (rainPrecipIntensity) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))"], "pred_translated": ["How much rain will we get today?", "Will it rain today?", "How many inches?", "How much will it rain?", "What is the chance of rain today?", "What is the chance of rain today?", "What is the highest chance of rain today?", "Will it rain today?", "What is the average chance of rain today?", "How much rain will we get today?"], "distractor": "What about with Erin?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( Event.start_? ( DateTime.time_? ( ?= ( NumberPM 8L ) ) ) ) ) ) )", "gold_src": "__User Do I see Amy today ? __Agent Yes , I found 1 event with Amy Miller today . It 's \" Date Night \" from 7 : 00 to 9 : 00 PM . __User Can you change the time to 8 ? __StartOfProgram\n", "min_probs": [0.4624218996129008, 0.0007621115655638278, 0.010900065723571578, 1.2599334706974396e-09, 2.6332929578344486e-10, 5.263758538027847e-11, 1.3764657214431245e-11, 2.2845642478141845e-16, 1.3453641749106342e-12, 2.3660091045799304e-12], "bin": 0.45, "data_idx": "10405", "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))))))", "(FenceSpecify)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 8L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (TimeAround (NumberPM 8L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (TimeAround (NumberAM 8L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (?= (NextTime (NumberPM 8L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (?= (NextTime (NumberAM 8L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberPM 8L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 8L)))))))"], "pred_translated": ["Change the time to 8pm", "can you change the meeting time", "Change the time to 8am", "Can you change that to be around 8 pm?", "Can you change that to be around 8 am?", "Change the time to 8pm", "Change the time to 8am", "Change the time to 8pm", "Change the time to 8pm", "Can you change the time to 8pm?"], "distractor": "What are the prices of The Wild in Nashville?"}
{"gold_tgt": "( Yield ( IsFree ( RecipientAvailability ( & ( Event.start_? ( DateTime.date_? ( FullMonthofMonth ( NextMonth ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( toRecipient ( CurrentUser ) ) ) ) ) true ) ) )", "gold_src": "__User it should actually be on Wednesday __Agent Yes . Here are some times when Joe and you are free on Wednesday the 18 th . __User Am i free next month __StartOfProgram\n", "min_probs": [0.695060408396476, 0.000366046662666225, 1.0114789194071394e-05, 5.89613137843672e-08, 6.307345490845217e-08, 3.416324838612445e-10, 1.616661807190245e-10, 1.1843696796951165e-09, 2.4120649775060026e-10, 9.243445325571923e-11], "bin": 0.65, "data_idx": "4792", "pred_tgts": ["(Yield (IsFree (RecipientAvailability (& (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth)))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))", "(Yield (RecipientAvailability (& (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth)))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true))", "(Yield (IsFree (RecipientAvailability (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth)))) true)))", "(Yield (IsFree (RecipientAvailability (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth))) true)))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth)))))) 0L))", "(Yield (RecipientAvailability (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth)))) true))", "(Yield (IsFree (RecipientAvailability (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser)))) true)))", "(Yield (IsFree (RecipientAvailability (& (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth)))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) false)))", "(Yield (IsFree (RecipientAvailability (& (Event.start_? (DateTime.date_? (Date.month_? (?= (NextMonth))))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true)))", "(Yield (IsFree (IsFree (RecipientAvailability (& (Event.start_? (DateTime.date_? (FullMonthofMonth (NextMonth)))) (Event.attendees_? (AttendeeListHasRecipient (toRecipient (CurrentUser))))) true))))"], "pred_translated": ["Am I free next month?", "When am I free next month?", "Am I free next month?", "Am I free next month?", "Do I have anything next month?", "When am I free next month?", "When am I free?", "Am I free next month?", "Am I free next month?", "Am I free next month?"], "distractor": "I need to reschedule my lunch on Tuesday."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" conference call \" ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( Tomorrow ) ( NumberPM 5L ) ) ) ) ) ) ) )", "gold_src": "__User Please schedule a reminder for my 5 pm conference call tomorrow afternoon __StartOfProgram\n", "min_probs": [0.6449601054191589, 0.0009122411720454693, 0.0006135786534287035, 0.0005771926371380687, 0.00046727931476198137, 0.0004466732789296657, 0.04019136267457002, 2.9776834709361644e-08, 8.334650857173441e-11, 4.669678399592503e-11], "bin": 0.65, "data_idx": "490", "pred_tgts": ["(FenceReminder)", "(FenceTeams)", "(FenceScope)", "(FenceOther)", "(PleasantryAnythingElseCombined)", "(FenceAttendee)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" conference call \")) (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" conference call \")) (Event.start_? (DateTimeConstraint (Afternoon) (Tomorrow)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" conference call \")) (Event.start_? (?= (NextTime (NumberPM 5L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" conference call \")) (Event.end_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 5L))))))))"], "pred_translated": ["Remind me of the first flight to london", "Who reports to me?", "How old are you?", "Can you tell me the weather for tomorrow in Greenville, NC?", "no thanks", "Please schedule a meeting with the pope tomorrow.", "I have a conference call tomorrow at 5 pm", "I have a conference call tomorrow afternoon.", "I have a conference call at 5 pm", "I have a conference call ending at 5 pm tomorrow."], "distractor": "What do I have planned for January 2nd?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( EventOnDate ( NextDOW ( Saturday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) )", "gold_src": "__User Do I have any availability this weekend , particularly on Saturday morning ? __Agent No , I did n't find any events on Saturday in the morning . __User What about Next Saturday ? __StartOfProgram\n", "min_probs": [0.6018331280067056, 1.3516100789254228e-07, 2.3012371332772727e-05, 5.06830567219241e-08, 5.6772318494216027e-08, 1.9324524854013175e-09, 3.774279326493311e-10, 4.220840677984534e-09, 5.735184036507733e-12, 6.730968634560682e-15], "bin": 0.65, "data_idx": "8686", "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)))))", "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (nextDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Saturday)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))) 0L))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (DowOfWeekNew (Saturday) (NextWeekList)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Saturday)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (nextDayOfWeek (Execute (refer (& (^(Date) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (Saturday)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDateWithTimeRange (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)) (Night)))))"], "pred_translated": ["What about next Saturday?", "What do I have on Saturday?", "What about the following Saturday?", "What about Saturday morning?", "Do I have any free time on Saturday?", "what about saturday?", "What about next Saturday?", "What about Saturday?", "What about the following Saturday?", "What about Saturday night?"], "distractor": "When does my appointment end?"}
{"gold_tgt": "( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventDuringRange ( Event.subject_? ( ?~= \" play \" ) ) ( ThisWeek ) ) ) ) ) 0L ) )", "gold_src": "__User Do I meet with Tasha next week ? __Agent Yes , I found one event with Tasha next week . It 's \" Lunch near Lake T \" on Wednesday the 30 th from 12 : 30 to 1 : 30 PM . __User Is there a play later this week ? __StartOfProgram\n", "min_probs": [0.5446631787767399, 0.0011662425240501761, 0.0015843450687860817, 3.4429181648854462e-06, 1.6807093286240125e-05, 1.5672028369272357e-08, 4.4598389857275346e-10, 1.9128266838811103e-09, 9.380466600110765e-10, 1.5131206732796103e-13], "bin": 0.55, "data_idx": "11128", "pred_tgts": ["(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" play \")) (LateDateRange (ThisWeek)))))) 0L))", "(FenceDateTime)", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" play \")) (LateDateRange (NextWeekList)))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" play \")) (ThisWeek))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" play \")) (LateDateRange (WeekOfDateNew (Today))))))) 0L))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" play \")) (LateDateRange (ThisWeek)))))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" play \")) (LateAfternoon))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?= \" play \")) (LateDateRange (ThisWeek)))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" play \")) (LateDateRange (toWeeks 1)))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" play a play \")) (LateDateRange (ThisWeek)))))) 0L))"], "pred_translated": ["Do I have a play later this week?", "Do I have a meeting with Tasha next week at all?", "Do I have a play later next week?", "Do I have a play this week?", "Do I have a play later this week?", "What about the play later this week?", "Do I have a play later in the afternoon?", "Do I have a play later this week?", "Do I have a play later in the week?", "Am I going to play a play later this week?"], "distractor": "Can you cancel my appointment on Friday?"}
{"gold_tgt": "( Yield ( Event.start ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" OBGYN appointment \" ) ) ) ) ) ) )", "gold_src": "__User Yes , perfect __Agent I 've put that on your calendar . __User When is my OBGYN appointment ? __StartOfProgram\n", "min_probs": [0.533460402188352, 0.03200257745462043, 1.2610492836845197e-09, 2.741860252555671e-08, 7.180643520923827e-07, 4.997023611176e-10, 3.27460530078229e-11, 2.002797212979511e-11, 1.6832981662258512e-11, 5.025555479465994e-08], "bin": 0.55, "data_idx": "4734", "pred_tgts": ["(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" OBGYN appointment \")))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" OBGYN \")))))))", "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \" OBGYN appointment \"))))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" OBGYN appointment \"))))))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" OBGYN \"))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" OBGYN appointment \")))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?= \" OBGYN appointment \")))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" OBGYN Meeting \")))))))", "(Yield (DateTime.time (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" OBGYN appointment \"))))))))", "(do (Yield (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" OBGYN \"))))))))"], "pred_translated": ["when is my OBGYN appointment?", "when is my OBGYN appointment?", "Can you search for an OBGYN appointment?", "Can you find my OBGYN appointment?", "Can you show me my appointment with the OBGYN?", "when is my OBGYN appointment?", "when is my OBGYN appointment?", "when is my OBGYN Meeting?", "What time is my OBGYN appointment?", "when is my OBGYN appointment?"], "distractor": "cancel the doctors appointment on friday"}
{"gold_tgt": "( do ( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) ) ( Yield ( EventAttendance ( RespondComment.apply \" i am going to see Journey instead \" ) :event ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" AC/CD Reunion \" ) ) ) ) ) :response ( ResponseStatusType.Declined ) ) ) )", "gold_src": "__User i need you to decline the event with Josh __Agent I will decline \" Meeting with Josh and Damon Straeter \" . Is that ok ? __User Yes also decline my AC / CD Reunion and say i am going to see Journey instead __StartOfProgram\n", "min_probs": [0.0714672773828342, 6.842466232264689e-06, 2.1807560080848884e-16, 1.6470761439881427e-20, 3.0658714291508985e-21, 2.5317072261055362e-23, 2.919906988845274e-23, 2.4760522547294462e-23, 2.502458833884761e-24, 8.397518704804895e-25], "bin": 0.15, "data_idx": "42", "pred_tgts": ["(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" i am going to see Journey instead \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" AC / CD Reunion \"))))) :response (ResponseStatusType.Declined))))", "(Yield (EventAttendance (RespondComment.apply \" i am going to see Journey instead \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" AC / CD Reunion \"))))) :response (ResponseStatusType.Declined)))", "(Yield (EventAttendance (RespondComment.apply \" i am going to see Journey \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" AC / CD Reunion \"))))) :response (ResponseStatusType.Declined)))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" i am going to see Journey. \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" AC / CD Reunion \"))))) :response (ResponseStatusType.Declined))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" i am going to see Journey Reunion \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" AC / CD Reunion \"))))) :response (ResponseStatusType.Declined))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" i am going to see Journey instead \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" AC / CD \"))))) :response (ResponseStatusType.Declined))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" i am going to see Journey instead \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?= \" AC / CD Reunion \"))))) :response (ResponseStatusType.Declined))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" i am going to see Journey instead \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" AC / CD Reunion \"))))) :response (ResponseStatusType.Declined))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" i am going to see Journey Journey \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" AC / CD Reunion \"))))) :response (ResponseStatusType.Declined))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" It am going to see Journey instead \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" AC / CD Reunion \"))))) :response (ResponseStatusType.Declined))))"], "pred_translated": ["Yes, that's good. Decline my AC / CD Reunion and say that I am going to see Journey instead.", "Decline my AC / CD Reunion and say that i am going to see Journey instead", "Decline my AC / CD Reunion and say that i am going to see Journey", "Yes, that's good. Decline my AC / CD Reunion and say that I am going to see Journey.", "Yes, that's good. Decline my AC / CD Reunion and say that i am going to see Journey Reunion instead.", "Yes, that's good. Decline my AC / CD and say that i am going to see Journey instead.", "Yes, that's good. Decline my AC / CD Reunion and say that I am going to see Journey instead.", "Yes, that's good. Decline my AC / CD Reunion and say that I am going to see Journey instead.", "Yes, that's good. Decline my AC / CD Reunion and say that i am going to see Journey Journey instead.", "Yes, that's good. Decline my AC / CD Reunion and say that \"It am going to see Journey instead\""], "distractor": "Extend appointment until 8:00 AM."}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.start_? ( DateTime.time_? ( Morning ) ) ) ) ) )", "gold_src": "__User On second thought I 'm going to need it scheduled a little bit earlier . __Agent Does one of these work ? __User No later in the morning __StartOfProgram\n", "min_probs": [0.35378628250196936, 0.0010373364202678204, 0.0007952252635732293, 0.0006404175073839724, 0.002125333210707075, 5.287343190566448e-11, 8.006690299140378e-13, 4.9675502435209606e-14, 3.136635459099329e-14, 4.1865312348701893e-13], "bin": 0.35, "data_idx": "9042", "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (LateMorning))))))", "(FenceOther)", "(FenceSpecify)", "(DoNotConfirm)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (LateMorning))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (EventDuringRangeTime (^(Event) EmptyStructConstraint) (LateMorning)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (Morning))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (LateAfternoon))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventDuringRangeTime (^(Event) EmptyStructConstraint) (LateMorning)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (EarlyTimeRange (Morning)))))))"], "pred_translated": ["No, I need something later in the morning.", "I like the earlier one.", "fix the second one", "No, none of those work.", "No, I need something later in the morning.", "What about late morning?", "No, I need something in the morning.", "No, I need something later in the afternoon.", "What about late morning?", "Can we make it a little earlier in the morning?"], "distractor": "Who has declined the happy hour?"}
{"gold_tgt": "( Yield ( HolidayYear ( Holiday.Easter ) ( Date.year ( Today ) ) ) )", "gold_src": "__User That 's good . __Agent I 've put that on your calendar . __User What date is Easter Sunday this year ? __StartOfProgram\n", "min_probs": [0.47838413237080096, 0.0013487493560451521, 0.0003164407905098532, 0.00012008711424864402, 4.252060775948846e-07, 1.1073144190385088e-07, 9.025460834551999e-08, 8.765131217764295e-08, 1.7741163744190636e-07, 1.258367592196741e-07], "bin": 0.45, "data_idx": "9541", "pred_tgts": ["(Yield (HolidayYear (Holiday.Easter) (Date.year (Today))))", "(Yield (HolidayYear (Holiday.EasterMonday) (Date.year (Today))))", "(Yield (NextHolidayFromToday (Holiday.EasterMonday)))", "(Yield (NextHolidayFromToday (Holiday.Easter)))", "(Yield (HolidayYear (Holiday.FlagDay) (Date.year (Today))))", "(Yield (HolidayYear (Holiday.NewYearsEve) (Date.year (Today))))", "(Yield (HolidayYear (Holiday.Christmas) (Date.year (Today))))", "(Yield (HolidayYear (Holiday.Thanksgiving) (Date.year (Today))))", "(Yield (HolidayYear (NextHolidayFromToday (Holiday.Easter)) (Date.year (Today))))", "(Yield (Date.dayOfWeek (HolidayYear (Holiday.Easter) (Date.year (Today)))))"], "pred_translated": ["When is Easter this year?", "When is Easter Monday this year?", "When is Easter Monday?", "When is Easter?", "When is Flag Day this year?", "When is New Years Eve this year?", "when is chrismas", "When is Thanksgiving this year?", "When is Easter this year?", "What day of the week is Easter this year?"], "distractor": "Can you tell me when my next block of free time is?"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Batman \" ) ) ) ) ) )", "gold_src": "__User Can you tell me where and when my appointment with Batman will be ? __StartOfProgram\n", "min_probs": [0.4813959300518036, 2.41080190082068e-05, 1.5951991459252097e-05, 4.863233440523908e-06, 8.711716430268001e-08, 2.411318039005812e-06, 1.2158663049497004e-05, 7.521243471344434e-07, 1.1697627373658308e-06, 7.636291409632923e-07], "bin": 0.45, "data_idx": "1808", "pred_tgts": ["(FenceMultiAction)", "(Yield (Event.start (FenceMultiAction)))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Batman \")))))))))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Batman \"))))))))", "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Batman \"))))))", "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Batman \")))))))))", "(do (Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Batman \"))))))))) (Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Batman \"))))))))))", "(do (Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Batman \"))))))))) (Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Batman \")))))))", "(do (Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Batman \"))))))))) (Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Batman \")))))))))", "(do (Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Batman \"))))))))) (Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Batman \"))))))))))"], "pred_translated": ["I need to cancel all my meetings for tomorrow.", "Can you tell me when my doctors appointment is and what time it is?", "When is my appointment with Batman?", "Can you tell me when my appointment with Batman will be?", "Can you tell me any upcoming events I have with Batman?", "Can you tell me where my appointment with Batman will be?", "Can you tell me where and when my appointment with Batman will be?", "Can you tell me the location of my appointment with Batman?", "Can you tell me where and when my appointment with Batman will be?", "Can you tell me where my appointment with Batman is?"], "distractor": "No, just reschedule it for next week at the same time."}
{"gold_tgt": "( Yield ( ForwardEventWrapper ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ( append ( ^ ( Recipient ) List.Nil ) ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Mike \" ) ) ) ) ) ) ) )", "gold_src": "__User Please cancel both Thursday meetings with John . __Agent I can only do one action at a time . If you separate your requests , I can help you . __User Can you send Mike an invitation ? __StartOfProgram\n", "min_probs": [0.09821531176567078, 0.5732559700000783, 0.0009941671742126346, 0.0008904928108677268, 0.00016903259635553958, 1.1006371299509854e-07, 5.218740622327607e-09, 1.3560124920731209e-09, 1.0204923653385864e-10, 1.6717777524258188e-10], "bin": 0.05, "data_idx": "2721", "pred_tgts": ["(FenceSwitchTabs)", "(Yield (ForwardEventWrapper (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (append (^(Recipient) List.Nil) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mike \"))))))))", "(FenceOther)", "(FenceAttendee)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mike \"))))))))))", "(Yield (Person.phoneNumber (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mike \"))))))))", "(Yield (ForwardEventWrapper (Execute (refer (^(Event) ActionIntensionConstraint))) (append (^(Recipient) List.Nil) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mike \"))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mike \"))))))))))", "(Yield (ForwardEventWrapper (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))) (append (^(Recipient) List.Nil) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mike \"))))))))", "(Yield (ForwardEventWrapper (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (append (append (^(Recipient) List.Nil) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mike \")))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mike \"))))))))"], "pred_translated": ["email Cecelia Waller that the meeting is set", "Can you forward this to Mike?", "Why is that?", "Please schedule a meeting with the pope tomorrow.", "Please add Mike to this meeting.", "Please call Mike for me.", "Can you forward this to Mike?", "Can you schedule a meeting with Mike?", "Can you forward my meeting to Mike?", "Can you forward this to Mike and Mike"], "distractor": "I need a meeting after 12 tomorrow"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.start_? ( ?= ( adjustByPeriodDuration ( Now ) ( PeriodDuration.apply :duration ( toHours 2 ) ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" sprint \" ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" john \" ) ) ) ) ) ) ) ) ) ) )", "gold_src": "__User Can you make a meeting for john in 2 hours with me at sprint ? __StartOfProgram\n", "min_probs": [0.8258245160309503, 9.474197448105047e-09, 1.1206057303377683e-07, 1.6743459527056618e-07, 2.3723586261572653e-08, 1.2016887681158635e-08, 3.085397382875129e-09, 2.893953534381256e-09, 1.4245021194413563e-09, 1.2679356047146145e-12], "bin": 0.85, "data_idx": "11898", "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 2))))) (Event.location_? (?= (LocationKeyphrase.apply \" sprint \")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" john \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 2))))) (Event.location_? (?= (LocationKeyphrase.apply \" sprint \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 2))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" john \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 2))))) (Event.location_? (?= (LocationKeyphrase.apply \" McDonalds \")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" john \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 2))))) (Event.location_? (?= (LocationKeyphrase.apply \" sprint \")))) (Event.attendees_? (AttendeeListHasRecipient (RecipientFromRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" john \")))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 2))))) (Event.location_? (?= (LocationKeyphrase.apply \" Starbucks \")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" john \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 1))))) (Event.location_? (?= (LocationKeyphrase.apply \" sprint \")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" john \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 2))))) (Event.location_? (?= (LocationKeyphrase.apply \" ClubHouse \")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" john \")))))))))))", "(do (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" john \"))))))))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 2))))) (Event.location_? (?= (LocationKeyphrase.apply \" sprint \"))))))))", "(do (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (adjustByPeriodDuration (Now) (PeriodDuration.apply :duration (toHours 2))))) (Event.location_? (?= (LocationKeyphrase.apply \" sprint \")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" john \"))))))))))))"], "pred_translated": ["make a meet with john at sprint in 2 hours", "Set up a meeting at sprint in 2 hours", "make a meeting with john in 2 hours", "make an appointment with john at McDonalds in 2 hours", "meeting with john at sprint in 2 hours", "Schedule a meeting with john at Starbucks in 2 hours.", "make a meet with john at sprint in an hour", "Schedule a meeting with john at the Clubhouse in 2 hours.", "meeting with john at sprint in 2 hours", "meeting with john at sprint in 2 hours"], "distractor": "Yes, that's good. Decline my hike and say that I'm busy wake boarding that day."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" Learn spanish \" ) ) ( Event.start_? ( DateTime.date_? ( SeasonWinter ) ) ) ) ) ) )", "gold_src": "__User Learn spanish in the Winter __StartOfProgram\n", "min_probs": [0.6704875863151526, 0.07349015772342682, 0.011620531789958477, 0.0023154770024120808, 0.0023068534210324287, 0.0014498800737783313, 0.0010449724504724145, 6.579040521704651e-06, 1.8375006291971648e-09, 2.61608378425169e-17], "bin": 0.65, "data_idx": "2284", "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Learn spanish \")) (Event.start_? (DateTime.date_? (SeasonWinter)))))))", "(FenceScope)", "(FenceTriviaQa)", "(FencePeopleQa)", "(FenceWeather)", "(FenceDateTime)", "(FenceTeams)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" spanish spanish \")) (Event.start_? (DateTime.date_? (SeasonWinter)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Learn spanish \")) (EventDuringRange (^(Event) EmptyStructConstraint) (SeasonWinter))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Learn spanish in spanish \")) (Event.start_? (DateTime.date_? (SeasonWinter)))))))"], "pred_translated": ["Learn spanish in winter", "How old are you?", "How many months have 30 days?", "Why didn't Mom come to my birthday party?", "What causes hail?", "Can you tell me when my next block of free time is?", "Who reports to me?", "create an event in winter for spanish spanish", "Add Learn spanish this winter", "Learn spanish in spanish this winter."], "distractor": "What about with Erin?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( UpdateEventIntensionConstraint ) ( Event.end_? ( DateTime.time_? ( ?= ( NumberAM 8L ) ) ) ) ) ) )", "gold_src": "__User Extend it by 30 min __Agent How about now ? __User it ends at 8 AM __StartOfProgram\n", "min_probs": [0.057244740426540375, 0.497300079510671, 0.01316375657916069, 3.4302066805616755e-07, 0.00031647792991892833, 1.1712759488932396e-05, 3.9845339441509793e-10, 4.4226482461886725e-10, 1.1805460565030177e-12, 5.747859992394723e-11], "bin": 0.05, "data_idx": "7343", "pred_tgts": ["(FenceOther)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberAM 8L)))))))", "(FenceSpecify)", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberAM 8L)))))))", "(Yield (Execute (^(Dynamic) ConfirmUpdateAndReturnActionIntension (Event.end_? (DateTime.time_? (?= (NumberAM 8L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (NumberAM 8L)))))))", "(do (Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint)))) (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberAM 8L))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.end_? (DateTime.time_? (?= (NumberPM 8L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberAM 8L)))))))"], "pred_translated": ["Extend the end time by 15 minutes.", "Extend it to 8AM please", "Can you extend it by 30 min?", "That looks good.", "Extend it to 8AM please", "Extend it to 8AM please", "Extend it to 8AM please", "Extend it to 8AM please", "Extend it to 8PM", "Extend appointment until 8:00 AM."], "distractor": "I need to change the date of my doctor's appointment"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.start_? ( DateTime.date_? ( ?= ( ClosestDayOfWeek ( Execute ( refer ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ( Friday ) ) ) ) ) ) ) )", "gold_src": "__User Am I free late morning Monday ? __Agent Yes . Here are some times when you are free on Monday the 16 th . __User What about on Friday ? __StartOfProgram\n", "min_probs": [0.515348804785356, 0.00018499732923054195, 3.4822571834304085e-11, 9.914956768119492e-08, 8.275023339318629e-10, 8.908095019535498e-11, 2.4939012090028127e-09, 4.749690185607414e-14, 2.4766591178217928e-14, 5.211876780711905e-15], "bin": 0.55, "data_idx": "4921", "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Friday))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))))))", "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Friday)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint)))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))) 0L))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (& (^(Date) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (Friday))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (nextDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Friday))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Friday))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Friday))))))"], "pred_translated": ["What about Friday?", "What about next Friday?", "What do I have on Friday?", "What about Friday?", "What about next Friday?", "Do I have anything on Friday?", "What about Friday?", "What about the Friday after that?", "What about Friday?", "What about Friday?"], "distractor": "The one on the 28th"}
{"gold_tgt": "( Yield ( FindManager ( toRecipient ( CurrentUser ) ) ) )", "gold_src": "__User i need to who know my friend __Agent I can only look up names in your address book . Please use a full name and try again . __User Can you tell me if I have a manager ? __StartOfProgram\n", "min_probs": [0.23984140157699585, 0.11748435401503698, 0.0015308993039527387, 0.0001816495977402556, 0.0017400535656104804, 0.0034007971098555384, 0.00014113035346008732, 3.7746781696072443e-07, 3.7774884670787097e-06, 1.442308399291481e-05], "bin": 0.25, "data_idx": "9698", "pred_tgts": ["(FencePeopleQa)", "(Yield (FindManager (toRecipient (CurrentUser))))", "(Yield (RecipientAvailability (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))) false))", "(Yield (PersonFromRecipient (FindManager (toRecipient (CurrentUser)))))", "(Yield (== (Event.organizer (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (FindManager (toRecipient (CurrentUser)))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))) 0L))", "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser)))))))", "(Yield (PersonOnTeam (CurrentUser) (FindManager (toRecipient (CurrentUser) (CurrentUser)))))", "(Yield (RecipientAvailability (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))) true))", "(Yield (IsFree (RecipientAvailability (Event.attendees_? (AttendeeListHasRecipient (FindManager (toRecipient (CurrentUser))))) false)))"], "pred_translated": ["i need john's home address", "Who is my boss?", "i need to know when my manager is free", "Who is my boss?", "Is my boss the organizer of that event?", "Do I have a meeting with my boss soon?", "Can you find my meeting with my boss?", "Who is on my team", "when is my boss free?", "i need to know when my manager is free"], "distractor": "Looks good. I also have a track meet at around 3 pm"}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "gold_src": "__User Okay , yes then , please set my gym appointment for Thursday at 1 pm . __Agent Is this good ? __User Correct __StartOfProgram\n", "min_probs": [0.9964930817005211, 0.0012402805732563138, 1.4349665434565395e-05, 1.1282188097538892e-05, 9.783718269318342e-06, 4.377172103474632e-10, 9.018078689158314e-09, 3.195275141278996e-10, 2.9010804529083114e-10, 1.091703335809222e-11], "bin": 0.95, "data_idx": "11806", "pred_tgts": ["(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(PleasantryAnythingElseCombined)", "(FenceSpecify)", "(DoNotConfirm)", "(PleasantryCalendar)", "(Execute (^(Dynamic) ConfirmAndReturnAction))", "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (PleasantryAnythingElseCombined))", "(Yield (Execute (ConfirmCreateAndReturnAction (^(Event) EmptyStructConstraint))))", "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["Yes it does.", "OK THANK YOU", "can you change the time", "no", "What can you do?", "Yes it does.", "It's look well", "Yes, thank you.", "Yes it does.", "yes"], "distractor": "What else do I have that day?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.location_? ( ?= ( LocationKeyphrase.apply \" Florida \" ) ) ) ( EventAllDayStartingDateForPeriod ( Event.subject_? ( ?= \" work conference \" ) ) ( MD 15L ( November ) ) ( toDays 4 ) ) ) ) ) )", "gold_src": "__User That is great . __Agent I 've put that on your calendar . __User I will be attending a work conference in Florida for 4 days starting on November 15 th . __StartOfProgram\n", "min_probs": [0.5934984781072179, 7.806716255420395e-05, 1.1708270241192192e-09, 1.6880880145607806e-10, 9.576368343806883e-11, 2.4670842627219935e-13, 5.8630658187239816e-12, 4.13368580432362e-13, 1.783163586876014e-13, 1.1635577049406091e-14], "bin": 0.55, "data_idx": "9390", "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (?= (LocationKeyphrase.apply \" Florida \"))) (EventAllDayStartingDateForPeriod (Event.subject_? (?= \" work conference \")) (MD 15L (November)) (toDays 4))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayStartingDateForPeriod (& (Event.subject_? (?= \" work conference \")) (Event.location_? (?= (LocationKeyphrase.apply \" Florida \")))) (MD 15L (November)) (toDays 4)))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (EventAllDayStartingDateForPeriod (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Florida \"))))))) (MD 15L (November)) (toDays 4))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (EventAllDayStartingDateForPeriod (& (Event.subject_? (?= \" work conference \")) (Event.location_? (?= (LocationKeyphrase.apply \" Florida \")))) (MD 15L (November)) (toDays 4))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" work conference \")) (Event.location_? (?= (LocationKeyphrase.apply \" Florida \")))) (EventAllDayStartingDateForPeriod (^(Event) EmptyStructConstraint) (MD 15L (November)) (toDays 4))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (EventAllDayStartingDateForPeriod (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))) (MD 15L (November)) (toDays 4))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" work conference \")) (EventAllDayStartingDateForPeriod (Event.location_? (?= (LocationKeyphrase.apply \" Florida \"))) (MD 15L (November)) (toDays 4))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.location_? (?= (LocationKeyphrase.apply \" Florida \")))) (EventAllDayStartingDateForPeriod (Event.subject_? (?= \" work conference \")) (MD 15L (November)) (toDays 4))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (EventAllDayStartingDateForPeriod (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" days \"))))))) (MD 15L (November)) (toDays 4))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" work conference \")) (Event.location_? (?= (LocationKeyphrase.apply \" Florida \")))) (EventAllDayStartingDateForPeriod (Event.subject_? (?= \" work conference \")) (MD 15L (November)) (toDays 4))))))"], "pred_translated": ["I have a work conference in Florida starting on November 15th and lasting 4 days.", "I have a work conference in Florida starting on November 15th and lasting 4 days.", "Mark that I will be in Florida for 4 days starting November 15th.", "I have a work conference in Florida starting on November 15th and lasting 4 days.", "Mark that I'll be in Florida for a work conference from November 15th for 4 days.", "I will be with her for 4 days starting November 15th.", "Mark that I'll be in Florida on a work conference from November 15th for four days.", "I have a work conference in Florida starting on November 15th and lasting 4 days.", "Mark that I will be with her for 4 days starting November 15th.", "I have a work conference in Florida starting on November 15th and lasting 4 days."], "distractor": "Why is that?"}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "gold_src": "__User Thanks . Now can you put an early dinner event at 16 h for the same day ? __Agent Is this what you 're looking for ? __User Yessir . __StartOfProgram\n", "min_probs": [0.9935711568687111, 0.002377425553277135, 2.540817513363436e-05, 1.3807125469611492e-05, 8.397461897402536e-06, 5.155444689604295e-10, 2.3368227713399978e-09, 3.306704437311387e-10, 4.24151596679391e-09, 1.349888370774491e-10], "bin": 0.95, "data_idx": "9511", "pred_tgts": ["(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(PleasantryAnythingElseCombined)", "(FenceSpecify)", "(PleasantryCalendar)", "(DoNotConfirm)", "(Execute (^(Dynamic) ConfirmAndReturnAction))", "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (PleasantryAnythingElseCombined))", "(Yield (Execute (ConfirmCreateAndReturnAction (^(Event) EmptyStructConstraint))))", "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["Yes, this looks good.", "Ok, sounds good.", "Can you change the time of the dinner?", "I need help with my calendar", "No", "Yes, this looks good.", "Try that again", "Yes, that is correct.", "Yes, this looks good.", "Ok!"], "distractor": "Please schedule a meeting with Barack Obama 10 years from now"}
{"gold_tgt": "( Yield ( WeatherAggregate ( WeatherQuantifier.Summarize ) ( sunsetTime ) ( Execute ( refer ( extensionConstraint ( ^ ( WeatherTable ) AlwaysTrueConstraint ) ) ) ) ) )", "gold_src": "__User what are the wind speeds __Agent It 's 5 . 71 mph . __User when is sunset __StartOfProgram\n", "min_probs": [0.355845484830723, 0.0019885134604887347, 2.236739556770191e-06, 1.544176361615412e-14, 1.0435828124787842e-11, 3.341728469085614e-14, 1.2190147242980485e-13, 3.137564470884717e-13, 0.0, 0.0], "bin": 0.35, "data_idx": "3901", "pred_tgts": ["(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (sunsetTime) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (sunsetTime) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))", "(Yield (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (sunsetTime) (Execute (refer (^(WeatherTable) ActionIntensionConstraint)))))", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (sunsetTime) (WeatherQueryApi (AtPlace (Here)) (?= (Now)))))", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (sunsetTime) (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (sunriseTime) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (sunsetTime) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))))", "(Error)", "(Error)"], "pred_translated": ["when is sunset today?", "when is sunset?", "What time does it start?", "what time is sunset?", "what time is sunset?", "what time is sunset?", "what time is sunrise today?", "what time will the sun set?", "What is the traffic like?", "What is the traffic like?"], "distractor": "Yes, that's good. Decline my AC / CD Reunion and say that \"It am going to see Journey instead\""}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( UpdateEventIntensionConstraint ) ( Event.isAllDay_? ( ?= true ) ) ) ) )", "gold_src": "__User I need to invite Abby to that __Agent How is this ? __User it also needs to be all day __StartOfProgram\n", "min_probs": [0.8720284600187099, 0.006713838782161474, 0.0016539598582312465, 0.0003752790216822177, 5.0310511987021956e-08, 1.580437932635168e-06, 7.3712584924578325e-09, 6.18491431732466e-15, 5.261051500575732e-13, 1.2240303719663638e-14], "bin": 0.85, "data_idx": "12080", "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.isAllDay_? (?= true)))))", "(FenceOther)", "(FenceSpecify)", "(FenceDateTime)", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.isAllDay_? (?= true)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.isAllDay_? (?= true)))))", "(ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.isAllDay_? (?= true)))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.isAllDay_? (?= false)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint))))))))"], "pred_translated": ["Make it last all day.", "Make it start at 7 pm.", "can you change the meeting time", "Make it for the last day of the week.", "Looks great", "Make it last all day.", "Make it last all day.", "Make it last all day.", "No, I need it to last all day.", "Make it last all day."], "distractor": "How old are you?"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventOnDate ( adjustByPeriod ( Execute ( refer ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ( toDays 1 ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) )", "gold_src": "__User Anything else on that day ? __Agent I found one other event on your calendar . It 's \" Coffee House \" on December 1 st from 10 : 00 to 10 : 30 AM . __User What about the next day ? __StartOfProgram\n", "min_probs": [0.42970976362913826, 0.00013568813312037677, 3.577237172573674e-07, 2.4085554358991925e-07, 2.235459509657769e-08, 4.198769034193889e-08, 1.8403115736409786e-09, 6.864821522129907e-09, 2.100014824601008e-09, 8.892628629868118e-11], "bin": 0.45, "data_idx": "1786", "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (^(Event) EmptyStructConstraint)))))", "(Yield (FindEventWrapperWithDefaults (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (^(Event) EmptyStructConstraint))))", "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (adjustByPeriodDuration (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (PeriodDuration.apply (toDays 1))) (^(Event) EmptyStructConstraint))))", "(Yield (FindEventWrapperWithDefaults (EventOnDateTime (adjustByPeriodDuration (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (PeriodDuration.apply (toDays 1))) (^(Event) EmptyStructConstraint))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDateTime (adjustByPeriodDuration (Execute (refer (extensionConstraint (DateTime.date_? (^(Date) EmptyStructConstraint))))) (PeriodDuration.apply (toDays 1))) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays \" next \")) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (WeekOfDateNew (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDateTime (adjustByPeriodDuration (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (PeriodDuration.apply (toDays 1))) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (adjustByPeriod (Execute (refer (& (^(Date) roleConstraint (Path.apply \" end \")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (toDays 1)) (^(Event) EmptyStructConstraint)))))"], "pred_translated": ["What about the next day?", "Anything the next day?", "What do I have the day after that?", "What do I have the next day?", "What about the next day?", "What about the next day?", "What about the next day?", "What about the next day?", "What about the next day?", "What about the day after?"], "distractor": "Add Shelley to the Advisory Board Meeting on Monday."}
{"gold_tgt": "( Yield ( Event.end ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) )", "gold_src": "__User When did you say it starts ? __Agent It starts March 1 st at 2 : 00 PM . __User And when will it end ? __StartOfProgram\n", "min_probs": [0.9844760135149642, 8.758321200730279e-05, 2.4315631621738134e-06, 9.739556390993548e-11, 1.2637389759359628e-07, 1.8120268301842228e-08, 3.232712477859823e-08, 4.396754601263364e-09, 1.6235815386907222e-11, 5.418972661498832e-09], "bin": 0.95, "data_idx": "3577", "pred_tgts": ["(Yield (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))", "(RepeatAgent)", "(Yield (Event.end (FindLastEvent (^(Event) EmptyStructConstraint))))", "(Yield (Event.end (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))", "(Yield (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))))", "(Yield (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))", "(Yield (Event.end (FindLastEvent (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)))))", "(Yield (end (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))", "(Yield (Event.end (FindLastEvent (EventAfterDateTime (^(Event) EmptyStructConstraint) (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))", "(do (Yield (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Yield (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"], "pred_translated": ["And when does it end?", "What did you just say?", "When does my day end?", "When does my next meeting end?", "When does my appointment end?", "When did I say that?", "When does it end?", "And when does it end?", "When does my day end?", "And when does it end?"], "distractor": "Add Shelley to the Advisory Board Meeting on Monday."}
{"gold_tgt": "( Yield ( Event.start ( FindLastEvent ( EventBeforeDateTime ( Now ) ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" bob \" ) ) ) ) ) ) ) )", "gold_src": "__User good deal __Agent Let me know if there 's anything else I can help you with . __User I need to find when I last met with bob . __StartOfProgram\n", "min_probs": [0.5951463051936128, 0.0016673057530578858, 2.4521805745192215e-06, 1.0848932363296968e-09, 1.6812728763775905e-07, 8.887958410089364e-08, 3.3812085950234396e-09, 8.564172090172852e-10, 4.205033546062203e-11, 5.907000090577433e-23], "bin": 0.55, "data_idx": "2072", "pred_tgts": ["(Yield (Event.start (FindLastEvent (EventBeforeDateTime (Now) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bob \"))))))))", "(Yield (Event.start (FindLastEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bob \")))))))", "(Yield (FindLastEvent (EventBeforeDateTime (Now) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bob \")))))))", "(Yield (FindLastEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bob \"))))))", "(Yield (Event.start (FindLastEvent (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bob \")))) (EventBeforeDateTime (Now) (^(Event) EmptyStructConstraint))))))", "(Yield (takeRight (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bob \"))))))) 1L))", "(Yield (Event.start (FindLastEvent (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bob \"))))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bob \"))))))))))", "(Yield (Event.start (FindLastEvent (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bob \"))))))))", "(Yield (Event.start (FindLastEvent (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bob \")))) (EventOnDateBeforeTime (DateTime.date) (^(Event) EmptyStructConstraint) (DateTime.time (Now)))))))"], "pred_translated": ["When was my last meeting with bob?", "When was my last meeting with bob?", "When was the last time I saw bob?", "Can you find the last time I met with bob?", "When was my last meeting with bob?", "When was my last meeting with bob?", "When is my last meeting with bob today?", "When was my meeting with bob?", "When is my last meeting with bob that day?", "When was my last meeting with bob?"], "distractor": "Schedule a Vacation from Monday to Tuesday."}
{"gold_tgt": "( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateFromTimeToTime ( Execute ( refer ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ( ^ ( Event ) EmptyStructConstraint ) ( NumberPM 4L ) ( NumberPM 5L ) ) ) ) ) 0L ) )", "gold_src": "__User What do I have next Tuesday afternoon ? __Agent I found one event . It 's a \" Gym Session \" . __User Awesome . Is there a meeting between 4 and 5 pm that day ? __StartOfProgram\n", "min_probs": [0.1345800858816935, 0.007588830035565476, 1.4852289282501284e-09, 4.6166883645593085e-08, 8.688074092355942e-07, 6.12616508930511e-14, 1.164755665621201e-15, 6.6713573664917455e-15, 1.5213555999984715e-15, 4.662731603273932e-10], "bin": 0.15, "data_idx": "4669", "pred_tgts": ["(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint) (NumberPM 4L) (NumberPM 5L))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)) (TimeToTime (NumberPM 4L) (NumberPM 5L)))))) 0L))", "(Yield (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint) (NumberPM 4L) (NumberPM 5L))))", "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)) (TimeToTime (NumberPM 4L) (NumberPM 5L)))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRangeTime (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)) (TimeToTime (NumberPM 4L) (NumberPM 5L)))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (^(Event) EmptyStructConstraint) (NumberPM 4L) (NumberPM 5L))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (EventOnDateFromTimeToTime (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint) (NumberPM 4L) (NumberPM 5L)))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (Execute (refer (& (^(Date) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (^(Event) EmptyStructConstraint) (NumberPM 4L) (NumberPM 5L))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateFromTimeToTime (Execute (refer (& (^(Date) roleConstraint (Path.apply \" end \")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (^(Event) EmptyStructConstraint) (NumberPM 4L) (NumberPM 5L))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (^(Event) EmptyStructConstraint)) (TimeToTime (NumberPM 4L) (NumberPM 5L)))))) 0L))"], "pred_translated": ["Do I have anything between 4 and 5 pm?", "Do I have anything between 4 and 5 pm that day?", "Anything between 4 and 5 pm that day?", "Anything between 4 and 5 pm that day?", "Do I have anything between 4 and 5 pm that day?", "Is there anything between 4 and 5 pm that day?", "Is there anything between 4 and 5 pm that day?", "Is there anything between 4 and 5 pm that day?", "Do I have anything between 4 and 5 pm that day?", "Do I have anything between 4 and 5 pm that day?"], "distractor": "Remind me of the first flight to london"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.subject_? ( ?~= \" Family Road Trip \" ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" Phoenix \" ) ) ) ) ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" Chicago \" ) ) ) ) ) )", "gold_src": "__User Change the location of the Family Road Trip from Phoenix to Chicago . __StartOfProgram\n", "min_probs": [0.6772895055126016, 1.8045435482658788e-05, 1.821430209721333e-09, 1.8276886258380142e-11, 1.473463077537789e-11, 7.915406367384344e-12, 1.102737000549047e-09, 4.618275717517119e-12, 5.790049568023815e-13, 1.6138849843816693e-13], "bin": 0.65, "data_idx": "1629", "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Family Road Trip \")) (Event.location_? (?= (LocationKeyphrase.apply \" Phoenix \")))))))) (Event.location_? (?= (LocationKeyphrase.apply \" Chicago \"))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Family Road Trip \")) (Event.location_? (?= (LocationKeyphrase.apply \" Chicago \")))))))) (Event.location_? (?= (LocationKeyphrase.apply \" Chicago \"))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Family Road Trip \")))))) (Event.location_? (?= (LocationKeyphrase.apply \" Chicago \"))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Family Road Trip \")) (Event.location_? (?= (LocationKeyphrase.apply \" Phoenix \")))))))) (Event.location_? (?= (LocationKeyphrase.apply \" Chicago Family \"))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Family Road Trip \")) (Event.location_? (?= (LocationKeyphrase.apply \" Phoenix \")))))))) (Event.location_? (?= (LocationKeyphrase.apply \" Chicago. \"))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Family Road Trip \")) (Event.location_? (?= (LocationKeyphrase.apply \" Phoenix \")))))))) (Event.location_? (?= (LocationKeyphrase.apply \" Chicago 's \"))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Family Road \")) (Event.location_? (?= (LocationKeyphrase.apply \" Phoenix \")))))))) (Event.location_? (?= (LocationKeyphrase.apply \" Chicago \"))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Family Road Trip \")) (Event.location_? (?= (LocationKeyphrase.apply \" Phoenix \")))))))) (Event.location_? (?= (LocationKeyphrase.apply \" Chicago Phoenix \"))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?= \" Family Road Trip \")) (Event.location_? (?= (LocationKeyphrase.apply \" Phoenix \")))))))) (Event.location_? (?= (LocationKeyphrase.apply \" Chicago \"))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Family Road Trip \")) (Event.location_? (?= (LocationKeyphrase.apply \" Phoenix \")))))))) (Event.location_? (?= (LocationKeyphrase.apply \" Chicago Road \"))))))"], "pred_translated": ["Change the location of \"Family Road Trip\" from Phoenix to Chicago", "Change the location of \"Family Road Trip\" in Chicago.", "Change the location of \"Family Road Trip\" to Chicago", "Change the location of \"Family Road Trip\" from Phoenix to Chicago Family", "Change the location of \"Family Road Trip\" from Phoenix to Chicago.", "Change the location of \"Family Road Trip\" from Phoenix to Chicago's", "Change \"Family Road\" from Phoenix to Chicago", "Change the location of \"Family Road Trip\" from Phoenix to Chicago Phoenix", "Change the location of \"Family Road Trip\" from Phoenix to Chicago", "Change the location of \"Family Road Trip\" from Phoenix to Chicago Road"], "distractor": "How about the day after?"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventOnDate ( MD 2L ( January ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) )", "gold_src": "__User find the type of event scheduled for January 2 nd __StartOfProgram\n", "min_probs": [0.31281254667634284, 0.0016298789996653795, 0.0012842671712860465, 0.0011507772142067552, 0.0006314964266493917, 0.027364972885339008, 4.644598531410261e-07, 1.4335490075930885e-10, 6.402264532285737e-14, 1.287851339200184e-10], "bin": 0.35, "data_idx": "9851", "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 2L (January)) (^(Event) EmptyStructConstraint))))", "(FenceSpecify)", "(FenceScope)", "(FenceOther)", "(PleasantryCalendar)", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 2L (January)) (^(Event) EmptyStructConstraint))))))", "(Yield (Event.subject (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 2L (January)) (^(Event) EmptyStructConstraint)))))))", "(Yield (FindNumNextEvent (EventOnDate (MD 2L (January)) (^(Event) EmptyStructConstraint)) 2L))", "(Yield (FindEventWrapperWithDefaults (EventOnDate (MDY 2L (January) (Year.apply 2019L)) (^(Event) EmptyStructConstraint))))", "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 2L (January)) (^(Event) EmptyStructConstraint)))))) (ResponseStatusType.Accepted)))"], "pred_translated": ["What do I have planned for January 2nd?", "I need to change the date of my doctor's appointment", "How old are you?", "Can you tell me the weather for tomorrow in Greenville, NC?", "I need help with my calendar", "What time is my meeting on January 2nd?", "What is the name of the event on January 2?", "What is my second event on January 2?", "What do I have on January 2nd 2019?", "Who am I meeting with on January 2nd?"], "distractor": "Actually move it to next month."}
{"gold_tgt": "( Yield ( FindManager ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Dan Schoffel \" ) ) ) ) ) ) )", "gold_src": "__User What time is my meeting on Friday ? __Agent The event on your calendar is tomorrow at 9 : 00 AM . __User Does Dan Schoffel report to anybody ? __StartOfProgram\n", "min_probs": [0.392039954662323, 0.12109345216309261, 0.0008554934495888982, 2.361608976484376e-10, 4.846492423507739e-10, 4.333392479075366e-10, 1.1974110739363318e-08, 1.55142228371705e-10, 1.238490920341955e-10, 5.5938908488451935e-11], "bin": 0.35, "data_idx": "4280", "pred_tgts": ["(FencePeopleQa)", "(Yield (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Dan Schoffel \")))))))", "(Yield (FindReports (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Dan Schoffel \")))))))", "(Yield (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Dan Schoffel \")))", "(Yield (PersonFromRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Dan Schoffel \"))))))))", "(Yield (allows (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Dan Schoffel \"))) (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))", "(Yield (allows (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Dan Schoffel \"))))))) (Event.attendees (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))", "(Yield (allows (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Dan Schoffel \"))))))) (Execute (refer (extensionConstraint (^((List Attendee)) AlwaysTrueConstraint))))))", "(Yield (PersonOnTeam (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Dan Schoffel \")))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Dan Schoffel \")))))))", "(Yield (== (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Dan Schoffel \")))))) (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Dan Schoffel \"))))))))"], "pred_translated": ["When did I last drink a coffee?", "Who is Dan Schoffel's boss?", "Who are Dan Schoffel's reports?", "What is Dan Schoffel contact info?", "Who is Dan Schoffel's boss?", "Is Dan Schoffel invited?", "Is Dan Schoffel's manager invited?", "Is Dan Schoffel's boss invited?", "Who is Dan Schoffel's manager?", "Is Dan Schoffel's manager?"], "distractor": "add something to my calendar"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( EventOnDateWithTimeRange ( EventOnDate ( Execute ( refer ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ( Morning ) ) ) ) )", "gold_src": "__User What about tomorrow night ? __Agent Yes , I found one event . It 's \" Appointment \" tomorrow from 8 : 00 to 8 : 30 PM . __User And the morning ? __StartOfProgram\n", "min_probs": [0.8218359627429068, 1.3279390069126716e-07, 9.587352355719027e-11, 1.1956720899359212e-08, 3.977138598301286e-10, 3.3094713487476982e-12, 2.04304216787777e-10, 3.6334744423466798e-09, 7.288216553104584e-09, 1.1042328904966379e-09], "bin": 0.85, "data_idx": "8594", "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDateWithTimeRange (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)) (Morning)))))", "(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)) (Morning))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventDuringRangeTime (^(Event) EmptyStructConstraint) (Morning)))))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)) (Morning))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Morning)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (Morning))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDateWithTimeRange (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)) (Morning)))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)) (Morning))))) 0L))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDateWithTimeRange (EventOnDate (Execute (refer (& (^(Date) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (^(Event) EmptyStructConstraint)) (Morning)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDateWithTimeRange (EventOnDate (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (^(Event) EmptyStructConstraint)) (Morning)))))"], "pred_translated": ["And the morning?", "And what do I have that morning?", "And the morning?", "And the one in the morning?", "What about this morning?", "What about in the morning?", "What about tomorrow morning?", "Do I have anything in the morning?", "And the next morning?", "And the morning?"], "distractor": "make a meeting with Jesse at 9 pm"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( ?= ( NextTime ( NumberPM 9L ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Jesse \" ) ) ) ) ) ) ) ) ) ) )", "gold_src": "__User hold on __Agent No problem . __User Now Create an Appointment with Jesse at 9 : 00 Pm __StartOfProgram\n", "min_probs": [0.6760832958397683, 0.0012871090804578813, 2.4931614457832064e-07, 1.8803447767415033e-08, 4.0082663609291655e-08, 1.1632608270779671e-10, 2.0466741945286246e-10, 8.511466573577404e-11, 1.6789075051568392e-10, 5.6067061795293566e-12], "bin": 0.65, "data_idx": "11894", "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jesse \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.time_? (?= (NumberPM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jesse \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (NumberPM 9L)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberAM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jesse \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jesse \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jesse \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jesse \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAtTime (& (Event.subject_? (?= \" Appointment \")) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jesse \")))))))) (NumberPM 9L)))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (?= (NumberPM 9L)) (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jesse \")))))))))))", "(do (Yield (Execute (ConfirmCreateAndReturnAction))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberPM 9L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jesse \"))))))))))))"], "pred_translated": ["make a meeting with Jesse at 9 pm", "make a meeting with Jesse at 9 pm", "make an event for 9pm", "Make a 9 am meeting with Jesse", "Make a meeting with Jesse at 9 pm that day.", "Schedule a 9 am meeting with Jesse", "Make a meeting with Jesse tonight at 9 pm.", "Make an Appointment with Jesse at 9 pm", "Make a meeting with Jesse at 9 pm that day.", "Yes, schedule the meeting with Jesse for 9."], "distractor": "Change the end time to 3:00 PM."}
{"gold_tgt": "( DoNotConfirm )", "gold_src": "__User Make an all day event for tomorrow with Abby __Agent Is this what you 're looking for ? __User Abby just called . She will not be able to make it . Cancel the all - day event . __StartOfProgram\n", "min_probs": [0.3784927427768707, 0.014388324791161292, 9.50333217721866e-05, 0.005678950571933072, 0.00029363643487415395, 0.00016358017088280528, 0.0001694066655906351, 5.869446434192646e-07, 5.852523910294819e-05, 6.032375363933043e-07], "bin": 0.35, "data_idx": "2545", "pred_tgts": ["(DoNotConfirm)", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.isAllDay_? (?= true)) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \"))))))))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \")))))))) (Event.isAllDay_? (?= true))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.isAllDay_? (?= true)))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (Event.isAllDay_? (?= false)))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.isAllDay_? (?= false)))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \")))))))))))", "(do (DoNotConfirm) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \")))))))) (Event.isAllDay_? (?= true)))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (& (Event.isAllDay_? (?= true)) (Event.attendees_? (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \"))))))))) (Event.isAllDay_? (?= true))))))))))"], "pred_translated": ["cancel this all day event", "Remove Abby from the all day event", "cancel the meeting", "Delete the all day event without Abby", "cancel the all day event", "No, cancel that all day event.", "Delete my all day event", "Remove Abby from that", "Delete the all day event without Abby please.", "Remove Abby from my all day event please."], "distractor": "Show me events that are not work related."}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEventFromConstraint ( ^ ( Event ) EmptyStructConstraint ) ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "gold_src": "__User add dates to my calendar __Agent Does one of these work ? __User yes __StartOfProgram\n", "min_probs": [0.8545484500863433, 0.029662394896149635, 0.01245291717350483, 0.0013822211185470223, 0.0010715191019698977, 0.0006378712132573128, 3.318972592977711e-08, 1.2569939818088776e-08, 4.775828266317256e-09, 1.1232200789908845e-10], "bin": 0.85, "data_idx": "78", "pred_tgts": ["(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(FenceOther)", "(PleasantryAnythingElseCombined)", "(FenceSpecify)", "(DoNotConfirm)", "(PleasantryCalendar)", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["yes", "How do I create calendar events?", "yes", "Show me different times.", "no", "What can you do?", "yes", "yes", "yes the first one", "yes the second one"], "distractor": "Yes. I also have a track meet that day at around 3 pm"}
{"gold_tgt": "( Yield ( DeleteCommitEventWrapper ( DeletePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Barack Obama \" ) ) ) ) ) ) ) ) ) ) )", "gold_src": "__User Thank you . __Agent I 've changed \" Meeting with Barack Obama \" to be . __User Can you cancel the meeting with Barack Obama ? __StartOfProgram\n", "min_probs": [0.9815258084673041, 1.564285814600195e-08, 1.6830619932301883e-14, 3.200962289819811e-10, 1.5168910609374664e-10, 1.203733708429085e-12, 5.7092379431538656e-11, 1.9054367265874393e-12, 2.5034361495602056e-12, 6.14013185846668e-13], "bin": 0.95, "data_idx": "11178", "pred_tgts": ["(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Barack Obama \")))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" meeting with Barack Obama \")))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Barack \")))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Barack Obama \"))))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Obama Obama \")))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" meeting \")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Barack Obama \"))))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipient (RecipientFromRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Barack Obama \"))))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Barack Obama \")))) (Now)))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Barack Obama \"))))))))))))"], "pred_translated": ["Meeting with Barack Obama. Cancel", "No, I don't want that", "Remove meeting with Barack Obama", "Meeting with Barack Obama. Cancel", "Remove my meeting with Barack Obama", "Remove my meeting with Obama Obama", "Meeting with Barack Obama. Cancel", "Meeting with Barack Obama. Cancel", "Can you cancel my meeting with Barack Obama later today?", "Cancel my meeting with Barack Obama today"], "distractor": "How about the day after?"}
{"gold_tgt": "( let ( x0 ( Event.end ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" dentist \" ) ) ) ) ) ) ) ( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateAfterTime ( DateTime.date x0 ) ( Event.subject_? ( ?~= \" lunch \" ) ) ( DateTime.time x0 ) ) ) ) ) 0L ) ) )", "gold_src": "__User And the next one ? __Agent That was the last result . __User IS there a lunch schedule after the dentist ? __StartOfProgram\n", "min_probs": [0.19662427176083935, 0.004842497096445789, 2.671130516773701e-06, 1.4558467160211698e-09, 9.457962780663235e-09, 2.7349482305546704e-12, 2.9550011882425993e-13, 1.529328106263949e-13, 6.836047511338474e-13, 1.0105075583351817e-14], "bin": 0.05, "data_idx": "3951", "pred_tgts": ["(let (x0 (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" dentist \"))))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (Event.subject_? (?~= \" lunch \")) (DateTime.time x0))))) 0L)))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (Event.subject_? (?~= \" lunch \")) (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" dentist \")))))))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" lunch \")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" dentist \")))))))))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (Event.subject_? (?= \" lunch \")) (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" dentist \")))))))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (EventOnDate (DateTime.date) (Event.subject_? (?~= \" lunch \"))) (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" dentist \")))))))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (EventOnDate (Event.subject_? (?~= \" lunch \"))) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" dentist \"))))) (^(Event) EmptyStructConstraint))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (Event.subject_? (?~= \" lunch \")) (^(Event) EmptyStructConstraint) (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" dentist \")))))))))) 0L))", "(let (x0 (Event.end (Execute (refer (extensionConstraint (Event.subject_? (?~= \" dentist \"))))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date x0) (Event.subject_? (?~= \" lunch \")) (DateTime.time x0))))) 0L)))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date (Event.end)) (Event.subject_? (?~= \" lunch \")) (DateTime.time (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" dentist \"))))) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" dentist \"))))))))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date (Event.end)) (Event.subject_? (?~= \" lunch \")) (DateTime.time (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" dentist \"))))) (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" lunch \"))))))))))) 0L))"], "pred_translated": ["Do I have a lunch after the dentist?", "Do I have a lunch after the dentist?", "Do I have lunch after the dentist?", "Do I have a lunch after the dentist?", "Do I have anything after lunch but before the dentist?", "Do I have anything after lunch but before the dentist?", "Do I have a lunch after the dentist?", "Do I have a lunch after the dentist?", "Do I have a lunch after the dentist?", "Do I have anything after lunch but before the dentist?"], "distractor": "make an appointment with john at McDonalds in 2 hours"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventDuringRange ( Event.subject_? ( ?~= \" dentist appointments \" ) ) ( ThisWeek ) ) ) )", "gold_src": "__User Please check to see if I have any dentist appointments this week . __StartOfProgram\n", "min_probs": [0.7098162807076408, 4.914771921447563e-08, 0.00020264446976283164, 2.528638149175671e-06, 2.0201303227870525e-06, 2.633639769128176e-07, 3.786826763169743e-09, 5.40201293706209e-09, 4.047595362982484e-09, 1.7453063429308719e-10], "bin": 0.75, "data_idx": "269", "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" dentist appointments \")) (ThisWeek))))", "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \" dentist appointments \"))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" dentist appointments \")) (ThisWeek))))) 0L))", "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" dentist appointment \")) (ThisWeek))))", "(Yield (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" dentist appointments \")) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)))))", "(Yield (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" dentist appointments \")) (Event.start_? (DateTime.date_? (ThisWeek))))))", "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" dentist \")) (ThisWeek))))", "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" dentist appointments \")) (WeekOfDateNew (Today)))))", "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" dentist appointments \")) (ThisWeek))))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" dentist appointments \")) (EventDuringRange (^(Event) EmptyStructConstraint) (ThisWeek)))))) 0L))"], "pred_translated": ["What dentist appointments do I have this week?", "Search for dentist appointments", "Do I have any dentist appointments this week?", "What day is my dentist appointment this week?", "What dentist appointments do I have this week?", "What dentist appointments do I have this week?", "What day am I going to the dentist this week?", "What dentist appointments do I have this week?", "How many dentist appointments do I have this week?", "Do I have any dentist appointments this week?"], "distractor": "Hello. I need help with my calendar."}
{"gold_tgt": "( Yield ( DeleteCommitEventWrapper ( DeletePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Friday ) ) ( Event.subject_? ( ?~= \" doctors appointment \" ) ) ) ) ) ) ) ) ) )", "gold_src": "__User ok fine thank you __Agent I 've changed \" Doctor 's Appointment for that issue that 's maybe life - threatening \" to be . __User Cancel my doctors appointment for friday __StartOfProgram\n", "min_probs": [0.974851205606845, 1.6425239674673737e-09, 1.278869586717089e-08, 6.187675644262399e-10, 5.75408514090804e-09, 1.724851345748983e-08, 3.475767991596989e-11, 1.990087562551835e-12, 1.9891303234918522e-13, 0.0], "bin": 0.95, "data_idx": "6432", "pred_tgts": ["(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \" doctors appointment \"))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" doctors appointment \")))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" doctors appointment \")) (EventOnDate (NextDOW (Friday)) (^(Event) EmptyStructConstraint))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?= \" doctors appointment \"))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" doctors appointment \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (Event.subject_? (?~= \" doctors \"))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (ClosestDayOfWeek (Today) (Friday)) (Event.subject_? (?~= \" doctors appointment \"))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Friday)) (& (Event.subject_? (?~= \" doctors appointment \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))))))))))))", "(Error)"], "pred_translated": ["Can you cancel my doctors appointment on Friday?", "cancel the doctors appointment", "Can you cancel my doctors appointment on Friday?", "Can you cancel my doctors appointment on Friday?", "cancel the doctors appointment on friday", "Can you cancel my appointment on Friday?", "Can you cancel my doctors appointment on Friday?", "Can you cancel my doctors appointment on Friday?", "Cancel my doctors appointment on Friday.", "Wait a minute."], "distractor": "The 1st one works."}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( & ( Event.start_? ( DateTime.time_? ( ?= ( NumberAM 10L ) ) ) ) ( Event.end_? ( DateTime.time_? ( ?= ( NumberAM 11L ) ) ) ) ) ) ) )", "gold_src": "__User when did i meet with John last week ? __Agent The event with John last week was on Wednesday the 8 th at 9 : 00 AM . __User Change the time to 10 am to 11 am . __StartOfProgram\n", "min_probs": [0.0006103661144152284, 0.35346808505594846, 7.931823537136324e-08, 2.594061270791556e-10, 1.209403084212247e-10, 9.2821668754181e-13, 6.758870502474879e-14, 2.3982016745048832e-14, 5.662117424985843e-15, 4.545134086965639e-15], "bin": 0.35, "data_idx": "2965", "pred_tgts": ["(FenceSpecify)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.end_? (DateTime.time_? (?= (NumberAM 11L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (EventAtTime (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (NumberAM 11L)))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?=))) (Event.end_? (?= (TimeAfterDateTime (NextTime) (NumberAM 11L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.end_? (DateTime.time_? (?= (NumberAM 11L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))) (& (Event.start_? (?= (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))) (Event.end_? (?= (TimeAfterDateTime (NumberAM 11L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.end_? (DateTime.time_? (?= (NumberAM 11L))))))))", "(do (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))) (& (Event.start_? (?=)) (Event.end_? (?= (TimeAfterDateTime (NumberAM 11L)))))))))", "(do (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))) (& (Event.start_? (?=)) (Event.end_? (?= (TimeAfterDateTime (NumberAM 11L)))))))))"], "pred_translated": ["when can i meet with john next week?", "change the meeting time at 10.00 am - 11.00am", "Change the time to 11am", "change the time 10.00 am - 11.00am", "The meeting lasted until 11:00 AM.", "change the meeting time at 10.00 am - 11.00am", "change the time from 10.00 am - 11.00am", "please change the meeting 10.00 to 11.00 am", "please change the meeting 10.00 am - 11.00am", "Can you change the time to 10:00 to 11:00 AM?"], "distractor": "Can you tell me the weather for tomorrow in Greenville, NC?"}
{"gold_tgt": "( Yield ( FindNumNextEvent ( ^ ( Event ) EmptyStructConstraint ) 1L ) )", "gold_src": "__User what event do ih ave next ? __StartOfProgram\n", "min_probs": [0.1971535576953966, 0.0017336276779458598, 4.4282863855649096e-05, 2.4656596955726674e-05, 6.571222136003409e-07, 7.818932627553596e-05, 0.0001928842900632533, 1.3129634142575869e-05, 1.444148845865802e-08, 2.8826877787097274e-08], "bin": 0.15, "data_idx": "8961", "pred_tgts": ["(Yield (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L))", "(Yield (FindNumNextEvent (Event.subject_? (?~= \" ih \")) 1L))", "(Yield (FindNumNextEvent (Event.location_? (?= (LocationKeyphrase.apply \" ih \"))) 1L))", "(Yield (take (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))) 1L))", "(Yield (FindNumNextEvent (EventOnDateTime (Now) (^(Event) EmptyStructConstraint)) 1L))", "(Yield (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" ih \")))) 1L))", "(Yield (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" ih \"))))))) 1L))", "(Yield (take (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" ih \")))) 1L))", "(Yield (FindNumNextEvent (EventAfterDateTime (^(Event) EmptyStructConstraint) (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) 1L))", "(Yield (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \")))) 1L))"], "pred_translated": ["What is my next scheduled event?", "when is my next iih", "what is my next meeting at ih", "What is my first scheduled event?", "What's the first thing going on right now?", "Show my next meeting with ih", "When is my next meeting with ih?", "when is my next iih?", "What is my next event after this one?", "What is my next event with Kim?"], "distractor": "Can you say that again?"}
{"gold_tgt": "( do ( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) ) ( Yield ( EventAttendance ( RespondComment.apply \" I'm busy wake boarding that day. \" ) :event ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" hike \" ) ) ) ) ) :response ( ResponseStatusType.Declined ) ) ) )", "gold_src": "__User Yes also decline my AC / CD Reunion and say i am going to see Journey instead __Agent I have declined it . I will decline \" AC / CD Reunion \" and send a response to the organizer with the following comment : \" i am going to see Journey instead \" . Is that ok ? __User Yes . And decline the hike and say that I 'm busy wake boarding that day . __StartOfProgram\n", "min_probs": [0.046562024960108965, 2.1313779363249206e-08, 1.5895542564093014e-12, 5.79616819643199e-14, 1.8123206052705605e-14, 1.9036817753419195e-18, 2.743772865558089e-16, 5.8294685209047246e-21, 2.6993704069743595e-23, 9.633688121920145e-25], "bin": 0.05, "data_idx": "43", "pred_tgts": ["(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" I'm busy wake boarding that day. \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" hike \"))))) :response (ResponseStatusType.Declined))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" I'm busy wake boarding that day \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" hike \"))))) :response (ResponseStatusType.Declined))))", "(Yield (EventAttendance (RespondComment.apply \" I'm busy wake boarding that day. \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" hike \"))))) :response (ResponseStatusType.Declined)))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" I'm busy wake boarding that day. \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" the hike \"))))) :response (ResponseStatusType.Declined))))", "(Yield (EventAttendance (RespondComment.apply \" I'm busy wake boarding \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" hike \"))))) :response (ResponseStatusType.Declined)))", "(Yield (EventAttendance (RespondComment.apply \" I'm busy wake boarding that day \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" hike \"))))) :response (ResponseStatusType.Declined)))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" I'm busy wake boarding that day \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" the hike \"))))) :response (ResponseStatusType.Declined))))", "(Yield (EventAttendance (RespondComment.apply \" I'm busy wake boarding that day. \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" the hike \"))))) :response (ResponseStatusType.Declined)))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" I'm busy wake boarding that day . . \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" hike \"))))) :response (ResponseStatusType.Declined))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" I'm busy boarding boarding that day. \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" hike \"))))) :response (ResponseStatusType.Declined))))"], "pred_translated": ["Yes, that's good. Decline my hike and say that I'm busy wake boarding that day.", "Yes, that's good. Decline my hike and say that I'm busy wake boarding that day.", "Yes, that's good. Decline my hike and say that I'm busy wake boarding that day.", "Yes, that's good. Decline the hike and say that I'm busy wake boarding that day.", "Yes, thank you. Decline my hike and say that I'm busy wake boarding.", "Decline the hike and say that I'm busy wake boarding that day.", "Yes, that's good. Decline the hike and say that I'm busy wake boarding that day.", "Decline the hike and say that I'm busy wake boarding that day.", "Yes, that's good. Decline my hike and say that I'm busy wake boarding that day.", "Yes, thank you. Decline my hike and say that I'm busy boarding that day."], "distractor": "Defer the meeting with lee Chan"}
{"gold_tgt": "( Yield ( Event.duration ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" doctor's appointment \" ) ) ) ) ) ) )", "gold_src": "__User How long have a blocked out for my doctor 's appointment ? __StartOfProgram\n", "min_probs": [0.5245940089225769, 0.182779923081398, 0.1569025069475174, 0.018033599480986595, 0.012229637242853642, 0.010219389572739601, 0.008628598414361477, 0.0054726931266486645, 1.3915563318096049e-05, 3.66296153632745e-10], "bin": 0.55, "data_idx": "9676", "pred_tgts": ["(FenceScope)", "(FenceAggregation)", "(FenceOther)", "(FenceWeather)", "(FenceSpecify)", "(FenceNavigation)", "(FencePeopleQa)", "(FenceConditional)", "(Yield (Event.duration (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" doctor's appointment \")))))))", "(Yield (TimeSinceEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" doctor's appointment \")))))))"], "pred_translated": ["How old are you?", "How many days do I have completely free next month?", "Can you tell me the weather for tomorrow in Greenville, NC?", "What causes hail?", "I need to change the date of my doctor's appointment", "How long will it take me to get to Burger King?", "Why didn't Mom come to my birthday party?", "If I have any meetings next week after 1 pm, delete them.", "How long is my doctor's appointment?", "How many more days before my doctor's appointment?"], "distractor": "The 2nd one works well"}
{"gold_tgt": "( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( adjustByPeriod ( Execute ( refer ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ( toDays 1 ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) 0L ) )", "gold_src": "__User Hi , what meetings do I have scheduled for tomorrow ? __Agent Here 's what I found : __User Is there something the next day ? __StartOfProgram\n", "min_probs": [0.434501563737381, 4.7613624397731524e-05, 1.9560267237509725e-05, 3.183645884925454e-07, 1.2020611999358446e-05, 6.851461730971754e-07, 1.6980867870348513e-06, 2.521700873322518e-07, 1.6959496028734618e-07, 1.5968816273590942e-07], "bin": 0.45, "data_idx": "4152", "pred_tgts": ["(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (^(Event) EmptyStructConstraint))))) 0L))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (^(Event) EmptyStructConstraint)))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (adjustByPeriodDuration (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (PeriodDuration.apply (toDays 1))) (^(Event) EmptyStructConstraint))))) 0L))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (^(Event) EmptyStructConstraint))))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (adjustByPeriod (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (toDays 1)) (^(Event) EmptyStructConstraint))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (adjustByPeriodDuration (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (PeriodDuration.apply (toDays 1))) (^(Event) EmptyStructConstraint))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (EventOnDate (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)) (^(Event) EmptyStructConstraint)) (^(Event) EmptyStructConstraint))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (adjustByPeriodDuration (Execute (refer (extensionConstraint (^(DateTime) EmptyStructConstraint)))) (PeriodDuration.apply (toDays 1))) (^(Event) EmptyStructConstraint))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (adjustByPeriodDuration (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (PeriodDuration.apply (toDays 1))) (^(Event) EmptyStructConstraint))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (adjustByPeriod (DateTime.date (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (toDays 1)) (^(Event) EmptyStructConstraint))))) 0L))"], "pred_translated": ["Do I have anything the next day?", "How about the day after?", "Do I have anything the next day?", "How about the next day?", "Do I have anything the next day?", "Do I have anything the next day?", "Do I have anything the next day?", "Do I have anything the next day?", "Do I have anything the day after that?", "Do I have anything the day after that?"], "distractor": "create meeting in on monday at 12 in room 23"}
{"gold_tgt": "( Yield ( DeleteCommitEventWrapper ( DeletePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( nextDayOfMonth ( Today ) 22L ) ( & ( Event.location_? ( ?= ( LocationKeyphrase.apply \" the museum \" ) ) ) ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Sam \" ) ) ) ) ) ) ) ) ) ) ) ) )", "gold_src": "__User delete my event with Sam at the museum on the 22 nd __StartOfProgram\n", "min_probs": [0.19946505203445175, 0.0014827425687424104, 0.001325956406571124, 1.641701849263714e-05, 6.121349306122859e-06, 9.563559976061683e-07, 3.789274511979733e-07, 1.071909094947149e-06, 5.232396777972353e-07, 3.947667287731916e-06], "bin": 0.25, "data_idx": "2297", "pred_tgts": ["(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 22L) (& (Event.location_? (?= (LocationKeyphrase.apply \" the museum \"))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sam \")))))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 22L) (Event.location_? (?= (LocationKeyphrase.apply \" the museum \")))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sam \")))) (EventOnDate (nextDayOfMonth (Today) 22L) (^(Event) EmptyStructConstraint))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 22L) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sam \"))))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.location_? (?= (LocationKeyphrase.apply \" the museum \"))) (EventOnDate (nextDayOfMonth (Today) 22L) (^(Event) EmptyStructConstraint))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (previousDayOfMonth (Today) 22L) (& (Event.location_? (?= (LocationKeyphrase.apply \" the museum \"))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sam \")))))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 22L) (& (Event.location_? (?= (LocationKeyphrase.apply \" museum \"))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sam \")))))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (ClosestDay (Today) (Day.apply 22L)) (& (Event.location_? (?= (LocationKeyphrase.apply \" the museum \"))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sam \")))))))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (& (Event.location_? (?= (LocationKeyphrase.apply \" the museum \"))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sam \"))))) (EventOnDate (nextDayOfMonth (Today) 22L) (^(Event) EmptyStructConstraint))))))))))", "(do (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 22L) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sam \")))))))))))) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfMonth (Today) 22L) (Event.location_? (?= (LocationKeyphrase.apply \" the museum \"))))))))))))"], "pred_translated": ["Sam and I aren't going to the museum on the 22nd anymore.", "Cancel my visit to the museum on the 22nd.", "Delete my meeting with Sam on the 22nd.", "Delete my meeting with Sam on the 22nd.", "Delete my event at the museum on the 22nd.", "I never went to the museum with Sam on the 22nd. Delete it.", "Sam and I aren't going to the museum on the 22nd anymore.", "Sam and I aren't going to the museum anymore on the 22nd.", "Sam and I aren't going to the museum anymore on the 22nd.", "Delete my meeting with Sam at the museum on the 22nd."], "distractor": "Schedule a meeting with Barack Obama 10 days from now"}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "gold_src": "__User what events are this weekend ? __Agent I did n't find any events this weekend . __User Nevermind , just put that on my calendar __StartOfProgram\n", "min_probs": [0.42879316210746765, 0.07943116128444672, 0.039644264508942095, 0.023881912271296102, 0.0003104996843014997, 0.00020681548687040419, 6.247963006441775e-07, 2.7836870172267625e-05, 3.4624650453947406e-07, 2.82457006428358e-07], "bin": 0.45, "data_idx": "3301", "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (^(Event) EmptyStructConstraint))))", "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))", "(Yield (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \" that on \")))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \" that \")))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \" that put \")))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \" that my \")))))"], "pred_translated": ["How do I create an event?", "update my calender", "Yes that looks right.", "Can you create an event?", "Are you sure? Please check one more time.", "what is the event?", "Let's put that on the calendar.", "add that", "that put on my calender", "put appointment that my"], "distractor": "What is my next scheduled event?"}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEventFromConstraint ( Event.start_? ( DateTime.date_? ( Date.day_? ( ?= ( Day.apply 28L ) ) ) ) ) ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "gold_src": "__User Can you schedule me a hair apointment for next wee __Agent Does one of these work ? __User 28 is ok __StartOfProgram\n", "min_probs": [0.7703643698893605, 0.0007150375749915838, 0.0003144593376319087, 5.5439104154706043e-11, 7.069612331966271e-08, 1.8856519995600947e-10, 1.569164122986639e-10, 1.4847907241285173e-10, 6.12671380399465e-11, 8.921609239399858e-09], "bin": 0.75, "data_idx": "6490", "pred_tgts": ["(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.day_? (?= (Day.apply 28L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(FenceOther)", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 28L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (ClosestDay (Today) (Day.apply 28L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (HourMilitary 28L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 28L (April))))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (?= (Day.apply 28L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (DateTime.time_? (?= (Day.apply 28L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (ClosestDay (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Day.apply 28L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["The one on the 28th", "I would prefer the first option.", "The one on the 28th please", "yes", "The one on the 28th please", "28 is ok", "April 28 works", "28 is ok", "The one on the 28th", "The one on the 28th please"], "distractor": "How do I create an event?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( Event.start_? ( OnDateAfterTime ( Tomorrow ) ( NumberPM 12L ) ) ) ) ) )", "gold_src": "__User Yes . Is there anything scheduled for after that event ? __Agent I 've put that on your calendar . No , I did n't find any events on August 5 th after 2 : 30 . __User ok put meeting on tomorrow after 12 PM __StartOfProgram\n", "min_probs": [0.6125673976362718, 0.001254949972923565, 5.162286541831841e-09, 1.1124520312309532e-07, 1.1738681682051425e-06, 1.4006390536272477e-08, 2.4158981690101784e-10, 6.485868578349098e-08, 2.677294050976206e-09, 1.0323873504800761e-10], "bin": 0.65, "data_idx": "8867", "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (OnDateAfterTime (Tomorrow) (NumberPM 12L))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (?> (NumberPM 12L)) (Tomorrow))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventOnDateAfterTime (Tomorrow) (^(Event) EmptyStructConstraint) (NumberPM 12L)))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?> (DateAtTimeWithDefaults (Tomorrow) (NumberPM 12L)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" meeting \")) (Event.start_? (OnDateAfterTime (Tomorrow) (NumberPM 12L)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Tomorrow) (NumberPM 12L)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (?< (NumberPM 12L)) (Tomorrow))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" meeting \")) (Event.start_? (DateTimeConstraint (?> (NumberPM 12L)) (Tomorrow)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (TimeToTime (NumberPM 12L) (NumberPM 12L)) (Tomorrow))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (TimeToTime (DateTime.time (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (NumberPM 12L)) (Tomorrow))))))"], "pred_translated": ["I need a meeting tomorrow after 12 pm", "I need a meeting tomorrow after 12 pm", "I need a meeting tomorrow after 12 pm", "I need an appointment after 12 tomorrow", "I need a meeting tomorrow after 12", "Can you make an event for tomorrow at 12pm", "I need an appointment before 12 pm tomorrow", "I need a meeting after 12 tomorrow", "Schedule a meeting tomorrow between 12 and 12:30", "Can you schedule a meeting tomorrow between 12 and 1?"], "distractor": "I'll take the later one."}
{"gold_tgt": "( let ( x0 ( DateAtTimeWithDefaults ( NextDOW ( Sunday ) ) ( HourMinutePm 7L 30L ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( & ( Event.subject_? ( ?= \" Strange Aeons \" ) ) ( Event.start_? ( ?= x0 ) ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x0 ( NumberPM 11L ) ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" Roll20 \" ) ) ) ) ) ) ) )", "gold_src": "__User Do I have anything on Sunday after 5 pm ? __Agent No , I did n't find any events on Sunday the 20 th after 5 : 00 PM . __User Put Strange Aeons for sunday at 7 : 30 pm until 11 pm . It 'll be in Roll20 as usual . __StartOfProgram\n", "min_probs": [0.0006438324344344437, 1.2688351361116705e-13, 5.6518886886856345e-15, 1.192912344639409e-20, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "bin": 0.05, "data_idx": "3053", "pred_tgts": ["(FenceOther)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" Strange Aeons \")) (Event.start_? (?=))) (Event.end_? (?= (TimeAfterDateTime (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 7L)) (NumberPM 11L))))) (Event.location_? (?= (LocationKeyphrase.apply \" Roll20 \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" Strange Aeons \")) (Event.start_? (?=))) (Event.end_? (?= (TimeAfterDateTime (DateAtTimeWithDefaults (NextDOW (Sunday)) (NumberPM 7L)) (NumberPM 11L))))) (Event.location_? (?= (LocationKeyphrase.apply \" Roll20 \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" Strange Aeons \")) (Event.start_? (?=))) (Event.end_? (?= (TimeAfterDateTime (DateAtTimeWithDefaults (NextDOW (Saturday)) (NumberPM 7L)) (NumberPM 11L))))) (Event.location_? (?= (LocationKeyphrase.apply \" Roll20 \")))))))", "(Error)", "(Error)", "(Error)", "(Error)", "(Error)", "(Error)"], "pred_translated": ["How do I add an event to my calendar?", "Add Strange Aeons to my calendar on Sunday from 7 pm to 11 pm at Roll20.", "Add Strange Aeons to my calendar on Sunday from 7 pm to 11 pm at Roll20.", "Add Strange Aeons to my calendar on Saturday from 7 pm to 11 pm at Roll20.", "Can you confirm this?", "Can you confirm this?", "Can you confirm this?", "Can you confirm this?", "Can you confirm this?", "Can you confirm this?"], "distractor": "What do you think the staff meeting will be about?"}
{"gold_tgt": "( let ( x0 ( NextTime ( NumberPM 2L ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( & ( Event.subject_? ( ?= \" down time \" ) ) ( Event.start_? ( ?= x0 ) ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x0 ( NumberPM 4L ) ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" janice \" ) ) ) ) ) ) ) ) ) ) ) )", "gold_src": "__User That 'll work . __Agent I 've put that on your calendar . __User 2 - 4 PM is down time with janice . __StartOfProgram\n", "min_probs": [5.2009382836076115e-11, 2.244481039221992e-10, 1.849477614870243e-10, 4.006923673382546e-14, 5.405574918627921e-18, 4.970349918112331e-20, 4.208504697913077e-20, 4.0991756307093076e-26, 2.492868609002352e-32, 4.074745850860373e-33], "bin": 0.05, "data_idx": "1562", "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" down time \")) (Event.start_? (?= (NextTime (NumberPM 2L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" janice \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" down time \")) (Event.start_? (DateTime.time_? (?= (NumberPM 2L))))) (Event.end_? (?= (TimeAfterDateTime (NumberPM 4L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" janice \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" down time \")) (Event.start_? (?= (NextTime (NumberPM 2L))))) (Event.end_? (DateTime.time_? (?= (NumberPM 4L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" janice \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" down time \")) (Event.start_? (?=))) (Event.end_? (?= (TimeAfterDateTime (NextTime (NumberPM 2L)) (NumberPM 4L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" janice \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" down time \")) (Event.start_? (?= (NextTime (NumberPM 2L))))) (Event.end_? (?= (TimeAfterDateTime (NextTime) (NumberPM \\ 4\\ 2\\ L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" janice \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" down time \")) (Event.start_? (?=))) (Event.end_? (?= (TimeAfterDateTime (NextTime) (NumberPM \\ 4\\ 2\\ L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" janice \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" down time \")) (Event.start_? (?=))) (Event.end_? (?= (TimeAfterDateTime (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberPM 2L)) (NumberPM 4L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" janice \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (& (Event.subject_? (?= \" down time \")) (Event.start_? (?=))) (Event.end_? (?= (TimeAfterDateTime (NextTime (NumberPM 2L)) (NumberPM 4L))))) (Event.location_? (?= (LocationKeyphrase.apply \" janice \")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" janice \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" down time \")) (Event.start_? (?=))) (Event.end_? (?= (TimeAfterDateTime (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(DateTime) EmptyStructConstraint)))) (NumberPM 2L)) (NumberPM 4L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" janice \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" down time \")) (Event.start_? (?=))) (Event.end_? (?= (TimeAfterDateTime (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(2) EmptyStructConstraint)))) (NumberPM 2L)) (NumberPM 4L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" janice \")))))))))))"], "pred_translated": ["down time with janice at 2", "2-4PM down time with janice", "2-4PM down time with janice", "2-4PM down time with janice", "2-4PM down time with janice", "schedule down time with janice until 4\\2", "2-4PM down time with janice", "2-4PM down time with janice at janice", "2-4PM is down time with janice.", "2-4PM down time with janice"], "distractor": "Yes, that's good. Decline my RoundUp for next week."}
{"gold_tgt": "( let ( x0 ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Tom \" ) ) ) ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" video call \" ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( NextDOW ( Friday ) ) ( NumberPM 2L ) ) ) ) ) ( Event.attendees_? ( & ( AttendeeListHasRecipient x0 ) ( AttendeeListHasRecipient ( FindManager x0 ) ) ) ) ) ) ) ) )", "gold_src": "__User Looks good to me . __Agent I 've put that on your calendar . __User Schedule a video call with Tom and his supervisor Friday at 2 . __StartOfProgram\n", "min_probs": [7.701945580189854e-14, 1.678840337524577e-10, 3.861348381972393e-14, 1.4543759819348702e-16, 1.994954738872248e-17, 7.749545545203992e-15, 1.0105105591547933e-15, 6.22547085238793e-12, 2.9466670517659017e-12, 1.0642351663147027e-14], "bin": 0.05, "data_idx": "2904", "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" video call \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Tom \")))))) (& (AttendeeListHasRecipient) (AttendeeListHasRecipient (FindManager)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" video call \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint)))))) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint)))))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" video call \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Tom \")))))) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint))))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" video call \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L))))) (Event.attendees_? (& (AttendeeListHasRecipient) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Tom \")))))))))))))", "(do (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" video call \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Tom \")))))) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" video call \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Tom \")))))) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Tom \")))))))))))))", "(do (Yield (CreateCommitEventWrapper)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" video call \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint))))) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint)))))) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint))))))))))))))", "(do (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint)))))))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" video call \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint)))))) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint))))))))))))))", "(do (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint))))))))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" video call \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint)))))) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint))))))))))))))", "(do (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Tom \"))))))))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" video call \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 2L))))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint)))))) (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint))))))))))))))"], "pred_translated": ["Schedule a video call with Tom and his supervisor on Friday at 2:00 pm.", "Schedule a video call with the manager on Friday at 2:00 pm.", "Schedule a video call with Tom and his supervisor Friday at 2 pm.", "Schedule a video call with Tom's manager on Friday at 2:00 pm.", "Schedule a video call with Tom and his supervisor Friday at 2 pm.", "Schedule a video call with Tom and Tom's boss Friday at 2 pm.", "Schedule a video call with him and his boss Friday at 2 pm.", "Schedule a video call with him and his boss Friday at 2 pm.", "Schedule a video call with both of them Friday at 2 pm.", "Schedule a video call with Tom and his boss Friday at 2 pm."], "distractor": "What did I have earlier today?"}
{"gold_tgt": "( Yield ( EventAttendance ( RespondComment.apply \" I'll bring my own weights to use during our workout \" ) :event ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" personal training \" ) ) ) ) ) :response ( ResponseStatusType.Accepted ) ) )", "gold_src": "__User yes __Agent I have accepted it . __User Thanks . Accept my personal training appointment and say that I 'll bring my own weights to use during our workout . __StartOfProgram\n", "min_probs": [0.06878083123666644, 6.665393488941474e-17, 1.1575050187890248e-23, 3.483472527723795e-23, 1.7822672185963482e-23, 1.1519534213638002e-16, 8.29630067198437e-28, 2.7005675005714445e-29, 2.3881412371293394e-31, 1.696656457236407e-38], "bin": 0.25, "data_idx": "6495", "pred_tgts": ["(Yield (EventAttendance (RespondComment.apply \" I'll bring my own weights to use during our workout \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" personal training appointment \"))))) :response (ResponseStatusType.Accepted)))", "(Yield (EventAttendance (RespondComment.apply \" I'll bring my own weights to our workout during our workout \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" personal training appointment \"))))) :response (ResponseStatusType.Accepted)))", "(Yield (EventAttendance (RespondComment.apply \" I'll bring my own weights to use during our workout \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" personal training \"))))) :response (ResponseStatusType.Accepted)))", "(Yield (EventAttendance (RespondComment.apply \" I'll bring own own weights to use during our workout \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" personal training appointment \"))))) :response (ResponseStatusType.Accepted)))", "(Yield (EventAttendance (RespondComment.apply \" I'll bring my own weights to use during our. \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" personal training appointment \"))))) :response (ResponseStatusType.Accepted)))", "(Yield (EventAttendance (RespondComment.apply \" I'll bring my own weights \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" personal training appointment \"))))) :response (ResponseStatusType.Accepted)))", "(Yield (EventAttendance (RespondComment.apply \" I'll bring my own weights to use during our __User \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" personal training appointment \"))))) :response (ResponseStatusType.Accepted)))", "(Yield (EventAttendance (RespondComment.apply \" I'll bring my own weights to use during our our workout \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" personal training appointment \"))))) :response (ResponseStatusType.Accepted)))", "(Yield (EventAttendance (RespondComment.apply \" I'll bring my own weights to our workout during our. \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" personal training appointment \"))))) :response (ResponseStatusType.Accepted)))", "(Yield (EventAttendance (RespondComment.apply \" I'll bring my own weights to our workout during our our workout \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" personal training appointment \"))))) :response (ResponseStatusType.Accepted)))"], "pred_translated": ["Please accept my personal training appointment and say that I'll bring my own weights to use during our workout.", "Please accept my personal training appointment and say that I'll bring my own weights to our workout during our workout.", "Please accept my personal training and say that I'll bring my own weights to use during our workout.", "Please accept my personal training appointment and say that I'll bring own weights to use during our workout.", "Please accept my personal training appointment and say that I'll bring my own weights to use during our.", "Please accept my personal training appointment and say that I'll bring my own weights.", "Please accept my personal training appointment and say that I'll bring my own weights to use during our __User event.", "Please accept my personal training appointment and say that I'll bring my own weights to use during our our workout.", "Please accept my personal training appointment and say that I'll bring my own weights to our workout during our.", "Please accept my personal training appointment and say that I'll bring my own weights to our workout during our our workout."], "distractor": "I need to change the date of my doctor's appointment"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" doctor's appointment \" ) ) ( Event.start_? ( DateTime.date_? ( ?= ( NextDOW ( Friday ) ) ) ) ) ) ) ) )", "gold_src": "__User Set a reminder for my doctor 's appointment Friday __StartOfProgram\n", "min_probs": [0.7213876843452454, 0.0006801000563427806, 0.0004792155232280493, 0.0004625496221706271, 0.0003829229681286961, 0.0003467306378297508, 0.005342677779345493, 3.805348649525882e-13, 1.7417363354459976e-14, 3.847583061166599e-14], "bin": 0.75, "data_idx": "6699", "pred_tgts": ["(FenceReminder)", "(FenceTeams)", "(FenceAttendee)", "(FenceOther)", "(FenceScope)", "(FenceSpecify)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" doctor's appointment \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" doctor's appointment \")) (Event.start_? (DateTime.date_? (?= (previousDayOfWeek (Today) (Friday)))))))))", "(CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" doctor's appointment \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" doctor's appointment \")) (Event.end_? (DateTime.date_? (?= (NextDOW (Friday)))))))))"], "pred_translated": ["Remind me of the first flight to london", "Who reports to me?", "Please schedule a meeting with the pope tomorrow.", "Can you tell me the weather for tomorrow in Greenville, NC?", "How old are you?", "I need to change the date of my doctor's appointment", "I have a doctor's appointment on Friday", "I had a doctor's appointment last friday?", "Schedule a doctor's appointment for Friday.", "Schedule a doctor's appointment that ends on Friday."], "distractor": "Schedule a video call with Tom and his supervisor on Friday at 2:00 pm."}
