{"gold_tgt": "( Yield ( WhenProperty ( temperature ) ( WeatherQuantifier.Min ) ( WeatherQueryApi ( AtPlace ( Here ) ) ( DateTime.date_? ( ThisWeek ) ) ) ) )", "gold_src": "__User so what 's the weather like today ? __Agent It is clear with a high of 0 . 00 \u00b0 F and a low of 0 . 00 \u00b0 F today . __User what day this week will temperature be the lowest ? __StartOfProgram\n", "min_probs": [0.007821019978041039, 0.002612066512229721, 5.114884814823999e-06, 0.00020669239110299056, 4.164523968998041e-05, 8.51823585658459e-07, 8.006957830130765e-09, 3.026290791058148e-08, 3.3448054553664347e-10, 1.5977355875773394e-07], "bin": 0.05, "data_idx": "6121", "pred_tgts": ["(Yield (WhenProperty (temperature) (WeatherQuantifier.Min) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (ThisWeek)))))", "(Yield (WhenProperty (temperature) (WeatherQuantifier.Max) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (ThisWeek)))))", "(Yield (Date.dayOfWeek (temperature) (WeatherQuantifier.Min)))", "(Yield (WhenProperty (temperature) (WeatherQuantifier.Min) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (ThisWeek)))))", "(Yield (WhenProperty (temperature) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (ThisWeek)))))", "(Yield (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (ThisWeek)))))", "(Yield (WhenProperty (temperature) (temperature) (WeatherQuantifier.Min) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (ThisWeek)))))", "(Yield (Date.dayOfWeek (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (ThisWeek))))))", "(Yield (WhenProperty (lowest) (temperature) (WeatherQuantifier.Min) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (ThisWeek)))))", "(Yield (WhenProperty (temperature) (WeatherAggregate (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (ThisWeek)))) (WeatherQuantifier.Min) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (ThisWeek)))))"], "pred_translated": ["when will it get coldest this week?", "when will it warm up this week?", "what day of the week is it coldest?", "when will it get coldest this week?", "when will it warm up this week?", "how cold will it get this week?", "what day will be the coldest day this week?", "what day will be the coldest day this week?", "what day will be the coldest this week?", "when will it get coldest this week?"], "distractor": "We're going out for appetizers after the game."}
{"gold_tgt": "( let ( x0 ( NextDOW ( Saturday ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( EventAllDayForDateRange ( Event.subject_? ( ?= \" vocal training \" ) ) ( DateAndConstraint x0 ( nextDayOfWeek x0 ( Sunday ) ) ) ) ) ) ) )", "gold_src": "__User I need to schedule vocal training for Saturday to Sunday . __StartOfProgram\n", "min_probs": [3.82832590412927e-14, 9.910990936562413e-22, 1.776657629338295e-17, 3.803359921434958e-19, 2.407562806376256e-21, 1.254345203583262e-27, 3.118410988876213e-44, 2.6585182157192678e-28, 1.910470367175316e-28, 0.0], "bin": 0.05, "data_idx": "2317", "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \" vocal training \")) (DateAndConstraint (NextDOW) (nextDayOfWeek (Saturday) (Sunday)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (Event.subject_? (?= \" vocal training \")) (DateAndConstraint (Saturday) (NextDOW (Saturday)) (nextDayOfWeek (Sunday)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (& (Event.subject_? (?= \" vocal training \")) (Event.start_? (DateTime.date_? (?=)))) (DateAndConstraint (NextDOW (Saturday)) (ClosestDayOfWeek (Sunday)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (& (Event.subject_? (?= \" vocal training \")) (Event.start_? (DateTime.date_? (?=)))) (DateAndConstraint (NextDOW (Saturday)) (nextDayOfWeek (Sunday)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" vocal training \")) (Event.start_? (DateTime.date_? (?= (Saturday))))) (Event.end_? (DateTime.date_? (?= (nextDayOfWeek (NextDOW) (Sunday)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" vocal training \")) (Event.start_? (DateTime.date_? (?= (Sunday))))) (Event.end_? (DateTime.date_? (?= (nextDayOfWeek (NextDOW) (Sunday)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" vocal training to Saturday \")) (Event.start_? (DateTime.date_? (?=)))) (Event.end_? (DateTime.date_? (?= (nextDayOfWeek (NextDOW) (Sunday)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" vocal training \")) (Event.start_? (DateTime.date_? (?= (nextDayOfWeek (Saturday)))))) (Event.end_? (DateTime.date_? (?= (nextDayOfWeek (NextDOW) (Sunday)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" vocal training \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday)))))) (Event.end_? (DateTime.date_? (?= (nextDayOfWeek (NextDOW) (Sunday)))))))))", "(Error)"], "pred_translated": ["Add to schedule \"vocal training\" on Saturday and Sunday.", "Add to schedule \"vocal training\" on Saturday and Sunday.", "Add to schedule \"vocal training\" on Saturday and Sunday.", "Add to schedule \"vocal training\" on Saturday and Sunday.", "Add to schedule \"vocal training\" on Saturday and Sunday.", "Can you schedule a \"vocal training\" from Sunday until Sunday?", "Can you add the victory training to Saturday through Sunday?", "Add to schedule \"vocal training\" on Saturday and Sunday.", "Add to schedule \"vocal training\" on Saturday and Sunday.", "yes i am ready"], "distractor": "I meant the interview next week"}
{"gold_tgt": "( let ( x0 ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Elli Parker \" ) ) ) ) ) ) ( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( UpdateEventIntensionConstraint ) ( Event.attendees_? ( & ( AttendeeListHasRecipient x0 ) ( AttendeeListHasRecipient ( FindManager ( FindManager x0 ) ) ) ) ) ) ) ) )", "gold_src": "__User My manager , Ray Southerland , will join toward the end of the meeting . __Agent How about now ? __User Please add Elli Parker and his skip to the meeting also __StartOfProgram\n", "min_probs": [0.003503904677927494, 0.0016982456436380744, 1.659588361796502e-09, 1.8833607295229147e-08, 3.7463816506444666e-13, 1.0341497077072945e-17, 6.692328684664163e-15, 5.737426085281527e-14, 5.161278198083262e-20, 1.2806478716947848e-18], "bin": 0.05, "data_idx": "10249", "pred_tgts": ["(FenceMultiAction)", "(FenceOther)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint)))))) (AttendeeListHasRecipient (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint)))))))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli Parker \")))))) (AttendeeListHasRecipient (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \")))))))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli Parker \")))))) (AttendeeListHasRecipient (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint)))))))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint)))))) (AttendeeListExcludesRecipient (?= (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint))))))))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli. \")))))) (AttendeeListHasRecipient (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \")))))))))))))", "(do (refer (UpdateEventIntensionConstraint)) (Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli Parker \")))))) (AttendeeListHasRecipient (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \"))))))))))))))", "(do (refer (UpdateEventIntensionConstraint)) (Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli Parker \")))))) (AttendeeListHasRecipient (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint))))))))))))))", "(do (refer (UpdateEventIntensionConstraint)) (Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli Parker \")))))) (AttendeeListHasRecipient (FindManager (FindManager (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \"))))))))))))))"], "pred_translated": ["please cancel my all tomorrow meeting", "Please add my manager, Ray Southerland, to the meeting.", "Please add his skip to this meeting as well.", "Add Elli Parker and her skip to the meeting as well.", "Add Elli Parker and her skip to the meeting as well.", "Add him to the meeting but remove his skip.", "Add Elli and her skip to the meeting as well.", "Add Elli Parker and her skip to the meeting as well.", "Add Elli Parker and her skip to the meeting as well.", "Add Elli Parker and her skip to the meeting as well."], "distractor": "Can you make me an event around 8 pm tonight"}
{"gold_tgt": "( let ( x0 ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) x1 ( Event.end ( ^ ( Dynamic ) item x0 ) ) ) ( do ( Yield x0 ) ( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateAfterTime ( DateTime.date x1 ) ( ^ ( Event ) EmptyStructConstraint ) ( DateTime.time x1 ) ) ) ) ) 0L ) ) ) )", "gold_src": "__User Can you make an event for Monday at 2 pm ? __Agent Is this good ? __User Yes . Is there anything scheduled for after that event ? __StartOfProgram\n", "min_probs": [4.987970170214808e-09, 2.6791992010546322e-14, 2.0036942670164877e-21, 2.4342354873427538e-23, 9.575199293050326e-26, 3.737841837158359e-29, 1.7553301341608664e-29, 4.381045098319854e-30, 7.19402726666306e-30, 2.7584666447313064e-45], "bin": 0.05, "data_idx": "8866", "pred_tgts": ["(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (^(Event) EmptyStructConstraint) (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))) 0L)))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAfterDateTime (^(Event) EmptyStructConstraint) (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))) 0L))", "(do (Yield) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date (Event.start (^(Dynamic) item))) (^(Event) EmptyStructConstraint) (DateTime.time (Event.end (^(Dynamic) item (Execute (^(Dynamic) ConfirmAndReturnAction))))))))) 0L)))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date (Event.start (^(Dynamic) item))) (^(Event) EmptyStructConstraint) (DateTime.time (Event.end (^(Dynamic) item (Execute (^(Dynamic) ConfirmAndReturnAction))))))))) 0L)))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date (Event.start (^(Dynamic) item) (^(Dynamic) item))) (^(Event) EmptyStructConstraint) (DateTime.time (Event.end (^(Dynamic) item (Execute)))))))) 0L)))", "(do (^(Dynamic) item) (Yield) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date (Event.start (^(Dynamic) item))) (^(Event) EmptyStructConstraint) (DateTime.time (Event.end (^(Dynamic) item (Execute (^(Dynamic) ConfirmAndReturnAction))))))))) 0L)))", "(do (Yield) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date (Event.start (^(Dynamic) item) (^(Dynamic) item)) (Event.end)) (^(Event) EmptyStructConstraint) (DateTime.time (Event.end (^(Dynamic) item (Execute (^(Dynamic) ConfirmAndReturnAction))))))))) 0L)))", "(do (Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint)))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date (Event.start (^(Dynamic) item))) (^(Event) EmptyStructConstraint) (DateTime.time (Event.end (^(Dynamic) item (Execute (^(Dynamic) ConfirmAndReturnAction))))))))) 0L)))", "(do (Yield (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date (Event.start (^(Dynamic) item))) (^(Event) EmptyStructConstraint) (DateTime.time (Event.end (^(Dynamic) item (Execute (^(Dynamic) ConfirmAndReturnAction))))))))) 0L)))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateAfterTime (DateTime.date (Event.start (^(Dynamic) item))) (^(Event) EmptyStructConstraint) (DateTime.time (Event.end (^(Dynamic) item (Execute (^(Dynamic) ConfirmAndReturnAction))))))))) 0L)))"], "pred_translated": ["Yes. Do I have anything after that?", "Do I have anything after that?", "Yes, do I have anything after that on Monday?", "Yes. Do I have anything after that?", "Yes. Do I have anything after that?", "Yes. Do I have anything after that?", "Yes. Do I have anything after that?", "Yes. Do I have anything after that?", "Yes. Do I have anything after that?", "Yes. Do I have anything after that?"], "distractor": "Yes. Please also accept the BBQ invite."}
{"gold_tgt": "( let ( x0 ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) x1 ( ^ ( Dynamic ) item x0 ) ) ( do ( Yield x0 ) ( Yield ( FindEventWrapperWithDefaults ( & ( Event.id_? ( negate ( ?= ( Event.id x1 ) ) ) ) ( EventOnDateWithTimeRange ( EventOnDate ( DateTime.date ( Event.start x1 ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ( Morning ) ) ) ) ) ) )", "gold_src": "__User Schedule a group discussion for Friday morning at 7 am . __Agent Is this what you 're looking for ? __User Looks right . What else do I have on that morning ? __StartOfProgram\n", "min_probs": [3.3359236698933144e-08, 6.010812350425664e-11, 7.39841000607206e-12, 1.8584733173716325e-10, 5.576193735915493e-14, 3.4282322331341996e-12, 9.488146461216605e-16, 3.7748510098202566e-18, 1.7846326062974534e-20, 2.0434954712849143e-20], "bin": 0.05, "data_idx": "10010", "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (EventOnDateWithTimeRange (EventOnDate (DateTime.date (Event.start (^(Dynamic) item (Execute (^(Dynamic) ConfirmAndReturnAction))))) (^(Event) EmptyStructConstraint)) (Morning))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDateWithTimeRange (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)) (Morning))))))", "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (^(Dynamic) item (Execute (^(Dynamic) ConfirmAndReturnAction))))))) (EventOnDateWithTimeRange (EventOnDate (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (^(Event) EmptyStructConstraint)) (Morning)))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDateWithTimeRange (EventOnDate (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (^(Event) EmptyStructConstraint)) (Morning))))))", "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (^(Dynamic) item (Execute (^(Dynamic) ConfirmAndReturnAction))))))) (EventOnDateWithTimeRange (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)) (Morning)))))", "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDateWithTimeRange (EventOnDate (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (^(Event) EmptyStructConstraint)) (Morning)))))", "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDateWithTimeRange (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)) (Morning)))))", "(do (Yield) (Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (^(Dynamic) item (Execute (^(Dynamic) ConfirmAndReturnAction))))))) (EventOnDateWithTimeRange (EventOnDate (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (^(Event) EmptyStructConstraint)) (Morning))))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (^(Dynamic) item))))) (EventOnDateWithTimeRange (EventOnDate (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (^(Event) EmptyStructConstraint)) (Morning))))))", "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDateWithTimeRange (EventOnDate (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (^(Event) EmptyStructConstraint)) (Morning))))))"], "pred_translated": ["Yes. What do I have that morning?", "Yes. What else do I have that morning?", "Yes. What else do I have that morning?", "Yes. What else do I have that morning?", "Yes. What else do I have that morning?", "What else do I have that morning?", "What else do I have that morning?", "Yes. What else do I have that morning?", "Yes. What else do I have that morning?", "Yes. What else do I have that morning?"], "distractor": "Actually I meant Engines."}
{"gold_tgt": "( let ( x0 ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) ) ( do ( Yield x0 ) ( Yield ( FindEventWrapperWithDefaults ( & ( Event.id_? ( negate ( ?= ( Event.id ( ^ ( Dynamic ) item x0 ) ) ) ) ) ( EventOnDate ( NextDOW ( Sunday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) )", "gold_src": "__User Schedule a football game for Sunday morning at 10 am . __Agent Is this what you 're looking for ? __User Yes it is . What else is happening on Sunday ? __StartOfProgram\n", "min_probs": [5.953880418258699e-06, 3.0426178247295276e-07, 1.4770005500003867e-05, 1.7399784348903784e-08, 1.0211203639869919e-10, 6.365657604269114e-11, 4.236599524870739e-11, 9.272652623071285e-16, 3.995899768150012e-14, 1.0044437558217935e-18], "bin": 0.05, "data_idx": "8645", "pred_tgts": ["(Execute (^(Dynamic) ConfirmAndReturnAction))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint))))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))))", "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (^(Dynamic) item (Execute (^(Dynamic) ConfirmAndReturnAction))))))) (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)))))", "(do (Yield) (Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (^(Dynamic) item (Execute (^(Dynamic) ConfirmAndReturnAction))))))) (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint))))))", "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)))))", "(do (^(Dynamic) item) (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint))))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)))))) 0L)))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint))))))"], "pred_translated": ["Yes it is.", "Yes. What do I have scheduled for Sunday?", "Yes. What else do I have scheduled on Sunday?", "Yes. What else do I have scheduled on Sunday?", "Yes. What else do I have scheduled on Sunday?", "Yes. What else do I have scheduled on Sunday?", "What else do I have scheduled on Sunday?", "Yes. What else do I have scheduled on Sunday?", "Yes. Do I have anything else on Sunday?", "Yes. What else do I have scheduled on Sunday?"], "distractor": "Change the appointment with Obama to June 20 at midnight"}
{"gold_tgt": "( let ( x0 ( NextTime ( NumberAM 10L ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.start_? ( ?= x0 ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x0 ( NumberPM 12L ) ) ) ) ) ( Event.showAs_? ( ?= ( ShowAsStatus.Busy ) ) ) ) ) ) ) )", "gold_src": "__User Mark me as busy 10 - 12 . __StartOfProgram\n", "min_probs": [0.0026883117388933897, 0.0026865010149776936, 6.542000973381321e-06, 1.5826459362561644e-07, 1.2517901518280091e-14, 1.2143853472422847e-27, 2.2019326765774258e-29, 4.121038810664575e-30, 3.69203936879521e-30, 6.71707202427037e-32], "bin": 0.05, "data_idx": "1952", "pred_tgts": ["(FenceOther)", "(FenceDateTime)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?= (NextTime (NumberAM 10L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 12L))))) (Event.showAs_? (?= (ShowAsStatus.Busy)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 12L))))) (Event.showAs_? (?= (ShowAsStatus.Busy)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (?=)) (Event.end_? (?= (TimeAfterDateTime (NextTime (NumberAM 10L)) (NumberPM 12L))))) (Event.showAs_? (?= (ShowAsStatus.Busy)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" busy \")) (Event.start_? (?=))) (Event.end_? (?= (TimeAfterDateTime (NextTime (NumberAM 10L)) (NumberPM 12L))))) (Event.showAs_? (?= (ShowAsStatus.Busy)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" busy 10 \")) (Event.start_? (?= (NextTime (NumberAM 10L))))) (Event.end_? (?= (TimeAfterDateTime (NextTime) (NumberPM 12L))))) (Event.showAs_? (?= (ShowAsStatus.Busy)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \"10\")) (Event.start_? (?=))) (Event.end_? (?= (TimeAfterDateTime (NextTime (NumberAM 10L)) (NumberPM 12L))))) (Event.showAs_? (?= (ShowAsStatus.Busy)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" busy \")) (Event.start_? (?=))) (Event.end_? (?= (TimeAfterDateTime (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberAM 10L)) (NumberPM 12L))))) (Event.showAs_? (?= (ShowAsStatus.Busy)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (& (Event.subject_? (?= \" busy \")) (Event.start_? (?= (NextTime (NumberAM 10L))))) (Event.end_? (?= (TimeAfterDateTime (DateAtTimeWithDefaults) (NumberPM 12L))))) (Event.showAs_? (?= (ShowAsStatus.Busy)))))))"], "pred_translated": ["Can you tell me the weather for tomorrow in Greenville, NC?", "Can you tell me when my next block of free time is?", "Mark me as busy from 10am to 12pm", "Mark me as busy from 10am to 12pm", "Show me as busy until 12PM.", "Mark me as busy from 10am to 12pm", "Mark me as busy 10AM-12PM", "Mark me as busy from 10am to 12pm.", "Mark me as busy from 10am to 12pm that day.", "Mark me as busy from 10am to 12pm"], "distractor": "Yes. Please also accept the BBQ invite for next week."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( & ( Event.subject_? ( ?= \" learning how to make vegan egg rolls \" ) ) ( Event.start_? ( ?= ( adjustByPeriodDuration ( Event.end ( FindNumNextEvent ( Event.subject_? ( ?~= \" work \" ) ) 1L ) ) ( PeriodDuration.apply :duration ( toHours 1 ) ) ) ) ) ) ( Event.end_? ( ?= ( PeriodDurationBeforeDateTime ( Event.start ( FindNumNextEvent ( Event.subject_? ( ?~= \" dance practice \" ) ) 1L ) ) ( PeriodDuration.apply :duration ( toHours 2 ) ) ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Sam \" ) ) ) ) ) ) ) ) ) ) )", "gold_src": "__User Add learning how to make vegan egg rolls with Sam an hour after work until 2 hours before dance practice . __StartOfProgram\n", "min_probs": [0.00012752283974157446, 1.866142765315657e-05, 4.144672142693811e-06, 3.0610734594708357e-06, 6.000885876078752e-06, 1.5605684883598304e-05, 1.5896391306227865e-06, 6.147432253856178e-09, 3.922345841759937e-09, 4.259879403563551e-09], "bin": 0.05, "data_idx": "11949", "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" learning how to make vegan egg rolls \")) (Event.end_? (?= (PeriodDurationBeforeDateTime (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" dance practice \")))))) (PeriodDuration.apply :duration (toHours 2)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sam \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" learning how to make egg egg rolls \")) (Event.end_? (?= (PeriodDurationBeforeDateTime (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" dance practice \")))))) (PeriodDuration.apply :duration (toHours 2)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sam \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" learning how to make vegan rolls rolls \")) (Event.end_? (?= (PeriodDurationBeforeDateTime (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" dance practice \")))))) (PeriodDuration.apply :duration (toHours 2)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sam \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" learning how to make egg rolls rolls \")) (Event.end_? (?= (PeriodDurationBeforeDateTime (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" dance practice \")))))) (PeriodDuration.apply :duration (toHours 2)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sam \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" learning how to make vegan egg rolls \")) (Event.end_? (?= (PeriodDurationBeforeDateTime (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (Event.subject_? (?~= \" dance practice \")) (DateTime.time)))))) (PeriodDuration.apply :duration (toHours 2)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sam \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" learning how to make vegan egg rolls \")) (Event.end_? (?= (PeriodDurationBeforeDateTime (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" dance practice \")))))) (PeriodDuration.apply :duration (toHours 2)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sam \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" learning how to make egg egg rolls \")) (Event.end_? (?= (PeriodDurationBeforeDateTime (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" dance practice \")))))) (PeriodDuration.apply :duration (toHours 2)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sam \")))))))))))", "(do (Yield (CreateCommitEventWrapper) (CreatePreflightEventWrapper)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" learning how to make vegan egg rolls \")) (Event.end_? (?= (PeriodDurationBeforeDateTime (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (Event.subject_? (?~= \" dance practice \")) (DateTime.time (Event.start (singleton)))))))) (PeriodDuration.apply :duration (toHours 2)))))) (& (Event.start_? (?= (adjustByPeriodDuration (PeriodDuration.apply :duration (toHours 2)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sam \"))))))))))))", "(do (Yield (CreateCommitEventWrapper) (CreatePreflightEventWrapper)) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" learning how to make vegan egg rolls \")) (Event.end_? (?= (PeriodDurationBeforeDateTime (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (Event.subject_? (?~= \" dance practice \")) (DateTime.time (Event.end (singleton)))))))) (PeriodDuration.apply :duration (toHours 2)))))) (& (Event.start_? (?= (adjustByPeriodDuration (PeriodDuration.apply :duration (toHours 2)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sam \"))))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" learning how to make vegan egg rolls \")) (Event.end_? (?= (PeriodDurationBeforeDateTime (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (Event.subject_? (?~= \" dance practice \")) (DateTime.time (adjustByPeriodDuration (PeriodDuration.apply :duration (toHours 2))) (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" work \")))))))))))) (PeriodDuration.apply :duration (toHours 2)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Sam \")))))))))))"], "pred_translated": ["Schedule learning how to make vegan egg rolls with Sam 2 hours before dance practice.", "Schedule learning how to make egg egg rolls with Sam for 2 hours before dance practice.", "Schedule learning how to make vegan rolls rolls with Sam 2 hours before dance practice.", "Schedule learning how to make egg rolls rolls with Sam 2 hours before dance practice.", "Schedule learning how to make vegan egg rolls with Sam 2 hours before dance practice.", "Schedule learning how to make vegan egg rolls with Sam for 2 hours before dance practice.", "Schedule learning how to make egg egg rolls with Sam for 2 hours before dance practice.", "Schedule learning how to make vegan egg rolls with Sam 2 hours before dance practice.", "Schedule learning how to make vegan egg rolls with Sam 2 hours before dance practice.", "Schedule learning how to make vegan egg rolls with Sam 2 hours before work."], "distractor": "The later one."}
{"gold_tgt": "( Yield ( Event.duration ( FindNumNextEvent ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Abby \" ) ) ) ) 3L ) ) )", "gold_src": "__User What time is my third event on Tuesday ? __Agent The 3 rd event on Tuesday the 10 th is at 12 : 00 PM . __User How long will my 3 rd meeting with Abby last ? __StartOfProgram\n", "min_probs": [0.09770572399658208, 6.58631849162504e-05, 0.0025513542320988883, 0.0003577047666151554, 0.00012587897253407235, 2.8050101462125316e-06, 1.6081078742791065e-06, 6.797789504531498e-06, 4.605902691123187e-08, 2.7257091198221942e-08], "bin": 0.05, "data_idx": "11290", "pred_tgts": ["(Yield (Event.duration (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \")))) 3L)))", "(Yield (Event.duration (FindNumNextEvent (^(Event) EmptyStructConstraint) 3L)))", "(Yield (Event.duration (FindNumNextEvent (EventOnDate (Today) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \"))))) 3L)))", "(Yield (Event.duration (FindNumNextEvent (EventOnDate (MD 3L (March)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \"))))) 3L)))", "(Yield (Event.duration (FindNumNextEvent (EventOnDate (nextDayOfMonth (Today) 3L) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \"))))) 3L)))", "(Yield (Event.duration (FindNumNextEvent (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \")))) (FullMonthofMonth (March))) 3L)))", "(Yield (Event.duration (FindNumNextEvent (& (Event.subject_? (?~= \"3\")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \"))))) 3L)))", "(Yield (Event.duration (FindNumNextEvent (& (Event.id_? (negate (?= (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 3L)) (extensionConstraint (^(Event) EmptyStructConstraint))))))))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \"))))) 3L)))", "(Yield (Event.duration (FindNumNextEvent (EventOnDate (MD (Date.month (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \"))))) 3L)))", "(Yield (Event.duration (FindNumNextEvent (& (Event.start_? (DateTime.date_? (?= (MD 3L (March))))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \"))))) 3L)))"], "pred_translated": ["How long will my third event with Abby last?", "How long will my third event last?", "How long is my third event with Abby today?", "How long will my third event on March 3rd be with Abby?", "How long will my third event with Abby last on the 3rd?", "How long is my third event with Abby in March?", "How long will my third event with Abby last?", "How long is my third event with Abby?", "How long will my third event with Abby last that month?", "How long is my third event with Abby on March 3rd?"], "distractor": "After the game we are going out for appetizers."}
{"gold_tgt": "( let ( x0 ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Cindy Carmichael \" ) ) ) ) ) ) ) ) ( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id x0 ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( ClosestDayOfWeek ( DateTime.date ( Event.start x0 ) ) ( Tuesday ) ) ( NumberAM 10L ) ) ) ) ) ) ) )", "gold_src": "__User What day next week do I meet with Cindy ? __Agent The event with Cindy next week is on June 4 th at 2 : 00 PM . __User Change the Meeting with Cindy Carmichael to 10 : 00 am on Tuesday . __StartOfProgram\n", "min_probs": [0.027052984645790437, 1.0513256048305929e-13, 3.2107085085621857e-09, 9.398085793482693e-08, 3.826644446893118e-09, 1.3048605690082355e-09, 2.619418293310809e-10, 1.3372381199424177e-10, 6.052987094759362e-11, 5.262885450014147e-11], "bin": 0.05, "data_idx": "3061", "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cindy Carmichael \")))))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 10L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Meeting with Cindy Carmichael \")))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 10L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cindy Carmichael \")))))))) (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Meeting \")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cindy Carmichael \"))))))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 10L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cindy \")))))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 10L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cindy Carmichael \")))))))) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberAM 10L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cindy. \")))))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 10L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cindy: \")))))))) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Tuesday)) (NumberAM 10L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cindy Carmichael \")))))))) (Event.start_? (DateTimeConstraint (?= (NumberAM 10L)) (NextDOW (Tuesday)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cindy Carmichael \")))))))) (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Tuesday)) (NumberAM 10L)))))))"], "pred_translated": ["Move my meeting with Cindy Carmichael to Tuesday at 10 AM.", "Move \"Meeting with Cindy Carmichael\" to 10:00 AM on Tuesday.", "Change my meeting with Cindy Carmichael to 10:00 AM", "Can you change my Meeting with Cindy Carmichael to next Tuesday at 10 am?", "Change the meeting with Cindy to 10 AM on Tuesday.", "Move my meeting with Cindy Carmichael to 10 AM on the same day please.", "Change the meeting with Cindy to 10 AM on Tuesday.", "Change the meeting with Cindy to 10 AM on Tuesday.", "Change my meeting with Cindy Carmichael to 10:00 AM on Tuesday.", "Move my meeting with Cindy Carmichael to Tuesday at 10 AM."], "distractor": "Show me as busy during that time."}
{"gold_tgt": "( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventDuringRange ( & ( Event.subject_? ( ?~= \" lunch meetings \" ) ) ( Event.attendees_? ( negate ( ^ ( ( List Attendee ) ) AlwaysFalseConstraint ) ) ) ) ( ThisWeek ) ) ) ) ) 0L ) )", "gold_src": "__User Do I have an appointment scheduled with Mitch tomorrow ? __Agent No , I did n't find any events tomorrow . __User Do I have any lunch meetings with anyone this week ? __StartOfProgram\n", "min_probs": [0.004161247983574867, 0.15646308862875374, 0.005121926900826364, 0.00021965340377644353, 0.0010268153509783344, 3.0261416894411845e-05, 1.9141508033220396e-07, 1.682267356013116e-06, 4.686895953807808e-06, 5.476089229622874e-07], "bin": 0.15, "data_idx": "6722", "pred_tgts": ["(FenceAttendee)", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \" lunch meetings \")) (Event.attendees_? (AttendeeListHasRecipientConstraint (^(Recipient) EmptyStructConstraint)))) (ThisWeek))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \" lunch meetings \")) (Event.attendees_? (negate (^((List Attendee)) AlwaysFalseConstraint)))) (ThisWeek))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" lunch meetings \")) (ThisWeek))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (^(Recipient) EmptyStructConstraint))) (EventDuringRange (Event.subject_? (?~= \" lunch meetings \")) (ThisWeek)))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (negate (^((List Attendee)) AlwaysFalseConstraint))) (EventDuringRange (Event.subject_? (?~= \" lunch meetings \")) (ThisWeek)))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (negate (^((List Attendee)) AlwaysFalseConstraint))) (ThisWeek))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" lunch meetings \")) (Event.start_? (DateTime.date_? (ThisWeek))))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \" lunch \")) (Event.attendees_? (AttendeeListHasRecipientConstraint (^(Recipient) EmptyStructConstraint)))) (ThisWeek))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \" lunch \")) (Event.attendees_? (negate (^((List Attendee)) AlwaysFalseConstraint)))) (ThisWeek))))) 0L))"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "Do I have any lunch meetings with him this week?", "Do I have any lunch meetings with anyone this week?", "Do I have any lunch meetings this week?", "Do I have any lunch meetings with him this week?", "Do I have any lunch meetings this week with anyone?", "Do I have any events with people attending this week?", "Do I have any lunch meetings this week?", "Do I have lunch with anyone this week?", "Do I have lunch with anyone this week?"], "distractor": "Actually I meant the one on Sunday."}
{"gold_tgt": "( Yield ( ForwardEventWrapper ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ( append ( ^ ( Recipient ) List.Nil ) ( Execute ( refer ( extensionConstraint ( ^ ( Recipient ) EmptyStructConstraint ) ) ) ) ) ) )", "gold_src": "__User Is Tandred invited to Boat Party on Sunday at 2 pm ? __Agent No , Tandred is not invited to the \" Boat Party \" . __User Send him an invite . __StartOfProgram\n", "min_probs": [0.0014046006835997105, 0.0013055517338216305, 0.0009672787273302674, 0.0009163974318653345, 0.16164245859598927, 0.08054287776716308, 8.393277095995324e-08, 1.5275446430851168e-09, 8.982638948233093e-10, 1.6215155329173463e-11], "bin": 0.15, "data_idx": "11359", "pred_tgts": ["(FenceSwitchTabs)", "(FenceAttendee)", "(FenceMultiAction)", "(FenceSpecify)", "(Yield (ForwardEventWrapper (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (append (^(Recipient) List.Nil) (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))))", "(Yield (ForwardEventWrapper (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (append (^(Recipient) List.Nil) (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Allen \"))))))))", "(Yield (ForwardEventWrapper (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (append (append (^(Recipient) List.Nil) (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint))))) (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (FindManager (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Allen \"))))))))))"], "pred_translated": ["Send an invitation to Tandred.", "Invite Tandred's parents please.", "Invite Tandred to the Boat Party and forward the invite to him.", "please update my events in my calender", "Forward it to her.", "Invite her.", "Forward it to Allen.", "Forward it to her.", "Can you invite her manager?", "Can you invite Allen?"], "distractor": "Yes. What else do I have that morning?"}
{"gold_tgt": "( Yield ( WillRain ( Execute ( refer ( extensionConstraint ( ^ ( WeatherTable ) AlwaysTrueConstraint ) ) ) ) ) )", "gold_src": "__User what s the weather like today __Agent You have n't shared your location with me . Where are you ? __User do I need an umbrella ? __StartOfProgram\n", "min_probs": [0.1648955873929955, 0.02734924132104164, 0.013188114568352172, 2.1124595655445645e-06, 8.048810470658171e-06, 7.940229291739792e-06, 3.139133975136113e-05, 2.1242747575445325e-08, 4.292882750064849e-09, 3.5140584000136726e-08], "bin": 0.15, "data_idx": "6955", "pred_tgts": ["(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (?= (Now)))))", "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))", "(Yield (WillRain (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))", "(Yield (WillRain (CurrentUser)))", "(Yield (WillRain (toRecipient (CurrentUser))))", "(Yield (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))", "(Yield (WillRain (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))", "(Yield (IsRainy (WeatherQueryApi (AtPlace (Here)) (?= (Now)))))", "(Yield (IsRainy (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))", "(Yield (WillRain (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))))"], "pred_translated": ["Is it raining?", "Will it rain today?", "Is it going to rain?", "Will it rain?", "Will it rain?", "what will the weather be like at the meeting?", "Will it rain then?", "Is it raining?", "Is it raining today?", "Will it rain that day?"], "distractor": "Cancel my next meeting."}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( Event.attendees_? ( & ( & ( & ( & ( & ( & ( & ( & ( & ( & ( & ( & ( & ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Paige Ashworth \" ) ) ) ) ) ) ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Cher Roydon \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Jerri Skinner \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Fiona Mason \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Cecelia Waller \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Wade Blakeley \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Damon Ellery \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Karl Boon \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Jeong-Ho Kim \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Janice Kang \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Scot Hanson \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Barack Obama \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Cornelio Hernandez \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Kristen Clifford \" ) ) ) ) ) ) ) ) ) ) )", "gold_src": "__User YES April 8 __Agent I 've put that on your calendar . __User Please invite Paige Ashworth , Cher Roydon , Jerri Skinner , Fiona Mason , Cecelia Waller , Wade Blakeley , Damon Ellery , Karl Boon , Jeong - Ho Kim , Janice Kang , Scot Hanson , Barack Obama , Cornelio Hernandez , Kristen Clifford . __StartOfProgram\n", "min_probs": [0.2865922152996063, 0.20757578313350677, 0.10375776886940002, 0.031086916103959084, 0.009790888371463975, 0.002691368283075077, 0.001472711559463602, 6.334431917421127e-05, 1.4094142174511221e-05, 7.108111482284428e-06], "bin": 0.15, "data_idx": "9161", "pred_tgts": ["(FenceMultiAction)", "(FenceAttendee)", "(FenceSpecify)", "(FenceOther)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.attendees_? (& (& (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (PersonName.apply))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Scot Hanson \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Barack Obama \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cornelio Hernandez \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kristen Clifford \")))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.attendees_? (& (& (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (PersonName.apply))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Scot Kang \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Barack Obama \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cornelio Hernandez \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kristen Clifford \")))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.attendees_? (& (& (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (PersonName.apply))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Scot Obama \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Barack Obama \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cornelio Hernandez \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kristen Clifford \")))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.attendees_? (& (& (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (PersonName.apply))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Scot Hernandez \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Barack Obama \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cornelio Hernandez \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kristen Clifford \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (& (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (PersonName.apply))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Scot Hanson \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Barack Obama \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cornelio Hernandez \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kristen Clifford \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (& (& (& (& (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (PersonName.apply))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Scot Kang \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Barack Obama \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Cornelio Hernandez \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kristen Clifford \")))))))))))"], "pred_translated": ["Cancel all my meetings for April 8.", "WHEN IS MY APPOINTMENT WITH MY LAWYER?", "change the appointment date", "YES UPDATE THE EVENT ON APRIL 8", "Add attendees Scot Hanson, Barack Obama, Cornelio Hernandez, Kristen Clifford", "Add attendees Scot Kang, Barack Obama, Cornelio Hernandez, Kristen Clifford", "Add attendees Scot Obama, Barack Obama, Cornelio Hernandez, Kristen Clifford", "Add attendees Scot Hernandez, Barack Obama, Cornelio Hernandez, Kristen Clifford", "I need to schedule a meeting with Scot Hanson, Barack Obama, Cornelio Hernandez, Kristen Clifford", "I need to schedule a meeting with Scot Kang, Barack Obama, Cornelio Hernandez, Kristen Clifford"], "distractor": "Will it rain all day tomorrow?"}
{"gold_tgt": "( Yield ( PersonFromRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Spartan 010 - Naomi \" ) ) ) ) ) ) )", "gold_src": "__User Spartan 008 - Li ? __Agent Here is the contact information for Spartan 008 - Li : __User Spartan 010 - Naomi ? __StartOfProgram\n", "min_probs": [0.12063451205391741, 0.0032022674800506637, 0.0005923958565024041, 9.548271480799557e-09, 8.400031119625727e-06, 3.9204414135744547e-14, 1.258016323380503e-13, 1.680730700216452e-10, 1.778173092444293e-11, 9.224848051725226e-12], "bin": 0.15, "data_idx": "8628", "pred_tgts": ["(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Spartan 010-Naomi \")))))))", "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Spartan 010 \")))))))", "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Spartan \")))))))", "(Yield (FindPlaceMultiResults (LocationKeyphrase.apply \" Spartan 010-Naomi \")))", "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Spartan 010 Naomi \")))))))", "(Yield (PersonFromRecipient (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" Spartan 010-Naomi \"))))))", "(Yield (PersonFromRecipient (RecipientFromRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Spartan 010-Naomi \")))))", "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Spartan 010 Li \")))))))", "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Spartan 010 __User \")))))))", "(Yield (PersonFromRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Spartan 010 008 \")))))))"], "pred_translated": ["Spartan 010-Naomi", "Spartan 010", "Spartan", "Find \"Spartan 010-Naomi\"", "Spartan 010 Naomi", "Im a part of the Spartan 010-Naomi", "Spartan 010-Naomi", "Spartan 010 Li", "Spartan 010 __User", "Spartan 010 008"], "distractor": "when is sunset"}
{"gold_tgt": "( Yield ( WeatherAggregate ( WeatherQuantifier.Min ) ( temperature ) ( WeatherQueryApi ( AtPlace ( FindPlace ( LocationKeyphrase.apply \" az \" ) ) ) ( ?= ( Now ) ) ) ) )", "gold_src": "__User What are the high and low temps in AZ ? __Agent The maximum temperature is 0 . 00 \u00b0 F today . The minimum temperature is 0 . 00 \u00b0 F today . __User where is the low temp in az ? __StartOfProgram\n", "min_probs": [0.16874459385871887, 0.07737673922720413, 0.00022799548224203384, 7.264798554348867e-06, 1.0131004345799844e-08, 1.2599220302308763e-09, 9.083777862331574e-10, 4.184223361318182e-10, 3.145310976132005e-10, 4.626019753039162e-10], "bin": 0.15, "data_idx": "7624", "pred_tgts": ["(FenceWeather)", "(Yield (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" az \"))) (DateTime.date_? (?= (Today))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" az temp \"))) (DateTime.date_? (?= (Today))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" az low \"))) (DateTime.date_? (?= (Today))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" az \"))) (?= (Now)))))", "(Yield (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" az AZ \"))) (DateTime.date_? (?= (Today))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" az where \"))) (DateTime.date_? (?= (Today))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" az temp low \"))) (DateTime.date_? (?= (Today))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" az temp temp \"))) (DateTime.date_? (?= (Today))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" az \"))) (NextPeriodDuration (PeriodDuration.apply :duration (toHours 32))))))"], "pred_translated": ["Do you know when it will rain next?", "what is the low in az", "what is the low in az temp today", "what is the low for az low today?", "what is the low in az", "What are the low temps in az AZ", "what is the low in az where", "what is the low temp today in az temp low", "what is the low az temp temp today", "what is the lowest temp in az in 32 hours"], "distractor": "add jerri skinner to the event"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( MD 21L ( May ) ) ( NumberAM 11L ) ) ) ) ) ) )", "gold_src": "__User Add my breakfast with Tiffany yesterday to my calendar please __Agent Here are some times when you and Tiffany are free yesterday . __User Yes but make the event of May 21 st start at 11 AM . __StartOfProgram\n", "min_probs": [0.04740093648433685, 0.1629221883770468, 0.0004352699293165516, 0.0011548693058610906, 0.00012083104985025486, 8.404107581639787e-09, 1.2426496176106744e-06, 3.9754408583850754e-06, 1.4798669556796555e-07, 5.685736506937852e-07], "bin": 0.15, "data_idx": "8477", "pred_tgts": ["(FenceMultiAction)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?= (DateAtTimeWithDefaults (MD 21L (May)) (NumberAM 11L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (?= (DateAtTimeWithDefaults (MD 21L (May)) (NumberAM 11L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 21L (May)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (?= (DateAtTimeWithDefaults (MD 21L (May)) (NumberAM 11L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 21L (May)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (NumberAM 11L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (Event.start_? (?= (DateAtTimeWithDefaults (MD 21L (May)) (NumberAM 11L)))))))", "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 21L (May)) (^(Event) EmptyStructConstraint)))))) (Event.start_? (DateTime.time_? (?= (NumberAM 11L))))))))", "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (?= (DateAtTimeWithDefaults (MD 21L (May)) (NumberAM 11L))))))))", "(do (Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (MD 21L (May))))) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (?= (DateAtTimeWithDefaults (MD 21L (May)) (NumberAM 11L))))))))"], "pred_translated": ["The second one. And make it at Panera.", "The breakfast date was at 11:00 am on May 21st.", "Change the date to May 21 at 11:00 am.", "change the event on may 21 to 11 am", "Please change the event on May 21 to 11 AM.", "It was at 11 am.", "change my meeting to may 21 at 11 am", "Yes. Also change my Event on May 21 to start at 11 AM", "Yes. Please change the date to May 21 at 11:00 AM.", "Yes, schedule the breakfast for May 21st at 11:00 AM."], "distractor": "That looks good."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" work on the new PC infrastructure \" ) ) ( Event.start_? ( DateTimeConstraint ( Morning ) ( Today ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Ben \" ) ) ) ) ) ) ) ) ) ) )", "gold_src": "__User fix the first one meeting __Agent I 've put that on your calendar . __User Ben is coming in to work on the new PC infrastructure in the morning . __StartOfProgram\n", "min_probs": [0.11668338744758296, 1.3269019483953765e-07, 1.257110581395124e-09, 7.192944871151015e-12, 1.9905184986476562e-13, 7.523130632955144e-15, 4.7676637297871084e-09, 1.735714763972454e-16, 8.670201806297835e-09, 3.6147950215588165e-19], "bin": 0.15, "data_idx": "8801", "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" work on the new PC infrastructure \")) (Event.start_? (DateTime.time_? (Morning)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ben \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" work on the new PC infrastructure \")) (Event.start_? (DateTimeConstraint (Morning) (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ben \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" work on the new PC infrastructure \")) (Event.start_? (DateTimeConstraint (Morning) (Today)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ben \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" work on the new PC infrastructure \")) (Event.start_? (DateTimeConstraint (Morning) (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ben \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" work on the new PC \")) (Event.start_? (DateTime.time_? (Morning)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ben \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" work on the new PC infrastructure \")) (Event.start_? (?= (NextTime (NumberAM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ben \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" work \")) (Event.start_? (DateTime.time_? (Morning)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ben \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" work on the new PC infrastructure \")) (Event.start_? (?= (NextTime (NumberAM \\ morning\\ L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ben \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" work on the new PC \")) (Event.start_? (DateTimeConstraint (Morning) (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint))))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ben \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" work on the new PC infrastructure \")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberAM 1L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ben \")))))))))))"], "pred_translated": ["I need to meet with Ben to work on the new PC infrastructure in the morning.", "I need to meet with Ben to work on the new PC infrastructure that morning.", "I need to meet with Ben to work on the new PC infrastructure this morning.", "I need to meet with Ben to work on the new PC infrastructure tomorrow morning.", "Let's put work on the new PC with Ben in the morning.", "Let's meet with Ben to work on the new PC infrastructure at 1.", "Schedule a meeting with Ben about work in the morning.", "Let's meet with Ben to work on the new PC infrastructure at like in the morning.", "I need to meet with Ben to work on the new PC that morning.", "Let's meet with Ben to work on the new PC infrastructure at 1."], "distractor": "Does Cracker Barrel in Deerfield Beach, FL have takeout?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" Chelsea's graduation \" ) ) ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" Grand Opera House \" ) ) ) ) ) )", "gold_src": "__User Ok ! __Agent Let me know if there 's anything else I can help you with . __User Update the location of Chelsea 's graduation to the Grand Opera House __StartOfProgram\n", "min_probs": [0.15808292181085132, 0.005456776502926761, 9.320644398625725e-10, 5.00100002436969e-16, 8.365207957477593e-17, 1.0632628172859162e-16, 2.214284306795606e-14, 2.262474326906558e-15, 9.648240997552356e-14, 2.564871423010121e-14], "bin": 0.15, "data_idx": "4528", "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Chelsea's graduation \")))))) (Event.location_? (?= (LocationKeyphrase.apply \" the Grand Opera House \"))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Chelsea's graduation \")))))) (Event.location_? (?= (LocationKeyphrase.apply \" Grand Opera House \"))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Chelsea's graduation \")))))) (Event.location_? (?= (LocationKeyphrase.apply \" the Grand House House \"))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \" the Grand Opera House \"))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \" the Grand Opera House \"))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?= \" Chelsea's graduation \")))))) (Event.location_? (?= (LocationKeyphrase.apply \" the Grand Opera House \"))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Chelsea 's \")) (Event.subject_? (?~= \" Chelsea's graduation \"))))))) (Event.location_? (?= (LocationKeyphrase.apply \" the Grand Opera House \"))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Chelsea's graduation \")) (Event.location_? (?= (LocationKeyphrase.apply \" Chelsea Opera \")))))))) (Event.location_? (?= (LocationKeyphrase.apply \" the Grand Opera House \"))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Chelsea 's \")) (Event.subject_? (?~= \" Chelsea's graduation \"))))))) (Event.location_? (?= (LocationKeyphrase.apply \" Grand Opera House \"))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Chelsea's graduation \")) (Event.location_? (?= (LocationKeyphrase.apply \" Chelsea Opera \")))))))) (Event.location_? (?= (LocationKeyphrase.apply \" Grand Opera House \"))))))"], "pred_translated": ["Add the location Grand Opera House to Chelsea's graduation.", "Add the location Grand Opera House to Chelsea's graduation.", "Set the location of Chelsea's graduation to the Grand House House.", "Add the location of the Grand Opera House.", "Set the location to the Grand Opera House.", "Add the location Grand Opera House to Chelsea's graduation.", "Set the location of Chelsea's event to the Grand Opera House.", "Change Chelsea's graduation to the Grand Opera House instead of the Chelsea Opera.", "Add the location Grand Opera House to Chelsea's graduation.", "Change Chelsea's graduation to the Grand Opera House instead of Chelsea Opera."], "distractor": "Decline my meeting with Josh"}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEvent 2L ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "gold_src": "__User can you make it next week __Agent Here are some times when you and Barack Obama are free . __User yes the second one __StartOfProgram\n", "min_probs": [0.1352791107990693, 0.11444565642542281, 0.00025912211276590824, 8.332958532264456e-05, 3.212448791600764e-05, 2.9750328394584358e-05, 4.199066222983292e-13, 6.146772884018975e-13, 5.117741021376038e-13, 1.7244007247511383e-08], "bin": 0.15, "data_idx": "11912", "pred_tgts": ["(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))", "(FenceOther)", "(FenceSpecify)", "(FenceMultiAction)", "(PleasantryAnythingElseCombined)", "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))", "(Yield (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint))))))"], "pred_translated": ["Yes the second one", "Yes the second one", "How do I create an event?", "Barack Obama canceled on me. Please change the event.", "Yes the first one, but Barack needs to go for me.", "thanks for your help", "yes", "Yes the first one", "Yes the first one", "How about the second one?"], "distractor": "Schedule learning how to make vegan egg rolls with Sam 2 hours before dance practice."}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.subject_? ( ?~= \" Lunch Break \" ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" Reno \" ) ) ) ) ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" Truckee \" ) ) ) ) ) )", "gold_src": "__User What else do I have going on there ? __Agent I found one other event at Seattle . It 's \" Play Pong \" on Wednesday the 22 nd from 3 : 00 to 3 : 30 PM . __User update my Lunch Break in Reno to be in Truckee __StartOfProgram\n", "min_probs": [0.2738461937268087, 0.00040165417838406787, 4.4753669635697014e-05, 1.1177468704739874e-08, 4.589137112291035e-06, 1.4885001523348066e-09, 6.699528409662472e-10, 2.6504765447778546e-13, 1.8221929190249296e-13, 9.069309427896784e-17], "bin": 0.25, "data_idx": "2916", "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Lunch Break \")) (Event.location_? (?= (LocationKeyphrase.apply \" Reno \")))))))) (Event.location_? (?= (LocationKeyphrase.apply \" Truckee \"))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Lunch Break in Reno \")) (Event.location_? (?= (LocationKeyphrase.apply \" Reno \")))))))) (Event.location_? (?= (LocationKeyphrase.apply \" Truckee \"))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Lunch Break \")) (Event.location_? (?= (LocationKeyphrase.apply \" Truckee \")))))))) (Event.location_? (?= (LocationKeyphrase.apply \" Truckee \"))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Lunch Break in Reno \")) (Event.location_? (?= (LocationKeyphrase.apply \" Truckee \")))))))) (Event.location_? (?= (LocationKeyphrase.apply \" Truckee \"))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Lunch \")) (Event.location_? (?= (LocationKeyphrase.apply \" Reno \")))))))) (Event.location_? (?= (LocationKeyphrase.apply \" Truckee \"))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Lunch Break __User \")) (Event.location_? (?= (LocationKeyphrase.apply \" Reno \")))))))) (Event.location_? (?= (LocationKeyphrase.apply \" Truckee \"))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Lunch Break. \")) (Event.location_? (?= (LocationKeyphrase.apply \" Reno \")))))))) (Event.location_? (?= (LocationKeyphrase.apply \" Truckee \"))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Lunch Break in Truckee \")) (Event.location_? (?= (LocationKeyphrase.apply \" Reno \")))))))) (Event.location_? (?= (LocationKeyphrase.apply \" Truckee \"))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Lunch Break to Reno \")) (Event.location_? (?= (LocationKeyphrase.apply \" Reno \")))))))) (Event.location_? (?= (LocationKeyphrase.apply \" Truckee \"))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Lunch Break in in Reno \")) (Event.location_? (?= (LocationKeyphrase.apply \" Reno \")))))))) (Event.location_? (?= (LocationKeyphrase.apply \" Truckee \"))))))"], "pred_translated": ["Switch my Lunch Break from Reno to Truckee.", "Switch my Lunch Break in Reno to be in Truckee", "Move my Lunch Break in Truckee to be", "Move my Lunch Break in Reno to be in Truckee", "Switch my Lunch in Reno to Truckee", "Switch my Lunch Break __User event in Reno to Truckee", "Switch my Lunch Break from Reno to Truckee.", "Move my Lunch Break in Truckee to be there instead of in Reno", "Move my Lunch Break to Reno to Truckee.", "Move my Lunch Break in in Reno to Truckee"], "distractor": "when is the order due __User"}
{"gold_tgt": "( Yield ( WhenProperty ( temperature ) ( WeatherQuantifier.Max ) ( WeatherQueryApi ( AtPlace ( FindPlace ( LocationKeyphrase.apply \" San Diego \" ) ) ) ( DateTime.date_? ( WeekOfDateNew ( NextHolidayFromToday ( Holiday.ValentinesDay ) ) ) ) ) ) )", "gold_src": "__User When is it supposed to be warmest in San Diego during the week of Valentine 's Day ? __StartOfProgram\n", "min_probs": [0.2931776152353153, 4.323989135609284e-05, 6.625319457303537e-06, 1.6328730232417506e-08, 1.1113048308472134e-09, 1.0759408988312488e-09, 9.731985579014026e-10, 1.871799773797848e-11, 3.6985189582269045e-10, 1.0682353259478714e-10], "bin": 0.25, "data_idx": "5427", "pred_tgts": ["(Yield (WhenProperty (temperature) (WeatherQuantifier.Max) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" San Diego \"))) (DateTime.date_? (WeekOfDateNew (NextHolidayFromToday (Holiday.ValentinesDay)))))))", "(Yield (WhenProperty (temperature) (WeatherQuantifier.Max) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" San Diego \"))) (DateTime.date_? (?= (NextHolidayFromToday (Holiday.ValentinesDay)))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" San Diego \"))) (DateTime.date_? (WeekOfDateNew (NextHolidayFromToday (Holiday.ValentinesDay)))))))", "(Yield (WhenProperty (temperature) (WeatherQuantifier.Max) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" San Diego \"))) (DateTime.date_? (ThisWeek)))))", "(Yield (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" San Diego \"))) (DateTime.date_? (?= (NextHolidayFromToday (Holiday.ValentinesDay)))))))", "(Yield (WhenProperty (temperature) (WeatherQuantifier.Min) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" San Diego \"))) (DateTime.date_? (WeekOfDateNew (NextHolidayFromToday (Holiday.ValentinesDay)))))))", "(Yield (WhenProperty (snowPrecipProbability) (WeatherQuantifier.Max) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" San Diego \"))) (DateTime.date_? (WeekOfDateNew (NextHolidayFromToday (Holiday.ValentinesDay)))))))", "(Yield (WhenProperty (temperature) (WeatherQuantifier.Max) (WeatherQuantifier.Max) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" San Diego \"))) (DateTime.date_? (WeekOfDateNew (NextHolidayFromToday (Holiday.ValentinesDay)))))))", "(Yield (WhenProperty (temperature) (WeatherQuantifier.Max) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" San Diego \"))) (DateTime.date_? (WeekOfDateNew (NextHolidayFromToday (Holiday.VeteransDay)))))))", "(Yield (WhenProperty (temperature) (WeatherQuantifier.Max) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" San Diego \"))) (DateTime.date_? (WeekOfDateNew (NextHolidayFromToday (Holiday.LaborDay)))))))"], "pred_translated": ["When is Valentines Day in San Diego?", "When is Valentines Day in San Diego?", "What is the high the week of Valentines Day in San Diego?", "When will it be warmest this week in San Diego?", "How hot will it be in San Diego on Valentine's Day?", "What day will be the coldest day in San Diego the week of Valentine's Day?", "Tell me what day of the week it will be in San Diego.", "When is Valentines Day in San Diego?", "When is Veteran's Day in San Diego?", "When is Labor Day in San Diego?"], "distractor": "Malik is my contact. I need to update my calendar with him."}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( EventOnDate ( ClosestDayOfWeek ( Execute ( refer ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ( Saturday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) )", "gold_src": "__User Cancel my meeting with my boss next Friday . __Agent Is this what you want me to cancel ? __User Sorry , I meant the one on Saturday . __StartOfProgram\n", "min_probs": [0.29488616243759425, 0.0026907999941183174, 2.8407587171873536e-09, 7.634650857483674e-10, 1.990429532515466e-08, 1.084024812819777e-11, 2.809841700034055e-12, 2.0140330957416333e-09, 1.9028589445276736e-09, 4.4781453864425617e-14], "bin": 0.25, "data_idx": "1070", "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Saturday)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)))))", "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Saturday))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Saturday)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (& (^(Date) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (Saturday)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (nextDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Saturday)) (^(Event) EmptyStructConstraint)))))"], "pred_translated": ["I meant the one on Saturday.", "I meant the one next Saturday.", "What do I have scheduled on Saturday?", "Can you find my meeting on Saturday?", "I meant the one on Saturday.", "I meant the meeting next Saturday.", "I meant the one next Saturday.", "I meant the one on Saturday.", "I meant the one on Saturday.", "I meant the following Saturday."], "distractor": "Do I have any lunch meetings with him this week?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.start_? ( DateTime.date_? ( ?= ( ClosestDay ( Execute ( refer ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ( Day.apply 13L ) ) ) ) ) ) ) )", "gold_src": "__User Actually , I meant on the 11 th . Thanks ! __Agent Here are some times when Jane is free on April 11 th . __User What about the 13 th ? __StartOfProgram\n", "min_probs": [0.2211197316201941, 0.0005445337943371043, 9.064442595166087e-05, 0.00014081735271798904, 4.4520232205599576e-07, 3.734483051001326e-06, 1.7882592900830189e-09, 5.254381299269759e-07, 2.1254061344923603e-09, 3.722641986536415e-08], "bin": 0.25, "data_idx": "11419", "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDay (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Day.apply 13L))))))))", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (ClosestDay (Today) (Day.apply 13L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 13L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (Date.day_? (?= (Day.apply 13L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 13L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDay (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Day.apply 13L)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (previousDayOfMonth (Today) 13L)))))))", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (ClosestDay (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Day.apply 13L))))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDay (Today) (Day.apply 13L))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDay (Execute (refer (& (^(Date) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (Day.apply 13L))))))))"], "pred_translated": ["Oh I meant the 13th.", "The one on the 13th", "Let's do the 13th", "Let's go with the 13th", "Oh, I meant the 13th.", "Oh I meant the 13th.", "Oh, I meant the 13th.", "Let's do the 13th", "Oh I meant the 13th.", "Oh I meant the 13th."], "distractor": "Switch my Lunch in Reno to Truckee"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( UpdateEventIntensionConstraint ) ( Event.start_? ( DateTime.time_? ( LateTimeRange ( Evening ) ) ) ) ) ) )", "gold_src": "__User Move my beach trip to sometime in the beginning of June . __Agent Does one of these work ? __User How about late evening ? __StartOfProgram\n", "min_probs": [0.2915047832224815, 1.1037190445349096e-05, 4.591040030888414e-06, 2.8635873285846905e-06, 5.134475523493897e-09, 3.376317379737007e-07, 1.1462075272846523e-09, 4.697868629975165e-09, 1.21528869866774e-09, 2.232177428531095e-09], "bin": 0.25, "data_idx": "6840", "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (LateTimeRange (Evening)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (Evening))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (LateAfternoon))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (LateMorning))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (EventDuringRangeTime (^(Event) EmptyStructConstraint) (Evening)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (EventOnDateWithTimeRange (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)) (Evening)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (LateTimeRange (Night)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (EventOnDateWithTimeRange (EventOnDate (Today) (^(Event) EmptyStructConstraint)) (Evening)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTimeConstraint (Evening) (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (EventOnDateWithTimeRange (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)) (LateTimeRange (Evening))))))"], "pred_translated": ["No, I need something later in the evening.", "No, I need something in the evening.", "I need something later in the afternoon.", "No, I need something later in the morning.", "No, I need something in the evening.", "What about in the evening?", "Can you make it later in the night?", "What about this evening instead?", "No, I need something in the evening.", "What about later that evening?"], "distractor": "Please add a meeting with Ray Southerland for the day after."}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( ( CalflowIntension ( Constraint Event ) ) ) QueryEventIntensionConstraint ) ( Event.subject_? ( ?= \" Engines \" ) ) ) ) )", "gold_src": "__User Yes , that 's it . Now please make my hunt start at 6 am __Agent I 've changed \" breakfast \" to be . Is this the update you want ? __User I meant for you to change my Engines event __StartOfProgram\n", "min_probs": [0.012507649138569832, 0.28643249768454593, 1.891190995659133e-06, 1.6960109761251616e-06, 6.608601383995179e-08, 1.544926177213602e-08, 2.511300262829743e-08, 7.258749953173002e-09, 1.0464089022018569e-08, 4.053177840435671e-18], "bin": 0.25, "data_idx": "11426", "pred_tgts": ["(FenceSpecify)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (Event.subject_? (?~= \" Engines \")))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (Event.subject_? (?~= \" Engines event \")))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \" Engines \")))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (Event.subject_? (?~= \" Engines update \")))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.subject_? (?~= \" Engines \")))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (Event.subject_? (?~= \" Engines __User \")))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (Event.subject_? (?= \" Engines \")))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (Event.subject_? (?~= \" Engines. \")))))", "(Yield (Execute (ReviseConstraint (^((CalflowIntension (Constraint Event))) refer (QueryEventIntensionConstraint)) (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (Event.subject_? (?~= \" Engines \")))))"], "pred_translated": ["Can you change the time of my hunt?", "Actually I meant Engines.", "Actually I meant Engines event", "Change the title to Engines", "Actually I meant Engines update", "Actually I meant Engines", "Actually I meant Engines __User", "Actually I meant Engines.", "Actually I meant Engines.", "Actually I meant Engines."], "distractor": "How long is my third event with Abby today?"}
{"gold_tgt": "( do ( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) ) ( Yield ( EventAttendance :event ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventDuringRange ( Event.subject_? ( ?~= \" BBQ \" ) ) ( NextWeekList ) ) ) ) ) :response ( ResponseStatusType.Accepted ) ) ) )", "gold_src": "__User Please accept my invite to John 's wedding and let him know I bought the gift __Agent I will accept \" Wedding \" and send a response to the organizer with the following comment : \" I bought the gift \" . Is that ok ? __User Yes , and then could you also accept the BBQ for next week ? __StartOfProgram\n", "min_probs": [0.2432642654927727, 0.00022209582772772084, 2.965161433107377e-07, 1.030224816970367e-07, 5.299362274466016e-13, 5.304103167765425e-14, 5.957682758499437e-15, 8.384536084082156e-17, 3.9710894134327357e-19, 3.3581149248352376e-23], "bin": 0.25, "data_idx": "11361", "pred_tgts": ["(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" BBQ \")) (NextWeekList))))) :response (ResponseStatusType.Accepted))))", "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" BBQ \")) (NextWeekList))))) :response (ResponseStatusType.Accepted)))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceOther))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" BBQ \"))))) :response (ResponseStatusType.Accepted))))", "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" BBQ \"))))) :response (ResponseStatusType.Accepted)))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?= \" BBQ \")) (NextWeekList))))) :response (ResponseStatusType.Accepted))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" BBQ \")) (Event.start_? (DateTime.date_? (NextWeekList))))))) :response (ResponseStatusType.Accepted))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" BBQ day \")) (NextWeekList))))) :response (ResponseStatusType.Accepted))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" BBQ \")) (NextWeekList))))) :event (RespondComment.apply \" BBQ \") :response (ResponseStatusType.Accepted))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" BBQ \")) (NextWeekList))))) :event (RespondComment.apply \" accept \") :response (ResponseStatusType.Accepted))))"], "pred_translated": ["Yes. Please also accept the BBQ invite for next week.", "Please accept the BBQ invite for next week.", "THANKS OK, PLEASE INFORM JOHN ABOUT THE WEDNESDAY PARTY", "Yes. Please also accept the BBQ invite.", "Please accept the BBQ invite.", "Yes. Please also accept the BBQ invite for next week.", "Yes. Please also accept the BBQ invite for next week.", "Yes. Can you also accept the BBQ day for next week?", "Yes. Also accept the BBQ invite for next week.", "Yes. Please also accept the BBQ invite for next week."], "distractor": "How long is my third event with Abby on March 3rd?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Ray Southerland \" ) ) ) ) ) ) ) ) ) )", "gold_src": "__User Okay , thank you . __Agent Let me know if there 's anything else I can help you with . __User My manager , Ray Southerland , will join toward the end of the meeting . __StartOfProgram\n", "min_probs": [0.2752490980126084, 0.018442947973949946, 6.161692612633578e-06, 3.17014938161791e-06, 8.468269421016687e-08, 1.969047744145371e-10, 3.059417077528832e-07, 6.643524012888593e-08, 3.700604309645208e-08, 1.1983172259549952e-08], "bin": 0.25, "data_idx": "10248", "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ray Southerland \"))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ray Southerland \"))))))))))", "(Yield (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ray Southerland \")))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (EndOfWorkDay)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ray Southerland \")))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ray Southerland \"))))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ray Southerland \"))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventAtTime (^(Event) EmptyStructConstraint) (EndOfWorkDay)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ray Southerland \"))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (EndOfWorkDay)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ray Southerland \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (adjustByPeriodDuration (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (PeriodDuration.apply :duration (toHours 1))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ray Southerland \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (adjustByPeriodDuration (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (PeriodDuration.apply (toDays 1))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Ray Southerland \")))))))))))"], "pred_translated": ["Add my manager, Ray Southerland, to the meeting.", "Please set up a meeting with Ray Southerland", "Add my manager, Ray Southerland, to the meeting.", "Please schedule a meeting with Ray Southerland at the end of the day.", "Invite Ray Southerland to the meeting.", "Please add my manager, Ray Southerland, to the meeting.", "Can you add Ray Southerland to the meeting at the end of the day?", "i need a meeting with Ray Southerland at the end of the day", "I need to meet with Ray Southerland an hour after that.", "Please add a meeting with Ray Southerland for the day after."], "distractor": "When is game time?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( EventOnDate ( ClosestDayOfWeek ( Execute ( refer ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ( Sunday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) )", "gold_src": "__User i mean delete the event on saturday __Agent Is this what you want me to cancel ? __User actually delete the event on sunday __StartOfProgram\n", "min_probs": [0.22861457793682843, 0.0056133256482072055, 4.513613450924835e-09, 6.509381250944579e-09, 1.5886713854031656e-08, 4.4236878618905784e-13, 4.095325618423541e-09, 3.863085130774221e-13, 6.123197976420615e-11, 1.2833982445984647e-12], "bin": 0.25, "data_idx": "7905", "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Sunday)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)))))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Sunday)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (& (^(Date) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (Sunday)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Sunday))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (nextDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Sunday)) (^(Event) EmptyStructConstraint)))))"], "pred_translated": ["Actually delete the event on Sunday.", "I meant the one on Sunday.", "Can you show me the event on Sunday?", "delete the event on sunday", "I meant the one on Sunday.", "I meant the one on Sunday.", "Actually cancel the event on Sunday.", "I meant delete the event on Sunday", "Actually I meant the one on Sunday.", "Actually cancel the event on the following Sunday."], "distractor": "Yes please update."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" spending \" ) ) ( Event.start_? ( DateTime.date_? ( ?= ( Tomorrow ) ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Abby \" ) ) ) ) ) ) ) ) ) ) )", "gold_src": "__User I will be spending a week with Abby starting tomorrow __StartOfProgram\n", "min_probs": [0.22990927225669153, 8.806515551756058e-06, 3.5563562283854644e-06, 2.0360880704589695e-07, 7.269628928166362e-08, 7.677945838737307e-09, 9.361358971227047e-08, 5.421430577056746e-10, 9.06343514420476e-08, 2.406788090430835e-09], "bin": 0.25, "data_idx": "11450", "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \"))))))) (EventAllDayStartingDateForPeriod (Event.subject_? (?= \" spending \")) (Tomorrow) (toWeeks 1))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \"))))))) (EventAllDayStartingDateForPeriod (Event.subject_? (?= \" spending with Abby \")) (Tomorrow) (toWeeks 1))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \"))))))) (EventAllDayStartingDateForPeriod (Event.subject_? (?= \" spending Abby \")) (Tomorrow) (toWeeks 1))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (EventAllDayStartingDateForPeriod (Event.subject_? (?= \" spending \")) (Tomorrow) (toWeeks 1))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \"))))))) (EventAllDayStartingDateForPeriod (Event.subject_? (?= \" conference \")) (Tomorrow) (toWeeks 1))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \"))))))) (EventAllDayStartingDateForPeriod (^(Event) EmptyStructConstraint) (Tomorrow) (toWeeks 1))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Tomorrow)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (EventAllDayStartingDateForPeriod (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \"))))))) (Tomorrow) (toWeeks 1))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \"))))))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextPeriod (toWeeks 1)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Abby \"))))))) (EventAllDayStartingDateForPeriod (Event.subject_? (?= \" game \")) (Tomorrow) (toWeeks 1))))))"], "pred_translated": ["I'm spending a week with Abby starting tomorrow", "I will be spending with Abby for a week starting tomorrow", "I will be spending Abby for a week starting tomorrow", "I will be spending a week with Abby starting tomorrow", "I will be with Abby for a week starting tomorrow at a conference", "I will be with Abby for a week starting tomorrow", "Make a meeting with Abby tomorrow", "I will be with Abby for a week starting tomorrow", "I need to be with Abby for the next week", "I will be with Abby for the game starting tomorrow for the entire week"], "distractor": "Please schedule a meeting with the pope tomorrow."}
{"gold_tgt": "( Yield ( Event.start ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" game time date \" ) ) ) ) ) ) )", "gold_src": "__User when is my game time date __StartOfProgram\n", "min_probs": [0.36889995067241355, 0.008684807342022404, 1.3175463690253552e-09, 8.649033425956777e-06, 1.029197043170203e-13, 6.268850466052681e-10, 1.2407346313252152e-12, 3.934505026482051e-15, 3.8409100959495755e-11, 2.1060107645691764e-14], "bin": 0.35, "data_idx": "2932", "pred_tgts": ["(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" game time date \")))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" game time \")))))))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" game time date \"))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" game \")))))))", "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \" game time date \"))))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" game time \"))))))", "(do (FindEventWrapperWithDefaults (Event.subject_? (?~= \" game time date \"))) (Yield (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" game time __User \")))))))", "(do (FindEventWrapperWithDefaults (Event.subject_? (?~= \" game time \"))) (Yield (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))", "(Yield (DateTime.date (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" game time date \"))))))))"], "pred_translated": ["When is my game time date?", "When is game time?", "Can you find my game time date?", "When is the game?", "Can you search for a game time date?", "When is game time?", "When is my game time date?", "when is the game time __User", "When is game time?", "What day is my game time date?"], "distractor": "Make me an event called 8 that starts around 8 pm today"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Saturday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) )", "gold_src": "__User Yo , what events do I have coming up . Got ta make sure my sched is tight __Agent I did n't find any events . __User Can you double check that I do n't have anything planned on Saturday ? __StartOfProgram\n", "min_probs": [0.36507049202919006, 0.016970686614513397, 0.01249743066728115, 0.011036662384867668, 0.003785626497119665, 0.12428773310320472, 1.6071166026812594e-05, 1.2032250960349364e-05, 9.377493115051562e-09, 3.4372072152839616e-11], "bin": 0.35, "data_idx": "10852", "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(FenceMultiAction)", "(FenceConditional)", "(FenceDateTime)", "(Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))) 0L))", "(Yield (== (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint))))) 0L))", "(do (DoNotConfirm) (Yield (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)))))"], "pred_translated": ["How do I delete an event?", "Show me my calender", "Can you clear my calendar for monday?", "If I have any meetings next week, delete them.", "What events do I have the rest of the week?", "What do I have going on Saturday?", "Do I have anything on Saturday?", "Do I have anything on Saturday?", "No, show me anything on Saturday", "What about next Saturday?"], "distractor": "What did I have scheduled for last January?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.start_? ( DateTime.date_? ( ?= ( NextDOW ( Monday ) ) ) ) ) ) ) )", "gold_src": "__User Schedule a meeting with Pam tomorrow at 11 : 00 AM . __Agent Is this good ? __User Can you move it to Monday ? __StartOfProgram\n", "min_probs": [0.3096429403990396, 0.0022739924058145233, 3.3851253854789164e-07, 8.609469202668025e-11, 8.013654600042652e-14, 1.420785447468379e-14, 7.543414041198386e-13, 1.7753206301646386e-13, 1.6148723178230606e-14, 7.754591445782595e-14], "bin": 0.35, "data_idx": "9640", "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Monday))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (NextDOW (Monday))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (& (^(Date) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (Monday))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (nextDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Monday))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.date_? (?= (NextDOW (Monday))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (NextDOW (Monday)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Monday))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Monday)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Monday))))))", "(do (refer (^(Event) ConstraintTypeIntension)) (Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Monday)))))))))"], "pred_translated": ["No, it should be on Monday.", "No, it should be next Monday.", "No, change it to Monday.", "No, move it to the following Monday.", "Yes, but make it last until Monday.", "oops i meant next monday", "Yes, but make it last until Monday.", "No, I meant the meeting on Monday", "Make it for all day Monday instead.", "No, change it to Monday."], "distractor": "Decline Riley's birthday party and say that I'll be out of state that weekend."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.attendees_? ( AttendeeListHasPeople ( FindTeamOf ( toRecipient ( CurrentUser ) ) ) ) ) ( EventAllDayForDateRange ( Event.location_? ( ?= ( LocationKeyphrase.apply \" Wichitaiiaiai \" ) ) ) ( NextWeekList ) ) ) ) ) )", "gold_src": "__User Looks right . __Agent I 've put that on your calendar . __User I will be with my Team in Wichitaiiaiai for all of next week __StartOfProgram\n", "min_probs": [0.3959932379040449, 0.001210597527580229, 0.00022480604656918132, 5.6175838491801284e-05, 7.547713777659608e-06, 1.52338360025845e-08, 4.733677701944821e-09, 4.2627888600161655e-08, 5.388220874739525e-09, 3.6261899565502413e-09], "bin": 0.35, "data_idx": "10732", "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.location_? (?= (LocationKeyphrase.apply \" Wichitaiiaiai \"))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))) (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (NextWeekList))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (?= (LocationKeyphrase.apply \" Wichitaiiaiai \"))) (EventAllDayForDateRange (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser))))) (NextWeekList))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (EventAllDayForDateRange (& (Event.location_? (?= (LocationKeyphrase.apply \" Wichitaiiaiai \"))) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))) (NextWeekList)))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser))))) (EventAllDayForDateRange (Event.subject_? (?= \" Wichitaiiaiai \")) (NextWeekList))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser))))) (EventAllDayForDateRange (Event.location_? (?= (LocationKeyphrase.apply \" Wichitaiiaiai \"))) (NextWeekList))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (?= (LocationKeyphrase.apply \" Wichitaiiaiai \"))) (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (NextWeekList))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser))))) (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (NextWeekList))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" Wichitaiiaiai \")) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser)))))) (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (NextWeekList))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser))))) (EventAllDayForDateRange (Event.subject_? (?= \" Team \")) (NextWeekList))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Wichitaiiaiai \")) (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (toRecipient (CurrentUser))))) (EventAllDayForDateRange (^(Event) EmptyStructConstraint) (NextWeekList))))))"], "pred_translated": ["I will be with my team all next week at Wichitaiiai", "I will be with my team at Wichitaiiai all of next week", "I will be at Wichitaiiai all of next week with my team", "I will be with my team for Wichitaiiai all of next week", "I will be with my team at Wichitaiiai all of next week", "I will be at Wichitaiiai all next week", "I will be with my team all next week", "I will be with my team all next week for Wichitaiiai", "I will be with my Team all of next week", "I will be with my team all next week for Wichitaiiai"], "distractor": "Can you invite Allen?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( & ( Event.start_? ( DateTime.time_? ( ?= ( NumberAM 9L ) ) ) ) ( Event.end_? ( DateTime.time_? ( ?= ( HourMinuteAm 10L 30L ) ) ) ) ) ) ) )", "gold_src": "__User yeah thanks . __Agent I 've put that on your calendar . __User make that 9 - 10 : 30 __StartOfProgram\n", "min_probs": [0.3970258901919371, 9.456020085322044e-05, 1.5730033410055653e-05, 3.6009584166714405e-09, 6.263549807056414e-11, 4.3744882294873e-12, 1.1660959014643586e-14, 5.3666068590782285e-17, 1.2247623377336927e-16, 2.286792297987466e-17], "bin": 0.35, "data_idx": "8502", "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 10L 30L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 9L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 9L)))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 10L 30L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (NumberAM 10L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 10L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L))))))))", "(do (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L)))))))))", "(do (DoNotConfirm) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L)))))))))", "(do (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (^(Event) EmptyStructConstraint)))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L)))))))))", "(do (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (^(Event) EmptyStructConstraint)))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 9L)))) (Event.end_? (DateTime.time_? (?= (HourMinuteAm 10L 30L)))))))))"], "pred_translated": ["make that 9-10:30", "make that 9-10:30", "make that 9-10:30", "make that 9-10:30", "make that 9-10 am", "make that 10-10:30", "make that 9-10:30", "Nah, just change the time to 9-10:30", "make that 9-10:30", "make that 9-10:30"], "distractor": "What meetings did I have with Mark earlier this month?"}
{"gold_tgt": "( Yield ( Event.start ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" Mr. Smith \" ) ) ) ) ) ) )", "gold_src": "__User Please , search for Mr. Smith and tell when is the meeting with him . __StartOfProgram\n", "min_probs": [0.031046858057379723, 0.012726139277219772, 0.008739668875932693, 0.007626626640558243, 0.3580543996025911, 0.00167325969799838, 8.244686791707929e-05, 1.8140237380815994e-06, 3.136847066378608e-07, 1.6401223887246753e-06], "bin": 0.35, "data_idx": "8560", "pred_tgts": ["(FenceAttendee)", "(FenceSpecify)", "(FenceMultiAction)", "(FencePeopleQa)", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Smith \")))))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mr. Smith \")))))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Smith \"))))))))))))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Smith \"))))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipient (RecipientFromRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Smith \"))))))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mr. Smith \"))))))))))))"], "pred_translated": ["Please schedule a meeting with the pope tomorrow.", "I need to change the date of my doctor's appointment", "I need to cancel all my meetings for tomorrow.", "Why didn't Mom come to my birthday party?", "When is my meeting with Mr. Smith?", "When is my meeting with Mr. Smith?", "When is my meeting with Mr. Smith?", "Find my appointment with Mr. Smith.", "When is my meeting with Mr. Smith?", "When is my meeting with Mr. Smith?"], "distractor": "Extend it by 2 more minutes."}
{"gold_tgt": "( Yield ( PlaceHasFeature ( PlaceFeature.FamilyFriendly ) ( singleton ( PlaceSearchResponse.results ( FindPlaceMultiResults ( LocationKeyphrase.apply \" McDonald's restaurant on Main Street \" ) ) ) ) ) )", "gold_src": "__User I was wondering if the McDonald 's restaurant on Main Street is family oriented ? __StartOfProgram\n", "min_probs": [0.3609309319043334, 1.1554191427098544e-13, 2.0097133629719734e-14, 1.0921217216183459e-14, 9.901098882122252e-17, 6.118107514604402e-17, 3.051997053490955e-17, 3.990136798191249e-18, 2.1293997251880347e-18, 1.2445390685953257e-18], "bin": 0.35, "data_idx": "11405", "pred_tgts": ["(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" McDonald's restaurant on Main Street \"))))))", "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" Old's restaurant on Main Street \"))))))", "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" P.F.'s restaurant on Main Street \"))))))", "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" Mcdonald's restaurant on Main Street \"))))))", "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" Shangri's restaurant on Main Street \"))))))", "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" McDonald's restaurant Street Main Street \"))))))", "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" Cheesecake's restaurant on Main Street \"))))))", "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" National's restaurant on Main Street \"))))))", "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" Taqueria's restaurant on Main Street \"))))))", "(Yield (PlaceHasFeature (PlaceFeature.FamilyFriendly) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" Ruby's restaurant on Main Street \"))))))"], "pred_translated": ["Is McDonald's restaurant on Main Street family friendly?", "Is Old's restaurant on Main Street family friendly?", "Is P.F.'s restaurant on Main Street family friendly?", "Is the McDonald's restaurant on Main Street family friendly?", "Is Shangri's restaurant on Main Street family friendly?", "Is McDonald's restaurant Street Main Street family friendly?", "Is cheesecake's restaurant on Main Street family friendly?", "Is National's restaurant on Main Street family friendly?", "Is Taqueria's restaurant on Main Street family friendly?", "Is Ruby's restaurant on Main Street family friendly?"], "distractor": "Spartan 010-Naomi"}
{"gold_tgt": "( UserPauseResponse )", "gold_src": "__User Make an event to finish BL3 __Agent Does one of these work ? __User give me 2 more seconds please __StartOfProgram\n", "min_probs": [0.3231479227542877, 0.004099917132407427, 0.11207941472775035, 5.36874967399603e-08, 3.998209586501735e-08, 2.1147129936024096e-10, 1.0746963497731507e-08, 3.0557422497124157e-09, 1.931942501616898e-10, 3.9164240856239696e-11], "bin": 0.35, "data_idx": "1966", "pred_tgts": ["(UserPauseResponse)", "(FenceSpecify)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (addDurations (Execute (refer (extensionConstraint (^(Duration) AlwaysTrueConstraint)))) (toMinutes 2)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (addDurations (Execute (refer (extensionConstraint (^(Duration) AlwaysTrueConstraint)))) (toHours 2)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (addDurations (Execute (refer (extensionConstraint (^(Duration) AlwaysTrueConstraint)))) (toMinutes 2)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toMinutes 2))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (addDurations (toMinutes 2) (Execute (refer (extensionConstraint (^(Duration) AlwaysTrueConstraint))))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (subtractDurations (Execute (refer (extensionConstraint (^(Duration) AlwaysTrueConstraint)))) (toMinutes 2)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (addDurations (Execute (refer (extensionConstraint (^(Duration) AlwaysTrueConstraint)))) (toMinutes (longToNum (Afew)))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (addDurations (Event.duration (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (toMinutes 2)))))))"], "pred_translated": ["Let me think about it.", "FIX THE EVENT IN MY CALENDER", "Extend it by 2 more minutes.", "Extend it by 2 hours.", "Extend it by 2 more minutes.", "Let's make it last 2 minutes.", "Extend it by 2 more minutes.", "I need it to be 2 minutes shorter.", "Add a few more minutes.", "Extend it by 2 more minutes."], "distractor": "add jerri skinner to the event"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( Event.start_? ( DateTime.time_? ( ?= ( HourMinutePm 3L 30L ) ) ) ) ) ) )", "gold_src": "__User Yes . Did I meet Malik at all this past week ? __Agent I 've deleted that . No , I did n't find any events Malik last week . __User The meeting started at 3 : 30 PM because Malik was late . Please correct the entry . __StartOfProgram\n", "min_probs": [0.3650297224521637, 0.09161102026700974, 0.015752963721752167, 0.0014521183911710978, 0.13154797503496718, 2.878023207609093e-08, 1.591362809337647e-10, 4.294915299736058e-11, 1.052255764472991e-09, 2.4809934046124393e-09], "bin": 0.35, "data_idx": "1731", "pred_tgts": ["(FenceSpecify)", "(FenceOther)", "(PleasantryAnythingElseCombined)", "(PleasantryCalendar)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 30L)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (NextTime (HourMinutePm 3L 30L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 30L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 30L)))))))", "(UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 30L))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.time_? (?= (HourMinutePm 3L 30L)))))))"], "pred_translated": ["Malik canceled on me. Please notify.", "Did I meet with Malik last week?", "Thank you.", "Malik is my contact. I need to update my calendar with him.", "Change the time to 3:30pm", "create meeting at 3:30", "Malik and I are going to go to the movie at 3:30 now.", "Change the time to 3:30pm", "Change the time to 3:30pm", "Change the meeting time to 3:30 PM."], "distractor": "yes"}
{"gold_tgt": "( Yield ( Event.start ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Thursday ) ) ( Event.subject_? ( ?~= \" order \" ) ) ) ) ) ) ) )", "gold_src": "__User when is thursdays order due __StartOfProgram\n", "min_probs": [0.009579997509717941, 0.3318647356356075, 0.0006217827248754561, 1.7071526312185182e-05, 1.6057791861388278e-07, 1.2037582161929287e-07, 1.0194199536588114e-07, 1.592776598291399e-08, 9.92802785148966e-09, 3.832962162825544e-06], "bin": 0.35, "data_idx": "5688", "pred_tgts": ["(FenceTriviaQa)", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" order due \")))))))", "(Yield (NextHolidayFromToday (Holiday.StPatricksDay)))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" order due due \")))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" order due __User \")))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" order due is \")))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" order due thursdays \")))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" order due when \")))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" order thursdays due \")))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (Event.subject_? (?~= \" order due \"))))))))"], "pred_translated": ["How many months have 30 days?", "when is my order due?", "When is St. Patrick's Day?", "when is my order due due?", "when is the order due __User", "when is my order due is", "when is the order due thursdays", "when is the order due when", "when is order thursdays due?", "What time is the order due today?"], "distractor": "Move my Lunch Break to Reno to Truckee."}
{"gold_tgt": "( Yield ( EventAttendance :event ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" Appointment \" ) ) ) ) ) :response ( ResponseStatusType.Accepted ) ) )", "gold_src": "__User can you tell me what my 4 hour meeting is ? __Agent \" Appointment \" is from 2 : 00 to 6 : 00 AM . __User ok then . I accept that meeting and will go __StartOfProgram\n", "min_probs": [0.4545156955532773, 0.014063303358852863, 0.006923858076334, 0.005110352300107479, 0.0019784814212471247, 0.0018870061030611396, 3.1032216379154273e-06, 1.0958568579829211e-13, 9.603188618213981e-13, 4.429367982494344e-17], "bin": 0.45, "data_idx": "147", "pred_tgts": ["(Yield (EventAttendance :event (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) :response (ResponseStatusType.Accepted)))", "(FenceOther)", "(PleasantryAnythingElseCombined)", "(FenceSpecify)", "(FenceMultiAction)", "(PleasantryCalendar)", "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))) :response (ResponseStatusType.Accepted)))", "(EventAttendance :event (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) :response (ResponseStatusType.Accepted))", "(Yield (EventAttendance :meeting (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) :response (ResponseStatusType.Accepted)))", "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" go meeting \"))))) :response (ResponseStatusType.Accepted)))"], "pred_translated": ["I want to accept that appointment", "Defer the meeting with chang", "ok", "can you change the appointment time", "Cancel all my meetings for the rest of the week.", "I would like to update my calendar", "I would like to accept that appointment", "go ahead and accept that", "go ahead and accept that meeting", "can you accept the go meeting"], "distractor": "The second one. I had dinner with john yesterday"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( UpdateEventIntensionConstraint ) ( & ( Event.start_? ( DateTime.date_? ( ?= ( ClosestDayOfWeek ( Execute ( refer ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ( Saturday ) ) ) ) ) ( Event.isAllDay_? ( ?= true ) ) ) ) ) )", "gold_src": "__User make that 9 - 10 : 30 __Agent Is this the change you want to make ? __User Actually , just make it all day on Saturday __StartOfProgram\n", "min_probs": [0.4747770551571938, 0.004287789110094309, 1.7256073343789882e-05, 4.4626601777176633e-07, 1.1463495339434095e-09, 6.341483565800766e-07, 7.834963721735772e-10, 1.5043367316800286e-11, 3.697345679450771e-11, 6.695404988487425e-13], "bin": 0.45, "data_idx": "2828", "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Saturday))))))", "(FenceOther)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (NextDOW (Saturday))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Saturday))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.isAllDay_? (?= true)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (ClosestDayOfWeek (Execute (refer (& (^(Date) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (Saturday))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (ClosestDayOfWeek (DateTime.date (Event.start)) (Saturday))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (NextDOW (Saturday))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (& (Event.start_? (DateTime.date_? (?= (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Saturday))))) (Event.isAllDay_? (?= true))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventAllDayOnDate (^(Event) EmptyStructConstraint) (ClosestDayOfWeek (Execute (refer (& (^(Date) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (Saturday))))))"], "pred_translated": ["Make it last all day Saturday.", "Why would you change the time?", "Make it for all day Saturday.", "Make it last all day Saturday.", "Make it an all day event.", "Make it for all day Saturday.", "Make it for all day Saturday.", "Make it for all day Saturday.", "Make it an all day event on Saturday.", "Make it for all day Saturday."], "distractor": "Add attendees Scot Hanson, Barack Obama, Cornelio Hernandez, Kristen Clifford"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( Event.start_? ( DateTimeConstraint ( TimeAround ( NumberPM 8L ) ) ( Today ) ) ) ) ) )", "gold_src": "__User Make me an event around 8 pm today __StartOfProgram\n", "min_probs": [0.41194276977038446, 0.00037537762545980513, 0.01363444643281258, 7.054400012278328e-07, 9.145089217637653e-07, 1.38448630982128e-10, 2.158116259499021e-09, 6.23953364907756e-12, 1.8010329541698927e-12, 7.19792659303759e-13], "bin": 0.45, "data_idx": "6132", "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (Today) (NumberPM 8L)))))))", "(FenceDateTime)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (TimeAround (NumberPM 8L)) (Today))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberPM 8L)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTime.time_? (TimeAround (NumberPM 8L)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeConstraint (?= (NumberPM 8L)) (Today))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (DateTimeAndConstraint (Now) (DateAtTimeWithDefaults (Today) (NumberPM 8L)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (Today) (NumberAM 8L)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" event \")) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (Today) (NumberPM 8L))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \"8\")) (Event.start_? (DateTimeConstraint (TimeAround (NumberPM 8L)) (Today)))))))"], "pred_translated": ["Can you make me an event around 8 pm tonight", "Can you tell me when my next block of free time is?", "Can you make me an event around 8 pm tonight", "Create an event for tonight at 8pm", "Can you make me an event around 8 pm", "Make me an event for 8 pm tonight", "I need a meeting before 8 pm today", "Can you make me an event around 8 am today", "Can you make me an event around 8 pm tonight?", "Make me an event called 8 that starts around 8 pm today"], "distractor": "Decline my meeting with Josh"}
{"gold_tgt": "( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventDuringRange ( ^ ( Event ) EmptyStructConstraint ) ( FullMonthofPreviousMonth ( January ) ) ) ) ) ) 0L ) )", "gold_src": "__User How did I respond to dog sitting ? __Agent You have accepted the \" Dog Sitting \" invitation . __User Can you tell me if I had anything last January __StartOfProgram\n", "min_probs": [0.4080819976097888, 0.0013607676373794675, 0.005938886736985152, 8.114228766357277e-06, 2.3292678919274098e-05, 6.627638982752675e-07, 2.879170582475179e-09, 9.288296116674252e-09, 9.135457563435836e-08, 8.390284790691256e-09], "bin": 0.45, "data_idx": "7965", "pred_tgts": ["(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofPreviousMonth (January)))))) 0L))", "(FenceDateTime)", "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofPreviousMonth (January)))))", "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (January)))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (January)))))) 0L))", "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofPreviousMonth (January)))))))", "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (January)))))))", "(Yield (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (January))))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (January))))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (^(Recipient) EmptyStructConstraint))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofPreviousMonth (January))))))) 0L))"], "pred_translated": ["Did I have anything last january?", "How did I respond to the invite to Mom's birthday party?", "Can you show me my events from last january?", "What do I have going on in January?", "Do I have anything in January?", "How many events did I have last january?", "How many events do I have in January?", "What did I have scheduled for last January?", "Did I have anything in January?", "Did I have anything with people attending last January?"], "distractor": "can you change the appointment time"}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "gold_src": "__User change the time to 9 pm please __Agent How about now ? __User lets go with the first one __StartOfProgram\n", "min_probs": [0.4666036928676735, 0.0007659959956072271, 0.0002206398785347119, 9.030627552419901e-05, 0.010673241397633941, 8.847096405414798e-07, 9.050922348592417e-07, 3.801785411700313e-12, 3.5852705893177763e-12, 5.049297929004419e-13], "bin": 0.45, "data_idx": "761", "pred_tgts": ["(Yield (Execute (ChooseUpdateEvent 1L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))", "(FenceSpecify)", "(FenceOther)", "(PleasantryAnythingElseCombined)", "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(Yield (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 1L)) (extensionConstraint (^(Event) EmptyStructConstraint))))))", "(Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseUpdateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["The 1st one works.", "No, I want it to start at 7 pm.", "Show me as busy during that time.", "It's look well", "The 1st one works.", "That looks good to me.", "What is the first event?", "ok", "That looks good.", "The 1st one works."], "distractor": "Can you make a nails Appointment sometime this week but not on the weekend"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( & ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Mark \" ) ) ) ) ( EventDuringRange ( ^ ( Event ) EmptyStructConstraint ) ( FullMonthofMonth ( Date.month ( Today ) ) ) ) ) ) )", "gold_src": "__User Looks good , thanks . __Agent Let me know if there 's anything else I can help you with . __User Thank you . Can you check to see if I have anything with Mark this month ? __StartOfProgram\n", "min_probs": [0.49541564068236643, 0.0005394558538682759, 0.006356756159645532, 1.408464655769959e-06, 4.675017927349302e-08, 4.290082663866017e-09, 1.4326730431599452e-08, 1.0321112601224136e-10, 4.600503043811743e-14, 5.550172264514391e-13], "bin": 0.45, "data_idx": "973", "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mark \")))) (FullMonthofMonth (Date.month (Today))))))", "(FenceDateTime)", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mark \")))) (FullMonthofMonth (Date.month (Today))))))) 0L))", "(Yield (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mark \")))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (Date.month (Today)))))))", "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mark \")))) (FullMonthofMonth (Date.month (Today))))))))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mark \")))) (FullMonthofMonth (Date.month (Today))))))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mark \")))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (Date.month (Today)))))))) 0L))", "(Yield (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mark \")))) (FullMonthofMonth (Date.month (Today)))))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.subject_? (?~= \" Mark \")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mark \"))))) (FullMonthofMonth (Date.month (Today))))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Mark \"))))) (FullMonthofMonth (Date.month (Today))))))) 0L))"], "pred_translated": ["What events do I have with Mark this month?", "Do I have any meetings with Clinton this week?", "Do I have any meetings with Mark this month?", "What events do I have this month with Mark?", "How many events do I have with Mark this month?", "Can you find my meeting with Mark this month?", "Do I have any meetings with Mark this month?", "What meetings did I have with Mark earlier this month?", "Do I have any events with Mark this month?", "Do I have any other meetings with Mark this month?"], "distractor": "When is my third event with Elli this month?"}
{"gold_tgt": "( Yield ( PlaceHasFeature ( PlaceFeature.Takeout ) ( singleton ( PlaceSearchResponse.results ( FindPlaceMultiResults ( LocationKeyphrase.apply \" Cracker Barrel in Deerfield Beach, FL \" ) ) ) ) ) )", "gold_src": "__User Does Papa John 's in Mountlake Terrace have takeout ? __Agent I 'm unable to find whether Papa John 's Pizza has takeout . You 'll have to contact them . __User Does the Cracker Barrel in Deerfield Beach , FL have takeout ? __StartOfProgram\n", "min_probs": [0.4844055793367707, 1.8032422772847068e-12, 5.996005269561103e-13, 3.443753874560445e-22, 1.165534496789863e-21, 3.3693419479238974e-23, 1.388515661237399e-23, 3.924039711241493e-24, 1.2038198527969161e-26, 8.627013772387797e-25], "bin": 0.45, "data_idx": "1758", "pred_tgts": ["(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" Cracker Barrel in Deerfield Beach, FL \"))))))", "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" Cracker Barrel Barrel Deerfield Beach, FL \"))))))", "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" Cracker Barrel in Deerfield Beach \"))))))", "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" the Cracker Barrel in Deerfield Beach, FL \"))))))", "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" Old Barrel in Deerfield Beach, FL \"))))))", "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" Cracker Barrel Deerfield Deerfield Beach, FL \"))))))", "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" Cracker Barrel Barrel Beach Beach, FL \"))))))", "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" Cracker Barrel Deerfield Beach Beach, FL \"))))))", "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (LocationKeyphrase.apply \" Cracker Barrel in Deerfield Beach, FL takeout \"))))))", "(Yield (PlaceHasFeature (PlaceFeature.Takeout) (singleton (PlaceSearchResponse.results (FindPlaceAtHere (AtPlace (FindPlace (LocationKeyphrase.apply \" Cracker Barrel in Deerfield Beach, FL \"))))))))"], "pred_translated": ["Does Cracker Barrel in Deerfield Beach, FL have takeout?", "Does Cracker Barrel Deerfield Beach, FL have takeout?", "Does Cracker Barrel in Deerfield Beach have takeout?", "Does the Cracker Barrel in Deerfield Beach, FL have takeout?", "Does Old Barrel in Deerfield Beach, FL have takeout?", "Does Cracker Barrel Deerfield Deerfield Beach, FL have takeout?", "Does Cracker Barrel Barrel Beach Beach, FL have takeout?", "Does Cracker Barrel Deerfield Beach Beach, FL have takeout?", "Does Cracker Barrel in Deerfield Beach, FL takeout?", "Does Cracker Barrel in Deerfield Beach, FL have takeout?"], "distractor": "Make it an all day event."}
{"gold_tgt": "( let ( x0 ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.attendees_? ( & ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Victor \" ) ) ) ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Delia \" ) ) ) ) ) ) ) ) ) ( do ( Yield ( Event.start x0 ) ) ( Yield ( Event.location x0 ) ) ) )", "gold_src": "__User I need the time and location for the meeting with Victor and Delia . __StartOfProgram\n", "min_probs": [0.04849270358681679, 0.011053779162466526, 0.43363790098270544, 0.00035249658627165475, 9.507319165303986e-07, 3.3618045578034085e-07, 8.35125992918103e-09, 2.4140432154426513e-07, 2.0155289895490536e-09, 4.353887166786347e-09], "bin": 0.45, "data_idx": "5358", "pred_tgts": ["(FenceMultiAction)", "(FenceSpecify)", "(Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Victor \"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Delia \"))))))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Victor \"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Delia \"))))))))))", "(Yield (PlaceDescribableLocation (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Victor \"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Delia \"))))))))))", "(Yield (DateTime.time (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Victor \"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Delia \")))))))))))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Victor \"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Delia \")))))))))", "(do (Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Victor \"))))))))) (Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Victor \"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Delia \")))))))))))", "(do (Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint)))))) (Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Victor \"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Delia \")))))))))))", "(do (Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Victor \")))))))))) (Yield (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Victor \"))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Delia \")))))))))))"], "pred_translated": ["I need to cancel all my meetings for tomorrow.", "I need to change the date of my doctor's appointment", "Where is my meeting with Victor and Delia?", "When is my meeting with Victor and Delia?", "What is the address of the meeting with Victor and Delia?", "What time is my meeting with Victor and Delia?", "Find my meeting with Victor and Delia.", "Where is my meeting with Victor and Delia?", "Where is my meeting with Victor and Delia?", "Where is my meeting with Victor and Delia?"], "distractor": "Do I have a party tomorrow?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" jerri skinner \" ) ) ) ) ) ) ) ) ) )", "gold_src": "__User Can you add jerri skinner and send a reminder __Agent Sorry , I ca n't do reminders . __User Ok add jerri skinner __StartOfProgram\n", "min_probs": [0.4646490720990831, 0.0007994873449206352, 8.32974273207754e-08, 0.0003987496122127342, 2.342150704634562e-06, 3.1418967269077005e-06, 3.9426112305754716e-11, 6.597658454309544e-15, 8.723906948978985e-18, 3.629850508272589e-15], "bin": 0.45, "data_idx": "10341", "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" jerri skinner \"))))))))))", "(FenceOther)", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" jerri skinner \"))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" jerri skinner \"))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" jerri skinner \"))))))))))", "(Yield (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" jerri skinner \")))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" jerri \"))))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) EmptyStructConstraint) (^(Event) ConstraintTypeIntension) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" jerri skinner \"))))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" jerri \")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" jerri skinner \")))))))))))"], "pred_translated": ["add jerri skinner to the event", "add jerri skinner", "yes", "add jerri skinner to the event", "can you add a meeting with jerri skinner", "add jerri skinner to the event", "add jerri skinner to the event", "add jerri", "add jerri skinner to the event", "add jerri and jerri skinner to the event"], "distractor": "Decline Riley's birthday party invite and say I'll be out of state"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( MD 20L ( December ) ) ( Event.subject_? ( ?~= \" Ball \" ) ) ) ) ) ) ) ( & ( Event.start_? ( DateTime.time_? ( ?= ( NumberPM 7L ) ) ) ) ( Event.end_? ( DateTime.time_? ( ?= ( NumberPM 10L ) ) ) ) ) ) ) )", "gold_src": "__User When is the ball this winter ? __Agent The event \" ball \" between December 1 st and February 29 , 2020 is on December 20 th at 11 : 00 AM . __User Update the Ball on December 20 to be at 7 : 00 pm to 10 : 00 pm . __StartOfProgram\n", "min_probs": [0.4635701919809945, 1.6531853261754604e-07, 1.0657483222038764e-07, 2.0374391579556774e-08, 9.422895548202939e-08, 4.316957560114077e-08, 7.390621647044529e-10, 1.395243561423058e-08, 1.038221426260746e-09, 1.4543756614335401e-11], "bin": 0.45, "data_idx": "12144", "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 20L (December)) (Event.subject_? (?~= \" Ball \"))))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 10L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (previousMonthDay (Today) (December) 20L) (Event.subject_? (?~= \" Ball \"))))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 10L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 20L (December)) (Event.subject_? (?~= \" Ball 20 \"))))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 10L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (MD 20L (December)) (NumberPM 7L)) (Event.subject_? (?~= \" Ball \"))))))) (Event.start_? (DateTime.time_? (?= (NumberPM 10L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Ball \")) (EventOnDate (MD 20L (December)) (^(Event) EmptyStructConstraint))))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 10L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 20L (December)) (Event.subject_? (?= \" Ball \"))))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 10L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Ball \")))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 10L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 20L (December)) (Event.subject_? (?~= \" Ball December \"))))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 10L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextMonthDay (Today) (December) 20L) (Event.subject_? (?~= \" Ball \"))))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 10L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 28L (December)) (Event.subject_? (?~= \" Ball \"))))))) (& (Event.start_? (DateTime.time_? (?= (NumberPM 7L)))) (Event.end_? (DateTime.time_? (?= (NumberPM 10L))))))))"], "pred_translated": ["Ball on Dec 20 should be from 7 to 10 pm.", "Ball lasted from 7 pm to 10 pm on December 20.", "Ball 20 on Dec 21 should be from 7 to 10 pm.", "Ball on Dec 20 should be moved to 10 pm.", "Ball on Dec 20 should be from 7 to 10 pm.", "Ball on Dec 20 should be from 7 to 10 pm.", "Ball should be from 7 to 10 pm.", "Ball December on Dec 20 should be from 7 to 10 pm.", "Ball on December 20 should be from 7 to 10 pm.", "Ball on December 28 should be from 7 pm to 10 pm."], "distractor": "Send an invitation to Tandred."}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Wednesday ) ) ( Event.subject_? ( ?~= \" conference call \" ) ) ) ) ) ) ) ( Event.duration_? ( ?= ( toHours 1 ) ) ) ) ) )", "gold_src": "__User the breakfast needs to be 3 hours __Agent How about now ? __User Make my conference call on Wednesday one hour . __StartOfProgram\n", "min_probs": [0.5209008252026095, 0.0010317566847587779, 2.773540850372621e-07, 5.060685201533374e-11, 2.2180202942579796e-12, 5.633577276867974e-08, 4.909391052441756e-10, 1.0591762313323226e-10, 2.7113556912791555e-10, 3.2716079515327114e-11], "bin": 0.55, "data_idx": "11485", "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (Event.subject_? (?~= \" conference call \"))))))) (Event.duration_? (?= (toHours 1))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 1))))))", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (Event.duration_? (?= (toHours 1))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" conference call \")))))) (Event.duration_? (?= (toHours 1))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Wednesday)) (Event.subject_? (?= \" conference call \"))))))) (Event.duration_? (?= (toHours 1))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" conference call \")) (EventOnDate (NextDOW (Wednesday)) (^(Event) EmptyStructConstraint))))))) (Event.duration_? (?= (toHours 1))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" conference call \")) (EventOnDate (NextDOW (Wednesday)) (Event.subject_? (?~= \" conference call \")))))))) (Event.duration_? (?= (toHours 1))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.duration_? (?= (toHours 1))) (EventOnDate (NextDOW (Wednesday)) (Event.subject_? (?~= \" conference call \")))))))) (Event.duration_? (?= (toHours 1))))))"], "pred_translated": ["Make the conference call on Wednesday 1 hour long.", "The breakfast needs to be 1 hour", "That looks good.", "The breakfast needs to be 1 hour.", "I meant the one that lasts 1 hour.", "The conference call should be for one hour.", "Make the conference call on Wednesday 1 hour long.", "Make the conference call on Wednesday 1 hour long.", "The conference call on Wednesday needs to be for one hour.", "Make my conference call on Wednesday 1 hour long."], "distractor": "Do I have anything at 0800 on Friday?"}
{"gold_tgt": "( do ( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) ) ( Yield ( EventAttendance ( RespondComment.apply \" I'll be wearing my nicest suit \" ) :event ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" movie premiere \" ) ) ) ) ) :response ( ResponseStatusType.Accepted ) ) ) )", "gold_src": "__User Yes ! Also please accept the Hollywood Bowl Party and say I ca n't wait to meet Bradley Cooper ! __Agent I have accepted it . I will accept \" Hollywood Bowl Party \" and send a response to the organizer with the following comment : \" I ca n't wait to meet Bradley Cooper ! \" . Is that ok ? __User Yes ! Also , accept my invitation to go to the movie premiere and say that I 'll be wearing my nicest suit . __StartOfProgram\n", "min_probs": [0.5377545747882824, 1.7364580858478687e-19, 5.1254499425801805e-18, 5.112071806663768e-19, 1.0029397970369257e-18, 2.710686103188926e-19, 4.193516983155716e-23, 6.614537017383259e-24, 1.0936019005057094e-23, 1.2829913876068008e-26], "bin": 0.55, "data_idx": "11692", "pred_tgts": ["(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" I'll be wearing my nicest suit \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" go to the movie premiere \"))))) :response (ResponseStatusType.Accepted))))", "(Yield (EventAttendance (RespondComment.apply \" I'll be wearing my nicest suit \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" go to the movie premiere \"))))) :response (ResponseStatusType.Accepted)))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" I'll wearing wearing my nicest suit \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" go to the movie premiere \"))))) :response (ResponseStatusType.Accepted))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" I'll be wearing my nicest suit \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" go to movie premiere \"))))) :response (ResponseStatusType.Accepted))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" I'll be wearing my nicest suit \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" movie to the movie premiere \"))))) :response (ResponseStatusType.Accepted))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" I'll be wearing my nicest suit \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" go to the movie \"))))) :response (ResponseStatusType.Accepted))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" I'll be wearing my nicest suit. \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" go to the movie premiere \"))))) :response (ResponseStatusType.Accepted))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" I'll be wearing my nicest suit \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" movie premiere premiere \"))))) :response (ResponseStatusType.Accepted))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" I'll wearing my my nicest suit \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" go to the movie premiere \"))))) :response (ResponseStatusType.Accepted))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (Yield (EventAttendance (RespondComment.apply \" I'll be wearing my nicest suit! \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" go to the movie premiere \"))))) :response (ResponseStatusType.Accepted))))"], "pred_translated": ["Yes. Accept my invitation to go to the movie premiere and say that I'll be wearing my nicest suit.", "Accept my invitation to go to the movie premiere and say that I'll be wearing my nicest suit.", "Yes. Accept my invitation to go to the movie premiere and say that I'll wearing wearing my nicest suit.", "Yes. Accept my invitation to go to movie premiere and say that I'll be wearing my nicest suit.", "Yes, that's good. Accept my invitation to the movie premiere and say that I'll be wearing my nicest suit.", "Yes. Accept my invitation to go to the movie on Friday and say that I'll be wearing my nicest suit.", "Yes. Accept my invitation to go to the movie premiere and say that I'll be wearing my nicest suit.", "Yes. Accept my invite to the movie premiere premiere and say that I'll be wearing my nicest suit.", "Yes. Accept my invitation to go to the movie premiere and say that I'll wearing my my nicest suit.", "Yes. Accept my invitation to go to the movie premiere and say that I'll be wearing my nicest suit!"], "distractor": "I'm in Rhode Island"}
{"gold_tgt": "( Yield ( RecipientAvailability ( & ( Event.start_? ( DateTime.date_? ( NextWeekList ) ) ) ( Event.attendees_? ( & ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Kim \" ) ) ) ) ) ) ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Elli \" ) ) ) ) ) ) ) ) ) false ) )", "gold_src": "__User When are Kim and Elli free next week ? __StartOfProgram\n", "min_probs": [0.010249837301671505, 0.0033979283180087805, 0.5858894834956643, 0.00032208070306576536, 7.786518845262826e-06, 8.267620979298665e-06, 9.312702487213774e-08, 1.6036633812429744e-08, 1.1440332111051611e-08, 7.370438017868242e-09], "bin": 0.55, "data_idx": "6604", "pred_tgts": ["(FencePeopleQa)", "(FenceDateTime)", "(Yield (RecipientAvailability (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \"))))))))) false))", "(Yield (RecipientAvailability (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (& (AttendeeListExcludesRecipient (?= (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \"))))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \"))))))))) false))", "(Yield (RecipientAvailability (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \"))))))))) true))", "(Yield (IsFree (RecipientAvailability (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \"))))))))) false)))", "(Yield (RecipientAvailability (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \")))))))) false))", "(Yield (RecipientAvailability (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (& (AttendeeListHasRecipient (RecipientFromRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \")))) (AttendeeListHasRecipient (RecipientFromRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \"))))))) false))", "(Yield (RecipientAvailability (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (& (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \"))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \"))))))))) false))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (NextWeekList))) (Event.attendees_? (& (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Kim \")))))) (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \"))))))))))))"], "pred_translated": ["Why didn't Mom come to my birthday party?", "Can you tell me when my next block of free time is?", "When are Kim and Elli free next week?", "When are Kim and Elli available next week?", "When are Kim and Elli free next week?", "When are Kim and Elli free next week?", "When are Kim and Elli free?", "When are Kim and Elli free next week?", "When are Kim and Elli free next week?", "I need a meeting with Kim and Elli next week."], "distractor": "I'm in Rhode Island"}
{"gold_tgt": "( let ( x0 ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.id_? ( negate ( ?= ( Event.id x0 ) ) ) ) ( EventOnDate ( DateTime.date ( Event.start x0 ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) 0L ) ) )", "gold_src": "__User Is it casual dress ? __Agent I 've encountered an error retrieving information . Please try again later . __User Do I have anything else for that day scheduled ? __StartOfProgram\n", "min_probs": [0.5198547932300862, 0.00038626082398894845, 0.00015439069811264115, 1.0890260502368286e-05, 6.2195140540337855e-06, 4.122723982976279e-08, 1.189110480258361e-10, 1.2098585510525747e-07, 1.0135433004032813e-06, 3.1059395059735794e-13], "bin": 0.55, "data_idx": "6625", "pred_tgts": ["(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (^(Event) EmptyStructConstraint)))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (^(Event) EmptyStructConstraint))))) 0L))", "(Yield (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.start_? (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint))))))))))) 0L))", "(do (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) (Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (^(Event) EmptyStructConstraint)))))) 0L)))"], "pred_translated": ["Do I have anything else that day?", "Do I have anything later that day?", "Do I have anything else that day?", "Do I have anything else that day?", "Do I have anything else?", "Do I have anything later that day?", "What else do I have that day?", "Do I have anything else that day?", "Do I have anything else later that day?", "Do I have anything else that day?"], "distractor": "The first one. i saw john yesterday for dinner"}
{"gold_tgt": "( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDateTime ( DateAtTimeWithDefaults ( NextDOW ( Friday ) ) ( HourMinuteMilitary 8L 30L ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) 0L ) )", "gold_src": "__User Do I have a meeting at 0830 on Friday ? __StartOfProgram\n", "min_probs": [0.5746020365361346, 0.006808632984757423, 7.234380975664322e-05, 1.0979211897399268e-05, 2.542060799278824e-06, 9.669524460672668e-07, 5.50188298083951e-07, 1.8614428681353132e-07, 1.784835732978074e-07, 9.214744443157959e-08], "bin": 0.55, "data_idx": "2706", "pred_tgts": ["(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinuteMilitary 8L 30L)) (^(Event) EmptyStructConstraint))))) 0L))", "(FenceDateTime)", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinuteMilitary 7L 30L)) (^(Event) EmptyStructConstraint))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinuteMilitary 9L 30L)) (^(Event) EmptyStructConstraint))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinuteMilitary 8L 30L))))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinuteMilitary 8L 15L)) (^(Event) EmptyStructConstraint))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinuteMilitary 8L 50L)) (^(Event) EmptyStructConstraint))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinuteMilitary 8L 45L)) (^(Event) EmptyStructConstraint))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinuteMilitary 19L 30L)) (^(Event) EmptyStructConstraint))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (HourMinuteMilitary 8L 0L)) (^(Event) EmptyStructConstraint))))) 0L))"], "pred_translated": ["Do I have anything at 0830 on Friday?", "Can you tell me when my next block of free time is?", "Do I have anything at 0730 on Friday?", "Do I have anything at 0930 on Friday?", "Do I have anything at 0830 on Friday?", "Do I have anything at 0815 on Friday?", "Do I have anything at 0850 on Friday?", "Do I have anything scheduled at 0845 on Friday?", "Do I have anything at 1930 on Friday?", "Do I have anything at 0800 on Friday?"], "distractor": "I will be at Wichitaiiai all next week"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.duration_? ( ?= ( toHours 6 ) ) ) ) ) )", "gold_src": "__User put meeting with denial at Oct 5 __Agent Here are some times when you and Denial Danniels are free . __User Can you make the meeting with denial last for six hours ? __StartOfProgram\n", "min_probs": [0.5853328609706938, 1.516953469743501e-06, 8.764364741932609e-08, 7.640284987817728e-09, 1.019389857869991e-09, 8.273210118417846e-10, 2.4885037527550803e-05, 1.3174501346346213e-10, 2.5784774417080514e-11, 2.0640117466181062e-11], "bin": 0.55, "data_idx": "8871", "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 6))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 5))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 3))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 2))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 4))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" denial \")))))))) (Event.duration_? (?= (toHours 6))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 2.5))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1.5))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 200))))))"], "pred_translated": ["it should be 6 hours long", "The meeting will last for 5 hours.", "It should be an hour long", "The meeting will last 3 hours.", "The meeting will last 2 hours.", "The meeting will last 4 hours.", "Make meeting with denial 6 hours long.", "Make it 2.5 hours", "It should be 1.5 hours long.", "Make it last 200 hours."], "distractor": "Add him to the meeting but remove his skip."}
{"gold_tgt": "( Yield ( WeatherAggregate ( WeatherQuantifier.Max ) ( temperature ) ( WeatherQueryApi ( AtPlace ( FindPlace ( LocationKeyphrase.apply \" Cleveland \" ) ) ) ( DateTime.date_? ( ?= ( NextDOW ( Monday ) ) ) ) ) ) )", "gold_src": "__User That looks good , thanks . __Agent I 've put that on your calendar . __User How warm will it be in Cleveland on Monday ? __StartOfProgram\n", "min_probs": [0.5526423047782822, 7.426641909708218e-05, 1.5929281893784722e-08, 3.551788661989356e-09, 7.927782172382548e-11, 1.8609988036637907e-10, 1.093055052674062e-08, 2.1225841230401883e-11, 3.689163872477054e-13, 7.98738622820762e-11], "bin": 0.55, "data_idx": "2130", "pred_tgts": ["(Yield (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Cleveland \"))) (DateTime.date_? (?= (NextDOW (Monday)))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Cleveland \"))) (DateTime.date_? (?= (NextDOW (Monday)))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Min) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Cleveland \"))) (DateTime.date_? (?= (NextDOW (Monday)))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (apparentTemperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Cleveland \"))) (DateTime.date_? (?= (NextDOW (Monday)))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Average) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Cleveland \"))) (DateTime.date_? (?= (NextDOW (Monday)))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Cleveland warm \"))) (DateTime.date_? (?= (NextDOW (Monday)))))))", "(Yield (WeatherAggregate (temperature 1) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Cleveland \"))) (DateTime.date_? (?= (NextDOW (Monday)))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Max) (apparentTemperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Cleveland \"))) (DateTime.date_? (?= (NextDOW (Monday)))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Max) (humidity) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Cleveland \"))) (DateTime.date_? (?= (NextDOW (Monday)))))))", "(Yield (WeatherAggregate (WeatherAggregate (WeatherQuantifier.Max) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Cleveland \"))) (DateTime.date_? (?= (NextDOW (Monday)))))) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Cleveland \"))) (DateTime.date_? (?= (NextDOW (Monday)))))))"], "pred_translated": ["How hot will it be in Cleveland on Monday?", "What will the temperature be in Cleveland on Monday?", "How cold will it be in Cleveland on Monday?", "What is the heat index in Cleveland on Monday?", "What is the average temperature in Cleveland on Monday?", "How warm will it be on Monday in Cleveland?", "What will the temperature be in Cleveland on Monday?", "What is the high going to be in Cleveland on Monday?", "How humid will it be in Cleveland on Monday?", "How hot will it be in Cleveland on Monday?"], "distractor": "What events did I have earlier today?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.start_? ( DateTimeConstraint ( TimeAround ( NumberPM 8L ) ) ( NextDOW ( Friday ) ) ) ) ) ) )", "gold_src": "__User Please schedule some fun time with the kids around noon next Thursday . __Agent Does one of these work ? __User Can you actually change it to be around like 8 pm next Friday __StartOfProgram\n", "min_probs": [0.5304259140596338, 0.00021863176155736342, 1.8051273351697558e-08, 1.1390827299662818e-09, 1.386442539664259e-13, 2.9004140483837323e-15, 2.735253198795694e-14, 5.292526511211392e-12, 9.908895806118648e-14, 1.5833475232363193e-15], "bin": 0.55, "data_idx": "5229", "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 8L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTimeConstraint (TimeAround (NumberPM 8L)) (NextDOW (Friday)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 8L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (TimeAround (NumberPM 8L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (NextDOW (Friday))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (TimeAround (NumberPM 8L))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTimeFromDowConstraint (?= (Friday)) (NumberPM 8L))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Friday)) (NumberPM 8L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (DowOfWeekNew (Friday) (NextWeekList)) (NumberPM 8L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.start_? (AroundDateTime (DateAtTimeWithDefaults (NextDOW (Friday)) (NumberPM 8L)))))))"], "pred_translated": ["Hmm, can you make that this Friday around 8 pm instead?", "Hmm, can you make that this Friday around 8 pm instead?", "Actually can you make it next Friday around 8 pm?", "Hmm, can you make that start around 8 pm instead?", "Actually, could you make it next Friday instead?", "Hmm, can you make that start around 8 pm instead?", "Actually can you make it around 8 pm on Friday?", "Hmm, can you make that Friday around 8 pm instead?", "Can you update that to be around 8 pm on Friday next week?", "Can you update that to be around 8 pm on Friday?"], "distractor": "I meant the meeting next Saturday."}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( NextDOW ( Wednesday ) ) ( NumberAM 8L ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Wendy \" ) ) ) ) ) ) ) ) ) ) )", "gold_src": "__User LOOK IS CORRECT __Agent I can help you create , update , and delete events on your calendar . You can also ask me about your schedule . __User Set up meeting with Wendy for Wednesday at 8 . __StartOfProgram\n", "min_probs": [0.5199715664573208, 0.006765987825088728, 1.3183853182185741e-08, 2.960445129827711e-10, 4.3007169530045247e-10, 4.4273330728306005e-12, 1.27124451675961e-12, 4.2139921435641915e-12, 3.7314727535720176e-11, 1.3362342865193308e-12], "bin": 0.55, "data_idx": "10379", "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 8L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Wendy \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberPM 8L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Wendy \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (?= (NumberAM 8L)) (NextDOW (Wednesday)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Wendy \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeFromDowConstraint (?= (Wednesday)) (NumberAM 8L))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Wendy \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeConstraint (?= (NumberPM 8L)) (NextDOW (Wednesday)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Wendy \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.time_? (?= (NumberAM 8L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Wendy \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberAM 8L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Wendy \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTimeFromDowConstraint (?= (Wednesday)) (NumberPM 8L))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Wendy \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" meeting \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Wednesday)) (NumberAM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Wendy \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (DateAtTimeWithDefaults (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Wednesday)) (NumberAM 8L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Wendy \")))))))))))"], "pred_translated": ["Add a meeting with Wendy to my calendar on Wednesday at 8 AM.", "Add a meeting with Wendy on Wednesday at 8:00 PM.", "Add a meeting with Wendy on Wednesday at 8:00 AM.", "Add a meeting with Wendy on Wednesday at 8:00 AM.", "Add a meeting with Wendy on Wednesday at 8:00 PM.", "Add a meeting with Wendy at 8am", "Add a meeting with Wendy at 8am", "Add a meeting with Wendy at 8:00 PM on Wednesday.", "I have a meeting with Wendy on Wednesday at 8 am", "Add a meeting with Wendy on Wednesday at 8:00 AM."], "distractor": "When is my next meeting with Yolanda?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" nail Appointment \" ) ) ( Event.start_? ( DateTime.date_? ( Date.dayOfWeek_? ( negate ( Weekend ) ) ) ) ) ) ) ) )", "gold_src": "__User Oh , boy , both look great . __Agent I 've put that on your calendar on Monday the 27 th from 10 : 00 to 10 : 30 AM . __User add nails Appointment with week but not the weekend __StartOfProgram\n", "min_probs": [0.5805512579730316, 0.001615637567380262, 9.425521054795885e-06, 4.16329940919303e-07, 2.979295587760976e-07, 6.670129629392166e-08, 2.2082661689069354e-10, 2.989139114674407e-10, 1.0575070714508663e-09, 8.146471241979474e-11], "bin": 0.55, "data_idx": "2156", "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" nails Appointment \")) (Event.start_? (& (DateTime.date_? (ThisWeek)) (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" nails Appointment \")) (Event.start_? (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" nails Appointment \")) (Event.start_? (& (DateTime.date_? (NextWeekList)) (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.start_? (& (DateTime.date_? (ThisWeek)) (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend)))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" nails Appointment \")) (Event.start_? (& (DateTime.date_? (LateDateRange (ThisWeek))) (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?~= \" nails Appointment \")) (Event.start_? (& (DateTime.date_? (ThisWeek)) (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (EventDuringRange (Event.subject_? (?= \" nails Appointment \")) (ThisWeekend)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" nails Appointment \")) (Event.start_? (& (DateTime.date_? (ThisWeek)) (DateTime.time_? (Date.dayOfWeek_? (negate (Weekend))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" nails Appointment \")) (Event.start_? (& (DateTime.date_? (WeekOfDateNew (Today))) (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" nails Appointment \")) (Event.start_? (& (DateTime.date_? (LateDateRange (NextWeekList))) (DateTime.date_? (Date.dayOfWeek_? (negate (Weekend))))))))))"], "pred_translated": ["Can you make a nails Appointment sometime this week but not on the weekend", "Make a nails Appointment but not on the weekend", "I need a nails Appointment sometime next week, but not on the weekend", "i need an event this week but not on the weekend", "I need a nails Appointment later this week, but not on the weekend.", "Can you make a nails Appointment sometime this week but not on the weekend", "Make a nails Appointment for this weekend.", "Can you make a nails Appointment sometime this week but not on the weekend", "Make a nails Appointment but not on the weekend", "I need a nails Appointment late next week, but not on the weekend"], "distractor": "Modify the time of my conference call with Damon Straeter."}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.subject_? ( ?~= \" fishing \" ) ) ) ) )", "gold_src": "__User Delete fishing in April from my calendar . __Agent Is this what you want me to cancel ? __User Change that to fishing . __StartOfProgram\n", "min_probs": [0.620172368703124, 0.0005171146476641297, 0.00048258404255351246, 6.734192523484103e-07, 2.405481451809035e-08, 8.079292456207938e-14, 7.780180733061286e-13, 7.234072513605826e-14, 5.170484669330221e-16, 4.596621737912113e-16], "bin": 0.65, "data_idx": "6056", "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \" fishing \")))))", "(FenceSpecify)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.subject_? (?= \" fishing \")))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.subject_? (?= \" fishing \")))))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" fishing \"))))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (alwaysTrueConstraintConstraint (^(String) AlwaysTrueConstraint))) (intension (?= \" fishing \")))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^((CalflowIntension (Constraint Event))) QueryEventIntensionConstraint) (Event.subject_? (?~= \" fishing \")))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.subject_? (?~= \" fishing \")))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (Event.subject_? (?= \" fishing \")) (^(Event) ConstraintTypeIntension))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^((Constraint String)) roleConstraint (Path.apply \" subject \")) (extensionConstraint (alwaysTrueConstraintConstraint (^(String) AlwaysTrueConstraint)))) (intension (?= \" fishing \")))))"], "pred_translated": ["Actually delete fishing, not hunting.", "change the fishing time", "Actually just change the name to fishing.", "Actually delete fishing, not hunting.", "Can you find my fishing event?", "Actually I meant fishing in March.", "Actually delete fishing, not hunting.", "Actually I meant fishing in March.", "Actually just change the name to fishing.", "Actually I meant fishing in March."], "distractor": "add jerri skinner to the event"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.location_? ( ?= ( LocationKeyphrase.apply \" Apple Store in San Francisco \" ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Jerry \" ) ) ) ) ) ) ) ) ) ) )", "gold_src": "__User Yes __Agent I 've put that on your calendar . __User Make an appointment with Jerry at the Apple Store in San Francisco . __StartOfProgram\n", "min_probs": [0.4558791414978622, 2.4599138724783255e-08, 3.9083034675921257e-07, 7.190223382105608e-14, 1.518670995394926e-11, 1.3902256788461312e-18, 2.2579669643012327e-16, 5.216506495502214e-27, 5.677487570353025e-23, 7.949571135503355e-20], "bin": 0.65, "data_idx": "6349", "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (?= (LocationKeyphrase.apply \" Apple Store in San Francisco \"))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jerry \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (?= (LocationKeyphrase.apply \" the Apple Store in San Francisco \"))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jerry \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (?= (LocationKeyphrase.apply \" Apple Store \"))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jerry \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (?= (LocationKeyphrase.apply \" the Apple in San Francisco \"))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jerry \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (?= (LocationKeyphrase.apply \" the Apple Store \"))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jerry \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (?= (LocationKeyphrase.apply \" the Store Store in San Francisco \"))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jerry \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" appointment \")) (Event.location_? (?= (LocationKeyphrase.apply \" Apple Store in San Francisco \")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jerry \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.location_? (?= (LocationKeyphrase.apply \" the Apple in San Francisco in San Francisco \"))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jerry \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" appointment \")) (Event.location_? (?= (LocationKeyphrase.apply \" the Apple Store in San Francisco \")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jerry \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.start_? (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint))))))) (Event.location_? (?= (LocationKeyphrase.apply \" Apple Store in San Francisco \")))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jerry \")))))))))))"], "pred_translated": ["I'm going to the Apple Store in San Francisco with Jerry", "I'm going to the Apple Store in San Francisco with Jerry", "I'm going to the Apple Store with Jerry", "I'm meeting Jerry at the Apple in San Francisco", "I'm going to the Apple Store with Jerry", "Make an appointment with Jerry at the Store Store in San Francisco.", "Make an appointment with Jerry at the Apple Store in San Francisco.", "Make an appointment with Jerry at the Apple in San Francisco in San San Francisco.", "Make an appointment with Jerry at the Apple Store in San Francisco.", "I also need to visit Jerry at the Apple Store in San Francisco that day"], "distractor": "wait a minute"}
{"gold_tgt": "( Yield ( Event.start ( FindNumNextEvent ( EventOnDate ( NextDOW ( Sunday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) 2L ) ) )", "gold_src": "__User tell me what day my 2 nd event is __Agent The 2 nd event is on March 20 th at 4 : 00 PM . __User What time is my second event on Sunday __StartOfProgram\n", "min_probs": [0.6466814937383782, 6.737398095918314e-05, 0.00024290272534391736, 8.532176769892017e-09, 9.336596561245409e-06, 5.814901150991843e-07, 6.010407585994474e-07, 6.859186778509932e-11, 2.5272917756821916e-09, 5.541554650338777e-11], "bin": 0.65, "data_idx": "447", "pred_tgts": ["(Yield (Event.start (FindNumNextEvent (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)) 2L)))", "(Yield (FindNumNextEvent (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)) 2L))", "(Yield (DateTime.time (Event.start (FindNumNextEvent (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)) 2L))))", "(Yield (Event.start (FindNumNextEvent (^(Event) EmptyStructConstraint) 2L)))", "(Yield (Event.start (FindNumNextEvent (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday))))) 2L)))", "(Yield (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint))))))", "(Yield (Event.start (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))))", "(Yield (FindNumNextEvent (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday))))) 2L))", "(Yield (DateTime.time (Event.start (FindNumNextEvent (Event.start_? (DateTime.date_? (?= (NextDOW (Sunday))))) 2L))))", "(Yield (DateTime.time (FindNumNextEvent (EventOnDate (NextDOW (Sunday)) (^(Event) EmptyStructConstraint)) 2L)))"], "pred_translated": ["What time is my second event on sunday?", "What is my 2nd event on Sunday?", "What time is my second event on sunday?", "What time does my second event start?", "What time is my second event on sunday?", "What is the second event?", "What time does the second event start?", "What is my 2nd event on Sunday?", "What time is my second event on sunday?", "What time is my second event on sunday?"], "distractor": "Hmm, can you make that Friday around 8 pm instead?"}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEvent 2L ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "gold_src": "__User What 's my first meeting Wednesday ? __Agent The first event tomorrow is \" Appointment \" from 12 : 00 to 12 : 30 PM . __User actually go ahead and make the 2 nd one __StartOfProgram\n", "min_probs": [0.6045926803513686, 0.013033834286034107, 0.011047033593058586, 0.00242599262855947, 0.0014077413361519575, 0.007140092587206104, 7.238260038005988e-07, 4.199798834413736e-05, 4.167847428467139e-09, 7.185723226677763e-11], "bin": 0.65, "data_idx": "3299", "pred_tgts": ["(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))", "(FenceSpecify)", "(FenceOther)", "(PleasantryAnythingElseCombined)", "(FenceMultiAction)", "(Yield (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 2L)) (extensionConstraint (^(Event) EmptyStructConstraint))))))", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(Yield (Execute (ChooseUpdateEvent 2L (refer (^(UpdateEventResponse) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.time_? (?= (NumberPM 2L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEventFromConstraint (Event.start_? (DateTime.date_? (?= (nextDayOfMonth (Today) 2L)))) (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["I want the 2nd one.", "can you change the appointment time", "defer the next meeting with Stephen", "OK THANK YOU", "cancel the appointment and check for dinner plans", "And the second meeting?", "That looks good.", "The 2nd one works.", "I want the 2pm one.", "The one on the 2nd works."], "distractor": "The breakfast needs to be 1 hour"}
{"gold_tgt": "( Yield ( EventAttendance :event ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Josh \" ) ) ) ) ) ) ) :response ( ResponseStatusType.Declined ) ) )", "gold_src": "__User i need you to decline the event with Josh __StartOfProgram\n", "min_probs": [0.6898227454679968, 0.0017657335847616196, 1.780856375845722e-08, 5.081116309276833e-12, 7.658060709201526e-11, 1.9186150539707823e-13, 7.832458087164704e-15, 1.517144944751503e-12, 3.818423893174185e-15, 3.769874971714784e-15], "bin": 0.65, "data_idx": "41", "pred_tgts": ["(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Josh \"))))))) :response (ResponseStatusType.Declined)))", "(FenceOther)", "(Yield (EventAttendance :event (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))) :response (ResponseStatusType.Declined)))", "(EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Josh \"))))))) :response (ResponseStatusType.Declined))", "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" event \")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Josh \")))))))) :response (ResponseStatusType.Declined)))", "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Josh \"))))))) :response (ResponseStatusType.Declined)))", "(do (singleton) (Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Josh \"))))))) :response (ResponseStatusType.Declined))))", "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" with event \")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Josh \")))))))) :response (ResponseStatusType.Declined)))", "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" the event \")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Josh \")))))))) :response (ResponseStatusType.Declined)))", "(Yield (EventAttendance :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" with decline \")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Josh \")))))))) :response (ResponseStatusType.Declined)))"], "pred_translated": ["Decline my meeting with Josh", "Can you tell me the weather for tomorrow in Greenville, NC?", "Decline the meeting with Robert.", "Decline my meeting with Josh", "Decline the event with Josh", "Decline my meeting with Josh", "Decline my meeting with Josh", "Decline with event with Josh", "Decline Josh's invitation to the event", "Decline the meeting with Josh with decline"], "distractor": "When is my game time date?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Obama \" ) ) ) ) ) ) ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( MD 20L ( June ) ) ( Midnight ) ) ) ) ) ) )", "gold_src": "__User Let 's change the appointment with Obama to June 20 at midnight , and Kristen Clifford to November 5 at the British Parliament Building . __Agent I can only do one action at a time . If you separate your requests , I can help you . __User Can we change the appointment with Obama to June 20 at midnight ? __StartOfProgram\n", "min_probs": [0.003623060416430235, 0.6399028691419161, 3.488479047978707e-06, 4.299304753671139e-07, 1.9707969950394411e-07, 1.9385075493901873e-07, 2.1271252918218167e-07, 4.4244095493456463e-08, 3.611618026289155e-08, 5.834451843947373e-12], "bin": 0.65, "data_idx": "5573", "pred_tgts": ["(FenceOther)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Obama \")))))))) (Event.start_? (?= (DateAtTimeWithDefaults (MD 20L (June)) (Midnight)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (?= (DateAtTimeWithDefaults (MD 20L (June)) (Midnight)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.start_? (?= (DateAtTimeWithDefaults (MD 20L (June)) (Midnight)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Obama \")))))))) (Event.start_? (DateTimeConstraint (?= (Midnight)) (MD 20L (June)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Obama \")))))))) (Event.start_? (?= (DateAtTimeWithDefaults (MD 20L (June)) (Dinner)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Obama \")))))))) (Event.start_? (?= (DateAtTimeWithDefaults (MD 20L (June)) (NumberPM \\ midnight\\ L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Obama \")))))))) (Event.start_? (DateTimeConstraint (?= (NumberPM 20L)) (MD 20L (June)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Obama \")))))))) (Event.start_? (?= (DateAtTimeWithDefaults (MD 20L (June)) (NumberPM 20L)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipient (RecipientFromRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Obama \"))))))))) (Event.start_? (?= (DateAtTimeWithDefaults (MD 20L (June)) (Midnight)))))))"], "pred_translated": ["Why is that?", "Change the appointment with Obama to June 20 at midnight", "Change the appointment with Obama to June 20 at midnight", "Change the appointment with Barack Obama to June 20 at midnight", "Change the appointment with Obama to June 20 at midnight", "Change the appointment with Obama to June 20 at dinner", "Change the appointment with Obama to June 20 at midnight", "Change the appointment with Obama to June 20 at 20 pm", "Change my appointment with Obama to June 20 at 20 pm", "Change the appointment with Obama to June 20 at midnight"], "distractor": "Do I have anything scheduled on March 2?"}
{"gold_tgt": "( Yield ( WeatherAggregate ( WeatherQuantifier.Summarize ) ( sunsetTime ) ( WeatherQueryApi ( AtPlace ( Here ) ) ( DateTime.date_? ( ?= ( Today ) ) ) ) ) )", "gold_src": "__User what are the wind speeds __Agent The wind speed will be 5 . 91 mph in Fairfax tomorrow . __User when is sunset __StartOfProgram\n", "min_probs": [0.6717196900614536, 4.0601604979549936e-05, 2.746044608999441e-07, 1.939468107929877e-12, 5.2239415786212784e-11, 1.869966980483157e-12, 3.515029438851261e-14, 3.5286542847460117e-13, 2.959347058110049e-15, 0.0], "bin": 0.65, "data_idx": "7675", "pred_tgts": ["(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (sunsetTime) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (sunsetTime) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))", "(Yield (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (sunsetTime) (WeatherQueryApi (AtPlace (Here)) (?= (Now)))))", "(Yield (IsSunny (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (sunriseTime) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (sunsetTime) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Tomorrow))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (sunsetTime) (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (sunsetTime) (WeatherQueryApi (AtPlace (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint))))) (DateTime.date_? (?= (Today))))))", "(Error)"], "pred_translated": ["when is sunset", "what time does the sun set", "What time does it start?", "when is sunset", "will it be sunny today", "What time is sunrise today?", "What time is sunset tomorrow?", "what time will the sun set?", "what time will the sun set today", "What is the traffic like?"], "distractor": "Move my Lunch Break in Reno to be in Truckee"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" interview \" ) ) ) ) ) ) ( Event.start_? ( DateTime.date_? ( NextWeekList ) ) ) ) ) )", "gold_src": "__User Good job . Thank you for your help . __Agent I 've changed \" job interview \" to be . __User Make the interview next week . __StartOfProgram\n", "min_probs": [0.6747841145922984, 0.0003360038681421429, 0.00032043541432358325, 0.009363976461589874, 1.9159897123596518e-06, 1.4885500778168093e-08, 2.539803020263265e-09, 3.1575909670525983e-14, 9.451212920268159e-12, 1.0868387737161768e-16], "bin": 0.65, "data_idx": "2806", "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" interview \")))))) (Event.start_? (DateTime.date_? (NextWeekList))))))", "(FenceSpecify)", "(FenceDateTime)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" interview \")) (Event.start_? (DateTime.date_? (NextWeekList)))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.start_? (DateTime.date_? (NextWeekList))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (Event.subject_? (?~= \" interview \")))))) (Event.start_? (DateTime.date_? (NextWeekList))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" interview \")))))) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (Event.subject_? (?~= \" interview \")) (NextWeekList)))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.subject_? (?~= \" interview \")) (NextWeekList)))))) (EventRescheduled (^(Event) EmptyStructConstraint)))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Lunch \")))))) (Event.start_? (DateTime.date_? (NextWeekList))))))"], "pred_translated": ["Move the interview to next week.", "Can you change the time of my interview?", "Make my status Busy for the rest of the week.", "schedule an interview for next week", "Move that to next week please.", "Move the interview to next week.", "Move the interview to next week.", "I meant the interview next week", "Reschedule my interview next week", "Lunch is pushed back to next week."], "distractor": "What about in the evening?"}
{"gold_tgt": "( Yield ( EventAttendance ( RespondComment.apply \" I'll be out of state that weekend \" ) :event ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.subject_? ( ?~= \" Riley's birthday party \" ) ) ( Event.organizer_? ( ?= ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Riley \" ) ) ) ) ) ) ) ) ) ) ) :response ( ResponseStatusType.Declined ) ) )", "gold_src": "__User Decline Riley 's birthday party telling her I 'll be out of state that weekend . __StartOfProgram\n", "min_probs": [0.6305127434101699, 9.80083001838611e-22, 4.1095001309146014e-19, 2.5952269279193183e-24, 1.2483838370187533e-25, 1.926184312180389e-22, 2.211173157073001e-28, 6.876069209426287e-26, 2.2402393504626926e-34, 9.005181831228198e-27], "bin": 0.65, "data_idx": "8380", "pred_tgts": ["(Yield (EventAttendance (RespondComment.apply \" I'll be out of state that weekend \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Riley's birthday party \"))))) :response (ResponseStatusType.Declined)))", "(Yield (EventAttendance (RespondComment.apply \" I'll be out of state that weekend. \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Riley's birthday party \"))))) :response (ResponseStatusType.Declined)))", "(Yield (EventAttendance (RespondComment.apply \" I'll be out of state \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Riley's birthday party \"))))) :response (ResponseStatusType.Declined)))", "(Yield (EventAttendance (RespondComment.apply \" I'll be out of state that weekend \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Riley's birthday \"))))) :response (ResponseStatusType.Declined)))", "(Yield (EventAttendance (RespondComment.apply \" I'll be out of state that weekend __User \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Riley's birthday party \"))))) :response (ResponseStatusType.Declined)))", "(Yield (EventAttendance (RespondComment.apply \" I'll be out of state. \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Riley's birthday party \"))))) :response (ResponseStatusType.Declined)))", "(Yield (EventAttendance (RespondComment.apply \" I'll be out of state that weekend that weekend \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Riley's birthday party \"))))) :response (ResponseStatusType.Declined)))", "(Yield (EventAttendance (RespondComment.apply \" I'll be out of state that weekend \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" birthday's birthday party \"))))) :response (ResponseStatusType.Declined)))", "(Yield (EventAttendance (RespondComment.apply \" I'll be out of state that weekend her weekend \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Riley's birthday party \"))))) :response (ResponseStatusType.Declined)))", "(Yield (EventAttendance (RespondComment.apply \" I'll be out of state that weekend \") :event (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" Riley's birthday party \")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Riley \")))))))) :response (ResponseStatusType.Declined)))"], "pred_translated": ["Decline Riley's birthday party and say that I'll be out of state that weekend.", "Decline Riley's birthday party and say I'll be out of state that weekend.", "Decline Riley's birthday party invite and say I'll be out of state", "Decline Riley's birthday and say that I'll be out of state that weekend.", "Decline Riley's birthday party and say that I'll be out of state that weekend __User", "Decline Riley's birthday party invite and say I'll be out of state.", "Decline Riley's birthday party and say that I'll be out of state that weekend that weekend.", "Decline my invite to my birthday's birthday party and say I'll be out of state that weekend.", "Decline Riley's birthday party and say that I'll be out of state that weekend her weekend.", "Decline Riley's birthday party invite and tell her I'll be out of state that weekend."], "distractor": "FIX THE EVENT IN MY CALENDER"}
{"gold_tgt": "( Yield ( FindNumNextEvent ( EventDuringRange ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Elli \" ) ) ) ) ( FullMonthofMonth ( Date.month ( Today ) ) ) ) 3L ) )", "gold_src": "__User When is my 3 rd event with Elli on March 20 th ? __Agent The 3 rd event with Elli on Friday the 20 th is at 2 : 00 PM . __User What is my third event this month with Elli ? __StartOfProgram\n", "min_probs": [0.6601692841441329, 0.00044666072417654304, 1.5024295915367463e-08, 2.918347070389737e-07, 3.6552662539985373e-09, 3.286064593824421e-08, 3.242013701618854e-09, 2.752893197460443e-07, 5.7409707167758636e-09, 5.399738454558621e-10], "bin": 0.65, "data_idx": "7691", "pred_tgts": ["(Yield (FindNumNextEvent (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \")))) (FullMonthofMonth (Date.month (Today)))) 3L))", "(Yield (FindNumNextEvent (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \")))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (Date.month (Today))))) 3L))", "(Yield (FindNumNextEvent (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (Date.month (Today)))) 3L))", "(Yield (Event.subject (FindNumNextEvent (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \")))) (FullMonthofMonth (Date.month (Today)))) 3L)))", "(Yield (FindNumNextEvent (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \")))) (FullMonthofMonth (NextMonth))) 3L))", "(Yield (Event.start (FindNumNextEvent (EventDuringRange (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \")))) (FullMonthofMonth (Date.month (Today)))) 3L)))", "(Yield (FindLastEvent (& (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \")))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (Date.month (Today)))))))", "(Yield (FindNumNextEvent (EventDuringRange (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \"))))) (FullMonthofMonth (Date.month (Today)))) 3L))", "(Yield (FindNumNextEvent (EventDuringRange (& (Event.isOneOnOne_? (?= true)) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \"))))) (FullMonthofMonth (Date.month (Today)))) 3L))", "(Yield (FindNumNextEvent (EventDuringRange (& (Event.subject_? (?~= \" third \")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Elli \"))))) (FullMonthofMonth (Date.month (Today)))) 3L))"], "pred_translated": ["What is my third event with Elli this month?", "What is my third event this month with Elli?", "What is my third event this month?", "What is the name of my third event with Elli this month?", "What is my third event with Elli next month?", "When is my third event with Elli this month?", "What is my last meeting with Elli this month?", "What is the other event with Elli this month?", "What is my third one with Elli this month?", "When is my third event with Elli this month?"], "distractor": "What time is my doctor's appointment?"}
{"gold_tgt": "( Yield ( Execute ( NewClobber ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ( ^ ( ( Constraint Point ) ) roleConstraint ( Path.apply \" place \" ) ) ( intension ( AtPlace ( FindPlace ( LocationKeyphrase.apply \" Rhode Island \" ) ) ) ) ) ) )", "gold_src": "__User Hello , we are expecting it to be windy tomorrow . Can 60 MPH wind gusts topple trees ? If so , what can I do to protect them from the wind ? __Agent Yes . The average wind speed will be 0 . 00 mph tomorrow . __User Rhode Island __StartOfProgram\n", "min_probs": [0.7895971086534024, 0.0075081936083734035, 0.0039113047532737255, 4.87752426418667e-07, 9.715282085467168e-07, 1.9632556020913758e-08, 7.198981282628473e-09, 1.3654736680585703e-08, 1.1704015324964143e-11, 1.1949090674007088e-11], "bin": 0.75, "data_idx": "421", "pred_tgts": ["(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint Point)) roleConstraint (Path.apply \" place \")) (intension (AtPlace (FindPlace (LocationKeyphrase.apply \" Rhode Island \")))))))", "(FenceWeather)", "(PleasantryAnythingElseCombined)", "(Yield (inCelsius (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))", "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Rhode Island \"))) (?= (Now))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (& (^(LocationKeyphrase) roleConstraint (Path.apply \" place \")) (extensionConstraint (^(LocationKeyphrase) AlwaysTrueConstraint))) (intension (LocationKeyphrase.apply \" Rhode Island \")))))", "(Yield (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Rhode Island \"))) (DateTime.date_? (?= (Today)))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.location_? (?= (LocationKeyphrase.apply \" Rhode Island \"))))))", "(Yield (WeatherAggregate (WeatherQuantifier.Summarize) (temperature) (WeatherQueryApi (AtPlace (FindPlace (LocationKeyphrase.apply \" Rhode Island \"))) (?= (Now)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.location_? (?= (LocationKeyphrase.apply \" Rhode Island \"))))))"], "pred_translated": ["I am in Rhode Island", "Will it be windy tomorrow?", "Okay, thank you.", "What is the windchill tomorrow?", "What is the weather in Rhode Island?", "I am in Rhode Island", "What is the weather in Rhode Island today?", "We'll be in Rhode Island for that", "What is the current temperature in Rhode Island?", "I'm in Rhode Island"], "distractor": "What is the name of my third event with Elli this month?"}
{"gold_tgt": "( Yield ( Event.start ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.subject_? ( ?~= \" game at Central State Ballpark \" ) ) ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Jessica \" ) ) ) ) ) ) ) ) ) )", "gold_src": "__User When does Jessica have a game at Central State Ballpark ? __Agent Sorry , I ca n't handle that yet . __User What the time does Jessica have a game at Central State Ballpark ? __StartOfProgram\n", "min_probs": [0.7508850693702698, 0.06825122982263565, 0.02700718492269516, 0.004314698278903961, 0.0022882376797497272, 0.0004203865537419915, 0.0003331610722431076, 6.148563484961102e-09, 8.402924966603326e-12, 3.605860032224817e-11], "bin": 0.75, "data_idx": "10356", "pred_tgts": ["(FencePeopleQa)", "(FenceOther)", "(FenceScope)", "(FenceAttendee)", "(FenceSpecify)", "(FenceNavigation)", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (& (Event.subject_? (?~= \" game \")) (Event.location_? (?= (LocationKeyphrase.apply \" Central State Ballpark \")))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jessica \"))))))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" game \")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jessica \"))))))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.location_? (?= (LocationKeyphrase.apply \" Central State Ballpark \"))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jessica \"))))))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (& (Event.subject_? (?~= \" game \")) (Event.location_? (?= (LocationKeyphrase.apply \" Central State game \")))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jessica \"))))))))))"], "pred_translated": ["Is Jessica listed as on my address book?", "What is the address of Central State Ballpark?", "When does Jessica have a birthday party?", "When is my next meeting with my Trainer?", "What is the address of Central State Ballpark?", "How long does it take to drive from my house to the game?", "When is the game at Central State Ballpark with Jessica?", "When is Jessica's game?", "When am I meeting Jessica at Central State Ballpark?", "When is the game at Central State game with Jessica?"], "distractor": "Move my Lunch Break in Reno to be in Truckee"}
{"gold_tgt": "( let ( x0 ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) x1 ( DateAtTimeWithDefaults ( NextDOW ( Friday ) ) ( DateTime.time ( Event.start x0 ) ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" Movie Playing: Infinity War \" ) ) ( Event.start_? ( ?= x1 ) ) ) ( Event.end_? ( ?= ( TimeAfterDateTime x1 ( DateTime.time ( Event.end x0 ) ) ) ) ) ) ) ) ) )", "gold_src": "__User Correct __Agent I 've put that on your calendar . __User Now schedule another one for Friday , make it start and end the same time , name it Movie Playing : Infinity War __StartOfProgram\n", "min_probs": [0.7240186929702759, 0.03690403327345848, 0.022530410438776016, 0.011343961581587791, 0.0042062681168317795, 7.308686525802283e-08, 3.495570357575517e-13, 2.7577773978286293e-15, 1.4184235536899905e-16, 1.7217856653468945e-10], "bin": 0.75, "data_idx": "8569", "pred_tgts": ["(FenceOther)", "(FenceRecurring)", "(FenceSpecify)", "(FenceMultiAction)", "(FenceDateTime)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Movie Playing: Infinity War \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (DateTime.time (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Movie Playing: Infinity War \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (Execute (refer (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" Movie Playing: Infinity War \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (DateTime.time (Event.start)))))) (Event.showAs_? (?= (ShowAsStatus.WorkingElsewhere)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Movie Playing: Infinity War \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (Execute (refer (& (^(Time) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Time) EmptyStructConstraint))))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" Movie Playing \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Friday)) (DateTime.time (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))))"], "pred_translated": ["What is the address for the eye doctor today?", "Can you make a repeating event for \"disco dance-off party\" on the first saturday of every month?", "update my calender events", "Can you clear my calendar this weekend?", "Correct. Block off the rest of the month for my vacation.", "Make me a Movie Playing: Infinity War for next Friday at the same time", "Schedule Movie Playing: Infinity War for this Friday at the same time.", "Set my status to Working Elsewhere for Movie Playing: Infinity War on Friday at the same time.", "Schedule Movie Playing: Infinity War for Friday at the same time.", "Make a Movie Playing event at the same time next Friday."], "distractor": "No, change it to Monday."}
{"gold_tgt": "( RepeatAgent )", "gold_src": "__User I missed my last dentist appointment remove it from my schedule . __Agent Is this what you want me to cancel ? __User Please show me first before removing the event . __StartOfProgram\n", "min_probs": [0.7842222452163696, 0.05375959724187851, 0.0044565401040017605, 0.0035494922194629908, 0.0009769349902368132, 1.8200114015047137e-07, 9.737361264143872e-07, 1.0747794938329227e-10, 4.595557963466669e-13, 5.966152170811681e-17], "bin": 0.75, "data_idx": "4319", "pred_tgts": ["(FenceOther)", "(FenceSpecify)", "(FenceMultiAction)", "(FenceSwitchTabs)", "(Yield (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L))", "(Yield (FindNumNextEvent (EventBeforeDateTime (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (^(Event) EmptyStructConstraint)) 1L))", "(Yield (FindNumNextEvent (Event.end_? (DateTime.time_? (?= (DateTime.time (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))) 1L))", "(Yield (FindNumNextEvent (Event.subject_? (?~= \" first me \")) 1L))", "(Yield (FindNumNextEvent (Event.end_? (DateTime.time_? (?= (DateTime.time (Event.start (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 1L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))))))) 1L))", "(do (Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint)))) (Yield (FindNumNextEvent (Event.end_? (DateTime.time_? (?= (DateTime.time (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))) 1L)))"], "pred_translated": ["Can you re-add it for next week?", "No, just move it around a bit.", "Can you delete any other appointments I had this week?", "Can you show me my last email?", "What is my next scheduled event?", "No, look up my next dentist appointment.", "When is my next meeting that ends at the end of my day?", "Find my next first appointment.", "No, look for my next appointment that ends in the afternoon.", "No, look for my next appointment that ends in the same time."], "distractor": "The one on the 2nd works."}
{"gold_tgt": "( Yield ( Event.start ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventDuringRange ( Event.attendees_? ( AttendeeListHasPeopleAnyOf ( FindTeamOf ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Jake \" ) ) ) ) ) ) ) ) ( FullMonthofMonth ( NextMonth ) ) ) ) ) ) ) )", "gold_src": "__User Which David is from sales ? __Agent I do n't have that kind of information about people . __User When am I meeting with any of Jake 's team next month ? __StartOfProgram\n", "min_probs": [0.7510775581918301, 3.716637374229937e-05, 4.0053706677142735e-06, 2.0285830102996123e-09, 2.126718419927176e-06, 1.0275235872201052e-07, 2.0580336007812065e-07, 1.524451371296667e-08, 7.888548894967478e-09, 3.723710690906043e-10], "bin": 0.75, "data_idx": "9340", "pred_tgts": ["(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasPeopleAnyOf (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jake \")))))))) (FullMonthofMonth (NextMonth))))))))", "(Yield (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasPeopleAnyOf (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jake \")))))))) (FullMonthofMonth (NextMonth)))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasPeopleAnyOf (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jake \")))))))))))))", "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasPeopleAnyOf (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jake \"))))))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasPeopleAnyOf (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jake \")))))))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth)))))))))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasPeopleAnyOf (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jake \")))))))) (FullMonthofMonth (NextMonth)))))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasPeopleAnyOf (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jake \")))))))) (FullMonthofMonth (NextMonth)))))) 0L))", "(Yield (FindEventWrapperWithDefaults (& (Event.attendees_? (AttendeeListHasPeopleAnyOf (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jake \")))))))) (EventDuringRange (^(Event) EmptyStructConstraint) (FullMonthofMonth (NextMonth))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (AttendeeListHasPeople (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jake \")))))))) (FullMonthofMonth (NextMonth))))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (Event.attendees_? (orConstraint (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jake \"))) (AttendeeListHasPeopleAnyOf (FindTeamOf (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Jake \"))))))))) (FullMonthofMonth (NextMonth))))))))"], "pred_translated": ["When am I meeting with someone on Jake's team next month?", "What am I doing with someone on Jake's team next month?", "When am I meeting with someone on Jake's team?", "Which meeting do I have coming up with someone from Jake's team?", "When am I meeting with someone on Jake's team next month?", "Can you find my meeting with someone on Jake's team next month?", "Am I meeting with someone on Jake's team next month?", "What meetings do I have next month with someone on Jake's team?", "When am I meeting with Jake's team next month?", "When am I meeting with Jake or someone on his team next month?"], "distractor": "Let's meet with Ben to work on the new PC infrastructure at 1."}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( EventOnDate ( nextDayOfWeek ( Execute ( refer ( extensionConstraint ( ^ ( Date ) EmptyStructConstraint ) ) ) ) ( Thursday ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) )", "gold_src": "__User Make sure the dinner reservation for Thursday night is cancelled __Agent Is this what you want me to cancel ? __User No the one for the Thursday after that . __StartOfProgram\n", "min_probs": [0.7675557019255321, 0.000655728334095329, 2.3397770755779623e-06, 1.514259221560608e-10, 1.853619230306666e-11, 8.495565554276575e-10, 1.1556635006504061e-11, 2.1826398128754506e-11, 5.7142011719718665e-11, 2.143715148269125e-12], "bin": 0.75, "data_idx": "11587", "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (nextDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Thursday)) (^(Event) EmptyStructConstraint)))))", "(FenceDateTime)", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (nextDayOfWeek (Execute (refer (& (^(Date) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (Thursday)) (^(Event) EmptyStructConstraint)))))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Thursday)) (^(Event) EmptyStructConstraint))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (NextDOW (Thursday)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (nextDayOfWeek (DateTime.date (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Thursday)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (?= (nextDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Thursday))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Thursday)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (nextDayOfWeek (DateTime.date (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))) (Thursday)) (^(Event) EmptyStructConstraint)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventOnDate (nextDayOfWeek (Execute (refer (& (^(Date) roleConstraint (Path.apply \" end \")) (extensionConstraint (^(Date) EmptyStructConstraint))))) (Thursday)) (^(Event) EmptyStructConstraint)))))"], "pred_translated": ["No, the one the following Thursday.", "Reschedule it for next weekend same time.", "No, the one the following Thursday.", "No, look for the event the Thursday after next.", "No, the one for next Thursday.", "No, the one the following Thursday.", "No, the following Thursday.", "No, the one on Thursday.", "No, the one the Thursday after that.", "No, the one the following Thursday."], "distractor": "Can you tell me the weather for tomorrow in Greenville, NC?"}
{"gold_tgt": "( Yield ( FindEventWrapperWithDefaults ( EventBeforeDateTime ( Now ) ( EventOnDate ( Today ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) )", "gold_src": "__User What do I have earlier today __StartOfProgram\n", "min_probs": [0.7559267365690187, 0.00037243153201416135, 0.0003140557964798063, 3.069373377997217e-05, 1.0203315232345073e-08, 3.342537888606508e-09, 2.0424177302589244e-08, 4.8939618774418245e-11, 1.6060291709284427e-14, 5.6183257300924e-19], "bin": 0.75, "data_idx": "4873", "pred_tgts": ["(Yield (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))", "(FenceDateTime)", "(FenceOther)", "(Yield (FindEventWrapperWithDefaults (EventOnDateBeforeTime (Today) (^(Event) EmptyStructConstraint) (DateTime.time (Now)))))", "(Yield (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (^(Event) EmptyStructConstraint))))", "(Yield (FindEventWrapperWithDefaults (EventOnDate (Today) (^(Event) EmptyStructConstraint))))", "(Yield (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (Event.subject_? (?~= \" earlier \")))))", "(Yield (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (Event.start_? (DateTimeConstraint (Early) (Today))))))", "(Yield (FindEventWrapperWithDefaults (EventBeforeDateTime (Today) (Now) (Event.subject_? (?~= \" earlier \")))))", "(Yield (FindEventWrapperWithDefaults (EventBeforeDateTime (Now) (Now) (EventOnDate (Today) (^(Event) EmptyStructConstraint)))))"], "pred_translated": ["What did I have earlier today?", "Can you tell me when my next block of free time is?", "Can you tell me the weather for tomorrow in Greenville, NC?", "What did I have earlier today?", "what do I have earlier today?", "What is on my calendar for today?", "What events did I have earlier today?", "What did I have earlier today?", "What events did I have earlier today?", "What did I have earlier today?"], "distractor": "add jerri skinner to the event"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" performance review \" ) ) ( Event.start_? ( ?= ( DateAtTimeWithDefaults ( NextDOW ( Monday ) ) ( NumberAM 10L ) ) ) ) ) ( Event.location_? ( ?= ( LocationKeyphrase.apply \" conference room 124 \" ) ) ) ) ) ) )", "gold_src": "__User add my performance review for next Monday at 10 am , in conference room 124 __StartOfProgram\n", "min_probs": [0.7886388897895813, 0.00019794599211309105, 0.00010806267528096214, 0.0018054637856632846, 8.612714958509797e-12, 5.55849187316684e-14, 4.4314368878958846e-15, 1.7747666217009204e-12, 1.378851176681123e-16, 0.0], "bin": 0.75, "data_idx": "10935", "pred_tgts": ["(FenceConferenceRoom)", "(FenceMultiAction)", "(FenceAttendee)", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" performance review \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 10L))))) (Event.location_? (?= (LocationKeyphrase.apply \" conference room 124 \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" performance review \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 10L))))) (Event.location_? (& (?= (LocationKeyphrase.apply \" conference room 124 \")) (roomRequest)))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" performance review \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 10L))))) (Event.location_? (?= (LocationKeyphrase.apply \" conference 124 124 \")))))))", "(do (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" performance review \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 10L))))) (Event.location_? (?= (LocationKeyphrase.apply \" conference room 124 \"))))))) (FenceConferenceRoom))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" performance review \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 10L))))) (Event.location_? (?= (LocationKeyphrase.apply \" conference room \")))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" performance \")) (Event.start_? (?= (DateAtTimeWithDefaults (NextDOW (Monday)) (NumberAM 10L))))) (Event.location_? (?= (LocationKeyphrase.apply \" conference room 124 \")))))))", "(Error)"], "pred_translated": ["Change the location of the staff meeting tomorrow to Conference Room B.", "I need to cancel all my meetings for tomorrow.", "Please schedule a meeting with the pope tomorrow.", "Add performance review in conference room 124 on Monday at 10:00 AM.", "I have a performance review on Monday at 10 am. I'll be in conference room 124.", "Add performance review at conference 124 124 on Monday at 10:00 AM.", "Add performance review on Monday at 10:00 am in conference room 124.", "create performance review on monday at 10 in the conference room", "Add performance in conference room 124 on Monday at 10:00 AM.", "yes i am ready"], "distractor": "Decline Riley's birthday party invite and say I'll be out of state"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( Event.duration_? ( ?= ( toHours 1 ) ) ) ) ) )", "gold_src": "__User make it last for 45 minutes . __Agent Is this the update you want ? __User The appointment duration should be for one hour . __StartOfProgram\n", "min_probs": [0.7535960174097209, 0.001609318656846881, 0.0008371343137696385, 0.00021778681557749308, 4.854605098961287e-11, 4.728375628023273e-14, 2.42043006808239e-16, 6.022073556179847e-12, 4.1267111132444906e-14, 4.327013567859896e-12], "bin": 0.75, "data_idx": "7565", "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 1))))))", "(FenceOther)", "(FenceSpecify)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 1))))))", "(Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 1)))))", "(ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 1))))", "(UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1)))))", "(do (Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint)))) (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (UpdateEventIntensionConstraint) (Event.duration_? (?= (toHours 1)))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 1))))))"], "pred_translated": ["Make it last for an hour.", "Show me as busy during that time.", "Modify the time of my conference call with Damon Straeter.", "Make it last for one hour.", "Make it last for an hour.", "Make it last for 1 hour.", "Make it last for an hour.", "Make it last for one hour.", "Make it last for one hour.", "Make my appointment last for one hour."], "distractor": "Yes the first one"}
{"gold_tgt": "( Yield ( Event.responseStatus ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.subject_? ( ?~= \" party \" ) ) ( Event.start_? ( DateTime.date_? ( ?= ( Tomorrow ) ) ) ) ) ) ) ) ) )", "gold_src": "__User Did I confirm attending the party tomorrow __StartOfProgram\n", "min_probs": [0.7911413872809258, 4.3200833573198334e-05, 4.041213476023744e-06, 1.0164630028586816e-05, 8.137868081744328e-07, 1.9350469008406384e-10, 2.484639934332418e-10, 4.382983010880039e-06, 4.5897055257883155e-10, 4.0693297148694525e-10], "bin": 0.75, "data_idx": "10711", "pred_tgts": ["(Yield (== (ResponseStatus.response (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \" party \")))))))) (ResponseStatusType.Accepted)))", "(Yield (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \" party \"))))))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \" party \")))))) 0L))", "(Yield (== (ResponseStatus.response (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" party \"))))))) (ResponseStatusType.Accepted)))", "(Yield (== (ResponseStatus.response (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" party \")) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))))) (ResponseStatusType.Accepted)))", "(Yield (== (ResponseStatus.response (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))))) (ResponseStatusType.Accepted)))", "(Yield (== (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \" party \")))))) 0L))", "(Yield (== (ResponseStatus.response (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" party \")) (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))))) (ResponseStatusType.Accepted)))", "(Yield (== (ResponseStatus.response (Event.responseStatus (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?= \" party \")))))))) (ResponseStatusType.Accepted)))", "(Yield (== (ResponseStatus.response (AttendeeResponseStatus (AttendeeFromEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \" party \")))))) (Execute (refer (extensionConstraint (^(Recipient) EmptyStructConstraint))))))) (ResponseStatusType.Accepted)))"], "pred_translated": ["Will I be attending the party tomorrow?", "Did I RSVP to the party tomorrow?", "Do I have a party tomorrow?", "Did I accept the party invite?", "Did I accept tomorrow's party invitation?", "Did I accept the meeting for tomorrow?", "Do I have a party tomorrow?", "Did I accept the party invitation for tomorrow?", "Will I be attending the party tomorrow?", "Is she coming to my party tomorrow?"], "distractor": "What day is my doctor's appointment?"}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( & ( Event.subject_? ( ?~= \" dinner date \" ) ) ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Karen \" ) ) ) ) ) ) ) ) ) ( Event.duration_? ( ?= ( toHours 3 ) ) ) ) ) )", "gold_src": "__User I need to meet with Hugh on Wednesday __Agent Here are some times when you and Hugh are free . __User Update my dinner date with Karen to be 3 hours __StartOfProgram\n", "min_probs": [0.8982977290795903, 4.777879712414168e-08, 3.603389212769672e-07, 2.999606685189572e-11, 3.216423278736459e-11, 1.22970293817729e-07, 2.0838779512457608e-10, 1.774830487938128e-09, 2.2668968877724165e-10, 1.879775265826855e-10], "bin": 0.85, "data_idx": "3140", "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" dinner date \")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Karen \"))))))))) (Event.duration_? (?= (toHours 3))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.duration_? (?= (toHours 3))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" dinner date \")))))) (Event.duration_? (?= (toHours 3))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.duration_? (?= (toHours 3))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (Event.subject_? (?~= \" dinner date \")))))) (Event.duration_? (?= (toHours 3))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" dinner \")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Karen \"))))))))) (Event.duration_? (?= (toHours 3))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Karen \")))))))) (Event.duration_? (?= (toHours 3))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?= \" dinner date \")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Karen \"))))))))) (Event.duration_? (?= (toHours 3))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Today) (& (Event.subject_? (?~= \" dinner date \")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Karen \")))))))))) (Event.duration_? (?= (toHours 3))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (& (Event.subject_? (?~= \" dinner date \")) (Event.duration_? (?= (toHours 3)))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Karen \"))))))))) (Event.duration_? (?= (toHours 3))))))"], "pred_translated": ["Update my dinner date with Karen to be 3 hours long.", "The meeting will last 3 hours.", "The dinner date should be for three hours.", "The meeting will last 3 hours.", "Change the dinner date to last 3 hours.", "Update my dinner with Karen to last 3 hours.", "Update my meeting with Karen to last 3 hours.", "Update my dinner date with Karen to be 3 hours long.", "Update my dinner date with Karen today to last 3 hours.", "Update my dinner date with Karen to be 3 hours long."], "distractor": "What is my 2nd event on Sunday?"}
{"gold_tgt": "( Yield ( Event.start ( FindNumNextEvent ( Event.subject_? ( ?~= \" sales meeting \" ) ) 1L ) ) )", "gold_src": "__User When is the next sales meeting ? __StartOfProgram\n", "min_probs": [0.8926139936291946, 0.0002463165146764368, 1.279067464813632e-05, 1.346676703627849e-07, 2.7539045465276303e-08, 9.223426319329781e-10, 1.6178602278845588e-10, 1.2679138697306457e-09, 5.2652251533377075e-12, 4.82697661823623e-12], "bin": 0.85, "data_idx": "10447", "pred_tgts": ["(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \" sales meeting \")) 1L)))", "(FenceOther)", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" sales meeting \"))))))", "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \" sales meeting \"))))", "(Yield (Event.start (FindNumNextEvent (Event.subject_? (?~= \" sales \")) 1L)))", "(Yield (FindNumNextEvent (Event.subject_? (?~= \" sales meeting \")) 1L))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (Event.subject_? (?= \" sales meeting \")))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" sales meeting \")))))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" sales meeting \"))))) 0L))", "(Yield (DateTime.time (Event.start (FindNumNextEvent (Event.subject_? (?~= \" sales meeting \")) 1L))))"], "pred_translated": ["When is my next sales meeting?", "Can you tell me the weather for tomorrow in Greenville, NC?", "When is my next sales meeting?", "Find a sales meeting on my calendar.", "When is my next sales meeting?", "When is my next sales meeting?", "I need to make a sales meeting", "When is my sales meeting?", "Do I have a sales meeting scheduled?", "What time is my next sales meeting?"], "distractor": "The later one."}
{"gold_tgt": "( Yield ( IsStormy ( Execute ( refer ( extensionConstraint ( ^ ( WeatherTable ) AlwaysTrueConstraint ) ) ) ) ) )", "gold_src": "__User What are the wind speeds like ? __Agent It 's 3 . 93 m / s . __User Any storms coming ? __StartOfProgram\n", "min_probs": [0.8115419948481417, 0.0003055922742024483, 8.034695619607915e-05, 4.016328192745519e-06, 2.982169518515998e-06, 1.7666243844411734e-06, 1.3373278784524012e-05, 5.135588361017191e-07, 3.952317243394395e-07, 1.9426786634192186e-08], "bin": 0.85, "data_idx": "7308", "pred_tgts": ["(Yield (IsStormy (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))", "(Yield (IsStormy (WeatherQueryApi (AtPlace (Here)) (DateTime.date_? (?= (Today))))))", "(Yield (IsStormy (Execute (refer (extensionConstraint (^((List Attendee)) AlwaysTrueConstraint))))))", "(Yield (IsStormy (Execute (refer (extensionConstraint (^(Temperature) AlwaysTrueConstraint))))))", "(Yield (IsStormy (Execute (refer (extensionConstraint (^(ResponseStatusType.None) AlwaysTrueConstraint))))))", "(Yield (IsStormy (Execute (refer (extensionConstraint (^(Duration) AlwaysTrueConstraint))))))", "(Yield (IsStormy (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))", "(Yield (IsStormy (Execute (refer (extensionConstraint (^(Length) AlwaysTrueConstraint))))))", "(Yield (IsStormy (Execute (refer (extensionConstraint (^(IsStormy) AlwaysTrueConstraint))))))", "(Yield (IsStormy (WeatherQueryApi (AtPlace (Here)) (?= (Now)))))"], "pred_translated": ["Is there a storm coming?", "Is there a storm headed our way?", "Is there a storm coming?", "Is there a storm coming?", "Is there a storm coming?", "Is there a storm coming?", "Is there a storm coming?", "Is there a storm coming?", "Is there a storm coming?", "Is there a storm coming?"], "distractor": "Decline the meeting with Robert."}
{"gold_tgt": "( Yield ( Event.start ( FindNumNextEvent ( Event.attendees_? ( AttendeeListHasRecipientConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" Yolanda \" ) ) ) ) 1L ) ) )", "gold_src": "__User When do I see Chad next ? __Agent The next event with Chad is on Thursday the 24 th at 3 : 00 PM . __User Ok , can I get the details for my next event with Yolanda ? __StartOfProgram\n", "min_probs": [0.886002499114456, 1.2331366387682703e-06, 7.01792397670364e-07, 1.1668474738951429e-07, 1.8322072288800371e-07, 2.8419315579218595e-08, 1.2296005136026243e-10, 3.73634992568979e-08, 1.956034387534802e-10, 4.4824138347572825e-11], "bin": 0.85, "data_idx": "11009", "pred_tgts": ["(Yield (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Yolanda \")))) 1L))", "(Yield (Event.start (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Yolanda \")))) 1L)))", "(Yield (take (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Yolanda \")))))) 1L))", "(Yield (take (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))) (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Yolanda \"))) 1L))", "(Yield (take (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" Yolanda \")))) 1L))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Yolanda \"))))))))", "(Yield (FindEventWrapperWithDefaults (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Yolanda \"))))))", "(Yield (FindNumNextEvent (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Yolanda \"))))))) 1L))", "(Yield (FindNumNextEvent (& (Event.subject_? (?~= \" event \")) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Yolanda \"))))) 1L))", "(Yield (FindNumNextEvent (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (Event.attendees_? (AttendeeListHasRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" Yolanda \"))))) 1L))"], "pred_translated": ["What is the next event I have with Yolanda?", "When is my next meeting with Yolanda?", "When is my next meeting with Yolanda?", "When is my next meeting with Yolanda?", "When is my next meeting with Yolanda?", "When is my meeting with Yolanda?", "When do I see Yolanda?", "What is my next meeting with Yolanda?", "What is my next event with Yolanda?", "What is the other event I have with Yolanda?"], "distractor": "what is the low in az where"}
{"gold_tgt": "( Yield ( Event.start ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" doctor's appointment \" ) ) ) ) ) ) )", "gold_src": "__User Find the date for my doctor 's appointment __StartOfProgram\n", "min_probs": [0.8858622886587257, 1.6855952198580636e-07, 9.138214833038252e-12, 1.8347713571946397e-06, 1.313499547791066e-10, 7.1043560069946214e-12, 9.5907052407646e-13, 1.584988759883127e-14, 8.838623044874307e-14, 2.0369397125647662e-15], "bin": 0.85, "data_idx": "8307", "pred_tgts": ["(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" doctor's appointment \")))))))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" doctor's appointment \"))))))", "(Yield (FindEventWrapperWithDefaults (Event.subject_? (?~= \" doctor's appointment \"))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" doctor \")))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" doctor 's \")))))))", "(Yield (DateTime.date (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" doctor's appointment \"))))))))", "(Yield (DateTime.time (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" doctor's appointment \"))))))))", "(Yield (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?= \" doctor's appointment \")))))))", "(Yield (Date.dayOfWeek (DateTime.date (Event.start (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" doctor's appointment \")))))))))", "(do (FindEventWrapperWithDefaults (Event.subject_? (?~= \" doctor's appointment \"))) (Yield (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))"], "pred_translated": ["When is my doctor's appointment?", "When is my doctor's appointment?", "Search for doctor's appointment", "when is my doctor appointment?", "when is my doctor's appointment?", "What day is my doctor's appointment?", "What time is my doctor's appointment?", "When is my doctor's appointment?", "What day is my doctor's appointment?", "When is my doctor's appointment?"], "distractor": "Do I have any events with Mark this month?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( Event.subject_? ( ?= \" going out for appetizers \" ) ) ( Event.start_? ( ?= ( Event.end ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( Event.subject_? ( ?~= \" game \" ) ) ) ) ) ) ) ) ) ) ) )", "gold_src": "__User That 's exactly right . __Agent I 've put that on your calendar . __User I am going out for appetizers after the game so put that on the schedule . __StartOfProgram\n", "min_probs": [0.8269540254230995, 1.895887613759814e-06, 1.622767814503875e-12, 6.853403588534988e-14, 1.9699363622083726e-06, 1.1868934629819011e-15, 1.7249620862414064e-13, 4.2290484837409066e-16, 2.9300995651431136e-16, 7.612440984939928e-17], "bin": 0.85, "data_idx": "3984", "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" going out for appetizers \")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" game \"))))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" going out \")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" game \"))))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" going out for appetizers \")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" going out for appetizers \")) (Event.start_? (?= (Event.end (Execute (refer (extensionConstraint (Event.subject_? (?~= \" game \"))))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" appetizers \")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" game \"))))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?~= \" going out for appetizers \")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" game \"))))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" going out appetizers \")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" game \"))))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" going out for appetizers \")) (Event.start_? (DateTime.time_? (?= (DateTime.time (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" game \"))))))))))))))", "(do (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" going out for appetizers \")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" game \")))))))))))))", "(do (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" going out for appetizers \")) (Event.start_? (?= (Event.end (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" game \")))))))))))))"], "pred_translated": ["After the game I am going out for appetizers.", "I'm going out after the game", "I'm going out for appetizers after that", "We're going out for appetizers after the game.", "After the game we are going out for appetizers.", "After the game I am going out for appetizers.", "We're going out appetizers after the game.", "After the game I am going out for appetizers.", "After the game I am going out for appetizers.", "I'm going out for appetizers after the game"], "distractor": "Yes. Do I have anything else on Sunday?"}
{"gold_tgt": "( Yield ( Execute ( ChooseCreateEventFromConstraint ( ^ ( Event ) EmptyStructConstraint ) ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) )", "gold_src": "__User Set up a meeting after brunch with Jennifer __Agent Here are some times when you and Jennifer Watts are free tomorrow at 10 : 00 AM . __User Okay . Thank you . __StartOfProgram\n", "min_probs": [0.8055688938253021, 0.056884851306676865, 0.008141149766743183, 0.0006677597411908209, 0.0002980395802296698, 0.0002322257059859112, 2.7042887789963753e-07, 5.404062140538671e-11, 3.8549927620677973e-10, 1.1818262722078786e-11], "bin": 0.85, "data_idx": "3438", "pred_tgts": ["(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(PleasantryAnythingElseCombined)", "(FenceOther)", "(FenceSpecify)", "(AgentStillHere)", "(DoNotConfirm)", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(Yield (Execute (ChooseUpdateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint)))))", "(Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["yes", "thanks for your help", "after brunch meeting with jennifer", "after brunch meeting", "Are you there?", "no", "yes", "yes", "The first one works.", "second one is perfect"], "distractor": "Hmm, can you make that this Friday around 8 pm instead?"}
{"gold_tgt": "( Yield ( Execute ( ReviseConstraint ( refer ( ^ ( Dynamic ) roleConstraint ( Path.apply \" output \" ) ) ) ( ^ ( Event ) ConstraintTypeIntension ) ( Event.start_? ( DateTime.date_? ( NextWeekList ) ) ) ) ) )", "gold_src": "__User Make an event for Friday at 3 pm __Agent Is this good ? __User Next week __StartOfProgram\n", "min_probs": [0.8883373325287452, 0.0016576185589656234, 2.085455930843209e-05, 8.609898975122135e-08, 1.0345176228316546e-12, 3.0653979380884664e-09, 4.538191165333447e-11, 3.2195497457820785e-14, 2.289853689332284e-14, 1.3911741629312836e-12], "bin": 0.85, "data_idx": "2548", "pred_tgts": ["(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (NextWeekList))))))", "(FenceDateTime)", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(Yield (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (extensionConstraint (^(NextWeekList) AlwaysTrueConstraint)) (intension (NextWeekList)))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList)))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventDuringRange (^(Event) EmptyStructConstraint) (NextWeekList))))) 0L))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint DateTime)) roleConstraint (Path.apply \" start \")) (intension (NextWeekList)))))", "(Yield (Execute (NewClobber (refer (^(Dynamic) ActionIntensionConstraint)) (^((Constraint DateTime)) roleConstraint (Path.apply \" time \")) (intension (NextWeekList)))))", "(do (refer (^(Event) ConstraintTypeIntension)) (Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.date_? (NextWeekList)))))))"], "pred_translated": ["Move it to next week.", "No, I need it to be later in the day.", "Yes", "What do I have next week?", "How about next week?", "What about next week?", "Do I have any meetings next week?", "I meant next week", "I meant next week", "Move it to next week."], "distractor": "How long will my third event with Abby last on the 3rd?"}
{"gold_tgt": "( Yield ( WillSnow ( WeatherForEvent ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( NextDOW ( Saturday ) ) ( Event.subject_? ( ?~= \" ski \" ) ) ) ) ) ) ) ) )", "gold_src": "__User Will it snow during the ski on Saturday ? __StartOfProgram\n", "min_probs": [0.8732903850964424, 4.045135952393758e-06, 1.2494371990501134e-06, 1.0418712591901694e-06, 1.7625207173275801e-07, 6.160332260234492e-10, 2.0623863116875365e-10, 2.8961232636472026e-05, 2.889410273913953e-10, 0.0], "bin": 0.85, "data_idx": "7578", "pred_tgts": ["(Yield (WillSnow (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \" ski \")))))))))", "(Yield (WillSnow (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" ski \"))))))))", "(Yield (IsSnowy (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \" ski \")))))))))", "(Yield (WillSnow (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" ski \")) (EventOnDate (NextDOW (Saturday)) (^(Event) EmptyStructConstraint)))))))))", "(Yield (WillSnow (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \" ski Saturday \")))))))))", "(Yield (WillSnow (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" ski ski \"))))))))", "(Yield (WillSnow (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" ski Saturday \"))))))))", "(Yield (WillSnow (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" ski \")) (Event.start_? (DateTime.date_? (?= (NextDOW (Saturday))))))))))))", "(Yield (WillSnow (WeatherForEvent (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (NextDOW (Saturday)) (Event.subject_? (?~= \" ski during \")))))))))", "(Error)"], "pred_translated": ["Will it snow for ski on Saturday?", "Will it snow during ski?", "Will it be snowing on Saturday during ski?", "Will it snow for ski on Saturday?", "Will it snow on my ski Saturday?", "Will it snow at the ski event?", "Is it going to snow for ski Saturday?", "Will it snow for ski on Saturday?", "Will it snow during ski during this Saturday?", "yes i am ready"], "distractor": "When is my meeting with Mr. Smith?"}
{"gold_tgt": "( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" merger ideas \" ) ) ( Event.start_? ( ?= ( NextTime ( NumberAM 8L ) ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" bill \" ) ) ) ) ) ) ) ) ) ) )", "gold_src": "__User When were John and I supposed to meet to discuss the merger ? __Agent It starts on Friday at 9 : 00 AM . __User Let 's put down merger ideas at 8 AM with bill . __StartOfProgram\n", "min_probs": [0.8949783253299767, 6.884712944628019e-06, 1.4115515444199055e-07, 2.3802213438897343e-08, 3.801312852888389e-09, 1.356869379503245e-10, 6.972493397883098e-10, 1.1932191760381884e-10, 1.2105556400403663e-10, 2.1306608703469492e-10], "bin": 0.85, "data_idx": "8799", "pred_tgts": ["(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" merger ideas \")) (Event.start_? (?= (NextTime (NumberAM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bill \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" merger ideas \")) (Event.start_? (?= (DateAtTimeWithDefaults (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (NumberAM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bill \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" merger \")) (Event.start_? (?= (NextTime (NumberAM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bill \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" merger ideas \")) (Event.start_? (DateTime.time_? (?= (NumberAM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bill \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" merger ideas \")) (Event.start_? (?= (NextTime (NumberAM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (RecipientFromRecipientConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bill \")))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (?= (NextTime (NumberAM 8L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bill \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" merger ideas \")) (Event.start_? (?= (NextTime (NumberPM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bill \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?~= \" merger ideas \")) (Event.start_? (?= (NextTime (NumberAM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bill \")))))))))))", "(Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" merger ideas \")) (Event.start_? (?= (DateAtTimeWithDefaults (Today) (NumberAM 8L))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bill \")))))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" merger ideas \")))))) (& (Event.start_? (DateTime.time_? (?= (NumberAM 8L)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" bill \")))))))))))"], "pred_translated": ["put the merger ideas with bill at 8.00 am", "put meeting with bill about merger ideas at 8.00 am", "put the merger with bill at 8.00 am", "put meeting with bill about merger ideas at 8.00 am", "put the merger ideas with bill at 8.00 am", "put the meeting with bill at 8.00 am", "put meeting with bill about merger ideas at 8.00 pm", "put meeting with bill about merger ideas at 8.00 am", "Schedule a meeting with bill about the merger ideas at 8 am today.", "Add bill to the merger ideas and change the time to 8 am."], "distractor": "yes i am ready"}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "gold_src": "__User Hello , can you reschedule my 12 : 30 lunch meeting with Tom tomorrow to the day after and add Alyssa to it as well ? __Agent How is this ? __User Yes , that 's good . __StartOfProgram\n", "min_probs": [0.9986152677584528, 0.0004621589323505759, 7.672308129258454e-06, 9.285293340193843e-11, 2.1207932812802657e-09, 1.2473607048372136e-10, 1.3073008994449268e-09, 3.1208380588176245e-11, 2.846220525964509e-11, 7.804890244238077e-15], "bin": 0.95, "data_idx": "10633", "pred_tgts": ["(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(PleasantryAnythingElseCombined)", "(FenceSpecify)", "(Execute (^(Dynamic) ConfirmAndReturnAction))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (PleasantryAnythingElseCombined))", "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))", "(Yield (Execute (^(Dynamic) ConfirmUpdateAndReturnActionIntension (^(Event) EmptyStructConstraint))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (FenceSpecify))", "(Yield (Execute (ConfirmDeleteAndReturnAction (^(Event) EmptyStructConstraint))))", "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["Yes it does.", "thanks for your help", "Add Alyssa to the lunch meeting", "Yes it does.", "Yes this looks much better", "Try that again", "Yes it does.", "Looks good. Can you add Alyssa to the meeting too?", "Yes it does.", "Looks great"], "distractor": "Set the location of Chelsea's graduation to the Grand House House."}
{"gold_tgt": "( Yield ( AttendeesWithResponse ( Event.attendees ( singleton ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( Tomorrow ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ( ResponseStatusType.TentativelyAccepted ) ) )", "gold_src": "__User Can you tell me who answered as maybe to our meeting tomorrow ? __StartOfProgram\n", "min_probs": [0.8997181733156762, 4.566262676938554e-06, 2.107852361624449e-06, 7.972154949477754e-12, 1.2308331490646777e-09, 2.3588318746628276e-11, 9.752063403845598e-11, 9.027777626301645e-12, 1.8311420846850343e-12, 1.40369559223541e-11], "bin": 0.95, "data_idx": "10360", "pred_tgts": ["(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))) (ResponseStatusType.TentativelyAccepted)))", "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))) (ResponseStatusType.TentativelyAccepted)))", "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \" meeting \"))))))) (ResponseStatusType.TentativelyAccepted)))", "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))) (ResponseStatusType.TentativelyAccepted)))", "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (DateTime.date_? (?= (Tomorrow)))))))) (ResponseStatusType.TentativelyAccepted)))", "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.subject_? (?~= \" meeting \")))))) (ResponseStatusType.TentativelyAccepted)))", "(Yield (ResponseStatusType.TentativelyAccepted (singleton (PlaceSearchResponse.results (FindPlaceMultiResults (Event.location (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint)))))))))))", "(Yield (AttendeesWithNotResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (Tomorrow) (Event.subject_? (?~= \" meeting \"))))))) (ResponseStatusType.TentativelyAccepted)))", "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.subject_? (?~= \" meeting \")) (EventOnDate (Tomorrow) (^(Event) EmptyStructConstraint))))))) (ResponseStatusType.TentativelyAccepted)))", "(Yield (AttendeesWithResponse (Event.attendees (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDateTime (DateAtTimeWithDefaults (Tomorrow) (DateTime.time (Event.start (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))) (^(Event) EmptyStructConstraint)))))) (ResponseStatusType.TentativelyAccepted)))"], "pred_translated": ["Who is a maybe for the event tomorrow?", "Who has not tentatively accepted the meeting tomorrow?", "Who is a maybe for the meeting tomorrow?", "Who has tentatively accepted the meeting?", "Who is a maybe for the event tomorrow?", "who has tentatively accepted the meeting", "Can you tentatively accept my meeting tomorrow?", "Who has not tentatively accepted the meeting tomorrow?", "Who is a maybe for tomorrow's meeting?", "Who is a maybe for the event tomorrow?"], "distractor": "Add the location of the Grand Opera House."}
{"gold_tgt": "( Yield ( UpdateCommitEventWrapper ( UpdatePreflightEventWrapper ( Event.id ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ( Event.end_? ( DateTime.time_? ( ?= ( HourMinutePm 2L 30L ) ) ) ) ) ) )", "gold_src": "__User What time does the baseball game begin ? __Agent The event matching \" baseball game \" is on November 20 th at 11 : 00 PM . __User Change the end time for this event to 2 : 30 PM . __StartOfProgram\n", "min_probs": [0.9745500856388049, 0.0013349808286875486, 0.0008225261117331684, 2.563148894984167e-11, 3.778154635679544e-11, 3.213130614493654e-11, 5.6295492994817065e-11, 3.0266510329860954e-14, 2.82398320004929e-16, 1.5905461168551554e-18], "bin": 0.95, "data_idx": "11439", "pred_tgts": ["(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 2L 30L)))))))", "(FenceSpecify)", "(FenceOther)", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (NumberPM 2L)))))))", "(UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 2L 30L))))))", "(Yield (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 2L 30L))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 3L 30L)))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.end_? (DateTime.time_? (?= (HourMinutePm 2L 30L)))))))", "(do (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 2L 30L))))))))", "(Yield (UpdateCommitEventWrapper (UpdatePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (Event.subject_? (?~= \" this Change \")))))) (Event.end_? (DateTime.time_? (?= (HourMinutePm 2L 30L)))))))"], "pred_translated": ["Have this event end at 2:30 PM.", "change the time", "What time does the game start?", "Have this event end at 2:00 PM.", "Have this event end at 2:30 PM.", "Have this event end at 2:30 PM.", "Extend it to 3:30PM please", "What about the one ending at 2:30?", "Have it end at 2:30.", "This Change event should end at 2:30 PM."], "distractor": "Correct. Block off the rest of the month for my vacation."}
{"gold_tgt": "( UserPauseResponse )", "gold_src": "__User Schedule gym time with Mary tomorrow at noon . __Agent Is this good ? __User wait a minute __StartOfProgram\n", "min_probs": [0.9996334910392761, 0.00016175644122995436, 3.413850208744407e-05, 3.336985901114531e-05, 1.2567383237183094e-05, 7.896203896962106e-06, 8.476217432488113e-11, 4.522978980232626e-22, 0.0, 0.0], "bin": 0.95, "data_idx": "6504", "pred_tgts": ["(UserPauseResponse)", "(PleasantryAnythingElseCombined)", "(FenceSpecify)", "(DoNotConfirm)", "(FenceReminder)", "(do (DoNotConfirm) (UserPauseResponse))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (UserPauseResponse))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?> (Execute (refer (& (^(Time) roleConstraint (Path.apply \" start \")) (extensionConstraint (^(Time) EmptyStructConstraint)))))))))))", "(Error)", "(Error)"], "pred_translated": ["wait a minute", "It's in the wide open!", "can you change the time", "cancel this gym time", "put reminder on gym time", "wait a minute", "Yes, but hold on a second.", "I need that to be later", "wait a minute", "wait a minute"], "distractor": "The breakfast needs to be 1 hour"}
{"gold_tgt": "( Yield ( IsCold ( Execute ( refer ( extensionConstraint ( ^ ( WeatherTable ) AlwaysTrueConstraint ) ) ) ) ) )", "gold_src": "__User Will it be sunny ? __Agent It does n't look like it . The average cloud cover will be 65 % in Houston tomorrow afternoon . __User Will it be cold ? __StartOfProgram\n", "min_probs": [0.9645090731966697, 0.00040780677227303386, 1.98985255018908e-06, 1.2068582331735764e-06, 9.366647369142991e-07, 4.921242312630263e-06, 2.0909482647040473e-07, 1.599574361470035e-07, 1.4942456091932317e-14, 4.5418894834458726e-10], "bin": 0.95, "data_idx": "12007", "pred_tgts": ["(Yield (IsCold (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))", "(FenceWeather)", "(Yield (IsCold (Execute (refer (extensionConstraint (^(Temperature) AlwaysTrueConstraint))))))", "(Yield (IsCold (Execute (refer (extensionConstraint (^(Length) AlwaysTrueConstraint))))))", "(Yield (IsCold (Execute (refer (extensionConstraint (^(Duration) AlwaysTrueConstraint))))))", "(Yield (IsCold (WeatherForEvent (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))", "(Yield (WillSleet (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))", "(Yield (IsCold (WeatherQueryApi (AtPlace (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))) (?= (Now)))))", "(Yield (WeatherAggregate (WeatherQuantifier.Min) (temperature) (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))", "(Yield (IsCold (WeatherQueryApi (AtPlace (Execute (refer (extensionConstraint (^(Place) EmptyStructConstraint))))) (DateTime.date_? (?= (Today))))))"], "pred_translated": ["Will it be cold?", "Will it rain all day tomorrow?", "Will it be cold?", "Will it be cold?", "Will it be cold?", "Will it be cold?", "Will it rain?", "Will it be cold?", "How cold will it be?", "Will it be cold?"], "distractor": "Let's do the 13th"}
{"gold_tgt": "( Yield ( DeleteCommitEventWrapper ( DeletePreflightEventWrapper ( Event.id ( Execute ( refer ( extensionConstraint ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) ) ) )", "gold_src": "__User Do I have any meetings on my calendar for April 30 th ? __Agent Yes , I found one event on Tuesday the 30 th . It 's \" Meeting with Jojo \" from 3 : 00 to 3 : 30 PM . __User Cancel it ! ' __StartOfProgram\n", "min_probs": [0.9984110949898337, 3.197020851075649e-05, 2.4337381546502e-05, 2.043139102170244e-05, 3.899529130238053e-10, 1.155444238750512e-09, 2.6389156229626737e-10, 4.463108484700866e-08, 4.577447522297905e-14, 1.1918413697289887e-10], "bin": 0.95, "data_idx": "9771", "pred_tgts": ["(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))", "(FenceSpecify)", "(FenceOther)", "(RepeatAgent)", "(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(Yield (Cancel (Execute (refer (extensionConstraint (^(WeatherTable) AlwaysTrueConstraint))))))", "(Yield (Cancel (Execute (refer (extensionConstraint (^((List Attendee)) AlwaysTrueConstraint))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (^(Event) EmptyStructConstraint))))))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (FindNumNextEvent (^(Event) EmptyStructConstraint) 1L)))))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (& (^(Event) roleConstraint (numberToIndexPath 1L)) (extensionConstraint (^(Event) EmptyStructConstraint)))))))))"], "pred_translated": ["cancel this meeting", "I need to change the time of my appointment with Jojo", "Do I have any meetings on my calendar for April 30th?", "I'm sorry. Can you say that again?", "Yes it looks right.", "Cancel this meeting please", "Cancel that meeting with joe", "Cancel my meeting", "Cancel my next meeting.", "cancel the first one"], "distractor": "add jerri skinner"}
{"gold_tgt": "( Yield ( Execute ( ^ ( Dynamic ) ConfirmAndReturnAction ) ) )", "gold_src": "__User Can you add Blake to that too ? __Agent Is this the update you want ? __User That works for me now . __StartOfProgram\n", "min_probs": [0.9984057348424678, 0.0005710426485165954, 1.4576849025615957e-05, 1.3589578884420916e-05, 6.037376806489192e-06, 1.8130859913332982e-10, 5.061026060830905e-10, 2.118522681335437e-11, 3.0363765791515405e-10, 8.8379647702044e-14], "bin": 0.95, "data_idx": "7944", "pred_tgts": ["(Yield (Execute (^(Dynamic) ConfirmAndReturnAction)))", "(PleasantryAnythingElseCombined)", "(PleasantryCalendar)", "(FenceSpecify)", "(FenceOther)", "(Execute (^(Dynamic) ConfirmAndReturnAction))", "(Yield (Execute (refer (^(Dynamic) ActionIntensionConstraint))))", "(do (Yield (Execute (^(Dynamic) ConfirmAndReturnAction))) (PleasantryAnythingElseCombined))", "(Yield (Execute (^(Dynamic) ConfirmUpdateAndReturnActionIntension (^(Event) EmptyStructConstraint))))", "(Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint)))))"], "pred_translated": ["Yes it does.", "Blake Blake", "what else can you help me with", "Blake needs to be added to the meeting too", "Blake is on vacation. Please add him to the party.", "Yes it does.", "yes", "Yes it does.", "Yes please update.", "yes"], "distractor": "Do I have anything else that day?"}
{"gold_tgt": "( DoNotConfirm )", "gold_src": "__User Hi , can you put go to the movies Friday night into my calendar ? __Agent Does one of these work ? __User NEverind cancel that __StartOfProgram\n", "min_probs": [0.9993064999580383, 4.5739470806438476e-05, 3.4176518965978175e-05, 1.5908175555523485e-05, 4.946613444190007e-06, 4.659629485104233e-05, 6.470387234003283e-06, 1.762791264218531e-07, 2.0003632472878126e-11, 2.227050956124643e-22], "bin": 0.95, "data_idx": "5988", "pred_tgts": ["(DoNotConfirm)", "(FenceSpecify)", "(PleasantryAnythingElseCombined)", "(FenceOther)", "(UserPauseResponse)", "(do (DoNotConfirm) (DoNotConfirm))", "(do (DoNotConfirm) (DeleteCommitEventWrapper))", "(Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint))))))))", "(do (DoNotConfirm) (Yield (DeleteCommitEventWrapper (DeletePreflightEventWrapper (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))))", "(Yield (Execute (ReviseConstraint (refer (^(Dynamic) roleConstraint (Path.apply \" output \"))) (^(Event) ConstraintTypeIntension) (EventRescheduled (^(Event) EmptyStructConstraint)))))"], "pred_translated": ["No", "Show me different times please.", "The 2nd one works great", "The later one.", "wait a minute", "No", "No", "No, I don't want that", "No", "Reschedule that please"], "distractor": "Make it last all day Saturday."}
{"gold_tgt": "( Yield ( > ( size ( QueryEventResponse.results ( FindEventWrapperWithDefaults ( EventOnDate ( MD 2L ( March ) ) ( ^ ( Event ) EmptyStructConstraint ) ) ) ) ) 0L ) )", "gold_src": "__User do I have anything planned for March 2 ? __StartOfProgram\n", "min_probs": [0.9834939702054861, 2.7861578732606447e-09, 5.637054662004596e-10, 1.1600286937089407e-10, 5.96146450836059e-10, 2.7491561861742344e-12, 1.9778101464431873e-12, 2.644807633272081e-13, 1.2909651468276805e-15, 1.934439137245262e-12], "bin": 0.95, "data_idx": "9960", "pred_tgts": ["(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 2L (March)) (^(Event) EmptyStructConstraint))))) 0L))", "(Yield (FindEventWrapperWithDefaults (EventOnDate (MD 2L (March)) (^(Event) EmptyStructConstraint))))", "(Yield (singleton (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 2L (March)) (^(Event) EmptyStructConstraint))))))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (nextMonthDay (Today) (March) 2L) (^(Event) EmptyStructConstraint))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (Event.start_? (DateTime.date_? (?= (MD 2L (March)))))))) 0L))", "(Yield (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MD 2L (March)) (^(Event) EmptyStructConstraint))))))", "(Yield (FindNumNextEvent (EventOnDate (MD 2L (March)) (^(Event) EmptyStructConstraint)) 1L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (^(Event) EmptyStructConstraint) (EventOnDate (MD 2L (March)) (^(Event) EmptyStructConstraint)))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (EventOnDate (MDY 2L (March) (Year.apply 2019L)) (^(Event) EmptyStructConstraint))))) 0L))", "(Yield (> (size (QueryEventResponse.results (FindEventWrapperWithDefaults (& (Event.id_? (negate (?= (Event.id (Execute (refer (extensionConstraint (^(Event) EmptyStructConstraint)))))))) (EventOnDate (MD 2L (March)) (^(Event) EmptyStructConstraint)))))) 0L))"], "pred_translated": ["Do I have any meetings on March 2?", "What is on my calendar for March 2?", "What time is my meeting on March 2?", "Do I have anything scheduled on March 2?", "Do I have any appointments on March 2?", "How many meetings do I have on March 2?", "What is my first event on March 2?", "Do I have anything scheduled for March 2?", "Do I have anything scheduled for March 2nd 2019?", "Do I have anything else scheduled on March 2?"], "distractor": "Do I have any lunch meetings this week with anyone?"}
{"gold_tgt": "( do ( Yield ( Execute ( ChooseCreateEvent 2L ( refer ( ^ ( Dynamic ) ActionIntensionConstraint ) ) ) ) ) ( Yield ( CreateCommitEventWrapper ( CreatePreflightEventWrapper ( & ( & ( Event.subject_? ( ?= \" dinner \" ) ) ( Event.start_? ( DateTime.date_? ( ?= ( Yesterday ) ) ) ) ) ( Event.attendees_? ( AttendeeListHasRecipient ( Execute ( refer ( extensionConstraint ( RecipientWithNameLike ( ^ ( Recipient ) EmptyStructConstraint ) ( PersonName.apply \" john \" ) ) ) ) ) ) ) ) ) ) ) )", "gold_src": "__User I had a doctors appointment on january 5 th __Agent Does one of these work ? __User the second one . I had dinner with john yesterday __StartOfProgram\n", "min_probs": [0.9025770795732401, 0.001302611082792282, 9.40032306781467e-10, 4.024051080228483e-09, 3.08870806263756e-10, 2.880872236604271e-09, 2.7257819161787965e-09, 1.3874827514586386e-09, 4.638582147367378e-10, 3.034286552033287e-12], "bin": 0.95, "data_idx": "4893", "pred_tgts": ["(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" dinner \")) (Event.start_? (DateTime.date_? (?= (Yesterday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" john \"))))))))))))", "(FenceMultiAction)", "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.subject_? (?= \" dinner \")) (Event.start_? (DateTime.date_? (?= (Yesterday)))))))))", "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (Event.start_? (DateTime.date_? (?= (Yesterday)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" john \"))))))))))))", "(do (Yield (Execute (ChooseCreateEvent 1L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" dinner \")) (Event.start_? (DateTime.date_? (?= (Yesterday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" john \"))))))))))))", "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" dinner \")) (Event.start_? (DateTimeConstraint (Night) (Yesterday)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" john \"))))))))))))", "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" dinner \")) (Event.start_? (DateTimeConstraint (Evening) (Yesterday)))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" john \"))))))))))))", "(do (Yield (Execute (ChooseCreateEvent 2L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" dinner \")) (Event.start_? (DateTime.date_? (?= (previousDayOfWeek (Yesterday)))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" john \"))))))))))))", "(do (Yield (Execute (ChooseCreateEventFromConstraint (^(Event) EmptyStructConstraint) (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" dinner \")) (Event.start_? (DateTime.date_? (?= (Yesterday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" john \"))))))))))))", "(do (Yield (Execute (ChooseCreateEvent \\ second\\ L (refer (^(Dynamic) ActionIntensionConstraint))))) (Yield (CreateCommitEventWrapper (CreatePreflightEventWrapper (& (& (Event.subject_? (?= \" dinner \")) (Event.start_? (DateTime.date_? (?= (Yesterday))))) (Event.attendees_? (AttendeeListHasRecipient (Execute (refer (extensionConstraint (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \" john \"))))))))))))"], "pred_translated": ["The second one. I had dinner with john yesterday", "The second one, but make it an hour.", "The second one. I had dinner yesterday", "The second one. i met with john yesterday", "The first one. i saw john yesterday for dinner", "The second one. i had dinner with john last night", "The second one. i had dinner with john yesterday evening", "The second one. I had dinner with john yesterday", "yes. i had dinner with john yesterday", "the second one. i had dinner with john yesterday"], "distractor": "Yes the first one"}
